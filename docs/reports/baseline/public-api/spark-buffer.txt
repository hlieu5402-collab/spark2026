pub mod spark_buffer
pub struct spark_buffer::PooledBuffer
impl spark_buffer::PooledBuffer
pub fn spark_buffer::PooledBuffer::new(inner: bytes::bytes_mut::BytesMut, recycler: alloc::sync::Arc<dyn spark_buffer::BufferRecycler>) -> Self
impl core::marker::Send for spark_buffer::PooledBuffer
impl core::marker::Sync for spark_buffer::PooledBuffer
impl core::ops::drop::Drop for spark_buffer::PooledBuffer
pub fn spark_buffer::PooledBuffer::drop(&mut self)
impl spark_core::buffer::readable::ReadableBuffer for spark_buffer::PooledBuffer
pub fn spark_buffer::PooledBuffer::advance(&mut self, len: usize) -> spark_core::error::Result<(), spark_core::error::CoreError>
pub fn spark_buffer::PooledBuffer::chunk(&self) -> &[u8]
pub fn spark_buffer::PooledBuffer::copy_into_slice(&mut self, dst: &mut [u8]) -> spark_core::error::Result<(), spark_core::error::CoreError>
pub fn spark_buffer::PooledBuffer::remaining(&self) -> usize
pub fn spark_buffer::PooledBuffer::split_to(&mut self, len: usize) -> spark_core::error::Result<alloc::boxed::Box<dyn spark_core::buffer::readable::ReadableBuffer>, spark_core::error::CoreError>
pub fn spark_buffer::PooledBuffer::try_into_vec(self: alloc::boxed::Box<Self>) -> spark_core::error::Result<alloc::vec::Vec<u8>, spark_core::error::CoreError>
impl spark_core::buffer::writable::WritableBuffer for spark_buffer::PooledBuffer
pub fn spark_buffer::PooledBuffer::capacity(&self) -> usize
pub fn spark_buffer::PooledBuffer::clear(&mut self)
pub fn spark_buffer::PooledBuffer::freeze(self: alloc::boxed::Box<Self>) -> spark_core::error::Result<alloc::boxed::Box<dyn spark_core::buffer::readable::ReadableBuffer>, spark_core::error::CoreError>
pub fn spark_buffer::PooledBuffer::put_slice(&mut self, src: &[u8]) -> spark_core::error::Result<(), spark_core::error::CoreError>
pub fn spark_buffer::PooledBuffer::remaining_mut(&self) -> usize
pub fn spark_buffer::PooledBuffer::reserve(&mut self, additional: usize) -> spark_core::error::Result<(), spark_core::error::CoreError>
pub fn spark_buffer::PooledBuffer::write_from(&mut self, src: &mut dyn spark_core::buffer::readable::ReadableBuffer, len: usize) -> spark_core::error::Result<(), spark_core::error::CoreError>
pub fn spark_buffer::PooledBuffer::written(&self) -> usize
impl !core::marker::Freeze for spark_buffer::PooledBuffer
impl core::marker::Unpin for spark_buffer::PooledBuffer
impl !core::panic::unwind_safe::RefUnwindSafe for spark_buffer::PooledBuffer
impl !core::panic::unwind_safe::UnwindSafe for spark_buffer::PooledBuffer
pub struct spark_buffer::ReclaimedBuffer
impl spark_buffer::ReclaimedBuffer
pub fn spark_buffer::ReclaimedBuffer::capacity(&self) -> usize
pub fn spark_buffer::ReclaimedBuffer::into_buffer(self) -> core::option::Option<bytes::bytes_mut::BytesMut>
pub fn spark_buffer::ReclaimedBuffer::new(capacity: usize, buffer: core::option::Option<bytes::bytes_mut::BytesMut>) -> Self
impl core::fmt::Debug for spark_buffer::ReclaimedBuffer
pub fn spark_buffer::ReclaimedBuffer::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Freeze for spark_buffer::ReclaimedBuffer
impl core::marker::Send for spark_buffer::ReclaimedBuffer
impl core::marker::Sync for spark_buffer::ReclaimedBuffer
impl core::marker::Unpin for spark_buffer::ReclaimedBuffer
impl core::panic::unwind_safe::RefUnwindSafe for spark_buffer::ReclaimedBuffer
impl core::panic::unwind_safe::UnwindSafe for spark_buffer::ReclaimedBuffer
pub struct spark_buffer::SlabBufferPool
impl spark_buffer::SlabBufferPool
pub fn spark_buffer::SlabBufferPool::alloc_readable(&self, data: &[u8]) -> spark_core::error::Result<alloc::boxed::Box<spark_core::buffer::ErasedSparkBuf>, spark_core::error::CoreError>
pub fn spark_buffer::SlabBufferPool::alloc_writable(&self, min_capacity: usize) -> spark_core::error::Result<alloc::boxed::Box<spark_core::buffer::ErasedSparkBufMut>, spark_core::error::CoreError>
pub fn spark_buffer::SlabBufferPool::new() -> Self
pub fn spark_buffer::SlabBufferPool::stats(&self) -> spark_core::buffer::pool::PoolStats
impl core::clone::Clone for spark_buffer::SlabBufferPool
pub fn spark_buffer::SlabBufferPool::clone(&self) -> spark_buffer::SlabBufferPool
impl core::default::Default for spark_buffer::SlabBufferPool
pub fn spark_buffer::SlabBufferPool::default() -> Self
impl spark_core::buffer::pool::BufferPool for spark_buffer::SlabBufferPool
pub fn spark_buffer::SlabBufferPool::acquire(&self, min_capacity: usize) -> spark_core::error::Result<alloc::boxed::Box<dyn spark_core::buffer::writable::WritableBuffer>, spark_core::error::CoreError>
pub fn spark_buffer::SlabBufferPool::shrink_to_fit(&self) -> spark_core::error::Result<usize, spark_core::error::CoreError>
pub fn spark_buffer::SlabBufferPool::statistics(&self) -> spark_core::error::Result<spark_core::buffer::pool::PoolStats, spark_core::error::CoreError>
impl core::marker::Freeze for spark_buffer::SlabBufferPool
impl core::marker::Send for spark_buffer::SlabBufferPool
impl core::marker::Sync for spark_buffer::SlabBufferPool
impl core::marker::Unpin for spark_buffer::SlabBufferPool
impl !core::panic::unwind_safe::RefUnwindSafe for spark_buffer::SlabBufferPool
impl !core::panic::unwind_safe::UnwindSafe for spark_buffer::SlabBufferPool
pub trait spark_buffer::BufferRecycler: core::marker::Send + core::marker::Sync + 'static
pub fn spark_buffer::BufferRecycler::reclaim(&self, reclaimed: spark_buffer::ReclaimedBuffer)
