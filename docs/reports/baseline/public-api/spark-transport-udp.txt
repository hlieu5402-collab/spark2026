pub mod spark_transport_udp
pub mod spark_transport_udp::batch
pub enum spark_transport_udp::batch::BatchIoError
pub spark_transport_udp::batch::BatchIoError::Receive
pub spark_transport_udp::batch::BatchIoError::Receive::source: std::io::error::Error
pub spark_transport_udp::batch::BatchIoError::Send
pub spark_transport_udp::batch::BatchIoError::Send::source: std::io::error::Error
impl core::error::Error for spark_transport_udp::batch::BatchIoError
pub fn spark_transport_udp::batch::BatchIoError::source(&self) -> core::option::Option<&(dyn core::error::Error + 'static)>
impl core::fmt::Debug for spark_transport_udp::batch::BatchIoError
pub fn spark_transport_udp::batch::BatchIoError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::fmt::Display for spark_transport_udp::batch::BatchIoError
pub fn spark_transport_udp::batch::BatchIoError::fmt(&self, __formatter: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Freeze for spark_transport_udp::batch::BatchIoError
impl core::marker::Send for spark_transport_udp::batch::BatchIoError
impl core::marker::Sync for spark_transport_udp::batch::BatchIoError
impl core::marker::Unpin for spark_transport_udp::batch::BatchIoError
impl !core::panic::unwind_safe::RefUnwindSafe for spark_transport_udp::batch::BatchIoError
impl !core::panic::unwind_safe::UnwindSafe for spark_transport_udp::batch::BatchIoError
pub struct spark_transport_udp::batch::RecvBatchSlot<'a>
impl<'a> spark_transport_udp::batch::RecvBatchSlot<'a>
pub fn spark_transport_udp::batch::RecvBatchSlot<'a>::addr(&self) -> core::option::Option<core::net::socket_addr::SocketAddr>
pub fn spark_transport_udp::batch::RecvBatchSlot<'a>::buffer_mut(&mut self) -> &mut [u8]
pub fn spark_transport_udp::batch::RecvBatchSlot<'a>::is_empty(&self) -> bool
pub fn spark_transport_udp::batch::RecvBatchSlot<'a>::len(&self) -> usize
pub fn spark_transport_udp::batch::RecvBatchSlot<'a>::new(buffer: &'a mut [u8]) -> Self
pub fn spark_transport_udp::batch::RecvBatchSlot<'a>::payload(&self) -> &[u8]
pub fn spark_transport_udp::batch::RecvBatchSlot<'a>::reset(&mut self)
pub fn spark_transport_udp::batch::RecvBatchSlot<'a>::truncated(&self) -> bool
impl<'a> core::fmt::Debug for spark_transport_udp::batch::RecvBatchSlot<'a>
pub fn spark_transport_udp::batch::RecvBatchSlot<'a>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<'a> core::marker::Freeze for spark_transport_udp::batch::RecvBatchSlot<'a>
impl<'a> core::marker::Send for spark_transport_udp::batch::RecvBatchSlot<'a>
impl<'a> core::marker::Sync for spark_transport_udp::batch::RecvBatchSlot<'a>
impl<'a> core::marker::Unpin for spark_transport_udp::batch::RecvBatchSlot<'a>
impl<'a> core::panic::unwind_safe::RefUnwindSafe for spark_transport_udp::batch::RecvBatchSlot<'a>
impl<'a> !core::panic::unwind_safe::UnwindSafe for spark_transport_udp::batch::RecvBatchSlot<'a>
pub struct spark_transport_udp::batch::SendBatchSlot<'a>
impl<'a> spark_transport_udp::batch::SendBatchSlot<'a>
pub fn spark_transport_udp::batch::SendBatchSlot<'a>::mark_unsent(&mut self)
pub fn spark_transport_udp::batch::SendBatchSlot<'a>::new(payload: &'a [u8], addr: core::net::socket_addr::SocketAddr) -> Self
pub fn spark_transport_udp::batch::SendBatchSlot<'a>::payload(&self) -> &[u8]
pub fn spark_transport_udp::batch::SendBatchSlot<'a>::sent(&self) -> usize
pub fn spark_transport_udp::batch::SendBatchSlot<'a>::target(&self) -> core::net::socket_addr::SocketAddr
impl<'a> core::fmt::Debug for spark_transport_udp::batch::SendBatchSlot<'a>
pub fn spark_transport_udp::batch::SendBatchSlot<'a>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<'a> core::marker::Freeze for spark_transport_udp::batch::SendBatchSlot<'a>
impl<'a> core::marker::Send for spark_transport_udp::batch::SendBatchSlot<'a>
impl<'a> core::marker::Sync for spark_transport_udp::batch::SendBatchSlot<'a>
impl<'a> core::marker::Unpin for spark_transport_udp::batch::SendBatchSlot<'a>
impl<'a> core::panic::unwind_safe::RefUnwindSafe for spark_transport_udp::batch::SendBatchSlot<'a>
impl<'a> core::panic::unwind_safe::UnwindSafe for spark_transport_udp::batch::SendBatchSlot<'a>
pub async fn spark_transport_udp::batch::recv_from(socket: &tokio::net::udp::UdpSocket, slots: &mut [spark_transport_udp::batch::RecvBatchSlot<'_>]) -> spark_core::error::Result<usize, spark_transport_udp::batch::BatchIoError>
pub async fn spark_transport_udp::batch::send_to(socket: &tokio::net::udp::UdpSocket, slots: &mut [spark_transport_udp::batch::SendBatchSlot<'_>]) -> spark_core::error::Result<usize, spark_transport_udp::batch::BatchIoError>
pub enum spark_transport_udp::SipViaRportDisposition
pub spark_transport_udp::SipViaRportDisposition::Absent
pub spark_transport_udp::SipViaRportDisposition::Advertised(u16)
pub spark_transport_udp::SipViaRportDisposition::Requested
impl core::clone::Clone for spark_transport_udp::SipViaRportDisposition
pub fn spark_transport_udp::SipViaRportDisposition::clone(&self) -> spark_transport_udp::SipViaRportDisposition
impl core::cmp::Eq for spark_transport_udp::SipViaRportDisposition
impl core::cmp::PartialEq for spark_transport_udp::SipViaRportDisposition
pub fn spark_transport_udp::SipViaRportDisposition::eq(&self, other: &spark_transport_udp::SipViaRportDisposition) -> bool
impl core::fmt::Debug for spark_transport_udp::SipViaRportDisposition
pub fn spark_transport_udp::SipViaRportDisposition::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Copy for spark_transport_udp::SipViaRportDisposition
impl core::marker::StructuralPartialEq for spark_transport_udp::SipViaRportDisposition
impl core::marker::Freeze for spark_transport_udp::SipViaRportDisposition
impl core::marker::Send for spark_transport_udp::SipViaRportDisposition
impl core::marker::Sync for spark_transport_udp::SipViaRportDisposition
impl core::marker::Unpin for spark_transport_udp::SipViaRportDisposition
impl core::panic::unwind_safe::RefUnwindSafe for spark_transport_udp::SipViaRportDisposition
impl core::panic::unwind_safe::UnwindSafe for spark_transport_udp::SipViaRportDisposition
pub enum spark_transport_udp::UdpError
pub spark_transport_udp::UdpError::Bind
pub spark_transport_udp::UdpError::Bind::addr: alloc::string::String
pub spark_transport_udp::UdpError::Bind::source: std::io::error::Error
pub spark_transport_udp::UdpError::LocalAddr(std::io::error::Error)
pub spark_transport_udp::UdpError::Receive(std::io::error::Error)
pub spark_transport_udp::UdpError::Send(std::io::error::Error)
impl core::error::Error for spark_transport_udp::UdpError
pub fn spark_transport_udp::UdpError::source(&self) -> core::option::Option<&(dyn core::error::Error + 'static)>
impl core::fmt::Debug for spark_transport_udp::UdpError
pub fn spark_transport_udp::UdpError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::fmt::Display for spark_transport_udp::UdpError
pub fn spark_transport_udp::UdpError::fmt(&self, __formatter: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Freeze for spark_transport_udp::UdpError
impl core::marker::Send for spark_transport_udp::UdpError
impl core::marker::Sync for spark_transport_udp::UdpError
impl core::marker::Unpin for spark_transport_udp::UdpError
impl !core::panic::unwind_safe::RefUnwindSafe for spark_transport_udp::UdpError
impl !core::panic::unwind_safe::UnwindSafe for spark_transport_udp::UdpError
pub struct spark_transport_udp::UdpEndpoint
impl spark_transport_udp::UdpEndpoint
pub async fn spark_transport_udp::UdpEndpoint::bind(addr: spark_transport::addr::TransportSocketAddr) -> spark_core::error::Result<Self, spark_transport_udp::UdpError>
pub async fn spark_transport_udp::UdpEndpoint::bind_with_options(addr: spark_transport::addr::TransportSocketAddr, options: spark_transport_udp::UdpSocketOptions) -> spark_core::error::Result<Self, spark_transport_udp::UdpError>
pub fn spark_transport_udp::UdpEndpoint::local_addr(&self) -> spark_core::error::Result<spark_transport::addr::TransportSocketAddr, spark_transport_udp::UdpError>
pub fn spark_transport_udp::UdpEndpoint::options(&self) -> &spark_transport_udp::UdpSocketOptions
pub async fn spark_transport_udp::UdpEndpoint::recv_from(&self, buffer: &mut [u8]) -> spark_core::error::Result<spark_transport_udp::UdpIncoming, spark_transport_udp::UdpError>
pub async fn spark_transport_udp::UdpEndpoint::send_to(&self, payload: &[u8], route: &spark_transport_udp::UdpReturnRoute) -> spark_core::error::Result<usize, spark_transport_udp::UdpError>
impl spark_transport::connection::DatagramEndpoint for spark_transport_udp::UdpEndpoint
pub type spark_transport_udp::UdpEndpoint::CallCtx<'ctx> = ()
pub type spark_transport_udp::UdpEndpoint::Error = spark_transport_udp::UdpError
pub type spark_transport_udp::UdpEndpoint::InboundMeta = spark_transport_udp::UdpIncoming
pub type spark_transport_udp::UdpEndpoint::OutboundMeta = spark_transport_udp::UdpReturnRoute
pub type spark_transport_udp::UdpEndpoint::RecvFuture<'ctx> where Self: 'ctx, Self::CallCtx: 'ctx = core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<(usize, spark_transport_udp::UdpIncoming), spark_transport_udp::UdpError>> + core::marker::Send + 'ctx)>>
pub type spark_transport_udp::UdpEndpoint::SendFuture<'ctx> where Self: 'ctx, Self::CallCtx: 'ctx = core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<usize, spark_transport_udp::UdpError>> + core::marker::Send + 'ctx)>>
pub fn spark_transport_udp::UdpEndpoint::local_addr(&self) -> spark_core::error::Result<spark_transport::addr::TransportSocketAddr, spark_transport_udp::UdpError>
pub fn spark_transport_udp::UdpEndpoint::recv<'ctx>(&'ctx self, _ctx: &'ctx Self::CallCtx, buf: &'ctx mut [u8]) -> Self::RecvFuture
pub fn spark_transport_udp::UdpEndpoint::send<'ctx>(&'ctx self, _ctx: &'ctx Self::CallCtx, payload: &'ctx [u8], meta: &'ctx Self::OutboundMeta) -> Self::SendFuture
impl !core::marker::Freeze for spark_transport_udp::UdpEndpoint
impl core::marker::Send for spark_transport_udp::UdpEndpoint
impl core::marker::Sync for spark_transport_udp::UdpEndpoint
impl core::marker::Unpin for spark_transport_udp::UdpEndpoint
impl core::panic::unwind_safe::RefUnwindSafe for spark_transport_udp::UdpEndpoint
impl core::panic::unwind_safe::UnwindSafe for spark_transport_udp::UdpEndpoint
pub struct spark_transport_udp::UdpEndpointBuilder
impl spark_transport_udp::UdpEndpointBuilder
pub fn spark_transport_udp::UdpEndpointBuilder::new(addr: spark_transport::addr::TransportSocketAddr) -> Self
pub fn spark_transport_udp::UdpEndpointBuilder::with_broadcast(self, enabled: bool) -> Self
pub fn spark_transport_udp::UdpEndpointBuilder::with_multicast_loop_v4(self, enabled: bool) -> Self
pub fn spark_transport_udp::UdpEndpointBuilder::with_options(self, options: spark_transport_udp::UdpSocketOptions) -> Self
impl core::clone::Clone for spark_transport_udp::UdpEndpointBuilder
pub fn spark_transport_udp::UdpEndpointBuilder::clone(&self) -> spark_transport_udp::UdpEndpointBuilder
impl core::fmt::Debug for spark_transport_udp::UdpEndpointBuilder
pub fn spark_transport_udp::UdpEndpointBuilder::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl spark_core::transport::builder::TransportBuilder for spark_transport_udp::UdpEndpointBuilder
pub type spark_transport_udp::UdpEndpointBuilder::BuildFuture<'ctx> where Self: 'ctx = core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<<spark_transport_udp::UdpEndpointBuilder as spark_core::transport::builder::TransportBuilder>::Output, spark_core::error::CoreError>> + core::marker::Send + 'ctx)>>
pub type spark_transport_udp::UdpEndpointBuilder::Output = spark_transport_udp::UdpEndpoint
pub fn spark_transport_udp::UdpEndpointBuilder::build<'ctx>(self, ctx: &'ctx spark_core::context::ExecutionContext<'ctx>) -> Self::BuildFuture
pub fn spark_transport_udp::UdpEndpointBuilder::scheme(&self) -> &'static str
impl core::marker::Freeze for spark_transport_udp::UdpEndpointBuilder
impl core::marker::Send for spark_transport_udp::UdpEndpointBuilder
impl core::marker::Sync for spark_transport_udp::UdpEndpointBuilder
impl core::marker::Unpin for spark_transport_udp::UdpEndpointBuilder
impl core::panic::unwind_safe::RefUnwindSafe for spark_transport_udp::UdpEndpointBuilder
impl core::panic::unwind_safe::UnwindSafe for spark_transport_udp::UdpEndpointBuilder
pub struct spark_transport_udp::UdpIncoming
impl spark_transport_udp::UdpIncoming
pub fn spark_transport_udp::UdpIncoming::is_empty(&self) -> bool
pub fn spark_transport_udp::UdpIncoming::len(&self) -> usize
pub fn spark_transport_udp::UdpIncoming::peer(&self) -> core::net::socket_addr::SocketAddr
pub fn spark_transport_udp::UdpIncoming::return_route(&self) -> &spark_transport_udp::UdpReturnRoute
impl core::fmt::Debug for spark_transport_udp::UdpIncoming
pub fn spark_transport_udp::UdpIncoming::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Freeze for spark_transport_udp::UdpIncoming
impl core::marker::Send for spark_transport_udp::UdpIncoming
impl core::marker::Sync for spark_transport_udp::UdpIncoming
impl core::marker::Unpin for spark_transport_udp::UdpIncoming
impl core::panic::unwind_safe::RefUnwindSafe for spark_transport_udp::UdpIncoming
impl core::panic::unwind_safe::UnwindSafe for spark_transport_udp::UdpIncoming
pub struct spark_transport_udp::UdpReturnRoute
impl spark_transport_udp::UdpReturnRoute
pub fn spark_transport_udp::UdpReturnRoute::sip_rport(&self) -> spark_transport_udp::SipViaRportDisposition
pub fn spark_transport_udp::UdpReturnRoute::target(&self) -> core::net::socket_addr::SocketAddr
impl core::clone::Clone for spark_transport_udp::UdpReturnRoute
pub fn spark_transport_udp::UdpReturnRoute::clone(&self) -> spark_transport_udp::UdpReturnRoute
impl core::fmt::Debug for spark_transport_udp::UdpReturnRoute
pub fn spark_transport_udp::UdpReturnRoute::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Freeze for spark_transport_udp::UdpReturnRoute
impl core::marker::Send for spark_transport_udp::UdpReturnRoute
impl core::marker::Sync for spark_transport_udp::UdpReturnRoute
impl core::marker::Unpin for spark_transport_udp::UdpReturnRoute
impl core::panic::unwind_safe::RefUnwindSafe for spark_transport_udp::UdpReturnRoute
impl core::panic::unwind_safe::UnwindSafe for spark_transport_udp::UdpReturnRoute
pub struct spark_transport_udp::UdpSocketOptions
impl spark_transport_udp::UdpSocketOptions
pub fn spark_transport_udp::UdpSocketOptions::broadcast(&self) -> bool
pub fn spark_transport_udp::UdpSocketOptions::multicast_loop_v4(&self) -> bool
pub fn spark_transport_udp::UdpSocketOptions::with_broadcast(self, enabled: bool) -> Self
pub fn spark_transport_udp::UdpSocketOptions::with_multicast_loop_v4(self, enabled: bool) -> Self
impl core::clone::Clone for spark_transport_udp::UdpSocketOptions
pub fn spark_transport_udp::UdpSocketOptions::clone(&self) -> spark_transport_udp::UdpSocketOptions
impl core::default::Default for spark_transport_udp::UdpSocketOptions
pub fn spark_transport_udp::UdpSocketOptions::default() -> spark_transport_udp::UdpSocketOptions
impl core::fmt::Debug for spark_transport_udp::UdpSocketOptions
pub fn spark_transport_udp::UdpSocketOptions::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Freeze for spark_transport_udp::UdpSocketOptions
impl core::marker::Send for spark_transport_udp::UdpSocketOptions
impl core::marker::Sync for spark_transport_udp::UdpSocketOptions
impl core::marker::Unpin for spark_transport_udp::UdpSocketOptions
impl core::panic::unwind_safe::RefUnwindSafe for spark_transport_udp::UdpSocketOptions
impl core::panic::unwind_safe::UnwindSafe for spark_transport_udp::UdpSocketOptions
