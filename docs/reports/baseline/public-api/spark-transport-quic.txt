pub mod spark_transport_quic
pub use spark_transport_quic::ShutdownDirection
pub struct spark_transport_quic::QuicChannel
impl spark_transport_quic::QuicChannel
pub async fn spark_transport_quic::QuicChannel::flush(&self, ctx: &spark_core::contract::CallContext) -> spark_core::error::Result<(), spark_core::error::CoreError>
pub fn spark_transport_quic::QuicChannel::local_addr(&self) -> spark_transport::addr::TransportSocketAddr
pub fn spark_transport_quic::QuicChannel::peer_addr(&self) -> spark_transport::addr::TransportSocketAddr
pub fn spark_transport_quic::QuicChannel::poll_ready(&self, ctx: &spark_core::context::Context<'_>) -> spark_core::status::ready::PollReady<spark_core::error::CoreError>
pub async fn spark_transport_quic::QuicChannel::read(&self, ctx: &spark_core::contract::CallContext, buf: &mut [u8]) -> spark_core::error::Result<usize, spark_core::error::CoreError>
pub async fn spark_transport_quic::QuicChannel::shutdown(&self, ctx: &spark_core::contract::CallContext, direction: spark_transport::shutdown::ShutdownDirection) -> spark_core::error::Result<(), spark_core::error::CoreError>
pub async fn spark_transport_quic::QuicChannel::write(&self, ctx: &spark_core::contract::CallContext, buf: &[u8]) -> spark_core::error::Result<usize, spark_core::error::CoreError>
impl core::clone::Clone for spark_transport_quic::QuicChannel
pub fn spark_transport_quic::QuicChannel::clone(&self) -> spark_transport_quic::QuicChannel
impl core::fmt::Debug for spark_transport_quic::QuicChannel
pub fn spark_transport_quic::QuicChannel::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl spark_transport::connection::TransportConnection for spark_transport_quic::QuicChannel
pub type spark_transport_quic::QuicChannel::CallCtx<'ctx> = spark_core::contract::CallContext
pub type spark_transport_quic::QuicChannel::Error = spark_core::error::CoreError
pub type spark_transport_quic::QuicChannel::FlushFuture<'ctx> where Self: 'ctx, Self::CallCtx: 'ctx = core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<(), spark_core::error::CoreError>> + core::marker::Send + 'ctx)>>
pub type spark_transport_quic::QuicChannel::ReadFuture<'ctx> where Self: 'ctx, Self::CallCtx: 'ctx = core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<usize, spark_core::error::CoreError>> + core::marker::Send + 'ctx)>>
pub type spark_transport_quic::QuicChannel::ReadyCtx<'ctx> = spark_core::context::Context<'ctx>
pub type spark_transport_quic::QuicChannel::ShutdownFuture<'ctx> where Self: 'ctx, Self::CallCtx: 'ctx = core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<(), spark_core::error::CoreError>> + core::marker::Send + 'ctx)>>
pub type spark_transport_quic::QuicChannel::WriteFuture<'ctx> where Self: 'ctx, Self::CallCtx: 'ctx = core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<usize, spark_core::error::CoreError>> + core::marker::Send + 'ctx)>>
pub fn spark_transport_quic::QuicChannel::classify_backpressure(&self, ctx: &Self::ReadyCtx, _metrics: &spark_transport::backpressure::BackpressureMetrics) -> spark_transport::backpressure::BackpressureDecision
pub fn spark_transport_quic::QuicChannel::flush<'ctx>(&'ctx self, ctx: &'ctx Self::CallCtx) -> Self::FlushFuture
pub fn spark_transport_quic::QuicChannel::id(&self) -> alloc::borrow::Cow<'_, str>
pub fn spark_transport_quic::QuicChannel::local_addr(&self) -> core::option::Option<spark_transport::addr::TransportSocketAddr>
pub fn spark_transport_quic::QuicChannel::peer_addr(&self) -> core::option::Option<spark_transport::addr::TransportSocketAddr>
pub fn spark_transport_quic::QuicChannel::read<'ctx>(&'ctx self, ctx: &'ctx Self::CallCtx, buf: &'ctx mut [u8]) -> Self::ReadFuture
pub fn spark_transport_quic::QuicChannel::shutdown<'ctx>(&'ctx self, ctx: &'ctx Self::CallCtx, direction: spark_transport::shutdown::ShutdownDirection) -> Self::ShutdownFuture
pub fn spark_transport_quic::QuicChannel::write<'ctx>(&'ctx self, ctx: &'ctx Self::CallCtx, buf: &'ctx [u8]) -> Self::WriteFuture
impl core::marker::Freeze for spark_transport_quic::QuicChannel
impl core::marker::Send for spark_transport_quic::QuicChannel
impl core::marker::Sync for spark_transport_quic::QuicChannel
impl core::marker::Unpin for spark_transport_quic::QuicChannel
impl !core::panic::unwind_safe::RefUnwindSafe for spark_transport_quic::QuicChannel
impl !core::panic::unwind_safe::UnwindSafe for spark_transport_quic::QuicChannel
pub struct spark_transport_quic::QuicConnection
impl spark_transport_quic::QuicConnection
pub async fn spark_transport_quic::QuicConnection::accept_bi(&self) -> spark_core::error::Result<core::option::Option<spark_transport_quic::QuicChannel>, spark_core::error::CoreError>
pub fn spark_transport_quic::QuicConnection::local_addr(&self) -> spark_transport::addr::TransportSocketAddr
pub async fn spark_transport_quic::QuicConnection::open_bi(&self) -> spark_core::error::Result<spark_transport_quic::QuicChannel, spark_core::error::CoreError>
pub fn spark_transport_quic::QuicConnection::peer_addr(&self) -> spark_transport::addr::TransportSocketAddr
impl core::clone::Clone for spark_transport_quic::QuicConnection
pub fn spark_transport_quic::QuicConnection::clone(&self) -> spark_transport_quic::QuicConnection
impl core::fmt::Debug for spark_transport_quic::QuicConnection
pub fn spark_transport_quic::QuicConnection::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Freeze for spark_transport_quic::QuicConnection
impl core::marker::Send for spark_transport_quic::QuicConnection
impl core::marker::Sync for spark_transport_quic::QuicConnection
impl core::marker::Unpin for spark_transport_quic::QuicConnection
impl core::panic::unwind_safe::RefUnwindSafe for spark_transport_quic::QuicConnection
impl core::panic::unwind_safe::UnwindSafe for spark_transport_quic::QuicConnection
pub struct spark_transport_quic::QuicEndpoint
impl spark_transport_quic::QuicEndpoint
pub async fn spark_transport_quic::QuicEndpoint::accept(&self) -> spark_core::error::Result<spark_transport_quic::QuicConnection, spark_core::error::CoreError>
pub async fn spark_transport_quic::QuicEndpoint::bind_client(addr: spark_transport::addr::TransportSocketAddr, client_config: quinn_proto::config::ClientConfig) -> spark_core::error::Result<Self, spark_core::error::CoreError>
pub async fn spark_transport_quic::QuicEndpoint::bind_server(addr: spark_transport::addr::TransportSocketAddr, server_config: quinn_proto::config::ServerConfig, client_config: core::option::Option<quinn_proto::config::ClientConfig>) -> spark_core::error::Result<Self, spark_core::error::CoreError>
pub async fn spark_transport_quic::QuicEndpoint::connect(&self, addr: spark_transport::addr::TransportSocketAddr, server_name: &str) -> spark_core::error::Result<spark_transport_quic::QuicConnection, spark_core::error::CoreError>
pub fn spark_transport_quic::QuicEndpoint::local_addr(&self) -> spark_transport::addr::TransportSocketAddr
impl core::clone::Clone for spark_transport_quic::QuicEndpoint
pub fn spark_transport_quic::QuicEndpoint::clone(&self) -> spark_transport_quic::QuicEndpoint
impl core::fmt::Debug for spark_transport_quic::QuicEndpoint
pub fn spark_transport_quic::QuicEndpoint::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Freeze for spark_transport_quic::QuicEndpoint
impl core::marker::Send for spark_transport_quic::QuicEndpoint
impl core::marker::Sync for spark_transport_quic::QuicEndpoint
impl core::marker::Unpin for spark_transport_quic::QuicEndpoint
impl !core::panic::unwind_safe::RefUnwindSafe for spark_transport_quic::QuicEndpoint
impl !core::panic::unwind_safe::UnwindSafe for spark_transport_quic::QuicEndpoint
pub struct spark_transport_quic::QuicEndpointBuilder
impl spark_transport_quic::QuicEndpointBuilder
pub fn spark_transport_quic::QuicEndpointBuilder::new(addr: spark_transport::addr::TransportSocketAddr, server_config: quinn_proto::config::ServerConfig) -> Self
pub fn spark_transport_quic::QuicEndpointBuilder::with_client_config(self, client_config: quinn_proto::config::ClientConfig) -> Self
impl spark_core::transport::builder::TransportBuilder for spark_transport_quic::QuicEndpointBuilder
pub type spark_transport_quic::QuicEndpointBuilder::BuildFuture<'ctx> where Self: 'ctx = core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<<spark_transport_quic::QuicEndpointBuilder as spark_core::transport::builder::TransportBuilder>::Output, spark_core::error::CoreError>> + core::marker::Send + 'ctx)>>
pub type spark_transport_quic::QuicEndpointBuilder::Output = spark_transport_quic::QuicEndpoint
pub fn spark_transport_quic::QuicEndpointBuilder::build<'ctx>(self, ctx: &'ctx spark_core::context::ExecutionContext<'ctx>) -> Self::BuildFuture
pub fn spark_transport_quic::QuicEndpointBuilder::scheme(&self) -> &'static str
impl core::marker::Freeze for spark_transport_quic::QuicEndpointBuilder
impl core::marker::Send for spark_transport_quic::QuicEndpointBuilder
impl core::marker::Sync for spark_transport_quic::QuicEndpointBuilder
impl core::marker::Unpin for spark_transport_quic::QuicEndpointBuilder
impl !core::panic::unwind_safe::RefUnwindSafe for spark_transport_quic::QuicEndpointBuilder
impl !core::panic::unwind_safe::UnwindSafe for spark_transport_quic::QuicEndpointBuilder
