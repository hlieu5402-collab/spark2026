[
  "pub mod spark_core",
  "pub use spark_core::async_trait",
  "pub use spark_core::service",
  "pub mod spark_core::arc_swap",
  "pub struct spark_core::arc_swap::ArcSwap<T>",
  "impl<T> spark_core::arc_swap::ArcSwap<T>",
  "pub fn spark_core::arc_swap::ArcSwap<T>::from_pointee(value: T) -> Self",
  "pub fn spark_core::arc_swap::ArcSwap<T>::load_full(&self) -> alloc::sync::Arc<T>",
  "pub fn spark_core::arc_swap::ArcSwap<T>::new(initial: alloc::sync::Arc<T>) -> Self",
  "pub fn spark_core::arc_swap::ArcSwap<T>::store(&self, value: alloc::sync::Arc<T>)",
  "impl<T: core::fmt::Debug> core::fmt::Debug for spark_core::arc_swap::ArcSwap<T>",
  "pub fn spark_core::arc_swap::ArcSwap<T>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<T> !core::marker::Freeze for spark_core::arc_swap::ArcSwap<T>",
  "impl<T> core::marker::Send for spark_core::arc_swap::ArcSwap<T> where T: core::marker::Sync + core::marker::Send",
  "impl<T> core::marker::Sync for spark_core::arc_swap::ArcSwap<T> where T: core::marker::Sync + core::marker::Send",
  "impl<T> core::marker::Unpin for spark_core::arc_swap::ArcSwap<T>",
  "impl<T> !core::panic::unwind_safe::RefUnwindSafe for spark_core::arc_swap::ArcSwap<T>",
  "impl<T> core::panic::unwind_safe::UnwindSafe for spark_core::arc_swap::ArcSwap<T> where T: core::panic::unwind_safe::RefUnwindSafe",
  "pub mod spark_core::audit",
  "pub struct spark_core::audit::AuditActor",
  "pub spark_core::audit::AuditActor::display_name: core::option::Option<alloc::borrow::Cow<'static, str>>",
  "pub spark_core::audit::AuditActor::id: alloc::borrow::Cow<'static, str>",
  "pub spark_core::audit::AuditActor::tenant: core::option::Option<alloc::borrow::Cow<'static, str>>",
  "impl core::clone::Clone for spark_core::audit::AuditActor",
  "pub fn spark_core::audit::AuditActor::clone(&self) -> spark_core::audit::AuditActor",
  "impl core::cmp::PartialEq for spark_core::audit::AuditActor",
  "pub fn spark_core::audit::AuditActor::eq(&self, other: &spark_core::audit::AuditActor) -> bool",
  "impl core::fmt::Debug for spark_core::audit::AuditActor",
  "pub fn spark_core::audit::AuditActor::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::audit::AuditActor",
  "impl serde_core::ser::Serialize for spark_core::audit::AuditActor",
  "pub fn spark_core::audit::AuditActor::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde_core::ser::Serializer>::Ok, <S as serde_core::ser::Serializer>::Error> where S: serde_core::ser::Serializer",
  "impl<'de> serde_core::de::Deserialize<'de> for spark_core::audit::AuditActor",
  "pub fn spark_core::audit::AuditActor::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde_core::de::Deserializer>::Error> where D: serde_core::de::Deserializer<'de>",
  "impl core::marker::Freeze for spark_core::audit::AuditActor",
  "impl core::marker::Send for spark_core::audit::AuditActor",
  "impl core::marker::Sync for spark_core::audit::AuditActor",
  "impl core::marker::Unpin for spark_core::audit::AuditActor",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::audit::AuditActor",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::audit::AuditActor",
  "pub struct spark_core::audit::AuditChangeEntry",
  "pub spark_core::audit::AuditChangeEntry::key: spark_core::ConfigKey",
  "pub spark_core::audit::AuditChangeEntry::value: spark_core::ConfigValue",
  "impl core::clone::Clone for spark_core::audit::AuditChangeEntry",
  "pub fn spark_core::audit::AuditChangeEntry::clone(&self) -> spark_core::audit::AuditChangeEntry",
  "impl core::cmp::PartialEq for spark_core::audit::AuditChangeEntry",
  "pub fn spark_core::audit::AuditChangeEntry::eq(&self, other: &spark_core::audit::AuditChangeEntry) -> bool",
  "impl core::fmt::Debug for spark_core::audit::AuditChangeEntry",
  "pub fn spark_core::audit::AuditChangeEntry::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::audit::AuditChangeEntry",
  "impl serde_core::ser::Serialize for spark_core::audit::AuditChangeEntry",
  "pub fn spark_core::audit::AuditChangeEntry::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde_core::ser::Serializer>::Ok, <S as serde_core::ser::Serializer>::Error> where S: serde_core::ser::Serializer",
  "impl<'de> serde_core::de::Deserialize<'de> for spark_core::audit::AuditChangeEntry",
  "pub fn spark_core::audit::AuditChangeEntry::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde_core::de::Deserializer>::Error> where D: serde_core::de::Deserializer<'de>",
  "impl core::marker::Freeze for spark_core::audit::AuditChangeEntry",
  "impl core::marker::Send for spark_core::audit::AuditChangeEntry",
  "impl core::marker::Sync for spark_core::audit::AuditChangeEntry",
  "impl core::marker::Unpin for spark_core::audit::AuditChangeEntry",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::audit::AuditChangeEntry",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::audit::AuditChangeEntry",
  "pub struct spark_core::audit::AuditChangeSet",
  "pub spark_core::audit::AuditChangeSet::created: alloc::vec::Vec<spark_core::audit::AuditChangeEntry>",
  "pub spark_core::audit::AuditChangeSet::deleted: alloc::vec::Vec<spark_core::audit::AuditDeletedEntry>",
  "pub spark_core::audit::AuditChangeSet::updated: alloc::vec::Vec<spark_core::audit::AuditChangeEntry>",
  "impl spark_core::audit::AuditChangeSet",
  "pub fn spark_core::audit::AuditChangeSet::from_change_set(changes: &spark_core::ChangeSet) -> Self",
  "impl core::clone::Clone for spark_core::audit::AuditChangeSet",
  "pub fn spark_core::audit::AuditChangeSet::clone(&self) -> spark_core::audit::AuditChangeSet",
  "impl core::cmp::PartialEq for spark_core::audit::AuditChangeSet",
  "pub fn spark_core::audit::AuditChangeSet::eq(&self, other: &spark_core::audit::AuditChangeSet) -> bool",
  "impl core::fmt::Debug for spark_core::audit::AuditChangeSet",
  "pub fn spark_core::audit::AuditChangeSet::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::audit::AuditChangeSet",
  "impl serde_core::ser::Serialize for spark_core::audit::AuditChangeSet",
  "pub fn spark_core::audit::AuditChangeSet::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde_core::ser::Serializer>::Ok, <S as serde_core::ser::Serializer>::Error> where S: serde_core::ser::Serializer",
  "impl<'de> serde_core::de::Deserialize<'de> for spark_core::audit::AuditChangeSet",
  "pub fn spark_core::audit::AuditChangeSet::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde_core::de::Deserializer>::Error> where D: serde_core::de::Deserializer<'de>",
  "impl core::marker::Freeze for spark_core::audit::AuditChangeSet",
  "impl core::marker::Send for spark_core::audit::AuditChangeSet",
  "impl core::marker::Sync for spark_core::audit::AuditChangeSet",
  "impl core::marker::Unpin for spark_core::audit::AuditChangeSet",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::audit::AuditChangeSet",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::audit::AuditChangeSet",
  "pub struct spark_core::audit::AuditContext",
  "pub spark_core::audit::AuditContext::action: alloc::borrow::Cow<'static, str>",
  "pub spark_core::audit::AuditContext::actor: spark_core::audit::AuditActor",
  "pub spark_core::audit::AuditContext::entity_kind: alloc::borrow::Cow<'static, str>",
  "pub spark_core::audit::AuditContext::entity_labels: alloc::vec::Vec<(alloc::borrow::Cow<'static, str>, alloc::borrow::Cow<'static, str>)>",
  "pub spark_core::audit::AuditContext::tsa_evidence: core::option::Option<spark_core::audit::TsaEvidence>",
  "impl spark_core::audit::AuditContext",
  "pub fn spark_core::audit::AuditContext::new(entity_kind: alloc::borrow::Cow<'static, str>, actor: spark_core::audit::AuditActor, action: alloc::borrow::Cow<'static, str>) -> Self",
  "pub fn spark_core::audit::AuditContext::with_entity_labels(self, labels: alloc::vec::Vec<(alloc::borrow::Cow<'static, str>, alloc::borrow::Cow<'static, str>)>) -> Self",
  "pub fn spark_core::audit::AuditContext::with_tsa(self, evidence: spark_core::audit::TsaEvidence) -> Self",
  "impl core::clone::Clone for spark_core::audit::AuditContext",
  "pub fn spark_core::audit::AuditContext::clone(&self) -> spark_core::audit::AuditContext",
  "impl core::fmt::Debug for spark_core::audit::AuditContext",
  "pub fn spark_core::audit::AuditContext::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::audit::AuditContext",
  "impl core::marker::Send for spark_core::audit::AuditContext",
  "impl core::marker::Sync for spark_core::audit::AuditContext",
  "impl core::marker::Unpin for spark_core::audit::AuditContext",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::audit::AuditContext",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::audit::AuditContext",
  "pub struct spark_core::audit::AuditDeletedEntry",
  "pub spark_core::audit::AuditDeletedEntry::key: spark_core::ConfigKey",
  "impl core::clone::Clone for spark_core::audit::AuditDeletedEntry",
  "pub fn spark_core::audit::AuditDeletedEntry::clone(&self) -> spark_core::audit::AuditDeletedEntry",
  "impl core::cmp::PartialEq for spark_core::audit::AuditDeletedEntry",
  "pub fn spark_core::audit::AuditDeletedEntry::eq(&self, other: &spark_core::audit::AuditDeletedEntry) -> bool",
  "impl core::fmt::Debug for spark_core::audit::AuditDeletedEntry",
  "pub fn spark_core::audit::AuditDeletedEntry::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::audit::AuditDeletedEntry",
  "impl serde_core::ser::Serialize for spark_core::audit::AuditDeletedEntry",
  "pub fn spark_core::audit::AuditDeletedEntry::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde_core::ser::Serializer>::Ok, <S as serde_core::ser::Serializer>::Error> where S: serde_core::ser::Serializer",
  "impl<'de> serde_core::de::Deserialize<'de> for spark_core::audit::AuditDeletedEntry",
  "pub fn spark_core::audit::AuditDeletedEntry::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde_core::de::Deserializer>::Error> where D: serde_core::de::Deserializer<'de>",
  "impl core::marker::Freeze for spark_core::audit::AuditDeletedEntry",
  "impl core::marker::Send for spark_core::audit::AuditDeletedEntry",
  "impl core::marker::Sync for spark_core::audit::AuditDeletedEntry",
  "impl core::marker::Unpin for spark_core::audit::AuditDeletedEntry",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::audit::AuditDeletedEntry",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::audit::AuditDeletedEntry",
  "pub struct spark_core::audit::AuditEntityRef",
  "pub spark_core::audit::AuditEntityRef::id: alloc::string::String",
  "pub spark_core::audit::AuditEntityRef::kind: alloc::borrow::Cow<'static, str>",
  "pub spark_core::audit::AuditEntityRef::labels: alloc::vec::Vec<(alloc::borrow::Cow<'static, str>, alloc::borrow::Cow<'static, str>)>",
  "impl core::clone::Clone for spark_core::audit::AuditEntityRef",
  "pub fn spark_core::audit::AuditEntityRef::clone(&self) -> spark_core::audit::AuditEntityRef",
  "impl core::cmp::PartialEq for spark_core::audit::AuditEntityRef",
  "pub fn spark_core::audit::AuditEntityRef::eq(&self, other: &spark_core::audit::AuditEntityRef) -> bool",
  "impl core::fmt::Debug for spark_core::audit::AuditEntityRef",
  "pub fn spark_core::audit::AuditEntityRef::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::audit::AuditEntityRef",
  "impl serde_core::ser::Serialize for spark_core::audit::AuditEntityRef",
  "pub fn spark_core::audit::AuditEntityRef::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde_core::ser::Serializer>::Ok, <S as serde_core::ser::Serializer>::Error> where S: serde_core::ser::Serializer",
  "impl<'de> serde_core::de::Deserialize<'de> for spark_core::audit::AuditEntityRef",
  "pub fn spark_core::audit::AuditEntityRef::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde_core::de::Deserializer>::Error> where D: serde_core::de::Deserializer<'de>",
  "impl core::marker::Freeze for spark_core::audit::AuditEntityRef",
  "impl core::marker::Send for spark_core::audit::AuditEntityRef",
  "impl core::marker::Sync for spark_core::audit::AuditEntityRef",
  "impl core::marker::Unpin for spark_core::audit::AuditEntityRef",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::audit::AuditEntityRef",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::audit::AuditEntityRef",
  "pub struct spark_core::audit::AuditError",
  "impl spark_core::audit::AuditError",
  "pub fn spark_core::audit::AuditError::message(&self) -> &str",
  "pub fn spark_core::audit::AuditError::new<M>(message: M) -> Self where M: core::convert::Into<alloc::borrow::Cow<'static, str>>",
  "impl core::clone::Clone for spark_core::audit::AuditError",
  "pub fn spark_core::audit::AuditError::clone(&self) -> spark_core::audit::AuditError",
  "impl core::cmp::Eq for spark_core::audit::AuditError",
  "impl core::cmp::PartialEq for spark_core::audit::AuditError",
  "pub fn spark_core::audit::AuditError::eq(&self, other: &spark_core::audit::AuditError) -> bool",
  "impl core::error::Error for spark_core::audit::AuditError",
  "impl core::fmt::Debug for spark_core::audit::AuditError",
  "pub fn spark_core::audit::AuditError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::audit::AuditError",
  "pub fn spark_core::audit::AuditError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::audit::AuditError",
  "impl core::marker::Freeze for spark_core::audit::AuditError",
  "impl core::marker::Send for spark_core::audit::AuditError",
  "impl core::marker::Sync for spark_core::audit::AuditError",
  "impl core::marker::Unpin for spark_core::audit::AuditError",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::audit::AuditError",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::audit::AuditError",
  "pub struct spark_core::audit::AuditEventV1",
  "pub spark_core::audit::AuditEventV1::action: alloc::borrow::Cow<'static, str>",
  "pub spark_core::audit::AuditEventV1::actor: spark_core::audit::AuditActor",
  "pub spark_core::audit::AuditEventV1::changes: spark_core::audit::AuditChangeSet",
  "pub spark_core::audit::AuditEventV1::entity: spark_core::audit::AuditEntityRef",
  "pub spark_core::audit::AuditEventV1::event_id: alloc::string::String",
  "pub spark_core::audit::AuditEventV1::occurred_at: u64",
  "pub spark_core::audit::AuditEventV1::sequence: u64",
  "pub spark_core::audit::AuditEventV1::state_curr_hash: alloc::string::String",
  "pub spark_core::audit::AuditEventV1::state_prev_hash: alloc::string::String",
  "pub spark_core::audit::AuditEventV1::tsa_evidence: core::option::Option<spark_core::audit::TsaEvidence>",
  "impl core::clone::Clone for spark_core::audit::AuditEventV1",
  "pub fn spark_core::audit::AuditEventV1::clone(&self) -> spark_core::audit::AuditEventV1",
  "impl core::cmp::PartialEq for spark_core::audit::AuditEventV1",
  "pub fn spark_core::audit::AuditEventV1::eq(&self, other: &spark_core::audit::AuditEventV1) -> bool",
  "impl core::fmt::Debug for spark_core::audit::AuditEventV1",
  "pub fn spark_core::audit::AuditEventV1::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::audit::AuditEventV1",
  "impl serde_core::ser::Serialize for spark_core::audit::AuditEventV1",
  "pub fn spark_core::audit::AuditEventV1::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde_core::ser::Serializer>::Ok, <S as serde_core::ser::Serializer>::Error> where S: serde_core::ser::Serializer",
  "impl<'de> serde_core::de::Deserialize<'de> for spark_core::audit::AuditEventV1",
  "pub fn spark_core::audit::AuditEventV1::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde_core::de::Deserializer>::Error> where D: serde_core::de::Deserializer<'de>",
  "impl core::marker::Freeze for spark_core::audit::AuditEventV1",
  "impl core::marker::Send for spark_core::audit::AuditEventV1",
  "impl core::marker::Sync for spark_core::audit::AuditEventV1",
  "impl core::marker::Unpin for spark_core::audit::AuditEventV1",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::audit::AuditEventV1",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::audit::AuditEventV1",
  "pub struct spark_core::audit::AuditPipeline",
  "pub spark_core::audit::AuditPipeline::context: spark_core::audit::AuditContext",
  "pub spark_core::audit::AuditPipeline::recorder: alloc::sync::Arc<dyn spark_core::audit::AuditRecorder>",
  "impl core::clone::Clone for spark_core::audit::AuditPipeline",
  "pub fn spark_core::audit::AuditPipeline::clone(&self) -> spark_core::audit::AuditPipeline",
  "impl core::marker::Freeze for spark_core::audit::AuditPipeline",
  "impl core::marker::Send for spark_core::audit::AuditPipeline",
  "impl core::marker::Sync for spark_core::audit::AuditPipeline",
  "impl core::marker::Unpin for spark_core::audit::AuditPipeline",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::audit::AuditPipeline",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::audit::AuditPipeline",
  "pub struct spark_core::audit::AuditStateHasher",
  "impl spark_core::audit::AuditStateHasher",
  "pub fn spark_core::audit::AuditStateHasher::hash_configuration<'a, I>(iter: I) -> alloc::string::String where I: core::iter::traits::collect::IntoIterator<Item = (&'a spark_core::ConfigKey, &'a spark_core::ConfigValue)>",
  "impl core::marker::Freeze for spark_core::audit::AuditStateHasher",
  "impl core::marker::Send for spark_core::audit::AuditStateHasher",
  "impl core::marker::Sync for spark_core::audit::AuditStateHasher",
  "impl core::marker::Unpin for spark_core::audit::AuditStateHasher",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::audit::AuditStateHasher",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::audit::AuditStateHasher",
  "pub struct spark_core::audit::InMemoryAuditRecorder",
  "impl spark_core::audit::InMemoryAuditRecorder",
  "pub fn spark_core::audit::InMemoryAuditRecorder::events(&self) -> alloc::vec::Vec<spark_core::audit::AuditEventV1>",
  "pub fn spark_core::audit::InMemoryAuditRecorder::new() -> Self",
  "impl spark_core::audit::InMemoryAuditRecorder",
  "pub fn spark_core::audit::InMemoryAuditRecorder::shared(self) -> alloc::sync::Arc<dyn spark_core::audit::AuditRecorder>",
  "impl core::default::Default for spark_core::audit::InMemoryAuditRecorder",
  "pub fn spark_core::audit::InMemoryAuditRecorder::default() -> spark_core::audit::InMemoryAuditRecorder",
  "impl spark_core::audit::AuditRecorder for spark_core::audit::InMemoryAuditRecorder",
  "pub fn spark_core::audit::InMemoryAuditRecorder::record(&self, event: spark_core::audit::AuditEventV1) -> core::result::Result<(), spark_core::audit::AuditError>",
  "impl !core::marker::Freeze for spark_core::audit::InMemoryAuditRecorder",
  "impl core::marker::Send for spark_core::audit::InMemoryAuditRecorder",
  "impl core::marker::Sync for spark_core::audit::InMemoryAuditRecorder",
  "impl core::marker::Unpin for spark_core::audit::InMemoryAuditRecorder",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::audit::InMemoryAuditRecorder",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::audit::InMemoryAuditRecorder",
  "pub struct spark_core::audit::TsaEvidence",
  "pub spark_core::audit::TsaEvidence::evidence: alloc::string::String",
  "pub spark_core::audit::TsaEvidence::issued_at: u64",
  "pub spark_core::audit::TsaEvidence::provider: alloc::borrow::Cow<'static, str>",
  "impl core::clone::Clone for spark_core::audit::TsaEvidence",
  "pub fn spark_core::audit::TsaEvidence::clone(&self) -> spark_core::audit::TsaEvidence",
  "impl core::cmp::PartialEq for spark_core::audit::TsaEvidence",
  "pub fn spark_core::audit::TsaEvidence::eq(&self, other: &spark_core::audit::TsaEvidence) -> bool",
  "impl core::fmt::Debug for spark_core::audit::TsaEvidence",
  "pub fn spark_core::audit::TsaEvidence::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::audit::TsaEvidence",
  "impl serde_core::ser::Serialize for spark_core::audit::TsaEvidence",
  "pub fn spark_core::audit::TsaEvidence::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde_core::ser::Serializer>::Ok, <S as serde_core::ser::Serializer>::Error> where S: serde_core::ser::Serializer",
  "impl<'de> serde_core::de::Deserialize<'de> for spark_core::audit::TsaEvidence",
  "pub fn spark_core::audit::TsaEvidence::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde_core::de::Deserializer>::Error> where D: serde_core::de::Deserializer<'de>",
  "impl core::marker::Freeze for spark_core::audit::TsaEvidence",
  "impl core::marker::Send for spark_core::audit::TsaEvidence",
  "impl core::marker::Sync for spark_core::audit::TsaEvidence",
  "impl core::marker::Unpin for spark_core::audit::TsaEvidence",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::audit::TsaEvidence",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::audit::TsaEvidence",
  "pub trait spark_core::audit::AuditRecorder: core::marker::Send + core::marker::Sync",
  "pub fn spark_core::audit::AuditRecorder::flush(&self) -> core::result::Result<(), spark_core::audit::AuditError>",
  "pub fn spark_core::audit::AuditRecorder::record(&self, event: spark_core::audit::AuditEventV1) -> core::result::Result<(), spark_core::audit::AuditError>",
  "impl spark_core::audit::AuditRecorder for spark_core::audit::InMemoryAuditRecorder",
  "pub fn spark_core::audit::InMemoryAuditRecorder::record(&self, event: spark_core::audit::AuditEventV1) -> core::result::Result<(), spark_core::audit::AuditError>",
  "pub mod spark_core::buffer",
  "pub mod spark_core::buffer::buf_view",
  "pub struct spark_core::buffer::buf_view::Chunks<'a>",
  "impl<'a> spark_core::buffer::buf_view::Chunks<'a>",
  "pub fn spark_core::buffer::buf_view::Chunks<'a>::empty() -> Self",
  "pub fn spark_core::buffer::buf_view::Chunks<'a>::from_single(chunk: &'a [u8]) -> Self",
  "pub fn spark_core::buffer::buf_view::Chunks<'a>::from_vec(chunks: alloc::vec::Vec<&'a [u8]>) -> Self",
  "pub fn spark_core::buffer::buf_view::Chunks<'a>::total_len(&self) -> usize",
  "impl<'a> core::clone::Clone for spark_core::buffer::buf_view::Chunks<'a>",
  "pub fn spark_core::buffer::buf_view::Chunks<'a>::clone(&self) -> spark_core::buffer::buf_view::Chunks<'a>",
  "impl<'a> core::fmt::Debug for spark_core::buffer::buf_view::Chunks<'a>",
  "pub fn spark_core::buffer::buf_view::Chunks<'a>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<'a> core::iter::traits::exact_size::ExactSizeIterator for spark_core::buffer::buf_view::Chunks<'a>",
  "pub fn spark_core::buffer::buf_view::Chunks<'a>::len(&self) -> usize",
  "impl<'a> core::iter::traits::iterator::Iterator for spark_core::buffer::buf_view::Chunks<'a>",
  "pub type spark_core::buffer::buf_view::Chunks<'a>::Item = &'a [u8]",
  "pub fn spark_core::buffer::buf_view::Chunks<'a>::next(&mut self) -> core::option::Option<Self::Item>",
  "pub fn spark_core::buffer::buf_view::Chunks<'a>::size_hint(&self) -> (usize, core::option::Option<usize>)",
  "impl<'a> core::iter::traits::marker::FusedIterator for spark_core::buffer::buf_view::Chunks<'a>",
  "impl<'a> core::marker::Freeze for spark_core::buffer::buf_view::Chunks<'a>",
  "impl<'a> core::marker::Send for spark_core::buffer::buf_view::Chunks<'a>",
  "impl<'a> core::marker::Sync for spark_core::buffer::buf_view::Chunks<'a>",
  "impl<'a> core::marker::Unpin for spark_core::buffer::buf_view::Chunks<'a>",
  "impl<'a> core::panic::unwind_safe::RefUnwindSafe for spark_core::buffer::buf_view::Chunks<'a>",
  "impl<'a> core::panic::unwind_safe::UnwindSafe for spark_core::buffer::buf_view::Chunks<'a>",
  "pub trait spark_core::buffer::buf_view::BufView: core::marker::Send + core::marker::Sync",
  "pub fn spark_core::buffer::buf_view::BufView::as_chunks(&self) -> spark_core::buffer::buf_view::Chunks<'_>",
  "pub fn spark_core::buffer::buf_view::BufView::chunk_count(&self) -> usize",
  "pub fn spark_core::buffer::buf_view::BufView::is_empty(&self) -> bool",
  "pub fn spark_core::buffer::buf_view::BufView::len(&self) -> usize",
  "impl spark_core::buffer::buf_view::BufView for [u8]",
  "pub fn [u8]::as_chunks(&self) -> spark_core::buffer::buf_view::Chunks<'_>",
  "pub fn [u8]::len(&self) -> usize",
  "impl spark_core::buffer::buf_view::BufView for alloc::boxed::Box<[u8]>",
  "pub fn alloc::boxed::Box<[u8]>::as_chunks(&self) -> spark_core::buffer::buf_view::Chunks<'_>",
  "pub fn alloc::boxed::Box<[u8]>::len(&self) -> usize",
  "impl spark_core::buffer::buf_view::BufView for alloc::vec::Vec<u8>",
  "pub fn alloc::vec::Vec<u8>::as_chunks(&self) -> spark_core::buffer::buf_view::Chunks<'_>",
  "pub fn alloc::vec::Vec<u8>::len(&self) -> usize",
  "impl<T> spark_core::buffer::buf_view::BufView for &T where T: spark_core::buffer::buf_view::BufView + ?core::marker::Sized",
  "pub fn &T::as_chunks(&self) -> spark_core::buffer::buf_view::Chunks<'_>",
  "pub fn &T::len(&self) -> usize",
  "pub mod spark_core::buffer::message",
  "#[non_exhaustive] pub enum spark_core::buffer::message::PipelineMessage",
  "pub spark_core::buffer::message::PipelineMessage::Buffer(alloc::boxed::Box<dyn spark_core::buffer::readable::ReadableBuffer>)",
  "pub spark_core::buffer::message::PipelineMessage::User(alloc::boxed::Box<dyn spark_core::buffer::message::UserMessage>)",
  "impl spark_core::buffer::message::PipelineMessage",
  "pub fn spark_core::buffer::message::PipelineMessage::downcast_user_mut<T>(&mut self) -> core::option::Option<&mut T> where T: spark_core::buffer::message::UserMessage",
  "pub fn spark_core::buffer::message::PipelineMessage::downcast_user_ref<T>(&self) -> core::option::Option<&T> where T: spark_core::buffer::message::UserMessage",
  "pub fn spark_core::buffer::message::PipelineMessage::from_user<M>(message: M) -> Self where M: spark_core::buffer::message::UserMessage",
  "pub fn spark_core::buffer::message::PipelineMessage::try_into_user<T>(self) -> core::result::Result<T, Self> where T: spark_core::buffer::message::UserMessage",
  "pub fn spark_core::buffer::message::PipelineMessage::user_kind(&self) -> core::option::Option<&'static str>",
  "impl core::fmt::Debug for spark_core::buffer::message::PipelineMessage",
  "pub fn spark_core::buffer::message::PipelineMessage::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl spark_core::service::auto_dyn::Decode for spark_core::buffer::message::PipelineMessage",
  "pub fn spark_core::buffer::message::PipelineMessage::decode(message: spark_core::buffer::message::PipelineMessage) -> core::result::Result<Self, spark_core::error::SparkError>",
  "impl core::marker::Freeze for spark_core::buffer::message::PipelineMessage",
  "impl core::marker::Send for spark_core::buffer::message::PipelineMessage",
  "impl core::marker::Sync for spark_core::buffer::message::PipelineMessage",
  "impl core::marker::Unpin for spark_core::buffer::message::PipelineMessage",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::buffer::message::PipelineMessage",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::buffer::message::PipelineMessage",
  "pub trait spark_core::buffer::message::UserMessage: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::buffer::message::UserMessage::as_any(&self) -> &dyn core::any::Any",
  "pub fn spark_core::buffer::message::UserMessage::as_any_mut(&mut self) -> &mut dyn core::any::Any",
  "pub fn spark_core::buffer::message::UserMessage::into_any(self: alloc::boxed::Box<Self>) -> alloc::boxed::Box<dyn core::any::Any>",
  "pub fn spark_core::buffer::message::UserMessage::message_kind(&self) -> &'static str",
  "impl<T> spark_core::buffer::message::UserMessage for T where T: core::any::Any + core::marker::Send + core::marker::Sync + 'static",
  "pub fn T::as_any(&self) -> &(dyn core::any::Any + 'static)",
  "pub fn T::as_any_mut(&mut self) -> &mut (dyn core::any::Any + 'static)",
  "pub fn T::into_any(self: alloc::boxed::Box<T>) -> alloc::boxed::Box<dyn core::any::Any>",
  "pub fn T::message_kind(&self) -> &'static str",
  "pub type spark_core::buffer::message::Bytes = alloc::vec::Vec<u8>",
  "pub mod spark_core::buffer::pool",
  "pub struct spark_core::buffer::pool::PoolStatDimension",
  "pub spark_core::buffer::pool::PoolStatDimension::key: alloc::borrow::Cow<'static, str>",
  "pub spark_core::buffer::pool::PoolStatDimension::value: usize",
  "impl core::clone::Clone for spark_core::buffer::pool::PoolStatDimension",
  "pub fn spark_core::buffer::pool::PoolStatDimension::clone(&self) -> spark_core::buffer::pool::PoolStatDimension",
  "impl core::cmp::Eq for spark_core::buffer::pool::PoolStatDimension",
  "impl core::cmp::PartialEq for spark_core::buffer::pool::PoolStatDimension",
  "pub fn spark_core::buffer::pool::PoolStatDimension::eq(&self, other: &spark_core::buffer::pool::PoolStatDimension) -> bool",
  "impl core::fmt::Debug for spark_core::buffer::pool::PoolStatDimension",
  "pub fn spark_core::buffer::pool::PoolStatDimension::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::buffer::pool::PoolStatDimension",
  "impl core::marker::Freeze for spark_core::buffer::pool::PoolStatDimension",
  "impl core::marker::Send for spark_core::buffer::pool::PoolStatDimension",
  "impl core::marker::Sync for spark_core::buffer::pool::PoolStatDimension",
  "impl core::marker::Unpin for spark_core::buffer::pool::PoolStatDimension",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::buffer::pool::PoolStatDimension",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::buffer::pool::PoolStatDimension",
  "pub struct spark_core::buffer::pool::PoolStats",
  "pub spark_core::buffer::pool::PoolStats::active_leases: usize",
  "pub spark_core::buffer::pool::PoolStats::allocated_bytes: usize",
  "pub spark_core::buffer::pool::PoolStats::available_bytes: usize",
  "pub spark_core::buffer::pool::PoolStats::custom_dimensions: alloc::vec::Vec<spark_core::buffer::pool::PoolStatDimension>",
  "pub spark_core::buffer::pool::PoolStats::failed_acquisitions: u64",
  "pub spark_core::buffer::pool::PoolStats::pending_lease_requests: usize",
  "pub spark_core::buffer::pool::PoolStats::resident_bytes: usize",
  "impl core::clone::Clone for spark_core::buffer::pool::PoolStats",
  "pub fn spark_core::buffer::pool::PoolStats::clone(&self) -> spark_core::buffer::pool::PoolStats",
  "impl core::cmp::Eq for spark_core::buffer::pool::PoolStats",
  "impl core::cmp::PartialEq for spark_core::buffer::pool::PoolStats",
  "pub fn spark_core::buffer::pool::PoolStats::eq(&self, other: &spark_core::buffer::pool::PoolStats) -> bool",
  "impl core::default::Default for spark_core::buffer::pool::PoolStats",
  "pub fn spark_core::buffer::pool::PoolStats::default() -> spark_core::buffer::pool::PoolStats",
  "impl core::fmt::Debug for spark_core::buffer::pool::PoolStats",
  "pub fn spark_core::buffer::pool::PoolStats::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::buffer::pool::PoolStats",
  "impl core::marker::Freeze for spark_core::buffer::pool::PoolStats",
  "impl core::marker::Send for spark_core::buffer::pool::PoolStats",
  "impl core::marker::Sync for spark_core::buffer::pool::PoolStats",
  "impl core::marker::Unpin for spark_core::buffer::pool::PoolStats",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::buffer::pool::PoolStats",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::buffer::pool::PoolStats",
  "pub trait spark_core::buffer::pool::BufferPool: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::buffer::pool::BufferPool::acquire(&self, min_capacity: usize) -> core::result::Result<alloc::boxed::Box<dyn spark_core::buffer::writable::WritableBuffer>, spark_core::error::CoreError>",
  "pub fn spark_core::buffer::pool::BufferPool::shrink_to_fit(&self) -> core::result::Result<usize, spark_core::error::CoreError>",
  "pub fn spark_core::buffer::pool::BufferPool::statistics(&self) -> core::result::Result<spark_core::buffer::pool::PoolStats, spark_core::error::CoreError>",
  "pub mod spark_core::buffer::readable",
  "pub trait spark_core::buffer::readable::ReadableBuffer: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::buffer::readable::ReadableBuffer::advance(&mut self, len: usize) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::buffer::readable::ReadableBuffer::chunk(&self) -> &[u8]",
  "pub fn spark_core::buffer::readable::ReadableBuffer::copy_into_slice(&mut self, dst: &mut [u8]) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::buffer::readable::ReadableBuffer::is_empty(&self) -> bool",
  "pub fn spark_core::buffer::readable::ReadableBuffer::remaining(&self) -> usize",
  "pub fn spark_core::buffer::readable::ReadableBuffer::split_to(&mut self, len: usize) -> core::result::Result<alloc::boxed::Box<dyn spark_core::buffer::readable::ReadableBuffer>, spark_core::error::CoreError>",
  "pub fn spark_core::buffer::readable::ReadableBuffer::try_into_vec(self: alloc::boxed::Box<Self>) -> core::result::Result<alloc::vec::Vec<u8>, spark_core::error::CoreError>",
  "pub mod spark_core::buffer::writable",
  "pub trait spark_core::buffer::writable::WritableBuffer: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::buffer::writable::WritableBuffer::capacity(&self) -> usize",
  "pub fn spark_core::buffer::writable::WritableBuffer::clear(&mut self)",
  "pub fn spark_core::buffer::writable::WritableBuffer::freeze(self: alloc::boxed::Box<Self>) -> core::result::Result<alloc::boxed::Box<dyn spark_core::buffer::readable::ReadableBuffer>, spark_core::error::CoreError>",
  "pub fn spark_core::buffer::writable::WritableBuffer::put_slice(&mut self, src: &[u8]) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::buffer::writable::WritableBuffer::remaining_mut(&self) -> usize",
  "pub fn spark_core::buffer::writable::WritableBuffer::reserve(&mut self, additional: usize) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::buffer::writable::WritableBuffer::write_from(&mut self, src: &mut dyn spark_core::buffer::readable::ReadableBuffer, len: usize) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::buffer::writable::WritableBuffer::written(&self) -> usize",
  "#[non_exhaustive] pub enum spark_core::buffer::PipelineMessage",
  "pub spark_core::buffer::PipelineMessage::Buffer(alloc::boxed::Box<dyn spark_core::buffer::readable::ReadableBuffer>)",
  "pub spark_core::buffer::PipelineMessage::User(alloc::boxed::Box<dyn spark_core::buffer::message::UserMessage>)",
  "impl spark_core::buffer::message::PipelineMessage",
  "pub fn spark_core::buffer::message::PipelineMessage::downcast_user_mut<T>(&mut self) -> core::option::Option<&mut T> where T: spark_core::buffer::message::UserMessage",
  "pub fn spark_core::buffer::message::PipelineMessage::downcast_user_ref<T>(&self) -> core::option::Option<&T> where T: spark_core::buffer::message::UserMessage",
  "pub fn spark_core::buffer::message::PipelineMessage::from_user<M>(message: M) -> Self where M: spark_core::buffer::message::UserMessage",
  "pub fn spark_core::buffer::message::PipelineMessage::try_into_user<T>(self) -> core::result::Result<T, Self> where T: spark_core::buffer::message::UserMessage",
  "pub fn spark_core::buffer::message::PipelineMessage::user_kind(&self) -> core::option::Option<&'static str>",
  "impl core::fmt::Debug for spark_core::buffer::message::PipelineMessage",
  "pub fn spark_core::buffer::message::PipelineMessage::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl spark_core::service::auto_dyn::Decode for spark_core::buffer::message::PipelineMessage",
  "pub fn spark_core::buffer::message::PipelineMessage::decode(message: spark_core::buffer::message::PipelineMessage) -> core::result::Result<Self, spark_core::error::SparkError>",
  "impl core::marker::Freeze for spark_core::buffer::message::PipelineMessage",
  "impl core::marker::Send for spark_core::buffer::message::PipelineMessage",
  "impl core::marker::Sync for spark_core::buffer::message::PipelineMessage",
  "impl core::marker::Unpin for spark_core::buffer::message::PipelineMessage",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::buffer::message::PipelineMessage",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::buffer::message::PipelineMessage",
  "pub struct spark_core::buffer::Chunks<'a>",
  "impl<'a> spark_core::buffer::buf_view::Chunks<'a>",
  "pub fn spark_core::buffer::buf_view::Chunks<'a>::empty() -> Self",
  "pub fn spark_core::buffer::buf_view::Chunks<'a>::from_single(chunk: &'a [u8]) -> Self",
  "pub fn spark_core::buffer::buf_view::Chunks<'a>::from_vec(chunks: alloc::vec::Vec<&'a [u8]>) -> Self",
  "pub fn spark_core::buffer::buf_view::Chunks<'a>::total_len(&self) -> usize",
  "impl<'a> core::clone::Clone for spark_core::buffer::buf_view::Chunks<'a>",
  "pub fn spark_core::buffer::buf_view::Chunks<'a>::clone(&self) -> spark_core::buffer::buf_view::Chunks<'a>",
  "impl<'a> core::fmt::Debug for spark_core::buffer::buf_view::Chunks<'a>",
  "pub fn spark_core::buffer::buf_view::Chunks<'a>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<'a> core::iter::traits::exact_size::ExactSizeIterator for spark_core::buffer::buf_view::Chunks<'a>",
  "pub fn spark_core::buffer::buf_view::Chunks<'a>::len(&self) -> usize",
  "impl<'a> core::iter::traits::iterator::Iterator for spark_core::buffer::buf_view::Chunks<'a>",
  "pub type spark_core::buffer::buf_view::Chunks<'a>::Item = &'a [u8]",
  "pub fn spark_core::buffer::buf_view::Chunks<'a>::next(&mut self) -> core::option::Option<Self::Item>",
  "pub fn spark_core::buffer::buf_view::Chunks<'a>::size_hint(&self) -> (usize, core::option::Option<usize>)",
  "impl<'a> core::iter::traits::marker::FusedIterator for spark_core::buffer::buf_view::Chunks<'a>",
  "impl<'a> core::marker::Freeze for spark_core::buffer::buf_view::Chunks<'a>",
  "impl<'a> core::marker::Send for spark_core::buffer::buf_view::Chunks<'a>",
  "impl<'a> core::marker::Sync for spark_core::buffer::buf_view::Chunks<'a>",
  "impl<'a> core::marker::Unpin for spark_core::buffer::buf_view::Chunks<'a>",
  "impl<'a> core::panic::unwind_safe::RefUnwindSafe for spark_core::buffer::buf_view::Chunks<'a>",
  "impl<'a> core::panic::unwind_safe::UnwindSafe for spark_core::buffer::buf_view::Chunks<'a>",
  "pub struct spark_core::buffer::PoolStatDimension",
  "pub spark_core::buffer::PoolStatDimension::key: alloc::borrow::Cow<'static, str>",
  "pub spark_core::buffer::PoolStatDimension::value: usize",
  "impl core::clone::Clone for spark_core::buffer::pool::PoolStatDimension",
  "pub fn spark_core::buffer::pool::PoolStatDimension::clone(&self) -> spark_core::buffer::pool::PoolStatDimension",
  "impl core::cmp::Eq for spark_core::buffer::pool::PoolStatDimension",
  "impl core::cmp::PartialEq for spark_core::buffer::pool::PoolStatDimension",
  "pub fn spark_core::buffer::pool::PoolStatDimension::eq(&self, other: &spark_core::buffer::pool::PoolStatDimension) -> bool",
  "impl core::fmt::Debug for spark_core::buffer::pool::PoolStatDimension",
  "pub fn spark_core::buffer::pool::PoolStatDimension::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::buffer::pool::PoolStatDimension",
  "impl core::marker::Freeze for spark_core::buffer::pool::PoolStatDimension",
  "impl core::marker::Send for spark_core::buffer::pool::PoolStatDimension",
  "impl core::marker::Sync for spark_core::buffer::pool::PoolStatDimension",
  "impl core::marker::Unpin for spark_core::buffer::pool::PoolStatDimension",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::buffer::pool::PoolStatDimension",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::buffer::pool::PoolStatDimension",
  "pub struct spark_core::buffer::PoolStats",
  "pub spark_core::buffer::PoolStats::active_leases: usize",
  "pub spark_core::buffer::PoolStats::allocated_bytes: usize",
  "pub spark_core::buffer::PoolStats::available_bytes: usize",
  "pub spark_core::buffer::PoolStats::custom_dimensions: alloc::vec::Vec<spark_core::buffer::pool::PoolStatDimension>",
  "pub spark_core::buffer::PoolStats::failed_acquisitions: u64",
  "pub spark_core::buffer::PoolStats::pending_lease_requests: usize",
  "pub spark_core::buffer::PoolStats::resident_bytes: usize",
  "impl core::clone::Clone for spark_core::buffer::pool::PoolStats",
  "pub fn spark_core::buffer::pool::PoolStats::clone(&self) -> spark_core::buffer::pool::PoolStats",
  "impl core::cmp::Eq for spark_core::buffer::pool::PoolStats",
  "impl core::cmp::PartialEq for spark_core::buffer::pool::PoolStats",
  "pub fn spark_core::buffer::pool::PoolStats::eq(&self, other: &spark_core::buffer::pool::PoolStats) -> bool",
  "impl core::default::Default for spark_core::buffer::pool::PoolStats",
  "pub fn spark_core::buffer::pool::PoolStats::default() -> spark_core::buffer::pool::PoolStats",
  "impl core::fmt::Debug for spark_core::buffer::pool::PoolStats",
  "pub fn spark_core::buffer::pool::PoolStats::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::buffer::pool::PoolStats",
  "impl core::marker::Freeze for spark_core::buffer::pool::PoolStats",
  "impl core::marker::Send for spark_core::buffer::pool::PoolStats",
  "impl core::marker::Sync for spark_core::buffer::pool::PoolStats",
  "impl core::marker::Unpin for spark_core::buffer::pool::PoolStats",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::buffer::pool::PoolStats",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::buffer::pool::PoolStats",
  "pub trait spark_core::buffer::BufView: core::marker::Send + core::marker::Sync",
  "pub fn spark_core::buffer::BufView::as_chunks(&self) -> spark_core::buffer::buf_view::Chunks<'_>",
  "pub fn spark_core::buffer::BufView::chunk_count(&self) -> usize",
  "pub fn spark_core::buffer::BufView::is_empty(&self) -> bool",
  "pub fn spark_core::buffer::BufView::len(&self) -> usize",
  "impl spark_core::buffer::buf_view::BufView for [u8]",
  "pub fn [u8]::as_chunks(&self) -> spark_core::buffer::buf_view::Chunks<'_>",
  "pub fn [u8]::len(&self) -> usize",
  "impl spark_core::buffer::buf_view::BufView for alloc::boxed::Box<[u8]>",
  "pub fn alloc::boxed::Box<[u8]>::as_chunks(&self) -> spark_core::buffer::buf_view::Chunks<'_>",
  "pub fn alloc::boxed::Box<[u8]>::len(&self) -> usize",
  "impl spark_core::buffer::buf_view::BufView for alloc::vec::Vec<u8>",
  "pub fn alloc::vec::Vec<u8>::as_chunks(&self) -> spark_core::buffer::buf_view::Chunks<'_>",
  "pub fn alloc::vec::Vec<u8>::len(&self) -> usize",
  "impl<T> spark_core::buffer::buf_view::BufView for &T where T: spark_core::buffer::buf_view::BufView + ?core::marker::Sized",
  "pub fn &T::as_chunks(&self) -> spark_core::buffer::buf_view::Chunks<'_>",
  "pub fn &T::len(&self) -> usize",
  "pub trait spark_core::buffer::BufferAllocator: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::buffer::BufferAllocator::acquire(&self, min_capacity: usize) -> core::result::Result<alloc::boxed::Box<spark_core::buffer::ErasedSparkBufMut>, spark_core::error::CoreError>",
  "impl<T> spark_core::buffer::BufferAllocator for T where T: spark_core::buffer::pool::BufferPool",
  "pub fn T::acquire(&self, min_capacity: usize) -> core::result::Result<alloc::boxed::Box<spark_core::buffer::ErasedSparkBufMut>, spark_core::error::CoreError>",
  "pub trait spark_core::buffer::BufferPool: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::buffer::BufferPool::acquire(&self, min_capacity: usize) -> core::result::Result<alloc::boxed::Box<dyn spark_core::buffer::writable::WritableBuffer>, spark_core::error::CoreError>",
  "pub fn spark_core::buffer::BufferPool::shrink_to_fit(&self) -> core::result::Result<usize, spark_core::error::CoreError>",
  "pub fn spark_core::buffer::BufferPool::statistics(&self) -> core::result::Result<spark_core::buffer::pool::PoolStats, spark_core::error::CoreError>",
  "pub trait spark_core::buffer::ReadableBuffer: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::buffer::ReadableBuffer::advance(&mut self, len: usize) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::buffer::ReadableBuffer::chunk(&self) -> &[u8]",
  "pub fn spark_core::buffer::ReadableBuffer::copy_into_slice(&mut self, dst: &mut [u8]) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::buffer::ReadableBuffer::is_empty(&self) -> bool",
  "pub fn spark_core::buffer::ReadableBuffer::remaining(&self) -> usize",
  "pub fn spark_core::buffer::ReadableBuffer::split_to(&mut self, len: usize) -> core::result::Result<alloc::boxed::Box<dyn spark_core::buffer::readable::ReadableBuffer>, spark_core::error::CoreError>",
  "pub fn spark_core::buffer::ReadableBuffer::try_into_vec(self: alloc::boxed::Box<Self>) -> core::result::Result<alloc::vec::Vec<u8>, spark_core::error::CoreError>",
  "pub trait spark_core::buffer::UserMessage: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::buffer::UserMessage::as_any(&self) -> &dyn core::any::Any",
  "pub fn spark_core::buffer::UserMessage::as_any_mut(&mut self) -> &mut dyn core::any::Any",
  "pub fn spark_core::buffer::UserMessage::into_any(self: alloc::boxed::Box<Self>) -> alloc::boxed::Box<dyn core::any::Any>",
  "pub fn spark_core::buffer::UserMessage::message_kind(&self) -> &'static str",
  "impl<T> spark_core::buffer::message::UserMessage for T where T: core::any::Any + core::marker::Send + core::marker::Sync + 'static",
  "pub fn T::as_any(&self) -> &(dyn core::any::Any + 'static)",
  "pub fn T::as_any_mut(&mut self) -> &mut (dyn core::any::Any + 'static)",
  "pub fn T::into_any(self: alloc::boxed::Box<T>) -> alloc::boxed::Box<dyn core::any::Any>",
  "pub fn T::message_kind(&self) -> &'static str",
  "pub trait spark_core::buffer::WritableBuffer: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::buffer::WritableBuffer::capacity(&self) -> usize",
  "pub fn spark_core::buffer::WritableBuffer::clear(&mut self)",
  "pub fn spark_core::buffer::WritableBuffer::freeze(self: alloc::boxed::Box<Self>) -> core::result::Result<alloc::boxed::Box<dyn spark_core::buffer::readable::ReadableBuffer>, spark_core::error::CoreError>",
  "pub fn spark_core::buffer::WritableBuffer::put_slice(&mut self, src: &[u8]) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::buffer::WritableBuffer::remaining_mut(&self) -> usize",
  "pub fn spark_core::buffer::WritableBuffer::reserve(&mut self, additional: usize) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::buffer::WritableBuffer::write_from(&mut self, src: &mut dyn spark_core::buffer::readable::ReadableBuffer, len: usize) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::buffer::WritableBuffer::written(&self) -> usize",
  "pub type spark_core::buffer::Bytes = alloc::vec::Vec<u8>",
  "pub type spark_core::buffer::ErasedSparkBuf = dyn spark_core::buffer::readable::ReadableBuffer",
  "pub type spark_core::buffer::ErasedSparkBufMut = dyn spark_core::buffer::writable::WritableBuffer",
  "pub mod spark_core::cluster",
  "pub mod spark_core::cluster::discovery",
  "#[non_exhaustive] pub enum spark_core::cluster::discovery::DiscoveryEvent",
  "pub spark_core::cluster::discovery::DiscoveryEvent::InstanceAdded",
  "pub spark_core::cluster::discovery::DiscoveryEvent::InstanceAdded::instance: spark_core::cluster::discovery::ServiceInstance",
  "pub spark_core::cluster::discovery::DiscoveryEvent::InstanceAdded::revision: spark_core::cluster::topology::ClusterRevision",
  "pub spark_core::cluster::discovery::DiscoveryEvent::InstanceRemoved",
  "pub spark_core::cluster::discovery::DiscoveryEvent::InstanceRemoved::endpoint: spark_core::transport::endpoint::Endpoint",
  "pub spark_core::cluster::discovery::DiscoveryEvent::InstanceRemoved::revision: spark_core::cluster::topology::ClusterRevision",
  "pub spark_core::cluster::discovery::DiscoveryEvent::InstanceUpdated",
  "pub spark_core::cluster::discovery::DiscoveryEvent::InstanceUpdated::instance: spark_core::cluster::discovery::ServiceInstance",
  "pub spark_core::cluster::discovery::DiscoveryEvent::InstanceUpdated::revision: spark_core::cluster::topology::ClusterRevision",
  "pub spark_core::cluster::discovery::DiscoveryEvent::SnapshotApplied(spark_core::cluster::discovery::DiscoverySnapshot)",
  "pub spark_core::cluster::discovery::DiscoveryEvent::TopologyHintUpdated",
  "pub spark_core::cluster::discovery::DiscoveryEvent::TopologyHintUpdated::hints: alloc::vec::Vec<alloc::string::String>",
  "pub spark_core::cluster::discovery::DiscoveryEvent::TopologyHintUpdated::revision: spark_core::cluster::topology::ClusterRevision",
  "impl core::clone::Clone for spark_core::cluster::discovery::DiscoveryEvent",
  "pub fn spark_core::cluster::discovery::DiscoveryEvent::clone(&self) -> spark_core::cluster::discovery::DiscoveryEvent",
  "impl core::fmt::Debug for spark_core::cluster::discovery::DiscoveryEvent",
  "pub fn spark_core::cluster::discovery::DiscoveryEvent::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::cluster::discovery::DiscoveryEvent",
  "impl core::marker::Send for spark_core::cluster::discovery::DiscoveryEvent",
  "impl core::marker::Sync for spark_core::cluster::discovery::DiscoveryEvent",
  "impl core::marker::Unpin for spark_core::cluster::discovery::DiscoveryEvent",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::discovery::DiscoveryEvent",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::discovery::DiscoveryEvent",
  "pub struct spark_core::cluster::discovery::DiscoverySnapshot",
  "pub spark_core::cluster::discovery::DiscoverySnapshot::instances: alloc::vec::Vec<spark_core::cluster::discovery::ServiceInstance>",
  "pub spark_core::cluster::discovery::DiscoverySnapshot::revision: spark_core::cluster::topology::ClusterRevision",
  "pub spark_core::cluster::discovery::DiscoverySnapshot::service: spark_core::cluster::discovery::ServiceName",
  "impl core::clone::Clone for spark_core::cluster::discovery::DiscoverySnapshot",
  "pub fn spark_core::cluster::discovery::DiscoverySnapshot::clone(&self) -> spark_core::cluster::discovery::DiscoverySnapshot",
  "impl core::cmp::Eq for spark_core::cluster::discovery::DiscoverySnapshot",
  "impl core::cmp::PartialEq for spark_core::cluster::discovery::DiscoverySnapshot",
  "pub fn spark_core::cluster::discovery::DiscoverySnapshot::eq(&self, other: &spark_core::cluster::discovery::DiscoverySnapshot) -> bool",
  "impl core::fmt::Debug for spark_core::cluster::discovery::DiscoverySnapshot",
  "pub fn spark_core::cluster::discovery::DiscoverySnapshot::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::discovery::DiscoverySnapshot",
  "impl core::marker::Freeze for spark_core::cluster::discovery::DiscoverySnapshot",
  "impl core::marker::Send for spark_core::cluster::discovery::DiscoverySnapshot",
  "impl core::marker::Sync for spark_core::cluster::discovery::DiscoverySnapshot",
  "impl core::marker::Unpin for spark_core::cluster::discovery::DiscoverySnapshot",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::discovery::DiscoverySnapshot",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::discovery::DiscoverySnapshot",
  "pub struct spark_core::cluster::discovery::ServiceInstance",
  "pub spark_core::cluster::discovery::ServiceInstance::endpoint: spark_core::transport::endpoint::Endpoint",
  "pub spark_core::cluster::discovery::ServiceInstance::hints: alloc::vec::Vec<alloc::string::String>",
  "pub spark_core::cluster::discovery::ServiceInstance::metadata: alloc::collections::btree::map::BTreeMap<alloc::string::String, alloc::string::String>",
  "pub spark_core::cluster::discovery::ServiceInstance::revision: spark_core::cluster::topology::ClusterRevision",
  "pub spark_core::cluster::discovery::ServiceInstance::service: spark_core::cluster::discovery::ServiceName",
  "impl core::clone::Clone for spark_core::cluster::discovery::ServiceInstance",
  "pub fn spark_core::cluster::discovery::ServiceInstance::clone(&self) -> spark_core::cluster::discovery::ServiceInstance",
  "impl core::cmp::Eq for spark_core::cluster::discovery::ServiceInstance",
  "impl core::cmp::PartialEq for spark_core::cluster::discovery::ServiceInstance",
  "pub fn spark_core::cluster::discovery::ServiceInstance::eq(&self, other: &spark_core::cluster::discovery::ServiceInstance) -> bool",
  "impl core::fmt::Debug for spark_core::cluster::discovery::ServiceInstance",
  "pub fn spark_core::cluster::discovery::ServiceInstance::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::discovery::ServiceInstance",
  "impl core::marker::Freeze for spark_core::cluster::discovery::ServiceInstance",
  "impl core::marker::Send for spark_core::cluster::discovery::ServiceInstance",
  "impl core::marker::Sync for spark_core::cluster::discovery::ServiceInstance",
  "impl core::marker::Unpin for spark_core::cluster::discovery::ServiceInstance",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::discovery::ServiceInstance",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::discovery::ServiceInstance",
  "pub trait spark_core::cluster::discovery::ServiceDiscovery: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::cluster::discovery::ServiceDiscovery::list_services<'life0, 'async_trait>(&'life0 self) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<alloc::vec::Vec<spark_core::cluster::discovery::ServiceName>, spark_core::cluster::membership::ClusterError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait",
  "pub fn spark_core::cluster::discovery::ServiceDiscovery::resolve<'life0, 'life1, 'async_trait>(&'life0 self, service: &'life1 spark_core::cluster::discovery::ServiceName, consistency: spark_core::cluster::topology::ClusterConsistencyLevel) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<spark_core::cluster::discovery::DiscoverySnapshot, spark_core::cluster::membership::ClusterError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait, 'life1: 'async_trait",
  "pub fn spark_core::cluster::discovery::ServiceDiscovery::watch(&self, service: &spark_core::cluster::discovery::ServiceName, consistency: spark_core::cluster::topology::ClusterConsistencyLevel, resume_from: core::option::Option<spark_core::cluster::topology::ClusterRevision>, flow_control: spark_core::cluster::flow_control::SubscriptionFlowControl) -> spark_core::cluster::flow_control::SubscriptionStream<spark_core::cluster::discovery::DiscoveryEvent>",
  "pub type spark_core::cluster::discovery::ServiceName = alloc::string::String",
  "pub mod spark_core::cluster::flow_control",
  "#[non_exhaustive] pub enum spark_core::cluster::flow_control::FlowControlMode",
  "pub spark_core::cluster::flow_control::FlowControlMode::Bounded",
  "pub spark_core::cluster::flow_control::FlowControlMode::Bounded::capacity: core::num::nonzero::NonZeroUsize",
  "pub spark_core::cluster::flow_control::FlowControlMode::Bounded::overflow: spark_core::cluster::flow_control::OverflowPolicy",
  "pub spark_core::cluster::flow_control::FlowControlMode::Unbounded",
  "impl core::clone::Clone for spark_core::cluster::flow_control::FlowControlMode",
  "pub fn spark_core::cluster::flow_control::FlowControlMode::clone(&self) -> spark_core::cluster::flow_control::FlowControlMode",
  "impl core::cmp::Eq for spark_core::cluster::flow_control::FlowControlMode",
  "impl core::cmp::PartialEq for spark_core::cluster::flow_control::FlowControlMode",
  "pub fn spark_core::cluster::flow_control::FlowControlMode::eq(&self, other: &spark_core::cluster::flow_control::FlowControlMode) -> bool",
  "impl core::fmt::Debug for spark_core::cluster::flow_control::FlowControlMode",
  "pub fn spark_core::cluster::flow_control::FlowControlMode::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::cluster::flow_control::FlowControlMode",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::flow_control::FlowControlMode",
  "impl core::marker::Freeze for spark_core::cluster::flow_control::FlowControlMode",
  "impl core::marker::Send for spark_core::cluster::flow_control::FlowControlMode",
  "impl core::marker::Sync for spark_core::cluster::flow_control::FlowControlMode",
  "impl core::marker::Unpin for spark_core::cluster::flow_control::FlowControlMode",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::flow_control::FlowControlMode",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::flow_control::FlowControlMode",
  "#[non_exhaustive] pub enum spark_core::cluster::flow_control::OverflowPolicy",
  "pub spark_core::cluster::flow_control::OverflowPolicy::DropNewest",
  "pub spark_core::cluster::flow_control::OverflowPolicy::DropOldest",
  "pub spark_core::cluster::flow_control::OverflowPolicy::FailStream",
  "impl core::clone::Clone for spark_core::cluster::flow_control::OverflowPolicy",
  "pub fn spark_core::cluster::flow_control::OverflowPolicy::clone(&self) -> spark_core::cluster::flow_control::OverflowPolicy",
  "impl core::cmp::Eq for spark_core::cluster::flow_control::OverflowPolicy",
  "impl core::cmp::PartialEq for spark_core::cluster::flow_control::OverflowPolicy",
  "pub fn spark_core::cluster::flow_control::OverflowPolicy::eq(&self, other: &spark_core::cluster::flow_control::OverflowPolicy) -> bool",
  "impl core::fmt::Debug for spark_core::cluster::flow_control::OverflowPolicy",
  "pub fn spark_core::cluster::flow_control::OverflowPolicy::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::cluster::flow_control::OverflowPolicy",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::flow_control::OverflowPolicy",
  "impl core::marker::Freeze for spark_core::cluster::flow_control::OverflowPolicy",
  "impl core::marker::Send for spark_core::cluster::flow_control::OverflowPolicy",
  "impl core::marker::Sync for spark_core::cluster::flow_control::OverflowPolicy",
  "impl core::marker::Unpin for spark_core::cluster::flow_control::OverflowPolicy",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::flow_control::OverflowPolicy",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::flow_control::OverflowPolicy",
  "pub struct spark_core::cluster::flow_control::SubscriptionFlowControl",
  "pub spark_core::cluster::flow_control::SubscriptionFlowControl::mode: spark_core::cluster::flow_control::FlowControlMode",
  "pub spark_core::cluster::flow_control::SubscriptionFlowControl::observe_queue: bool",
  "impl spark_core::cluster::flow_control::SubscriptionFlowControl",
  "pub const fn spark_core::cluster::flow_control::SubscriptionFlowControl::bounded(capacity: core::num::nonzero::NonZeroUsize, overflow: spark_core::cluster::flow_control::OverflowPolicy) -> Self",
  "pub const fn spark_core::cluster::flow_control::SubscriptionFlowControl::unbounded() -> Self",
  "pub const fn spark_core::cluster::flow_control::SubscriptionFlowControl::with_queue_observation(self, enable: bool) -> Self",
  "impl core::clone::Clone for spark_core::cluster::flow_control::SubscriptionFlowControl",
  "pub fn spark_core::cluster::flow_control::SubscriptionFlowControl::clone(&self) -> spark_core::cluster::flow_control::SubscriptionFlowControl",
  "impl core::cmp::Eq for spark_core::cluster::flow_control::SubscriptionFlowControl",
  "impl core::cmp::PartialEq for spark_core::cluster::flow_control::SubscriptionFlowControl",
  "pub fn spark_core::cluster::flow_control::SubscriptionFlowControl::eq(&self, other: &spark_core::cluster::flow_control::SubscriptionFlowControl) -> bool",
  "impl core::default::Default for spark_core::cluster::flow_control::SubscriptionFlowControl",
  "pub fn spark_core::cluster::flow_control::SubscriptionFlowControl::default() -> Self",
  "impl core::fmt::Debug for spark_core::cluster::flow_control::SubscriptionFlowControl",
  "pub fn spark_core::cluster::flow_control::SubscriptionFlowControl::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::cluster::flow_control::SubscriptionFlowControl",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::flow_control::SubscriptionFlowControl",
  "impl core::marker::Freeze for spark_core::cluster::flow_control::SubscriptionFlowControl",
  "impl core::marker::Send for spark_core::cluster::flow_control::SubscriptionFlowControl",
  "impl core::marker::Sync for spark_core::cluster::flow_control::SubscriptionFlowControl",
  "impl core::marker::Unpin for spark_core::cluster::flow_control::SubscriptionFlowControl",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::flow_control::SubscriptionFlowControl",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::flow_control::SubscriptionFlowControl",
  "pub struct spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "pub spark_core::cluster::flow_control::SubscriptionQueueSnapshot::capacity: core::option::Option<core::num::nonzero::NonZeroUsize>",
  "pub spark_core::cluster::flow_control::SubscriptionQueueSnapshot::depth: usize",
  "pub spark_core::cluster::flow_control::SubscriptionQueueSnapshot::dropped_events: u64",
  "impl core::clone::Clone for spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "pub fn spark_core::cluster::flow_control::SubscriptionQueueSnapshot::clone(&self) -> spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "impl core::cmp::Eq for spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "impl core::cmp::PartialEq for spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "pub fn spark_core::cluster::flow_control::SubscriptionQueueSnapshot::eq(&self, other: &spark_core::cluster::flow_control::SubscriptionQueueSnapshot) -> bool",
  "impl core::default::Default for spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "pub fn spark_core::cluster::flow_control::SubscriptionQueueSnapshot::default() -> spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "impl core::fmt::Debug for spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "pub fn spark_core::cluster::flow_control::SubscriptionQueueSnapshot::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "impl core::marker::Freeze for spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "impl core::marker::Send for spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "impl core::marker::Sync for spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "impl core::marker::Unpin for spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "pub struct spark_core::cluster::flow_control::SubscriptionStream<T>",
  "pub spark_core::cluster::flow_control::SubscriptionStream::queue_probe: core::option::Option<alloc::sync::Arc<dyn spark_core::cluster::flow_control::SubscriptionQueueProbe>>",
  "pub spark_core::cluster::flow_control::SubscriptionStream::stream: spark_core::future::BoxStream<'static, T>",
  "impl<T> spark_core::cluster::flow_control::SubscriptionStream<T>",
  "pub fn spark_core::cluster::flow_control::SubscriptionStream<T>::new(stream: spark_core::future::BoxStream<'static, T>) -> Self",
  "pub fn spark_core::cluster::flow_control::SubscriptionStream<T>::with_probe(self, probe: alloc::sync::Arc<dyn spark_core::cluster::flow_control::SubscriptionQueueProbe>) -> Self",
  "impl<T> core::fmt::Debug for spark_core::cluster::flow_control::SubscriptionStream<T>",
  "pub fn spark_core::cluster::flow_control::SubscriptionStream<T>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<T> core::marker::Freeze for spark_core::cluster::flow_control::SubscriptionStream<T>",
  "impl<T> core::marker::Send for spark_core::cluster::flow_control::SubscriptionStream<T>",
  "impl<T> !core::marker::Sync for spark_core::cluster::flow_control::SubscriptionStream<T>",
  "impl<T> core::marker::Unpin for spark_core::cluster::flow_control::SubscriptionStream<T>",
  "impl<T> !core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::flow_control::SubscriptionStream<T>",
  "impl<T> !core::panic::unwind_safe::UnwindSafe for spark_core::cluster::flow_control::SubscriptionStream<T>",
  "pub trait spark_core::cluster::flow_control::SubscriptionQueueProbe: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::cluster::flow_control::SubscriptionQueueProbe::snapshot(&self) -> spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "pub mod spark_core::cluster::membership",
  "#[non_exhaustive] pub enum spark_core::cluster::membership::ClusterMembershipEvent",
  "pub spark_core::cluster::membership::ClusterMembershipEvent::MemberJoined",
  "pub spark_core::cluster::membership::ClusterMembershipEvent::MemberJoined::profile: spark_core::cluster::membership::ClusterNodeProfile",
  "pub spark_core::cluster::membership::ClusterMembershipEvent::MemberJoined::revision: spark_core::cluster::topology::ClusterRevision",
  "pub spark_core::cluster::membership::ClusterMembershipEvent::MemberRetired",
  "pub spark_core::cluster::membership::ClusterMembershipEvent::MemberRetired::node_id: spark_core::cluster::membership::NodeId",
  "pub spark_core::cluster::membership::ClusterMembershipEvent::MemberRetired::revision: spark_core::cluster::topology::ClusterRevision",
  "pub spark_core::cluster::membership::ClusterMembershipEvent::MemberStateChanged",
  "pub spark_core::cluster::membership::ClusterMembershipEvent::MemberStateChanged::new_state: spark_core::cluster::membership::ClusterNodeState",
  "pub spark_core::cluster::membership::ClusterMembershipEvent::MemberStateChanged::node_id: spark_core::cluster::membership::NodeId",
  "pub spark_core::cluster::membership::ClusterMembershipEvent::MemberStateChanged::revision: spark_core::cluster::topology::ClusterRevision",
  "pub spark_core::cluster::membership::ClusterMembershipEvent::MemberUnreachable",
  "pub spark_core::cluster::membership::ClusterMembershipEvent::MemberUnreachable::node_id: spark_core::cluster::membership::NodeId",
  "pub spark_core::cluster::membership::ClusterMembershipEvent::MemberUnreachable::revision: spark_core::cluster::topology::ClusterRevision",
  "pub spark_core::cluster::membership::ClusterMembershipEvent::MemberUpdated",
  "pub spark_core::cluster::membership::ClusterMembershipEvent::MemberUpdated::profile: spark_core::cluster::membership::ClusterNodeProfile",
  "pub spark_core::cluster::membership::ClusterMembershipEvent::MemberUpdated::revision: spark_core::cluster::topology::ClusterRevision",
  "pub spark_core::cluster::membership::ClusterMembershipEvent::SnapshotApplied(spark_core::cluster::membership::ClusterMembershipSnapshot)",
  "impl core::clone::Clone for spark_core::cluster::membership::ClusterMembershipEvent",
  "pub fn spark_core::cluster::membership::ClusterMembershipEvent::clone(&self) -> spark_core::cluster::membership::ClusterMembershipEvent",
  "impl core::fmt::Debug for spark_core::cluster::membership::ClusterMembershipEvent",
  "pub fn spark_core::cluster::membership::ClusterMembershipEvent::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::cluster::membership::ClusterMembershipEvent",
  "impl core::marker::Send for spark_core::cluster::membership::ClusterMembershipEvent",
  "impl core::marker::Sync for spark_core::cluster::membership::ClusterMembershipEvent",
  "impl core::marker::Unpin for spark_core::cluster::membership::ClusterMembershipEvent",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::membership::ClusterMembershipEvent",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::membership::ClusterMembershipEvent",
  "#[non_exhaustive] pub enum spark_core::cluster::membership::ClusterNodeState",
  "pub spark_core::cluster::membership::ClusterNodeState::Active",
  "pub spark_core::cluster::membership::ClusterNodeState::Degraded",
  "pub spark_core::cluster::membership::ClusterNodeState::Retiring",
  "pub spark_core::cluster::membership::ClusterNodeState::Unreachable",
  "impl core::clone::Clone for spark_core::cluster::membership::ClusterNodeState",
  "pub fn spark_core::cluster::membership::ClusterNodeState::clone(&self) -> spark_core::cluster::membership::ClusterNodeState",
  "impl core::cmp::Eq for spark_core::cluster::membership::ClusterNodeState",
  "impl core::cmp::PartialEq for spark_core::cluster::membership::ClusterNodeState",
  "pub fn spark_core::cluster::membership::ClusterNodeState::eq(&self, other: &spark_core::cluster::membership::ClusterNodeState) -> bool",
  "impl core::fmt::Debug for spark_core::cluster::membership::ClusterNodeState",
  "pub fn spark_core::cluster::membership::ClusterNodeState::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::cluster::membership::ClusterNodeState",
  "pub fn spark_core::cluster::membership::ClusterNodeState::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::Copy for spark_core::cluster::membership::ClusterNodeState",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::membership::ClusterNodeState",
  "impl core::marker::Freeze for spark_core::cluster::membership::ClusterNodeState",
  "impl core::marker::Send for spark_core::cluster::membership::ClusterNodeState",
  "impl core::marker::Sync for spark_core::cluster::membership::ClusterNodeState",
  "impl core::marker::Unpin for spark_core::cluster::membership::ClusterNodeState",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::membership::ClusterNodeState",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::membership::ClusterNodeState",
  "#[non_exhaustive] pub enum spark_core::cluster::membership::ClusterScopeSelector",
  "pub spark_core::cluster::membership::ClusterScopeSelector::ByRole(spark_core::cluster::topology::RoleDescriptor)",
  "pub spark_core::cluster::membership::ClusterScopeSelector::ByShard(alloc::string::String)",
  "pub spark_core::cluster::membership::ClusterScopeSelector::Custom(alloc::string::String)",
  "pub spark_core::cluster::membership::ClusterScopeSelector::EntireCluster",
  "impl core::clone::Clone for spark_core::cluster::membership::ClusterScopeSelector",
  "pub fn spark_core::cluster::membership::ClusterScopeSelector::clone(&self) -> spark_core::cluster::membership::ClusterScopeSelector",
  "impl core::cmp::Eq for spark_core::cluster::membership::ClusterScopeSelector",
  "impl core::cmp::PartialEq for spark_core::cluster::membership::ClusterScopeSelector",
  "pub fn spark_core::cluster::membership::ClusterScopeSelector::eq(&self, other: &spark_core::cluster::membership::ClusterScopeSelector) -> bool",
  "impl core::fmt::Debug for spark_core::cluster::membership::ClusterScopeSelector",
  "pub fn spark_core::cluster::membership::ClusterScopeSelector::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::membership::ClusterScopeSelector",
  "impl core::marker::Freeze for spark_core::cluster::membership::ClusterScopeSelector",
  "impl core::marker::Send for spark_core::cluster::membership::ClusterScopeSelector",
  "impl core::marker::Sync for spark_core::cluster::membership::ClusterScopeSelector",
  "impl core::marker::Unpin for spark_core::cluster::membership::ClusterScopeSelector",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::membership::ClusterScopeSelector",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::membership::ClusterScopeSelector",
  "pub struct spark_core::cluster::membership::ClusterMembershipScope",
  "pub spark_core::cluster::membership::ClusterMembershipScope::consistency: spark_core::cluster::topology::ClusterConsistencyLevel",
  "pub spark_core::cluster::membership::ClusterMembershipScope::selector: spark_core::cluster::membership::ClusterScopeSelector",
  "impl spark_core::cluster::membership::ClusterMembershipScope",
  "pub fn spark_core::cluster::membership::ClusterMembershipScope::entire_cluster() -> Self",
  "impl core::clone::Clone for spark_core::cluster::membership::ClusterMembershipScope",
  "pub fn spark_core::cluster::membership::ClusterMembershipScope::clone(&self) -> spark_core::cluster::membership::ClusterMembershipScope",
  "impl core::cmp::Eq for spark_core::cluster::membership::ClusterMembershipScope",
  "impl core::cmp::PartialEq for spark_core::cluster::membership::ClusterMembershipScope",
  "pub fn spark_core::cluster::membership::ClusterMembershipScope::eq(&self, other: &spark_core::cluster::membership::ClusterMembershipScope) -> bool",
  "impl core::fmt::Debug for spark_core::cluster::membership::ClusterMembershipScope",
  "pub fn spark_core::cluster::membership::ClusterMembershipScope::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::membership::ClusterMembershipScope",
  "impl core::marker::Freeze for spark_core::cluster::membership::ClusterMembershipScope",
  "impl core::marker::Send for spark_core::cluster::membership::ClusterMembershipScope",
  "impl core::marker::Sync for spark_core::cluster::membership::ClusterMembershipScope",
  "impl core::marker::Unpin for spark_core::cluster::membership::ClusterMembershipScope",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::membership::ClusterMembershipScope",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::membership::ClusterMembershipScope",
  "pub struct spark_core::cluster::membership::ClusterMembershipSnapshot",
  "pub spark_core::cluster::membership::ClusterMembershipSnapshot::epoch: spark_core::cluster::topology::ClusterEpoch",
  "pub spark_core::cluster::membership::ClusterMembershipSnapshot::generated_at_revision: spark_core::cluster::topology::ClusterRevision",
  "pub spark_core::cluster::membership::ClusterMembershipSnapshot::members: alloc::vec::Vec<spark_core::cluster::membership::ClusterNodeProfile>",
  "impl core::clone::Clone for spark_core::cluster::membership::ClusterMembershipSnapshot",
  "pub fn spark_core::cluster::membership::ClusterMembershipSnapshot::clone(&self) -> spark_core::cluster::membership::ClusterMembershipSnapshot",
  "impl core::cmp::Eq for spark_core::cluster::membership::ClusterMembershipSnapshot",
  "impl core::cmp::PartialEq for spark_core::cluster::membership::ClusterMembershipSnapshot",
  "pub fn spark_core::cluster::membership::ClusterMembershipSnapshot::eq(&self, other: &spark_core::cluster::membership::ClusterMembershipSnapshot) -> bool",
  "impl core::fmt::Debug for spark_core::cluster::membership::ClusterMembershipSnapshot",
  "pub fn spark_core::cluster::membership::ClusterMembershipSnapshot::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::membership::ClusterMembershipSnapshot",
  "impl core::marker::Freeze for spark_core::cluster::membership::ClusterMembershipSnapshot",
  "impl core::marker::Send for spark_core::cluster::membership::ClusterMembershipSnapshot",
  "impl core::marker::Sync for spark_core::cluster::membership::ClusterMembershipSnapshot",
  "impl core::marker::Unpin for spark_core::cluster::membership::ClusterMembershipSnapshot",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::membership::ClusterMembershipSnapshot",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::membership::ClusterMembershipSnapshot",
  "pub struct spark_core::cluster::membership::ClusterNodeProfile",
  "pub spark_core::cluster::membership::ClusterNodeProfile::endpoint: spark_core::transport::endpoint::Endpoint",
  "pub spark_core::cluster::membership::ClusterNodeProfile::metadata: alloc::collections::btree::map::BTreeMap<alloc::string::String, alloc::string::String>",
  "pub spark_core::cluster::membership::ClusterNodeProfile::node_id: spark_core::cluster::membership::NodeId",
  "pub spark_core::cluster::membership::ClusterNodeProfile::revision: spark_core::cluster::topology::ClusterRevision",
  "pub spark_core::cluster::membership::ClusterNodeProfile::roles: alloc::vec::Vec<spark_core::cluster::topology::RoleDescriptor>",
  "pub spark_core::cluster::membership::ClusterNodeProfile::state: spark_core::cluster::membership::ClusterNodeState",
  "impl core::clone::Clone for spark_core::cluster::membership::ClusterNodeProfile",
  "pub fn spark_core::cluster::membership::ClusterNodeProfile::clone(&self) -> spark_core::cluster::membership::ClusterNodeProfile",
  "impl core::cmp::Eq for spark_core::cluster::membership::ClusterNodeProfile",
  "impl core::cmp::PartialEq for spark_core::cluster::membership::ClusterNodeProfile",
  "pub fn spark_core::cluster::membership::ClusterNodeProfile::eq(&self, other: &spark_core::cluster::membership::ClusterNodeProfile) -> bool",
  "impl core::fmt::Debug for spark_core::cluster::membership::ClusterNodeProfile",
  "pub fn spark_core::cluster::membership::ClusterNodeProfile::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::membership::ClusterNodeProfile",
  "impl core::marker::Freeze for spark_core::cluster::membership::ClusterNodeProfile",
  "impl core::marker::Send for spark_core::cluster::membership::ClusterNodeProfile",
  "impl core::marker::Sync for spark_core::cluster::membership::ClusterNodeProfile",
  "impl core::marker::Unpin for spark_core::cluster::membership::ClusterNodeProfile",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::membership::ClusterNodeProfile",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::membership::ClusterNodeProfile",
  "pub trait spark_core::cluster::membership::ClusterMembership: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::cluster::membership::ClusterMembership::self_profile<'life0, 'async_trait>(&'life0 self) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<spark_core::cluster::membership::ClusterNodeProfile, spark_core::cluster::membership::ClusterError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait",
  "pub fn spark_core::cluster::membership::ClusterMembership::snapshot<'life0, 'async_trait>(&'life0 self, scope: spark_core::cluster::membership::ClusterMembershipScope) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<spark_core::cluster::membership::ClusterMembershipSnapshot, spark_core::cluster::membership::ClusterError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait",
  "pub fn spark_core::cluster::membership::ClusterMembership::subscribe(&self, scope: spark_core::cluster::membership::ClusterMembershipScope, resume_from: core::option::Option<spark_core::cluster::topology::ClusterRevision>, flow_control: spark_core::cluster::flow_control::SubscriptionFlowControl) -> spark_core::cluster::flow_control::SubscriptionStream<spark_core::cluster::membership::ClusterMembershipEvent>",
  "pub type spark_core::cluster::membership::ClusterError = spark_core::error::CoreError",
  "pub type spark_core::cluster::membership::NodeId = alloc::string::String",
  "pub mod spark_core::cluster::topology",
  "#[non_exhaustive] pub enum spark_core::cluster::topology::ClusterConsistencyLevel",
  "pub spark_core::cluster::topology::ClusterConsistencyLevel::BoundedStaleness",
  "pub spark_core::cluster::topology::ClusterConsistencyLevel::BoundedStaleness::max_staleness: core::time::Duration",
  "pub spark_core::cluster::topology::ClusterConsistencyLevel::Eventual",
  "pub spark_core::cluster::topology::ClusterConsistencyLevel::Linearizable",
  "pub spark_core::cluster::topology::ClusterConsistencyLevel::Sequential",
  "impl spark_core::cluster::topology::ClusterConsistencyLevel",
  "pub fn spark_core::cluster::topology::ClusterConsistencyLevel::max_staleness(&self) -> core::option::Option<core::time::Duration>",
  "impl core::clone::Clone for spark_core::cluster::topology::ClusterConsistencyLevel",
  "pub fn spark_core::cluster::topology::ClusterConsistencyLevel::clone(&self) -> spark_core::cluster::topology::ClusterConsistencyLevel",
  "impl core::cmp::Eq for spark_core::cluster::topology::ClusterConsistencyLevel",
  "impl core::cmp::PartialEq for spark_core::cluster::topology::ClusterConsistencyLevel",
  "pub fn spark_core::cluster::topology::ClusterConsistencyLevel::eq(&self, other: &spark_core::cluster::topology::ClusterConsistencyLevel) -> bool",
  "impl core::fmt::Debug for spark_core::cluster::topology::ClusterConsistencyLevel",
  "pub fn spark_core::cluster::topology::ClusterConsistencyLevel::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::cluster::topology::ClusterConsistencyLevel",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::topology::ClusterConsistencyLevel",
  "impl core::marker::Freeze for spark_core::cluster::topology::ClusterConsistencyLevel",
  "impl core::marker::Send for spark_core::cluster::topology::ClusterConsistencyLevel",
  "impl core::marker::Sync for spark_core::cluster::topology::ClusterConsistencyLevel",
  "impl core::marker::Unpin for spark_core::cluster::topology::ClusterConsistencyLevel",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::topology::ClusterConsistencyLevel",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::topology::ClusterConsistencyLevel",
  "pub struct spark_core::cluster::topology::ClusterEpoch(pub u64)",
  "impl spark_core::cluster::topology::ClusterEpoch",
  "pub const fn spark_core::cluster::topology::ClusterEpoch::new(value: u64) -> Self",
  "pub const fn spark_core::cluster::topology::ClusterEpoch::value(self) -> u64",
  "impl core::clone::Clone for spark_core::cluster::topology::ClusterEpoch",
  "pub fn spark_core::cluster::topology::ClusterEpoch::clone(&self) -> spark_core::cluster::topology::ClusterEpoch",
  "impl core::cmp::Eq for spark_core::cluster::topology::ClusterEpoch",
  "impl core::cmp::Ord for spark_core::cluster::topology::ClusterEpoch",
  "pub fn spark_core::cluster::topology::ClusterEpoch::cmp(&self, other: &spark_core::cluster::topology::ClusterEpoch) -> core::cmp::Ordering",
  "impl core::cmp::PartialEq for spark_core::cluster::topology::ClusterEpoch",
  "pub fn spark_core::cluster::topology::ClusterEpoch::eq(&self, other: &spark_core::cluster::topology::ClusterEpoch) -> bool",
  "impl core::cmp::PartialOrd for spark_core::cluster::topology::ClusterEpoch",
  "pub fn spark_core::cluster::topology::ClusterEpoch::partial_cmp(&self, other: &spark_core::cluster::topology::ClusterEpoch) -> core::option::Option<core::cmp::Ordering>",
  "impl core::fmt::Debug for spark_core::cluster::topology::ClusterEpoch",
  "pub fn spark_core::cluster::topology::ClusterEpoch::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::cluster::topology::ClusterEpoch",
  "pub fn spark_core::cluster::topology::ClusterEpoch::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::Copy for spark_core::cluster::topology::ClusterEpoch",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::topology::ClusterEpoch",
  "impl core::marker::Freeze for spark_core::cluster::topology::ClusterEpoch",
  "impl core::marker::Send for spark_core::cluster::topology::ClusterEpoch",
  "impl core::marker::Sync for spark_core::cluster::topology::ClusterEpoch",
  "impl core::marker::Unpin for spark_core::cluster::topology::ClusterEpoch",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::topology::ClusterEpoch",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::topology::ClusterEpoch",
  "pub struct spark_core::cluster::topology::ClusterRevision",
  "pub spark_core::cluster::topology::ClusterRevision::counter: u64",
  "pub spark_core::cluster::topology::ClusterRevision::epoch: spark_core::cluster::topology::ClusterEpoch",
  "impl spark_core::cluster::topology::ClusterRevision",
  "pub const fn spark_core::cluster::topology::ClusterRevision::new(epoch: spark_core::cluster::topology::ClusterEpoch, counter: u64) -> Self",
  "pub const fn spark_core::cluster::topology::ClusterRevision::next(self) -> Self",
  "impl core::clone::Clone for spark_core::cluster::topology::ClusterRevision",
  "pub fn spark_core::cluster::topology::ClusterRevision::clone(&self) -> spark_core::cluster::topology::ClusterRevision",
  "impl core::cmp::Eq for spark_core::cluster::topology::ClusterRevision",
  "impl core::cmp::Ord for spark_core::cluster::topology::ClusterRevision",
  "pub fn spark_core::cluster::topology::ClusterRevision::cmp(&self, other: &spark_core::cluster::topology::ClusterRevision) -> core::cmp::Ordering",
  "impl core::cmp::PartialEq for spark_core::cluster::topology::ClusterRevision",
  "pub fn spark_core::cluster::topology::ClusterRevision::eq(&self, other: &spark_core::cluster::topology::ClusterRevision) -> bool",
  "impl core::cmp::PartialOrd for spark_core::cluster::topology::ClusterRevision",
  "pub fn spark_core::cluster::topology::ClusterRevision::partial_cmp(&self, other: &spark_core::cluster::topology::ClusterRevision) -> core::option::Option<core::cmp::Ordering>",
  "impl core::fmt::Debug for spark_core::cluster::topology::ClusterRevision",
  "pub fn spark_core::cluster::topology::ClusterRevision::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::cluster::topology::ClusterRevision",
  "pub fn spark_core::cluster::topology::ClusterRevision::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::Copy for spark_core::cluster::topology::ClusterRevision",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::topology::ClusterRevision",
  "impl core::marker::Freeze for spark_core::cluster::topology::ClusterRevision",
  "impl core::marker::Send for spark_core::cluster::topology::ClusterRevision",
  "impl core::marker::Sync for spark_core::cluster::topology::ClusterRevision",
  "impl core::marker::Unpin for spark_core::cluster::topology::ClusterRevision",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::topology::ClusterRevision",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::topology::ClusterRevision",
  "pub struct spark_core::cluster::topology::RoleDescriptor",
  "pub spark_core::cluster::topology::RoleDescriptor::attributes: alloc::vec::Vec<alloc::string::String>",
  "pub spark_core::cluster::topology::RoleDescriptor::name: alloc::string::String",
  "impl spark_core::cluster::topology::RoleDescriptor",
  "pub fn spark_core::cluster::topology::RoleDescriptor::new(name: impl core::convert::Into<alloc::string::String>) -> Self",
  "pub fn spark_core::cluster::topology::RoleDescriptor::push_attribute(&mut self, value: impl core::convert::Into<alloc::string::String>)",
  "pub fn spark_core::cluster::topology::RoleDescriptor::with_attributes(name: impl core::convert::Into<alloc::string::String>, attributes: alloc::vec::Vec<alloc::string::String>) -> Self",
  "impl core::clone::Clone for spark_core::cluster::topology::RoleDescriptor",
  "pub fn spark_core::cluster::topology::RoleDescriptor::clone(&self) -> spark_core::cluster::topology::RoleDescriptor",
  "impl core::cmp::Eq for spark_core::cluster::topology::RoleDescriptor",
  "impl core::cmp::Ord for spark_core::cluster::topology::RoleDescriptor",
  "pub fn spark_core::cluster::topology::RoleDescriptor::cmp(&self, other: &spark_core::cluster::topology::RoleDescriptor) -> core::cmp::Ordering",
  "impl core::cmp::PartialEq for spark_core::cluster::topology::RoleDescriptor",
  "pub fn spark_core::cluster::topology::RoleDescriptor::eq(&self, other: &spark_core::cluster::topology::RoleDescriptor) -> bool",
  "impl core::cmp::PartialOrd for spark_core::cluster::topology::RoleDescriptor",
  "pub fn spark_core::cluster::topology::RoleDescriptor::partial_cmp(&self, other: &spark_core::cluster::topology::RoleDescriptor) -> core::option::Option<core::cmp::Ordering>",
  "impl core::fmt::Debug for spark_core::cluster::topology::RoleDescriptor",
  "pub fn spark_core::cluster::topology::RoleDescriptor::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::topology::RoleDescriptor",
  "impl core::marker::Freeze for spark_core::cluster::topology::RoleDescriptor",
  "impl core::marker::Send for spark_core::cluster::topology::RoleDescriptor",
  "impl core::marker::Sync for spark_core::cluster::topology::RoleDescriptor",
  "impl core::marker::Unpin for spark_core::cluster::topology::RoleDescriptor",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::topology::RoleDescriptor",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::topology::RoleDescriptor",
  "#[non_exhaustive] pub enum spark_core::cluster::ClusterConsistencyLevel",
  "pub spark_core::cluster::ClusterConsistencyLevel::BoundedStaleness",
  "pub spark_core::cluster::ClusterConsistencyLevel::BoundedStaleness::max_staleness: core::time::Duration",
  "pub spark_core::cluster::ClusterConsistencyLevel::Eventual",
  "pub spark_core::cluster::ClusterConsistencyLevel::Linearizable",
  "pub spark_core::cluster::ClusterConsistencyLevel::Sequential",
  "impl spark_core::cluster::topology::ClusterConsistencyLevel",
  "pub fn spark_core::cluster::topology::ClusterConsistencyLevel::max_staleness(&self) -> core::option::Option<core::time::Duration>",
  "impl core::clone::Clone for spark_core::cluster::topology::ClusterConsistencyLevel",
  "pub fn spark_core::cluster::topology::ClusterConsistencyLevel::clone(&self) -> spark_core::cluster::topology::ClusterConsistencyLevel",
  "impl core::cmp::Eq for spark_core::cluster::topology::ClusterConsistencyLevel",
  "impl core::cmp::PartialEq for spark_core::cluster::topology::ClusterConsistencyLevel",
  "pub fn spark_core::cluster::topology::ClusterConsistencyLevel::eq(&self, other: &spark_core::cluster::topology::ClusterConsistencyLevel) -> bool",
  "impl core::fmt::Debug for spark_core::cluster::topology::ClusterConsistencyLevel",
  "pub fn spark_core::cluster::topology::ClusterConsistencyLevel::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::cluster::topology::ClusterConsistencyLevel",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::topology::ClusterConsistencyLevel",
  "impl core::marker::Freeze for spark_core::cluster::topology::ClusterConsistencyLevel",
  "impl core::marker::Send for spark_core::cluster::topology::ClusterConsistencyLevel",
  "impl core::marker::Sync for spark_core::cluster::topology::ClusterConsistencyLevel",
  "impl core::marker::Unpin for spark_core::cluster::topology::ClusterConsistencyLevel",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::topology::ClusterConsistencyLevel",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::topology::ClusterConsistencyLevel",
  "#[non_exhaustive] pub enum spark_core::cluster::ClusterMembershipEvent",
  "pub spark_core::cluster::ClusterMembershipEvent::MemberJoined",
  "pub spark_core::cluster::ClusterMembershipEvent::MemberJoined::profile: spark_core::cluster::membership::ClusterNodeProfile",
  "pub spark_core::cluster::ClusterMembershipEvent::MemberJoined::revision: spark_core::cluster::topology::ClusterRevision",
  "pub spark_core::cluster::ClusterMembershipEvent::MemberRetired",
  "pub spark_core::cluster::ClusterMembershipEvent::MemberRetired::node_id: spark_core::cluster::membership::NodeId",
  "pub spark_core::cluster::ClusterMembershipEvent::MemberRetired::revision: spark_core::cluster::topology::ClusterRevision",
  "pub spark_core::cluster::ClusterMembershipEvent::MemberStateChanged",
  "pub spark_core::cluster::ClusterMembershipEvent::MemberStateChanged::new_state: spark_core::cluster::membership::ClusterNodeState",
  "pub spark_core::cluster::ClusterMembershipEvent::MemberStateChanged::node_id: spark_core::cluster::membership::NodeId",
  "pub spark_core::cluster::ClusterMembershipEvent::MemberStateChanged::revision: spark_core::cluster::topology::ClusterRevision",
  "pub spark_core::cluster::ClusterMembershipEvent::MemberUnreachable",
  "pub spark_core::cluster::ClusterMembershipEvent::MemberUnreachable::node_id: spark_core::cluster::membership::NodeId",
  "pub spark_core::cluster::ClusterMembershipEvent::MemberUnreachable::revision: spark_core::cluster::topology::ClusterRevision",
  "pub spark_core::cluster::ClusterMembershipEvent::MemberUpdated",
  "pub spark_core::cluster::ClusterMembershipEvent::MemberUpdated::profile: spark_core::cluster::membership::ClusterNodeProfile",
  "pub spark_core::cluster::ClusterMembershipEvent::MemberUpdated::revision: spark_core::cluster::topology::ClusterRevision",
  "pub spark_core::cluster::ClusterMembershipEvent::SnapshotApplied(spark_core::cluster::membership::ClusterMembershipSnapshot)",
  "impl core::clone::Clone for spark_core::cluster::membership::ClusterMembershipEvent",
  "pub fn spark_core::cluster::membership::ClusterMembershipEvent::clone(&self) -> spark_core::cluster::membership::ClusterMembershipEvent",
  "impl core::fmt::Debug for spark_core::cluster::membership::ClusterMembershipEvent",
  "pub fn spark_core::cluster::membership::ClusterMembershipEvent::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::cluster::membership::ClusterMembershipEvent",
  "impl core::marker::Send for spark_core::cluster::membership::ClusterMembershipEvent",
  "impl core::marker::Sync for spark_core::cluster::membership::ClusterMembershipEvent",
  "impl core::marker::Unpin for spark_core::cluster::membership::ClusterMembershipEvent",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::membership::ClusterMembershipEvent",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::membership::ClusterMembershipEvent",
  "#[non_exhaustive] pub enum spark_core::cluster::ClusterNodeState",
  "pub spark_core::cluster::ClusterNodeState::Active",
  "pub spark_core::cluster::ClusterNodeState::Degraded",
  "pub spark_core::cluster::ClusterNodeState::Retiring",
  "pub spark_core::cluster::ClusterNodeState::Unreachable",
  "impl core::clone::Clone for spark_core::cluster::membership::ClusterNodeState",
  "pub fn spark_core::cluster::membership::ClusterNodeState::clone(&self) -> spark_core::cluster::membership::ClusterNodeState",
  "impl core::cmp::Eq for spark_core::cluster::membership::ClusterNodeState",
  "impl core::cmp::PartialEq for spark_core::cluster::membership::ClusterNodeState",
  "pub fn spark_core::cluster::membership::ClusterNodeState::eq(&self, other: &spark_core::cluster::membership::ClusterNodeState) -> bool",
  "impl core::fmt::Debug for spark_core::cluster::membership::ClusterNodeState",
  "pub fn spark_core::cluster::membership::ClusterNodeState::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::cluster::membership::ClusterNodeState",
  "pub fn spark_core::cluster::membership::ClusterNodeState::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::Copy for spark_core::cluster::membership::ClusterNodeState",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::membership::ClusterNodeState",
  "impl core::marker::Freeze for spark_core::cluster::membership::ClusterNodeState",
  "impl core::marker::Send for spark_core::cluster::membership::ClusterNodeState",
  "impl core::marker::Sync for spark_core::cluster::membership::ClusterNodeState",
  "impl core::marker::Unpin for spark_core::cluster::membership::ClusterNodeState",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::membership::ClusterNodeState",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::membership::ClusterNodeState",
  "#[non_exhaustive] pub enum spark_core::cluster::ClusterScopeSelector",
  "pub spark_core::cluster::ClusterScopeSelector::ByRole(spark_core::cluster::topology::RoleDescriptor)",
  "pub spark_core::cluster::ClusterScopeSelector::ByShard(alloc::string::String)",
  "pub spark_core::cluster::ClusterScopeSelector::Custom(alloc::string::String)",
  "pub spark_core::cluster::ClusterScopeSelector::EntireCluster",
  "impl core::clone::Clone for spark_core::cluster::membership::ClusterScopeSelector",
  "pub fn spark_core::cluster::membership::ClusterScopeSelector::clone(&self) -> spark_core::cluster::membership::ClusterScopeSelector",
  "impl core::cmp::Eq for spark_core::cluster::membership::ClusterScopeSelector",
  "impl core::cmp::PartialEq for spark_core::cluster::membership::ClusterScopeSelector",
  "pub fn spark_core::cluster::membership::ClusterScopeSelector::eq(&self, other: &spark_core::cluster::membership::ClusterScopeSelector) -> bool",
  "impl core::fmt::Debug for spark_core::cluster::membership::ClusterScopeSelector",
  "pub fn spark_core::cluster::membership::ClusterScopeSelector::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::membership::ClusterScopeSelector",
  "impl core::marker::Freeze for spark_core::cluster::membership::ClusterScopeSelector",
  "impl core::marker::Send for spark_core::cluster::membership::ClusterScopeSelector",
  "impl core::marker::Sync for spark_core::cluster::membership::ClusterScopeSelector",
  "impl core::marker::Unpin for spark_core::cluster::membership::ClusterScopeSelector",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::membership::ClusterScopeSelector",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::membership::ClusterScopeSelector",
  "#[non_exhaustive] pub enum spark_core::cluster::DiscoveryEvent",
  "pub spark_core::cluster::DiscoveryEvent::InstanceAdded",
  "pub spark_core::cluster::DiscoveryEvent::InstanceAdded::instance: spark_core::cluster::discovery::ServiceInstance",
  "pub spark_core::cluster::DiscoveryEvent::InstanceAdded::revision: spark_core::cluster::topology::ClusterRevision",
  "pub spark_core::cluster::DiscoveryEvent::InstanceRemoved",
  "pub spark_core::cluster::DiscoveryEvent::InstanceRemoved::endpoint: spark_core::transport::endpoint::Endpoint",
  "pub spark_core::cluster::DiscoveryEvent::InstanceRemoved::revision: spark_core::cluster::topology::ClusterRevision",
  "pub spark_core::cluster::DiscoveryEvent::InstanceUpdated",
  "pub spark_core::cluster::DiscoveryEvent::InstanceUpdated::instance: spark_core::cluster::discovery::ServiceInstance",
  "pub spark_core::cluster::DiscoveryEvent::InstanceUpdated::revision: spark_core::cluster::topology::ClusterRevision",
  "pub spark_core::cluster::DiscoveryEvent::SnapshotApplied(spark_core::cluster::discovery::DiscoverySnapshot)",
  "pub spark_core::cluster::DiscoveryEvent::TopologyHintUpdated",
  "pub spark_core::cluster::DiscoveryEvent::TopologyHintUpdated::hints: alloc::vec::Vec<alloc::string::String>",
  "pub spark_core::cluster::DiscoveryEvent::TopologyHintUpdated::revision: spark_core::cluster::topology::ClusterRevision",
  "impl core::clone::Clone for spark_core::cluster::discovery::DiscoveryEvent",
  "pub fn spark_core::cluster::discovery::DiscoveryEvent::clone(&self) -> spark_core::cluster::discovery::DiscoveryEvent",
  "impl core::fmt::Debug for spark_core::cluster::discovery::DiscoveryEvent",
  "pub fn spark_core::cluster::discovery::DiscoveryEvent::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::cluster::discovery::DiscoveryEvent",
  "impl core::marker::Send for spark_core::cluster::discovery::DiscoveryEvent",
  "impl core::marker::Sync for spark_core::cluster::discovery::DiscoveryEvent",
  "impl core::marker::Unpin for spark_core::cluster::discovery::DiscoveryEvent",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::discovery::DiscoveryEvent",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::discovery::DiscoveryEvent",
  "#[non_exhaustive] pub enum spark_core::cluster::FlowControlMode",
  "pub spark_core::cluster::FlowControlMode::Bounded",
  "pub spark_core::cluster::FlowControlMode::Bounded::capacity: core::num::nonzero::NonZeroUsize",
  "pub spark_core::cluster::FlowControlMode::Bounded::overflow: spark_core::cluster::flow_control::OverflowPolicy",
  "pub spark_core::cluster::FlowControlMode::Unbounded",
  "impl core::clone::Clone for spark_core::cluster::flow_control::FlowControlMode",
  "pub fn spark_core::cluster::flow_control::FlowControlMode::clone(&self) -> spark_core::cluster::flow_control::FlowControlMode",
  "impl core::cmp::Eq for spark_core::cluster::flow_control::FlowControlMode",
  "impl core::cmp::PartialEq for spark_core::cluster::flow_control::FlowControlMode",
  "pub fn spark_core::cluster::flow_control::FlowControlMode::eq(&self, other: &spark_core::cluster::flow_control::FlowControlMode) -> bool",
  "impl core::fmt::Debug for spark_core::cluster::flow_control::FlowControlMode",
  "pub fn spark_core::cluster::flow_control::FlowControlMode::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::cluster::flow_control::FlowControlMode",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::flow_control::FlowControlMode",
  "impl core::marker::Freeze for spark_core::cluster::flow_control::FlowControlMode",
  "impl core::marker::Send for spark_core::cluster::flow_control::FlowControlMode",
  "impl core::marker::Sync for spark_core::cluster::flow_control::FlowControlMode",
  "impl core::marker::Unpin for spark_core::cluster::flow_control::FlowControlMode",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::flow_control::FlowControlMode",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::flow_control::FlowControlMode",
  "#[non_exhaustive] pub enum spark_core::cluster::OverflowPolicy",
  "pub spark_core::cluster::OverflowPolicy::DropNewest",
  "pub spark_core::cluster::OverflowPolicy::DropOldest",
  "pub spark_core::cluster::OverflowPolicy::FailStream",
  "impl core::clone::Clone for spark_core::cluster::flow_control::OverflowPolicy",
  "pub fn spark_core::cluster::flow_control::OverflowPolicy::clone(&self) -> spark_core::cluster::flow_control::OverflowPolicy",
  "impl core::cmp::Eq for spark_core::cluster::flow_control::OverflowPolicy",
  "impl core::cmp::PartialEq for spark_core::cluster::flow_control::OverflowPolicy",
  "pub fn spark_core::cluster::flow_control::OverflowPolicy::eq(&self, other: &spark_core::cluster::flow_control::OverflowPolicy) -> bool",
  "impl core::fmt::Debug for spark_core::cluster::flow_control::OverflowPolicy",
  "pub fn spark_core::cluster::flow_control::OverflowPolicy::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::cluster::flow_control::OverflowPolicy",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::flow_control::OverflowPolicy",
  "impl core::marker::Freeze for spark_core::cluster::flow_control::OverflowPolicy",
  "impl core::marker::Send for spark_core::cluster::flow_control::OverflowPolicy",
  "impl core::marker::Sync for spark_core::cluster::flow_control::OverflowPolicy",
  "impl core::marker::Unpin for spark_core::cluster::flow_control::OverflowPolicy",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::flow_control::OverflowPolicy",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::flow_control::OverflowPolicy",
  "pub struct spark_core::cluster::ClusterEpoch(pub u64)",
  "impl spark_core::cluster::topology::ClusterEpoch",
  "pub const fn spark_core::cluster::topology::ClusterEpoch::new(value: u64) -> Self",
  "pub const fn spark_core::cluster::topology::ClusterEpoch::value(self) -> u64",
  "impl core::clone::Clone for spark_core::cluster::topology::ClusterEpoch",
  "pub fn spark_core::cluster::topology::ClusterEpoch::clone(&self) -> spark_core::cluster::topology::ClusterEpoch",
  "impl core::cmp::Eq for spark_core::cluster::topology::ClusterEpoch",
  "impl core::cmp::Ord for spark_core::cluster::topology::ClusterEpoch",
  "pub fn spark_core::cluster::topology::ClusterEpoch::cmp(&self, other: &spark_core::cluster::topology::ClusterEpoch) -> core::cmp::Ordering",
  "impl core::cmp::PartialEq for spark_core::cluster::topology::ClusterEpoch",
  "pub fn spark_core::cluster::topology::ClusterEpoch::eq(&self, other: &spark_core::cluster::topology::ClusterEpoch) -> bool",
  "impl core::cmp::PartialOrd for spark_core::cluster::topology::ClusterEpoch",
  "pub fn spark_core::cluster::topology::ClusterEpoch::partial_cmp(&self, other: &spark_core::cluster::topology::ClusterEpoch) -> core::option::Option<core::cmp::Ordering>",
  "impl core::fmt::Debug for spark_core::cluster::topology::ClusterEpoch",
  "pub fn spark_core::cluster::topology::ClusterEpoch::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::cluster::topology::ClusterEpoch",
  "pub fn spark_core::cluster::topology::ClusterEpoch::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::Copy for spark_core::cluster::topology::ClusterEpoch",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::topology::ClusterEpoch",
  "impl core::marker::Freeze for spark_core::cluster::topology::ClusterEpoch",
  "impl core::marker::Send for spark_core::cluster::topology::ClusterEpoch",
  "impl core::marker::Sync for spark_core::cluster::topology::ClusterEpoch",
  "impl core::marker::Unpin for spark_core::cluster::topology::ClusterEpoch",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::topology::ClusterEpoch",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::topology::ClusterEpoch",
  "pub struct spark_core::cluster::ClusterMembershipScope",
  "pub spark_core::cluster::ClusterMembershipScope::consistency: spark_core::cluster::topology::ClusterConsistencyLevel",
  "pub spark_core::cluster::ClusterMembershipScope::selector: spark_core::cluster::membership::ClusterScopeSelector",
  "impl spark_core::cluster::membership::ClusterMembershipScope",
  "pub fn spark_core::cluster::membership::ClusterMembershipScope::entire_cluster() -> Self",
  "impl core::clone::Clone for spark_core::cluster::membership::ClusterMembershipScope",
  "pub fn spark_core::cluster::membership::ClusterMembershipScope::clone(&self) -> spark_core::cluster::membership::ClusterMembershipScope",
  "impl core::cmp::Eq for spark_core::cluster::membership::ClusterMembershipScope",
  "impl core::cmp::PartialEq for spark_core::cluster::membership::ClusterMembershipScope",
  "pub fn spark_core::cluster::membership::ClusterMembershipScope::eq(&self, other: &spark_core::cluster::membership::ClusterMembershipScope) -> bool",
  "impl core::fmt::Debug for spark_core::cluster::membership::ClusterMembershipScope",
  "pub fn spark_core::cluster::membership::ClusterMembershipScope::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::membership::ClusterMembershipScope",
  "impl core::marker::Freeze for spark_core::cluster::membership::ClusterMembershipScope",
  "impl core::marker::Send for spark_core::cluster::membership::ClusterMembershipScope",
  "impl core::marker::Sync for spark_core::cluster::membership::ClusterMembershipScope",
  "impl core::marker::Unpin for spark_core::cluster::membership::ClusterMembershipScope",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::membership::ClusterMembershipScope",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::membership::ClusterMembershipScope",
  "pub struct spark_core::cluster::ClusterMembershipSnapshot",
  "pub spark_core::cluster::ClusterMembershipSnapshot::epoch: spark_core::cluster::topology::ClusterEpoch",
  "pub spark_core::cluster::ClusterMembershipSnapshot::generated_at_revision: spark_core::cluster::topology::ClusterRevision",
  "pub spark_core::cluster::ClusterMembershipSnapshot::members: alloc::vec::Vec<spark_core::cluster::membership::ClusterNodeProfile>",
  "impl core::clone::Clone for spark_core::cluster::membership::ClusterMembershipSnapshot",
  "pub fn spark_core::cluster::membership::ClusterMembershipSnapshot::clone(&self) -> spark_core::cluster::membership::ClusterMembershipSnapshot",
  "impl core::cmp::Eq for spark_core::cluster::membership::ClusterMembershipSnapshot",
  "impl core::cmp::PartialEq for spark_core::cluster::membership::ClusterMembershipSnapshot",
  "pub fn spark_core::cluster::membership::ClusterMembershipSnapshot::eq(&self, other: &spark_core::cluster::membership::ClusterMembershipSnapshot) -> bool",
  "impl core::fmt::Debug for spark_core::cluster::membership::ClusterMembershipSnapshot",
  "pub fn spark_core::cluster::membership::ClusterMembershipSnapshot::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::membership::ClusterMembershipSnapshot",
  "impl core::marker::Freeze for spark_core::cluster::membership::ClusterMembershipSnapshot",
  "impl core::marker::Send for spark_core::cluster::membership::ClusterMembershipSnapshot",
  "impl core::marker::Sync for spark_core::cluster::membership::ClusterMembershipSnapshot",
  "impl core::marker::Unpin for spark_core::cluster::membership::ClusterMembershipSnapshot",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::membership::ClusterMembershipSnapshot",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::membership::ClusterMembershipSnapshot",
  "pub struct spark_core::cluster::ClusterNodeProfile",
  "pub spark_core::cluster::ClusterNodeProfile::endpoint: spark_core::transport::endpoint::Endpoint",
  "pub spark_core::cluster::ClusterNodeProfile::metadata: alloc::collections::btree::map::BTreeMap<alloc::string::String, alloc::string::String>",
  "pub spark_core::cluster::ClusterNodeProfile::node_id: spark_core::cluster::membership::NodeId",
  "pub spark_core::cluster::ClusterNodeProfile::revision: spark_core::cluster::topology::ClusterRevision",
  "pub spark_core::cluster::ClusterNodeProfile::roles: alloc::vec::Vec<spark_core::cluster::topology::RoleDescriptor>",
  "pub spark_core::cluster::ClusterNodeProfile::state: spark_core::cluster::membership::ClusterNodeState",
  "impl core::clone::Clone for spark_core::cluster::membership::ClusterNodeProfile",
  "pub fn spark_core::cluster::membership::ClusterNodeProfile::clone(&self) -> spark_core::cluster::membership::ClusterNodeProfile",
  "impl core::cmp::Eq for spark_core::cluster::membership::ClusterNodeProfile",
  "impl core::cmp::PartialEq for spark_core::cluster::membership::ClusterNodeProfile",
  "pub fn spark_core::cluster::membership::ClusterNodeProfile::eq(&self, other: &spark_core::cluster::membership::ClusterNodeProfile) -> bool",
  "impl core::fmt::Debug for spark_core::cluster::membership::ClusterNodeProfile",
  "pub fn spark_core::cluster::membership::ClusterNodeProfile::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::membership::ClusterNodeProfile",
  "impl core::marker::Freeze for spark_core::cluster::membership::ClusterNodeProfile",
  "impl core::marker::Send for spark_core::cluster::membership::ClusterNodeProfile",
  "impl core::marker::Sync for spark_core::cluster::membership::ClusterNodeProfile",
  "impl core::marker::Unpin for spark_core::cluster::membership::ClusterNodeProfile",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::membership::ClusterNodeProfile",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::membership::ClusterNodeProfile",
  "pub struct spark_core::cluster::ClusterRevision",
  "pub spark_core::cluster::ClusterRevision::counter: u64",
  "pub spark_core::cluster::ClusterRevision::epoch: spark_core::cluster::topology::ClusterEpoch",
  "impl spark_core::cluster::topology::ClusterRevision",
  "pub const fn spark_core::cluster::topology::ClusterRevision::new(epoch: spark_core::cluster::topology::ClusterEpoch, counter: u64) -> Self",
  "pub const fn spark_core::cluster::topology::ClusterRevision::next(self) -> Self",
  "impl core::clone::Clone for spark_core::cluster::topology::ClusterRevision",
  "pub fn spark_core::cluster::topology::ClusterRevision::clone(&self) -> spark_core::cluster::topology::ClusterRevision",
  "impl core::cmp::Eq for spark_core::cluster::topology::ClusterRevision",
  "impl core::cmp::Ord for spark_core::cluster::topology::ClusterRevision",
  "pub fn spark_core::cluster::topology::ClusterRevision::cmp(&self, other: &spark_core::cluster::topology::ClusterRevision) -> core::cmp::Ordering",
  "impl core::cmp::PartialEq for spark_core::cluster::topology::ClusterRevision",
  "pub fn spark_core::cluster::topology::ClusterRevision::eq(&self, other: &spark_core::cluster::topology::ClusterRevision) -> bool",
  "impl core::cmp::PartialOrd for spark_core::cluster::topology::ClusterRevision",
  "pub fn spark_core::cluster::topology::ClusterRevision::partial_cmp(&self, other: &spark_core::cluster::topology::ClusterRevision) -> core::option::Option<core::cmp::Ordering>",
  "impl core::fmt::Debug for spark_core::cluster::topology::ClusterRevision",
  "pub fn spark_core::cluster::topology::ClusterRevision::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::cluster::topology::ClusterRevision",
  "pub fn spark_core::cluster::topology::ClusterRevision::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::Copy for spark_core::cluster::topology::ClusterRevision",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::topology::ClusterRevision",
  "impl core::marker::Freeze for spark_core::cluster::topology::ClusterRevision",
  "impl core::marker::Send for spark_core::cluster::topology::ClusterRevision",
  "impl core::marker::Sync for spark_core::cluster::topology::ClusterRevision",
  "impl core::marker::Unpin for spark_core::cluster::topology::ClusterRevision",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::topology::ClusterRevision",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::topology::ClusterRevision",
  "pub struct spark_core::cluster::DiscoverySnapshot",
  "pub spark_core::cluster::DiscoverySnapshot::instances: alloc::vec::Vec<spark_core::cluster::discovery::ServiceInstance>",
  "pub spark_core::cluster::DiscoverySnapshot::revision: spark_core::cluster::topology::ClusterRevision",
  "pub spark_core::cluster::DiscoverySnapshot::service: spark_core::cluster::discovery::ServiceName",
  "impl core::clone::Clone for spark_core::cluster::discovery::DiscoverySnapshot",
  "pub fn spark_core::cluster::discovery::DiscoverySnapshot::clone(&self) -> spark_core::cluster::discovery::DiscoverySnapshot",
  "impl core::cmp::Eq for spark_core::cluster::discovery::DiscoverySnapshot",
  "impl core::cmp::PartialEq for spark_core::cluster::discovery::DiscoverySnapshot",
  "pub fn spark_core::cluster::discovery::DiscoverySnapshot::eq(&self, other: &spark_core::cluster::discovery::DiscoverySnapshot) -> bool",
  "impl core::fmt::Debug for spark_core::cluster::discovery::DiscoverySnapshot",
  "pub fn spark_core::cluster::discovery::DiscoverySnapshot::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::discovery::DiscoverySnapshot",
  "impl core::marker::Freeze for spark_core::cluster::discovery::DiscoverySnapshot",
  "impl core::marker::Send for spark_core::cluster::discovery::DiscoverySnapshot",
  "impl core::marker::Sync for spark_core::cluster::discovery::DiscoverySnapshot",
  "impl core::marker::Unpin for spark_core::cluster::discovery::DiscoverySnapshot",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::discovery::DiscoverySnapshot",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::discovery::DiscoverySnapshot",
  "pub struct spark_core::cluster::RoleDescriptor",
  "pub spark_core::cluster::RoleDescriptor::attributes: alloc::vec::Vec<alloc::string::String>",
  "pub spark_core::cluster::RoleDescriptor::name: alloc::string::String",
  "impl spark_core::cluster::topology::RoleDescriptor",
  "pub fn spark_core::cluster::topology::RoleDescriptor::new(name: impl core::convert::Into<alloc::string::String>) -> Self",
  "pub fn spark_core::cluster::topology::RoleDescriptor::push_attribute(&mut self, value: impl core::convert::Into<alloc::string::String>)",
  "pub fn spark_core::cluster::topology::RoleDescriptor::with_attributes(name: impl core::convert::Into<alloc::string::String>, attributes: alloc::vec::Vec<alloc::string::String>) -> Self",
  "impl core::clone::Clone for spark_core::cluster::topology::RoleDescriptor",
  "pub fn spark_core::cluster::topology::RoleDescriptor::clone(&self) -> spark_core::cluster::topology::RoleDescriptor",
  "impl core::cmp::Eq for spark_core::cluster::topology::RoleDescriptor",
  "impl core::cmp::Ord for spark_core::cluster::topology::RoleDescriptor",
  "pub fn spark_core::cluster::topology::RoleDescriptor::cmp(&self, other: &spark_core::cluster::topology::RoleDescriptor) -> core::cmp::Ordering",
  "impl core::cmp::PartialEq for spark_core::cluster::topology::RoleDescriptor",
  "pub fn spark_core::cluster::topology::RoleDescriptor::eq(&self, other: &spark_core::cluster::topology::RoleDescriptor) -> bool",
  "impl core::cmp::PartialOrd for spark_core::cluster::topology::RoleDescriptor",
  "pub fn spark_core::cluster::topology::RoleDescriptor::partial_cmp(&self, other: &spark_core::cluster::topology::RoleDescriptor) -> core::option::Option<core::cmp::Ordering>",
  "impl core::fmt::Debug for spark_core::cluster::topology::RoleDescriptor",
  "pub fn spark_core::cluster::topology::RoleDescriptor::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::topology::RoleDescriptor",
  "impl core::marker::Freeze for spark_core::cluster::topology::RoleDescriptor",
  "impl core::marker::Send for spark_core::cluster::topology::RoleDescriptor",
  "impl core::marker::Sync for spark_core::cluster::topology::RoleDescriptor",
  "impl core::marker::Unpin for spark_core::cluster::topology::RoleDescriptor",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::topology::RoleDescriptor",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::topology::RoleDescriptor",
  "pub struct spark_core::cluster::ServiceInstance",
  "pub spark_core::cluster::ServiceInstance::endpoint: spark_core::transport::endpoint::Endpoint",
  "pub spark_core::cluster::ServiceInstance::hints: alloc::vec::Vec<alloc::string::String>",
  "pub spark_core::cluster::ServiceInstance::metadata: alloc::collections::btree::map::BTreeMap<alloc::string::String, alloc::string::String>",
  "pub spark_core::cluster::ServiceInstance::revision: spark_core::cluster::topology::ClusterRevision",
  "pub spark_core::cluster::ServiceInstance::service: spark_core::cluster::discovery::ServiceName",
  "impl core::clone::Clone for spark_core::cluster::discovery::ServiceInstance",
  "pub fn spark_core::cluster::discovery::ServiceInstance::clone(&self) -> spark_core::cluster::discovery::ServiceInstance",
  "impl core::cmp::Eq for spark_core::cluster::discovery::ServiceInstance",
  "impl core::cmp::PartialEq for spark_core::cluster::discovery::ServiceInstance",
  "pub fn spark_core::cluster::discovery::ServiceInstance::eq(&self, other: &spark_core::cluster::discovery::ServiceInstance) -> bool",
  "impl core::fmt::Debug for spark_core::cluster::discovery::ServiceInstance",
  "pub fn spark_core::cluster::discovery::ServiceInstance::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::discovery::ServiceInstance",
  "impl core::marker::Freeze for spark_core::cluster::discovery::ServiceInstance",
  "impl core::marker::Send for spark_core::cluster::discovery::ServiceInstance",
  "impl core::marker::Sync for spark_core::cluster::discovery::ServiceInstance",
  "impl core::marker::Unpin for spark_core::cluster::discovery::ServiceInstance",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::discovery::ServiceInstance",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::discovery::ServiceInstance",
  "pub struct spark_core::cluster::SubscriptionFlowControl",
  "pub spark_core::cluster::SubscriptionFlowControl::mode: spark_core::cluster::flow_control::FlowControlMode",
  "pub spark_core::cluster::SubscriptionFlowControl::observe_queue: bool",
  "impl spark_core::cluster::flow_control::SubscriptionFlowControl",
  "pub const fn spark_core::cluster::flow_control::SubscriptionFlowControl::bounded(capacity: core::num::nonzero::NonZeroUsize, overflow: spark_core::cluster::flow_control::OverflowPolicy) -> Self",
  "pub const fn spark_core::cluster::flow_control::SubscriptionFlowControl::unbounded() -> Self",
  "pub const fn spark_core::cluster::flow_control::SubscriptionFlowControl::with_queue_observation(self, enable: bool) -> Self",
  "impl core::clone::Clone for spark_core::cluster::flow_control::SubscriptionFlowControl",
  "pub fn spark_core::cluster::flow_control::SubscriptionFlowControl::clone(&self) -> spark_core::cluster::flow_control::SubscriptionFlowControl",
  "impl core::cmp::Eq for spark_core::cluster::flow_control::SubscriptionFlowControl",
  "impl core::cmp::PartialEq for spark_core::cluster::flow_control::SubscriptionFlowControl",
  "pub fn spark_core::cluster::flow_control::SubscriptionFlowControl::eq(&self, other: &spark_core::cluster::flow_control::SubscriptionFlowControl) -> bool",
  "impl core::default::Default for spark_core::cluster::flow_control::SubscriptionFlowControl",
  "pub fn spark_core::cluster::flow_control::SubscriptionFlowControl::default() -> Self",
  "impl core::fmt::Debug for spark_core::cluster::flow_control::SubscriptionFlowControl",
  "pub fn spark_core::cluster::flow_control::SubscriptionFlowControl::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::cluster::flow_control::SubscriptionFlowControl",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::flow_control::SubscriptionFlowControl",
  "impl core::marker::Freeze for spark_core::cluster::flow_control::SubscriptionFlowControl",
  "impl core::marker::Send for spark_core::cluster::flow_control::SubscriptionFlowControl",
  "impl core::marker::Sync for spark_core::cluster::flow_control::SubscriptionFlowControl",
  "impl core::marker::Unpin for spark_core::cluster::flow_control::SubscriptionFlowControl",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::flow_control::SubscriptionFlowControl",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::flow_control::SubscriptionFlowControl",
  "pub struct spark_core::cluster::SubscriptionQueueSnapshot",
  "pub spark_core::cluster::SubscriptionQueueSnapshot::capacity: core::option::Option<core::num::nonzero::NonZeroUsize>",
  "pub spark_core::cluster::SubscriptionQueueSnapshot::depth: usize",
  "pub spark_core::cluster::SubscriptionQueueSnapshot::dropped_events: u64",
  "impl core::clone::Clone for spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "pub fn spark_core::cluster::flow_control::SubscriptionQueueSnapshot::clone(&self) -> spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "impl core::cmp::Eq for spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "impl core::cmp::PartialEq for spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "pub fn spark_core::cluster::flow_control::SubscriptionQueueSnapshot::eq(&self, other: &spark_core::cluster::flow_control::SubscriptionQueueSnapshot) -> bool",
  "impl core::default::Default for spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "pub fn spark_core::cluster::flow_control::SubscriptionQueueSnapshot::default() -> spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "impl core::fmt::Debug for spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "pub fn spark_core::cluster::flow_control::SubscriptionQueueSnapshot::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "impl core::marker::Freeze for spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "impl core::marker::Send for spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "impl core::marker::Sync for spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "impl core::marker::Unpin for spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "pub struct spark_core::cluster::SubscriptionStream<T>",
  "pub spark_core::cluster::SubscriptionStream::queue_probe: core::option::Option<alloc::sync::Arc<dyn spark_core::cluster::flow_control::SubscriptionQueueProbe>>",
  "pub spark_core::cluster::SubscriptionStream::stream: spark_core::future::BoxStream<'static, T>",
  "impl<T> spark_core::cluster::flow_control::SubscriptionStream<T>",
  "pub fn spark_core::cluster::flow_control::SubscriptionStream<T>::new(stream: spark_core::future::BoxStream<'static, T>) -> Self",
  "pub fn spark_core::cluster::flow_control::SubscriptionStream<T>::with_probe(self, probe: alloc::sync::Arc<dyn spark_core::cluster::flow_control::SubscriptionQueueProbe>) -> Self",
  "impl<T> core::fmt::Debug for spark_core::cluster::flow_control::SubscriptionStream<T>",
  "pub fn spark_core::cluster::flow_control::SubscriptionStream<T>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<T> core::marker::Freeze for spark_core::cluster::flow_control::SubscriptionStream<T>",
  "impl<T> core::marker::Send for spark_core::cluster::flow_control::SubscriptionStream<T>",
  "impl<T> !core::marker::Sync for spark_core::cluster::flow_control::SubscriptionStream<T>",
  "impl<T> core::marker::Unpin for spark_core::cluster::flow_control::SubscriptionStream<T>",
  "impl<T> !core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::flow_control::SubscriptionStream<T>",
  "impl<T> !core::panic::unwind_safe::UnwindSafe for spark_core::cluster::flow_control::SubscriptionStream<T>",
  "pub trait spark_core::cluster::ClusterMembership: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::cluster::ClusterMembership::self_profile<'life0, 'async_trait>(&'life0 self) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<spark_core::cluster::membership::ClusterNodeProfile, spark_core::cluster::membership::ClusterError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait",
  "pub fn spark_core::cluster::ClusterMembership::snapshot<'life0, 'async_trait>(&'life0 self, scope: spark_core::cluster::membership::ClusterMembershipScope) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<spark_core::cluster::membership::ClusterMembershipSnapshot, spark_core::cluster::membership::ClusterError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait",
  "pub fn spark_core::cluster::ClusterMembership::subscribe(&self, scope: spark_core::cluster::membership::ClusterMembershipScope, resume_from: core::option::Option<spark_core::cluster::topology::ClusterRevision>, flow_control: spark_core::cluster::flow_control::SubscriptionFlowControl) -> spark_core::cluster::flow_control::SubscriptionStream<spark_core::cluster::membership::ClusterMembershipEvent>",
  "pub trait spark_core::cluster::ServiceDiscovery: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::cluster::ServiceDiscovery::list_services<'life0, 'async_trait>(&'life0 self) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<alloc::vec::Vec<spark_core::cluster::discovery::ServiceName>, spark_core::cluster::membership::ClusterError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait",
  "pub fn spark_core::cluster::ServiceDiscovery::resolve<'life0, 'life1, 'async_trait>(&'life0 self, service: &'life1 spark_core::cluster::discovery::ServiceName, consistency: spark_core::cluster::topology::ClusterConsistencyLevel) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<spark_core::cluster::discovery::DiscoverySnapshot, spark_core::cluster::membership::ClusterError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait, 'life1: 'async_trait",
  "pub fn spark_core::cluster::ServiceDiscovery::watch(&self, service: &spark_core::cluster::discovery::ServiceName, consistency: spark_core::cluster::topology::ClusterConsistencyLevel, resume_from: core::option::Option<spark_core::cluster::topology::ClusterRevision>, flow_control: spark_core::cluster::flow_control::SubscriptionFlowControl) -> spark_core::cluster::flow_control::SubscriptionStream<spark_core::cluster::discovery::DiscoveryEvent>",
  "pub trait spark_core::cluster::SubscriptionQueueProbe: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::cluster::SubscriptionQueueProbe::snapshot(&self) -> spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "pub type spark_core::cluster::NodeId = alloc::string::String",
  "pub type spark_core::cluster::ServiceName = alloc::string::String",
  "pub mod spark_core::codec",
  "pub mod spark_core::codec::metrics",
  "pub enum spark_core::codec::metrics::CodecPhase",
  "pub spark_core::codec::metrics::CodecPhase::Decode",
  "pub spark_core::codec::metrics::CodecPhase::Encode",
  "impl spark_core::codec::metrics::CodecPhase",
  "pub fn spark_core::codec::metrics::CodecPhase::mode_label(self) -> &'static str",
  "impl core::clone::Clone for spark_core::codec::metrics::CodecPhase",
  "pub fn spark_core::codec::metrics::CodecPhase::clone(&self) -> spark_core::codec::metrics::CodecPhase",
  "impl core::cmp::Eq for spark_core::codec::metrics::CodecPhase",
  "impl core::cmp::PartialEq for spark_core::codec::metrics::CodecPhase",
  "pub fn spark_core::codec::metrics::CodecPhase::eq(&self, other: &spark_core::codec::metrics::CodecPhase) -> bool",
  "impl core::fmt::Debug for spark_core::codec::metrics::CodecPhase",
  "pub fn spark_core::codec::metrics::CodecPhase::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::codec::metrics::CodecPhase",
  "impl core::marker::StructuralPartialEq for spark_core::codec::metrics::CodecPhase",
  "impl core::marker::Freeze for spark_core::codec::metrics::CodecPhase",
  "impl core::marker::Send for spark_core::codec::metrics::CodecPhase",
  "impl core::marker::Sync for spark_core::codec::metrics::CodecPhase",
  "impl core::marker::Unpin for spark_core::codec::metrics::CodecPhase",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::codec::metrics::CodecPhase",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::codec::metrics::CodecPhase",
  "pub struct spark_core::codec::metrics::CodecMetricsHook<'a>",
  "impl<'a> spark_core::codec::metrics::CodecMetricsHook<'a>",
  "pub fn spark_core::codec::metrics::CodecMetricsHook<'a>::new(provider: &'a dyn spark_core::observability::metrics::MetricsProvider) -> Self",
  "pub fn spark_core::codec::metrics::CodecMetricsHook<'a>::record_bytes(&self, phase: spark_core::codec::metrics::CodecPhase, bytes: u64, attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub fn spark_core::codec::metrics::CodecMetricsHook<'a>::record_duration(&self, phase: spark_core::codec::metrics::CodecPhase, duration: core::time::Duration, attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub fn spark_core::codec::metrics::CodecMetricsHook<'a>::record_error(&self, phase: spark_core::codec::metrics::CodecPhase, attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "impl<'a> core::marker::Freeze for spark_core::codec::metrics::CodecMetricsHook<'a>",
  "impl<'a> core::marker::Send for spark_core::codec::metrics::CodecMetricsHook<'a>",
  "impl<'a> core::marker::Sync for spark_core::codec::metrics::CodecMetricsHook<'a>",
  "impl<'a> core::marker::Unpin for spark_core::codec::metrics::CodecMetricsHook<'a>",
  "impl<'a> !core::panic::unwind_safe::RefUnwindSafe for spark_core::codec::metrics::CodecMetricsHook<'a>",
  "impl<'a> !core::panic::unwind_safe::UnwindSafe for spark_core::codec::metrics::CodecMetricsHook<'a>",
  "pub mod spark_core::codec::traits",
  "pub mod spark_core::codec::traits::generic",
  "pub trait spark_core::codec::traits::generic::Codec: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub type spark_core::codec::traits::generic::Codec::Incoming: core::marker::Send + core::marker::Sync + 'static",
  "pub type spark_core::codec::traits::generic::Codec::Outgoing: core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::codec::traits::generic::Codec::decode(&self, src: &mut spark_core::buffer::ErasedSparkBuf, ctx: &mut spark_core::DecodeContext<'_>) -> core::result::Result<spark_core::DecodeOutcome<Self::Incoming>, spark_core::error::CoreError>",
  "pub fn spark_core::codec::traits::generic::Codec::descriptor(&self) -> &spark_core::CodecDescriptor",
  "pub fn spark_core::codec::traits::generic::Codec::encode(&self, item: &Self::Outgoing, ctx: &mut spark_core::EncodeContext<'_>) -> core::result::Result<spark_core::EncodedPayload, spark_core::error::CoreError>",
  "pub mod spark_core::codec::traits::object",
  "pub struct spark_core::codec::traits::object::TypedCodecAdapter<C> where C: spark_core::codec::traits::generic::Codec",
  "impl<C> spark_core::codec::traits::object::TypedCodecAdapter<C> where C: spark_core::codec::traits::generic::Codec",
  "pub fn spark_core::codec::traits::object::TypedCodecAdapter<C>::into_inner(self) -> C",
  "pub fn spark_core::codec::traits::object::TypedCodecAdapter<C>::new(inner: C) -> Self",
  "impl<C> spark_core::codec::traits::object::DynCodec for spark_core::codec::traits::object::TypedCodecAdapter<C> where C: spark_core::codec::traits::generic::Codec",
  "pub fn spark_core::codec::traits::object::TypedCodecAdapter<C>::decode_dyn(&self, src: &mut spark_core::buffer::ErasedSparkBuf, ctx: &mut spark_core::DecodeContext<'_>) -> core::result::Result<spark_core::DecodeOutcome<alloc::boxed::Box<(dyn core::any::Any + core::marker::Send + core::marker::Sync)>>, spark_core::error::CoreError>",
  "pub fn spark_core::codec::traits::object::TypedCodecAdapter<C>::descriptor(&self) -> &spark_core::CodecDescriptor",
  "pub fn spark_core::codec::traits::object::TypedCodecAdapter<C>::encode_dyn(&self, item: &(dyn core::any::Any + core::marker::Send + core::marker::Sync), ctx: &mut spark_core::EncodeContext<'_>) -> core::result::Result<spark_core::EncodedPayload, spark_core::error::CoreError>",
  "impl<C> core::marker::Freeze for spark_core::codec::traits::object::TypedCodecAdapter<C> where C: core::marker::Freeze",
  "impl<C> core::marker::Send for spark_core::codec::traits::object::TypedCodecAdapter<C>",
  "impl<C> core::marker::Sync for spark_core::codec::traits::object::TypedCodecAdapter<C>",
  "impl<C> core::marker::Unpin for spark_core::codec::traits::object::TypedCodecAdapter<C> where C: core::marker::Unpin",
  "impl<C> core::panic::unwind_safe::RefUnwindSafe for spark_core::codec::traits::object::TypedCodecAdapter<C> where C: core::panic::unwind_safe::RefUnwindSafe",
  "impl<C> core::panic::unwind_safe::UnwindSafe for spark_core::codec::traits::object::TypedCodecAdapter<C> where C: core::panic::unwind_safe::UnwindSafe",
  "pub trait spark_core::codec::traits::object::DynCodec: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::codec::traits::object::DynCodec::decode_dyn(&self, src: &mut spark_core::buffer::ErasedSparkBuf, ctx: &mut spark_core::DecodeContext<'_>) -> core::result::Result<spark_core::DecodeOutcome<alloc::boxed::Box<(dyn core::any::Any + core::marker::Send + core::marker::Sync)>>, spark_core::error::CoreError>",
  "pub fn spark_core::codec::traits::object::DynCodec::descriptor(&self) -> &spark_core::CodecDescriptor",
  "pub fn spark_core::codec::traits::object::DynCodec::encode_dyn(&self, item: &(dyn core::any::Any + core::marker::Send + core::marker::Sync), ctx: &mut spark_core::EncodeContext<'_>) -> core::result::Result<spark_core::EncodedPayload, spark_core::error::CoreError>",
  "impl<C> spark_core::codec::traits::object::DynCodec for spark_core::codec::traits::object::TypedCodecAdapter<C> where C: spark_core::codec::traits::generic::Codec",
  "pub fn spark_core::codec::traits::object::TypedCodecAdapter<C>::decode_dyn(&self, src: &mut spark_core::buffer::ErasedSparkBuf, ctx: &mut spark_core::DecodeContext<'_>) -> core::result::Result<spark_core::DecodeOutcome<alloc::boxed::Box<(dyn core::any::Any + core::marker::Send + core::marker::Sync)>>, spark_core::error::CoreError>",
  "pub fn spark_core::codec::traits::object::TypedCodecAdapter<C>::descriptor(&self) -> &spark_core::CodecDescriptor",
  "pub fn spark_core::codec::traits::object::TypedCodecAdapter<C>::encode_dyn(&self, item: &(dyn core::any::Any + core::marker::Send + core::marker::Sync), ctx: &mut spark_core::EncodeContext<'_>) -> core::result::Result<spark_core::EncodedPayload, spark_core::error::CoreError>",
  "pub struct spark_core::codec::traits::TypedCodecAdapter<C> where C: spark_core::codec::traits::generic::Codec",
  "impl<C> spark_core::codec::traits::object::TypedCodecAdapter<C> where C: spark_core::codec::traits::generic::Codec",
  "pub fn spark_core::codec::traits::object::TypedCodecAdapter<C>::into_inner(self) -> C",
  "pub fn spark_core::codec::traits::object::TypedCodecAdapter<C>::new(inner: C) -> Self",
  "impl<C> spark_core::codec::traits::object::DynCodec for spark_core::codec::traits::object::TypedCodecAdapter<C> where C: spark_core::codec::traits::generic::Codec",
  "pub fn spark_core::codec::traits::object::TypedCodecAdapter<C>::decode_dyn(&self, src: &mut spark_core::buffer::ErasedSparkBuf, ctx: &mut spark_core::DecodeContext<'_>) -> core::result::Result<spark_core::DecodeOutcome<alloc::boxed::Box<(dyn core::any::Any + core::marker::Send + core::marker::Sync)>>, spark_core::error::CoreError>",
  "pub fn spark_core::codec::traits::object::TypedCodecAdapter<C>::descriptor(&self) -> &spark_core::CodecDescriptor",
  "pub fn spark_core::codec::traits::object::TypedCodecAdapter<C>::encode_dyn(&self, item: &(dyn core::any::Any + core::marker::Send + core::marker::Sync), ctx: &mut spark_core::EncodeContext<'_>) -> core::result::Result<spark_core::EncodedPayload, spark_core::error::CoreError>",
  "impl<C> core::marker::Freeze for spark_core::codec::traits::object::TypedCodecAdapter<C> where C: core::marker::Freeze",
  "impl<C> core::marker::Send for spark_core::codec::traits::object::TypedCodecAdapter<C>",
  "impl<C> core::marker::Sync for spark_core::codec::traits::object::TypedCodecAdapter<C>",
  "impl<C> core::marker::Unpin for spark_core::codec::traits::object::TypedCodecAdapter<C> where C: core::marker::Unpin",
  "impl<C> core::panic::unwind_safe::RefUnwindSafe for spark_core::codec::traits::object::TypedCodecAdapter<C> where C: core::panic::unwind_safe::RefUnwindSafe",
  "impl<C> core::panic::unwind_safe::UnwindSafe for spark_core::codec::traits::object::TypedCodecAdapter<C> where C: core::panic::unwind_safe::UnwindSafe",
  "pub trait spark_core::codec::traits::Codec: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub type spark_core::codec::traits::Codec::Incoming: core::marker::Send + core::marker::Sync + 'static",
  "pub type spark_core::codec::traits::Codec::Outgoing: core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::codec::traits::Codec::decode(&self, src: &mut spark_core::buffer::ErasedSparkBuf, ctx: &mut spark_core::DecodeContext<'_>) -> core::result::Result<spark_core::DecodeOutcome<Self::Incoming>, spark_core::error::CoreError>",
  "pub fn spark_core::codec::traits::Codec::descriptor(&self) -> &spark_core::CodecDescriptor",
  "pub fn spark_core::codec::traits::Codec::encode(&self, item: &Self::Outgoing, ctx: &mut spark_core::EncodeContext<'_>) -> core::result::Result<spark_core::EncodedPayload, spark_core::error::CoreError>",
  "pub trait spark_core::codec::traits::DynCodec: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::codec::traits::DynCodec::decode_dyn(&self, src: &mut spark_core::buffer::ErasedSparkBuf, ctx: &mut spark_core::DecodeContext<'_>) -> core::result::Result<spark_core::DecodeOutcome<alloc::boxed::Box<(dyn core::any::Any + core::marker::Send + core::marker::Sync)>>, spark_core::error::CoreError>",
  "pub fn spark_core::codec::traits::DynCodec::descriptor(&self) -> &spark_core::CodecDescriptor",
  "pub fn spark_core::codec::traits::DynCodec::encode_dyn(&self, item: &(dyn core::any::Any + core::marker::Send + core::marker::Sync), ctx: &mut spark_core::EncodeContext<'_>) -> core::result::Result<spark_core::EncodedPayload, spark_core::error::CoreError>",
  "impl<C> spark_core::codec::traits::object::DynCodec for spark_core::codec::traits::object::TypedCodecAdapter<C> where C: spark_core::codec::traits::generic::Codec",
  "pub fn spark_core::codec::traits::object::TypedCodecAdapter<C>::decode_dyn(&self, src: &mut spark_core::buffer::ErasedSparkBuf, ctx: &mut spark_core::DecodeContext<'_>) -> core::result::Result<spark_core::DecodeOutcome<alloc::boxed::Box<(dyn core::any::Any + core::marker::Send + core::marker::Sync)>>, spark_core::error::CoreError>",
  "pub fn spark_core::codec::traits::object::TypedCodecAdapter<C>::descriptor(&self) -> &spark_core::CodecDescriptor",
  "pub fn spark_core::codec::traits::object::TypedCodecAdapter<C>::encode_dyn(&self, item: &(dyn core::any::Any + core::marker::Send + core::marker::Sync), ctx: &mut spark_core::EncodeContext<'_>) -> core::result::Result<spark_core::EncodedPayload, spark_core::error::CoreError>",
  "pub enum spark_core::codec::CodecPhase",
  "pub spark_core::codec::CodecPhase::Decode",
  "pub spark_core::codec::CodecPhase::Encode",
  "impl spark_core::codec::metrics::CodecPhase",
  "pub fn spark_core::codec::metrics::CodecPhase::mode_label(self) -> &'static str",
  "impl core::clone::Clone for spark_core::codec::metrics::CodecPhase",
  "pub fn spark_core::codec::metrics::CodecPhase::clone(&self) -> spark_core::codec::metrics::CodecPhase",
  "impl core::cmp::Eq for spark_core::codec::metrics::CodecPhase",
  "impl core::cmp::PartialEq for spark_core::codec::metrics::CodecPhase",
  "pub fn spark_core::codec::metrics::CodecPhase::eq(&self, other: &spark_core::codec::metrics::CodecPhase) -> bool",
  "impl core::fmt::Debug for spark_core::codec::metrics::CodecPhase",
  "pub fn spark_core::codec::metrics::CodecPhase::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::codec::metrics::CodecPhase",
  "impl core::marker::StructuralPartialEq for spark_core::codec::metrics::CodecPhase",
  "impl core::marker::Freeze for spark_core::codec::metrics::CodecPhase",
  "impl core::marker::Send for spark_core::codec::metrics::CodecPhase",
  "impl core::marker::Sync for spark_core::codec::metrics::CodecPhase",
  "impl core::marker::Unpin for spark_core::codec::metrics::CodecPhase",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::codec::metrics::CodecPhase",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::codec::metrics::CodecPhase",
  "#[non_exhaustive] pub enum spark_core::codec::DecodeOutcome<T>",
  "pub spark_core::codec::DecodeOutcome::Complete(T)",
  "pub spark_core::codec::DecodeOutcome::Incomplete",
  "pub spark_core::codec::DecodeOutcome::Skipped",
  "impl<T: core::fmt::Debug> core::fmt::Debug for spark_core::DecodeOutcome<T>",
  "pub fn spark_core::DecodeOutcome<T>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<T> core::marker::Freeze for spark_core::DecodeOutcome<T> where T: core::marker::Freeze",
  "impl<T> core::marker::Send for spark_core::DecodeOutcome<T> where T: core::marker::Send",
  "impl<T> core::marker::Sync for spark_core::DecodeOutcome<T> where T: core::marker::Sync",
  "impl<T> core::marker::Unpin for spark_core::DecodeOutcome<T> where T: core::marker::Unpin",
  "impl<T> core::panic::unwind_safe::RefUnwindSafe for spark_core::DecodeOutcome<T> where T: core::panic::unwind_safe::RefUnwindSafe",
  "impl<T> core::panic::unwind_safe::UnwindSafe for spark_core::DecodeOutcome<T> where T: core::panic::unwind_safe::UnwindSafe",
  "pub struct spark_core::codec::CodecDescriptor",
  "impl spark_core::CodecDescriptor",
  "pub fn spark_core::CodecDescriptor::content_encoding(&self) -> &spark_core::ContentEncoding",
  "pub fn spark_core::CodecDescriptor::content_type(&self) -> &spark_core::ContentType",
  "pub fn spark_core::CodecDescriptor::new(content_type: spark_core::ContentType, content_encoding: spark_core::ContentEncoding) -> Self",
  "pub fn spark_core::CodecDescriptor::schema(&self) -> core::option::Option<&spark_core::SchemaDescriptor>",
  "pub fn spark_core::CodecDescriptor::with_schema(self, schema: spark_core::SchemaDescriptor) -> Self",
  "impl core::clone::Clone for spark_core::CodecDescriptor",
  "pub fn spark_core::CodecDescriptor::clone(&self) -> spark_core::CodecDescriptor",
  "impl core::cmp::Eq for spark_core::CodecDescriptor",
  "impl core::cmp::PartialEq for spark_core::CodecDescriptor",
  "pub fn spark_core::CodecDescriptor::eq(&self, other: &spark_core::CodecDescriptor) -> bool",
  "impl core::fmt::Debug for spark_core::CodecDescriptor",
  "pub fn spark_core::CodecDescriptor::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::CodecDescriptor",
  "impl core::marker::Freeze for spark_core::CodecDescriptor",
  "impl core::marker::Send for spark_core::CodecDescriptor",
  "impl core::marker::Sync for spark_core::CodecDescriptor",
  "impl core::marker::Unpin for spark_core::CodecDescriptor",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::CodecDescriptor",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::CodecDescriptor",
  "pub struct spark_core::codec::CodecMetricsHook<'a>",
  "impl<'a> spark_core::codec::metrics::CodecMetricsHook<'a>",
  "pub fn spark_core::codec::metrics::CodecMetricsHook<'a>::new(provider: &'a dyn spark_core::observability::metrics::MetricsProvider) -> Self",
  "pub fn spark_core::codec::metrics::CodecMetricsHook<'a>::record_bytes(&self, phase: spark_core::codec::metrics::CodecPhase, bytes: u64, attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub fn spark_core::codec::metrics::CodecMetricsHook<'a>::record_duration(&self, phase: spark_core::codec::metrics::CodecPhase, duration: core::time::Duration, attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub fn spark_core::codec::metrics::CodecMetricsHook<'a>::record_error(&self, phase: spark_core::codec::metrics::CodecPhase, attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "impl<'a> core::marker::Freeze for spark_core::codec::metrics::CodecMetricsHook<'a>",
  "impl<'a> core::marker::Send for spark_core::codec::metrics::CodecMetricsHook<'a>",
  "impl<'a> core::marker::Sync for spark_core::codec::metrics::CodecMetricsHook<'a>",
  "impl<'a> core::marker::Unpin for spark_core::codec::metrics::CodecMetricsHook<'a>",
  "impl<'a> !core::panic::unwind_safe::RefUnwindSafe for spark_core::codec::metrics::CodecMetricsHook<'a>",
  "impl<'a> !core::panic::unwind_safe::UnwindSafe for spark_core::codec::metrics::CodecMetricsHook<'a>",
  "pub struct spark_core::codec::ContentEncoding(_)",
  "impl spark_core::ContentEncoding",
  "pub fn spark_core::ContentEncoding::as_str(&self) -> &str",
  "pub fn spark_core::ContentEncoding::identity() -> Self",
  "pub fn spark_core::ContentEncoding::is_identity(&self) -> bool",
  "pub fn spark_core::ContentEncoding::new(value: impl core::convert::Into<alloc::borrow::Cow<'static, str>>) -> Self",
  "impl core::clone::Clone for spark_core::ContentEncoding",
  "pub fn spark_core::ContentEncoding::clone(&self) -> spark_core::ContentEncoding",
  "impl core::cmp::Eq for spark_core::ContentEncoding",
  "impl core::cmp::PartialEq for spark_core::ContentEncoding",
  "pub fn spark_core::ContentEncoding::eq(&self, other: &spark_core::ContentEncoding) -> bool",
  "impl core::fmt::Debug for spark_core::ContentEncoding",
  "pub fn spark_core::ContentEncoding::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::ContentEncoding",
  "pub fn spark_core::ContentEncoding::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::StructuralPartialEq for spark_core::ContentEncoding",
  "impl core::marker::Freeze for spark_core::ContentEncoding",
  "impl core::marker::Send for spark_core::ContentEncoding",
  "impl core::marker::Sync for spark_core::ContentEncoding",
  "impl core::marker::Unpin for spark_core::ContentEncoding",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ContentEncoding",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ContentEncoding",
  "pub struct spark_core::codec::ContentType(_)",
  "impl spark_core::ContentType",
  "pub fn spark_core::ContentType::as_str(&self) -> &str",
  "pub fn spark_core::ContentType::new(value: impl core::convert::Into<alloc::borrow::Cow<'static, str>>) -> Self",
  "impl core::clone::Clone for spark_core::ContentType",
  "pub fn spark_core::ContentType::clone(&self) -> spark_core::ContentType",
  "impl core::cmp::Eq for spark_core::ContentType",
  "impl core::cmp::PartialEq for spark_core::ContentType",
  "pub fn spark_core::ContentType::eq(&self, other: &spark_core::ContentType) -> bool",
  "impl core::fmt::Debug for spark_core::ContentType",
  "pub fn spark_core::ContentType::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::ContentType",
  "pub fn spark_core::ContentType::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::StructuralPartialEq for spark_core::ContentType",
  "impl core::marker::Freeze for spark_core::ContentType",
  "impl core::marker::Send for spark_core::ContentType",
  "impl core::marker::Sync for spark_core::ContentType",
  "impl core::marker::Unpin for spark_core::ContentType",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ContentType",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ContentType",
  "pub struct spark_core::codec::DecodeContext<'a>",
  "impl<'a> spark_core::DecodeContext<'a>",
  "pub fn spark_core::DecodeContext<'a>::acquire_scratch(&self, min_capacity: usize) -> core::result::Result<alloc::boxed::Box<spark_core::buffer::ErasedSparkBufMut>, spark_core::error::CoreError>",
  "pub fn spark_core::DecodeContext<'a>::budget(&self) -> core::option::Option<&'a spark_core::contract::Budget>",
  "pub fn spark_core::DecodeContext<'a>::check_frame_constraints(&self, frame_len: usize) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::DecodeContext<'a>::current_depth(&self) -> u16",
  "pub fn spark_core::DecodeContext<'a>::enter_frame(&mut self) -> core::result::Result<spark_core::codec::DecodeFrameGuard<'_, 'a>, spark_core::error::CoreError>",
  "pub fn spark_core::DecodeContext<'a>::max_frame_size(&self) -> core::option::Option<usize>",
  "pub fn spark_core::DecodeContext<'a>::max_recursion_depth(&self) -> core::option::Option<core::num::nonzero::NonZeroU16>",
  "pub fn spark_core::DecodeContext<'a>::new(allocator: &'a dyn spark_core::buffer::BufferAllocator) -> Self",
  "pub fn spark_core::DecodeContext<'a>::refund_budget(&self, amount: usize)",
  "pub fn spark_core::DecodeContext<'a>::with_limits(allocator: &'a dyn spark_core::buffer::BufferAllocator, budget: core::option::Option<&'a spark_core::contract::Budget>, max_frame_size: core::option::Option<usize>, max_recursion_depth: core::option::Option<core::num::nonzero::NonZeroU16>) -> Self",
  "pub fn spark_core::DecodeContext<'a>::with_max_frame_size(allocator: &'a dyn spark_core::buffer::BufferAllocator, max_frame_size: core::option::Option<usize>) -> Self",
  "impl core::fmt::Debug for spark_core::DecodeContext<'_>",
  "pub fn spark_core::DecodeContext<'_>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<'a> core::marker::Freeze for spark_core::DecodeContext<'a>",
  "impl<'a> core::marker::Send for spark_core::DecodeContext<'a>",
  "impl<'a> core::marker::Sync for spark_core::DecodeContext<'a>",
  "impl<'a> core::marker::Unpin for spark_core::DecodeContext<'a>",
  "impl<'a> !core::panic::unwind_safe::RefUnwindSafe for spark_core::DecodeContext<'a>",
  "impl<'a> !core::panic::unwind_safe::UnwindSafe for spark_core::DecodeContext<'a>",
  "pub struct spark_core::codec::DecodeFrameGuard<'ctx, 'a>",
  "impl core::ops::drop::Drop for spark_core::codec::DecodeFrameGuard<'_, '_>",
  "pub fn spark_core::codec::DecodeFrameGuard<'_, '_>::drop(&mut self)",
  "impl<'ctx, 'a> core::marker::Freeze for spark_core::codec::DecodeFrameGuard<'ctx, 'a>",
  "impl<'ctx, 'a> core::marker::Send for spark_core::codec::DecodeFrameGuard<'ctx, 'a>",
  "impl<'ctx, 'a> core::marker::Sync for spark_core::codec::DecodeFrameGuard<'ctx, 'a>",
  "impl<'ctx, 'a> core::marker::Unpin for spark_core::codec::DecodeFrameGuard<'ctx, 'a>",
  "impl<'ctx, 'a> !core::panic::unwind_safe::RefUnwindSafe for spark_core::codec::DecodeFrameGuard<'ctx, 'a>",
  "impl<'ctx, 'a> !core::panic::unwind_safe::UnwindSafe for spark_core::codec::DecodeFrameGuard<'ctx, 'a>",
  "pub struct spark_core::codec::EncodeContext<'a>",
  "impl<'a> spark_core::EncodeContext<'a>",
  "pub fn spark_core::EncodeContext<'a>::acquire_buffer(&self, min_capacity: usize) -> core::result::Result<alloc::boxed::Box<spark_core::buffer::ErasedSparkBufMut>, spark_core::error::CoreError>",
  "pub fn spark_core::EncodeContext<'a>::budget(&self) -> core::option::Option<&'a spark_core::contract::Budget>",
  "pub fn spark_core::EncodeContext<'a>::check_frame_constraints(&self, frame_len: usize) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::EncodeContext<'a>::current_depth(&self) -> u16",
  "pub fn spark_core::EncodeContext<'a>::enter_frame(&mut self) -> core::result::Result<spark_core::codec::EncodeFrameGuard<'_, 'a>, spark_core::error::CoreError>",
  "pub fn spark_core::EncodeContext<'a>::max_frame_size(&self) -> core::option::Option<usize>",
  "pub fn spark_core::EncodeContext<'a>::max_recursion_depth(&self) -> core::option::Option<core::num::nonzero::NonZeroU16>",
  "pub fn spark_core::EncodeContext<'a>::new(allocator: &'a dyn spark_core::buffer::BufferAllocator) -> Self",
  "pub fn spark_core::EncodeContext<'a>::refund_budget(&self, amount: usize)",
  "pub fn spark_core::EncodeContext<'a>::with_limits(allocator: &'a dyn spark_core::buffer::BufferAllocator, budget: core::option::Option<&'a spark_core::contract::Budget>, max_frame_size: core::option::Option<usize>, max_recursion_depth: core::option::Option<core::num::nonzero::NonZeroU16>) -> Self",
  "pub fn spark_core::EncodeContext<'a>::with_max_frame_size(allocator: &'a dyn spark_core::buffer::BufferAllocator, max_frame_size: core::option::Option<usize>) -> Self",
  "impl core::fmt::Debug for spark_core::EncodeContext<'_>",
  "pub fn spark_core::EncodeContext<'_>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<'a> core::marker::Freeze for spark_core::EncodeContext<'a>",
  "impl<'a> core::marker::Send for spark_core::EncodeContext<'a>",
  "impl<'a> core::marker::Sync for spark_core::EncodeContext<'a>",
  "impl<'a> core::marker::Unpin for spark_core::EncodeContext<'a>",
  "impl<'a> !core::panic::unwind_safe::RefUnwindSafe for spark_core::EncodeContext<'a>",
  "impl<'a> !core::panic::unwind_safe::UnwindSafe for spark_core::EncodeContext<'a>",
  "pub struct spark_core::codec::EncodeFrameGuard<'ctx, 'a>",
  "impl core::ops::drop::Drop for spark_core::codec::EncodeFrameGuard<'_, '_>",
  "pub fn spark_core::codec::EncodeFrameGuard<'_, '_>::drop(&mut self)",
  "impl<'ctx, 'a> core::marker::Freeze for spark_core::codec::EncodeFrameGuard<'ctx, 'a>",
  "impl<'ctx, 'a> core::marker::Send for spark_core::codec::EncodeFrameGuard<'ctx, 'a>",
  "impl<'ctx, 'a> core::marker::Sync for spark_core::codec::EncodeFrameGuard<'ctx, 'a>",
  "impl<'ctx, 'a> core::marker::Unpin for spark_core::codec::EncodeFrameGuard<'ctx, 'a>",
  "impl<'ctx, 'a> !core::panic::unwind_safe::RefUnwindSafe for spark_core::codec::EncodeFrameGuard<'ctx, 'a>",
  "impl<'ctx, 'a> !core::panic::unwind_safe::UnwindSafe for spark_core::codec::EncodeFrameGuard<'ctx, 'a>",
  "pub struct spark_core::codec::EncodedPayload",
  "impl spark_core::EncodedPayload",
  "pub fn spark_core::EncodedPayload::from_buffer(buffer: alloc::boxed::Box<spark_core::buffer::ErasedSparkBuf>) -> Self",
  "pub fn spark_core::EncodedPayload::into_buffer(self) -> alloc::boxed::Box<spark_core::buffer::ErasedSparkBuf>",
  "impl core::fmt::Debug for spark_core::EncodedPayload",
  "pub fn spark_core::EncodedPayload::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::EncodedPayload",
  "impl core::marker::Send for spark_core::EncodedPayload",
  "impl core::marker::Sync for spark_core::EncodedPayload",
  "impl core::marker::Unpin for spark_core::EncodedPayload",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::EncodedPayload",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::EncodedPayload",
  "pub struct spark_core::codec::NegotiatedCodec",
  "impl spark_core::NegotiatedCodec",
  "pub fn spark_core::NegotiatedCodec::descriptor(&self) -> &spark_core::CodecDescriptor",
  "pub fn spark_core::NegotiatedCodec::fallback_encodings(&self) -> &[spark_core::ContentEncoding]",
  "pub fn spark_core::NegotiatedCodec::new(descriptor: spark_core::CodecDescriptor) -> Self",
  "pub fn spark_core::NegotiatedCodec::with_fallback_encodings(self, fallback: alloc::vec::Vec<spark_core::ContentEncoding>) -> Self",
  "impl core::clone::Clone for spark_core::NegotiatedCodec",
  "pub fn spark_core::NegotiatedCodec::clone(&self) -> spark_core::NegotiatedCodec",
  "impl core::fmt::Debug for spark_core::NegotiatedCodec",
  "pub fn spark_core::NegotiatedCodec::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::NegotiatedCodec",
  "impl core::marker::Send for spark_core::NegotiatedCodec",
  "impl core::marker::Sync for spark_core::NegotiatedCodec",
  "impl core::marker::Unpin for spark_core::NegotiatedCodec",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::NegotiatedCodec",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::NegotiatedCodec",
  "pub struct spark_core::codec::SchemaDescriptor",
  "impl spark_core::SchemaDescriptor",
  "pub fn spark_core::SchemaDescriptor::fingerprint(&self) -> core::option::Option<&[u8]>",
  "pub fn spark_core::SchemaDescriptor::name(&self) -> &str",
  "pub fn spark_core::SchemaDescriptor::version(&self) -> core::option::Option<&str>",
  "pub fn spark_core::SchemaDescriptor::with_fingerprint(self, fingerprint: impl core::convert::Into<alloc::vec::Vec<u8>>) -> Self",
  "pub fn spark_core::SchemaDescriptor::with_name(name: impl core::convert::Into<alloc::borrow::Cow<'static, str>>) -> Self",
  "pub fn spark_core::SchemaDescriptor::with_version(self, version: impl core::convert::Into<alloc::borrow::Cow<'static, str>>) -> Self",
  "impl core::clone::Clone for spark_core::SchemaDescriptor",
  "pub fn spark_core::SchemaDescriptor::clone(&self) -> spark_core::SchemaDescriptor",
  "impl core::cmp::Eq for spark_core::SchemaDescriptor",
  "impl core::cmp::PartialEq for spark_core::SchemaDescriptor",
  "pub fn spark_core::SchemaDescriptor::eq(&self, other: &spark_core::SchemaDescriptor) -> bool",
  "impl core::fmt::Debug for spark_core::SchemaDescriptor",
  "pub fn spark_core::SchemaDescriptor::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::SchemaDescriptor",
  "impl core::marker::Freeze for spark_core::SchemaDescriptor",
  "impl core::marker::Send for spark_core::SchemaDescriptor",
  "impl core::marker::Sync for spark_core::SchemaDescriptor",
  "impl core::marker::Unpin for spark_core::SchemaDescriptor",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::SchemaDescriptor",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::SchemaDescriptor",
  "pub struct spark_core::codec::TypedCodecAdapter<C> where C: spark_core::codec::traits::generic::Codec",
  "impl<C> spark_core::codec::traits::object::TypedCodecAdapter<C> where C: spark_core::codec::traits::generic::Codec",
  "pub fn spark_core::codec::traits::object::TypedCodecAdapter<C>::into_inner(self) -> C",
  "pub fn spark_core::codec::traits::object::TypedCodecAdapter<C>::new(inner: C) -> Self",
  "impl<C> spark_core::codec::traits::object::DynCodec for spark_core::codec::traits::object::TypedCodecAdapter<C> where C: spark_core::codec::traits::generic::Codec",
  "pub fn spark_core::codec::traits::object::TypedCodecAdapter<C>::decode_dyn(&self, src: &mut spark_core::buffer::ErasedSparkBuf, ctx: &mut spark_core::DecodeContext<'_>) -> core::result::Result<spark_core::DecodeOutcome<alloc::boxed::Box<(dyn core::any::Any + core::marker::Send + core::marker::Sync)>>, spark_core::error::CoreError>",
  "pub fn spark_core::codec::traits::object::TypedCodecAdapter<C>::descriptor(&self) -> &spark_core::CodecDescriptor",
  "pub fn spark_core::codec::traits::object::TypedCodecAdapter<C>::encode_dyn(&self, item: &(dyn core::any::Any + core::marker::Send + core::marker::Sync), ctx: &mut spark_core::EncodeContext<'_>) -> core::result::Result<spark_core::EncodedPayload, spark_core::error::CoreError>",
  "impl<C> core::marker::Freeze for spark_core::codec::traits::object::TypedCodecAdapter<C> where C: core::marker::Freeze",
  "impl<C> core::marker::Send for spark_core::codec::traits::object::TypedCodecAdapter<C>",
  "impl<C> core::marker::Sync for spark_core::codec::traits::object::TypedCodecAdapter<C>",
  "impl<C> core::marker::Unpin for spark_core::codec::traits::object::TypedCodecAdapter<C> where C: core::marker::Unpin",
  "impl<C> core::panic::unwind_safe::RefUnwindSafe for spark_core::codec::traits::object::TypedCodecAdapter<C> where C: core::panic::unwind_safe::RefUnwindSafe",
  "impl<C> core::panic::unwind_safe::UnwindSafe for spark_core::codec::traits::object::TypedCodecAdapter<C> where C: core::panic::unwind_safe::UnwindSafe",
  "pub struct spark_core::codec::TypedCodecFactory<C, F> where C: spark_core::codec::traits::generic::Codec, F: core::ops::function::Fn(&spark_core::NegotiatedCodec) -> C + core::marker::Send + core::marker::Sync + 'static",
  "impl<C, F> spark_core::TypedCodecFactory<C, F> where C: spark_core::codec::traits::generic::Codec, F: core::ops::function::Fn(&spark_core::NegotiatedCodec) -> C + core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::TypedCodecFactory<C, F>::new(descriptor: spark_core::CodecDescriptor, constructor: F) -> Self",
  "impl<C, F> spark_core::DynCodecFactory for spark_core::TypedCodecFactory<C, F> where C: spark_core::codec::traits::generic::Codec, F: core::ops::function::Fn(&spark_core::NegotiatedCodec) -> C + core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::TypedCodecFactory<C, F>::descriptor(&self) -> &spark_core::CodecDescriptor",
  "pub fn spark_core::TypedCodecFactory<C, F>::instantiate(&self, negotiated: &spark_core::NegotiatedCodec) -> core::result::Result<alloc::boxed::Box<dyn spark_core::codec::traits::object::DynCodec>, spark_core::error::CoreError>",
  "impl<C, F> core::marker::Freeze for spark_core::TypedCodecFactory<C, F> where F: core::marker::Freeze",
  "impl<C, F> core::marker::Send for spark_core::TypedCodecFactory<C, F>",
  "impl<C, F> core::marker::Sync for spark_core::TypedCodecFactory<C, F>",
  "impl<C, F> core::marker::Unpin for spark_core::TypedCodecFactory<C, F> where F: core::marker::Unpin, C: core::marker::Unpin",
  "impl<C, F> core::panic::unwind_safe::RefUnwindSafe for spark_core::TypedCodecFactory<C, F> where F: core::panic::unwind_safe::RefUnwindSafe, C: core::panic::unwind_safe::RefUnwindSafe",
  "impl<C, F> core::panic::unwind_safe::UnwindSafe for spark_core::TypedCodecFactory<C, F> where F: core::panic::unwind_safe::UnwindSafe, C: core::panic::unwind_safe::UnwindSafe",
  "pub trait spark_core::codec::Codec: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub type spark_core::codec::Codec::Incoming: core::marker::Send + core::marker::Sync + 'static",
  "pub type spark_core::codec::Codec::Outgoing: core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::codec::Codec::decode(&self, src: &mut spark_core::buffer::ErasedSparkBuf, ctx: &mut spark_core::DecodeContext<'_>) -> core::result::Result<spark_core::DecodeOutcome<Self::Incoming>, spark_core::error::CoreError>",
  "pub fn spark_core::codec::Codec::descriptor(&self) -> &spark_core::CodecDescriptor",
  "pub fn spark_core::codec::Codec::encode(&self, item: &Self::Outgoing, ctx: &mut spark_core::EncodeContext<'_>) -> core::result::Result<spark_core::EncodedPayload, spark_core::error::CoreError>",
  "pub trait spark_core::codec::CodecRegistry: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::codec::CodecRegistry::instantiate(&self, negotiated: &spark_core::NegotiatedCodec) -> core::result::Result<alloc::boxed::Box<dyn spark_core::codec::traits::object::DynCodec>, spark_core::error::CoreError>",
  "pub fn spark_core::codec::CodecRegistry::negotiate(&self, preferred: &[spark_core::ContentType], accepted_encodings: &[spark_core::ContentEncoding]) -> core::result::Result<spark_core::NegotiatedCodec, spark_core::error::CoreError>",
  "pub fn spark_core::codec::CodecRegistry::register(&self, factory: alloc::boxed::Box<dyn spark_core::DynCodecFactory>) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::codec::CodecRegistry::register_static(&self, factory: &'static dyn spark_core::DynCodecFactory) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub trait spark_core::codec::Decoder: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub type spark_core::codec::Decoder::Item: core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::codec::Decoder::decode(&self, src: &mut spark_core::buffer::ErasedSparkBuf, ctx: &mut spark_core::DecodeContext<'_>) -> core::result::Result<spark_core::DecodeOutcome<Self::Item>, spark_core::error::CoreError>",
  "pub fn spark_core::codec::Decoder::descriptor(&self) -> &spark_core::CodecDescriptor",
  "impl<T> spark_core::codec::Decoder for T where T: spark_core::codec::traits::generic::Codec",
  "pub type T::Item = <T as spark_core::codec::traits::generic::Codec>::Incoming",
  "pub fn T::decode(&self, src: &mut spark_core::buffer::ErasedSparkBuf, ctx: &mut spark_core::DecodeContext<'_>) -> core::result::Result<spark_core::DecodeOutcome<Self::Item>, spark_core::error::CoreError>",
  "pub fn T::descriptor(&self) -> &spark_core::CodecDescriptor",
  "pub trait spark_core::codec::DynCodec: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::codec::DynCodec::decode_dyn(&self, src: &mut spark_core::buffer::ErasedSparkBuf, ctx: &mut spark_core::DecodeContext<'_>) -> core::result::Result<spark_core::DecodeOutcome<alloc::boxed::Box<(dyn core::any::Any + core::marker::Send + core::marker::Sync)>>, spark_core::error::CoreError>",
  "pub fn spark_core::codec::DynCodec::descriptor(&self) -> &spark_core::CodecDescriptor",
  "pub fn spark_core::codec::DynCodec::encode_dyn(&self, item: &(dyn core::any::Any + core::marker::Send + core::marker::Sync), ctx: &mut spark_core::EncodeContext<'_>) -> core::result::Result<spark_core::EncodedPayload, spark_core::error::CoreError>",
  "impl<C> spark_core::codec::traits::object::DynCodec for spark_core::codec::traits::object::TypedCodecAdapter<C> where C: spark_core::codec::traits::generic::Codec",
  "pub fn spark_core::codec::traits::object::TypedCodecAdapter<C>::decode_dyn(&self, src: &mut spark_core::buffer::ErasedSparkBuf, ctx: &mut spark_core::DecodeContext<'_>) -> core::result::Result<spark_core::DecodeOutcome<alloc::boxed::Box<(dyn core::any::Any + core::marker::Send + core::marker::Sync)>>, spark_core::error::CoreError>",
  "pub fn spark_core::codec::traits::object::TypedCodecAdapter<C>::descriptor(&self) -> &spark_core::CodecDescriptor",
  "pub fn spark_core::codec::traits::object::TypedCodecAdapter<C>::encode_dyn(&self, item: &(dyn core::any::Any + core::marker::Send + core::marker::Sync), ctx: &mut spark_core::EncodeContext<'_>) -> core::result::Result<spark_core::EncodedPayload, spark_core::error::CoreError>",
  "pub trait spark_core::codec::DynCodecFactory: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::codec::DynCodecFactory::descriptor(&self) -> &spark_core::CodecDescriptor",
  "pub fn spark_core::codec::DynCodecFactory::instantiate(&self, negotiated: &spark_core::NegotiatedCodec) -> core::result::Result<alloc::boxed::Box<dyn spark_core::codec::traits::object::DynCodec>, spark_core::error::CoreError>",
  "impl<C, F> spark_core::DynCodecFactory for spark_core::TypedCodecFactory<C, F> where C: spark_core::codec::traits::generic::Codec, F: core::ops::function::Fn(&spark_core::NegotiatedCodec) -> C + core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::TypedCodecFactory<C, F>::descriptor(&self) -> &spark_core::CodecDescriptor",
  "pub fn spark_core::TypedCodecFactory<C, F>::instantiate(&self, negotiated: &spark_core::NegotiatedCodec) -> core::result::Result<alloc::boxed::Box<dyn spark_core::codec::traits::object::DynCodec>, spark_core::error::CoreError>",
  "pub trait spark_core::codec::Encoder: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub type spark_core::codec::Encoder::Item: core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::codec::Encoder::descriptor(&self) -> &spark_core::CodecDescriptor",
  "pub fn spark_core::codec::Encoder::encode(&self, item: &Self::Item, ctx: &mut spark_core::EncodeContext<'_>) -> core::result::Result<spark_core::EncodedPayload, spark_core::error::CoreError>",
  "impl<T> spark_core::Encoder for T where T: spark_core::codec::traits::generic::Codec",
  "pub type T::Item = <T as spark_core::codec::traits::generic::Codec>::Outgoing",
  "pub fn T::descriptor(&self) -> &spark_core::CodecDescriptor",
  "pub fn T::encode(&self, item: &Self::Item, ctx: &mut spark_core::EncodeContext<'_>) -> core::result::Result<spark_core::EncodedPayload, spark_core::error::CoreError>",
  "pub mod spark_core::common",
  "pub struct spark_core::common::Empty",
  "impl core::clone::Clone for spark_core::common::Empty",
  "pub fn spark_core::common::Empty::clone(&self) -> spark_core::common::Empty",
  "impl core::fmt::Debug for spark_core::common::Empty",
  "pub fn spark_core::common::Empty::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::common::Empty",
  "impl core::marker::Freeze for spark_core::common::Empty",
  "impl core::marker::Send for spark_core::common::Empty",
  "impl core::marker::Sync for spark_core::common::Empty",
  "impl core::marker::Unpin for spark_core::common::Empty",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::common::Empty",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::common::Empty",
  "pub trait spark_core::common::IntoEmpty: Sealed",
  "pub fn spark_core::common::IntoEmpty::into_empty(self) -> spark_core::common::Empty",
  "impl spark_core::common::IntoEmpty for ()",
  "pub fn ()::into_empty(self) -> spark_core::common::Empty",
  "pub trait spark_core::common::Loopback: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::common::Loopback::fire_loopback_inbound(&self, event: impl core::any::Any + core::marker::Send + core::marker::Sync)",
  "pub fn spark_core::common::Loopback::fire_loopback_outbound(&self, event: impl core::any::Any + core::marker::Send + core::marker::Sync)",
  "pub fn spark_core::common::legacy_loopback_outbound<L: spark_core::common::Loopback + ?core::marker::Sized>(loopback: &L, event: impl core::any::Any + core::marker::Send + core::marker::Sync, logger: core::option::Option<&dyn spark_core::observability::logging::Logger>)",
  "pub mod spark_core::configuration",
  "pub enum spark_core::configuration::BuildErrorKind",
  "pub spark_core::configuration::BuildErrorKind::MissingProfile",
  "pub spark_core::configuration::BuildErrorKind::MissingSources",
  "pub spark_core::configuration::BuildErrorKind::ProfileExtendsDuplicate",
  "pub spark_core::configuration::BuildErrorKind::ProfileExtendsSelfReference",
  "pub spark_core::configuration::BuildErrorKind::SourceLoadFailure",
  "pub spark_core::configuration::BuildErrorKind::SourceLoadFailure::index: usize",
  "impl core::clone::Clone for spark_core::BuildErrorKind",
  "pub fn spark_core::BuildErrorKind::clone(&self) -> spark_core::BuildErrorKind",
  "impl core::cmp::Eq for spark_core::BuildErrorKind",
  "impl core::cmp::PartialEq for spark_core::BuildErrorKind",
  "pub fn spark_core::BuildErrorKind::eq(&self, other: &spark_core::BuildErrorKind) -> bool",
  "impl core::fmt::Debug for spark_core::BuildErrorKind",
  "pub fn spark_core::BuildErrorKind::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::BuildErrorKind",
  "pub fn spark_core::BuildErrorKind::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::BuildErrorKind",
  "impl core::marker::Freeze for spark_core::BuildErrorKind",
  "impl core::marker::Send for spark_core::BuildErrorKind",
  "impl core::marker::Sync for spark_core::BuildErrorKind",
  "impl core::marker::Unpin for spark_core::BuildErrorKind",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::BuildErrorKind",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::BuildErrorKind",
  "pub enum spark_core::configuration::BuildErrorStage",
  "pub spark_core::configuration::BuildErrorStage::Finalize",
  "pub spark_core::configuration::BuildErrorStage::Load",
  "pub spark_core::configuration::BuildErrorStage::Validation",
  "impl core::clone::Clone for spark_core::BuildErrorStage",
  "pub fn spark_core::BuildErrorStage::clone(&self) -> spark_core::BuildErrorStage",
  "impl core::cmp::Eq for spark_core::BuildErrorStage",
  "impl core::cmp::PartialEq for spark_core::BuildErrorStage",
  "pub fn spark_core::BuildErrorStage::eq(&self, other: &spark_core::BuildErrorStage) -> bool",
  "impl core::fmt::Debug for spark_core::BuildErrorStage",
  "pub fn spark_core::BuildErrorStage::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::BuildErrorStage",
  "pub fn spark_core::BuildErrorStage::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::BuildErrorStage",
  "impl core::marker::StructuralPartialEq for spark_core::BuildErrorStage",
  "impl core::marker::Freeze for spark_core::BuildErrorStage",
  "impl core::marker::Send for spark_core::BuildErrorStage",
  "impl core::marker::Sync for spark_core::BuildErrorStage",
  "impl core::marker::Unpin for spark_core::BuildErrorStage",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::BuildErrorStage",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::BuildErrorStage",
  "#[non_exhaustive] pub enum spark_core::configuration::ChangeEvent",
  "pub spark_core::configuration::ChangeEvent::Created",
  "pub spark_core::configuration::ChangeEvent::Created::key: spark_core::ConfigKey",
  "pub spark_core::configuration::ChangeEvent::Created::value: spark_core::ConfigValue",
  "pub spark_core::configuration::ChangeEvent::Deleted",
  "pub spark_core::configuration::ChangeEvent::Deleted::key: spark_core::ConfigKey",
  "pub spark_core::configuration::ChangeEvent::Updated",
  "pub spark_core::configuration::ChangeEvent::Updated::key: spark_core::ConfigKey",
  "pub spark_core::configuration::ChangeEvent::Updated::value: spark_core::ConfigValue",
  "impl core::clone::Clone for spark_core::ChangeEvent",
  "pub fn spark_core::ChangeEvent::clone(&self) -> spark_core::ChangeEvent",
  "impl core::cmp::PartialEq for spark_core::ChangeEvent",
  "pub fn spark_core::ChangeEvent::eq(&self, other: &spark_core::ChangeEvent) -> bool",
  "impl core::fmt::Debug for spark_core::ChangeEvent",
  "pub fn spark_core::ChangeEvent::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::ChangeEvent",
  "impl core::marker::Freeze for spark_core::ChangeEvent",
  "impl core::marker::Send for spark_core::ChangeEvent",
  "impl core::marker::Sync for spark_core::ChangeEvent",
  "impl core::marker::Unpin for spark_core::ChangeEvent",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ChangeEvent",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ChangeEvent",
  "pub enum spark_core::configuration::ConfigDelta",
  "pub spark_core::configuration::ConfigDelta::Change(spark_core::ChangeNotification)",
  "pub spark_core::configuration::ConfigDelta::Refresh(alloc::vec::Vec<spark_core::ConfigurationLayer>)",
  "impl core::clone::Clone for spark_core::ConfigDelta",
  "pub fn spark_core::ConfigDelta::clone(&self) -> spark_core::ConfigDelta",
  "impl core::cmp::PartialEq for spark_core::ConfigDelta",
  "pub fn spark_core::ConfigDelta::eq(&self, other: &spark_core::ConfigDelta) -> bool",
  "impl core::fmt::Debug for spark_core::ConfigDelta",
  "pub fn spark_core::ConfigDelta::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::ConfigDelta",
  "impl core::marker::Freeze for spark_core::ConfigDelta",
  "impl core::marker::Send for spark_core::ConfigDelta",
  "impl core::marker::Sync for spark_core::ConfigDelta",
  "impl core::marker::Unpin for spark_core::ConfigDelta",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ConfigDelta",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ConfigDelta",
  "#[non_exhaustive] pub enum spark_core::configuration::ConfigScope",
  "pub spark_core::configuration::ConfigScope::Cluster",
  "pub spark_core::configuration::ConfigScope::Global",
  "pub spark_core::configuration::ConfigScope::Node",
  "pub spark_core::configuration::ConfigScope::Runtime",
  "pub spark_core::configuration::ConfigScope::Session",
  "impl spark_core::ConfigScope",
  "pub const fn spark_core::ConfigScope::as_str(self) -> &'static str",
  "pub fn spark_core::ConfigScope::parse(value: &str) -> core::option::Option<Self>",
  "impl core::clone::Clone for spark_core::ConfigScope",
  "pub fn spark_core::ConfigScope::clone(&self) -> spark_core::ConfigScope",
  "impl core::cmp::Eq for spark_core::ConfigScope",
  "impl core::cmp::PartialEq for spark_core::ConfigScope",
  "pub fn spark_core::ConfigScope::eq(&self, other: &spark_core::ConfigScope) -> bool",
  "impl core::fmt::Debug for spark_core::ConfigScope",
  "pub fn spark_core::ConfigScope::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::ConfigScope",
  "pub fn spark_core::ConfigScope::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::ConfigScope",
  "pub fn spark_core::ConfigScope::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::Copy for spark_core::ConfigScope",
  "impl core::marker::StructuralPartialEq for spark_core::ConfigScope",
  "impl core::marker::Freeze for spark_core::ConfigScope",
  "impl core::marker::Send for spark_core::ConfigScope",
  "impl core::marker::Sync for spark_core::ConfigScope",
  "impl core::marker::Unpin for spark_core::ConfigScope",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ConfigScope",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ConfigScope",
  "#[non_exhaustive] pub enum spark_core::configuration::ConfigValue",
  "pub spark_core::configuration::ConfigValue::Binary(alloc::borrow::Cow<'static, [u8]>, spark_core::ConfigMetadata)",
  "pub spark_core::configuration::ConfigValue::Boolean(bool, spark_core::ConfigMetadata)",
  "pub spark_core::configuration::ConfigValue::Dictionary(alloc::vec::Vec<(alloc::borrow::Cow<'static, str>, spark_core::ConfigValue)>, spark_core::ConfigMetadata)",
  "pub spark_core::configuration::ConfigValue::Duration(core::time::Duration, spark_core::ConfigMetadata)",
  "pub spark_core::configuration::ConfigValue::Float(f64, spark_core::ConfigMetadata)",
  "pub spark_core::configuration::ConfigValue::Integer(i64, spark_core::ConfigMetadata)",
  "pub spark_core::configuration::ConfigValue::List(alloc::vec::Vec<spark_core::ConfigValue>, spark_core::ConfigMetadata)",
  "pub spark_core::configuration::ConfigValue::Text(alloc::borrow::Cow<'static, str>, spark_core::ConfigMetadata)",
  "impl spark_core::ConfigValue",
  "pub fn spark_core::ConfigValue::metadata(&self) -> &spark_core::ConfigMetadata",
  "impl core::clone::Clone for spark_core::ConfigValue",
  "pub fn spark_core::ConfigValue::clone(&self) -> spark_core::ConfigValue",
  "impl core::cmp::PartialEq for spark_core::ConfigValue",
  "pub fn spark_core::ConfigValue::eq(&self, other: &spark_core::ConfigValue) -> bool",
  "impl core::fmt::Debug for spark_core::ConfigValue",
  "pub fn spark_core::ConfigValue::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::ConfigValue",
  "impl core::marker::Freeze for spark_core::ConfigValue",
  "impl core::marker::Send for spark_core::ConfigValue",
  "impl core::marker::Sync for spark_core::ConfigValue",
  "impl core::marker::Unpin for spark_core::ConfigValue",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ConfigValue",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ConfigValue",
  "#[non_exhaustive] pub enum spark_core::configuration::ConfigurationError",
  "pub spark_core::configuration::ConfigurationError::Audit",
  "pub spark_core::configuration::ConfigurationError::Audit::context: alloc::borrow::Cow<'static, str>",
  "pub spark_core::configuration::ConfigurationError::Conflict",
  "pub spark_core::configuration::ConfigurationError::Conflict::context: alloc::borrow::Cow<'static, str>",
  "pub spark_core::configuration::ConfigurationError::Decode",
  "pub spark_core::configuration::ConfigurationError::Decode::context: alloc::borrow::Cow<'static, str>",
  "pub spark_core::configuration::ConfigurationError::Source",
  "pub spark_core::configuration::ConfigurationError::Source::context: alloc::borrow::Cow<'static, str>",
  "pub spark_core::configuration::ConfigurationError::Validation",
  "pub spark_core::configuration::ConfigurationError::Validation::context: alloc::borrow::Cow<'static, str>",
  "impl spark_core::ConfigurationError",
  "pub fn spark_core::ConfigurationError::context(&self) -> &str",
  "pub fn spark_core::ConfigurationError::kind(&self) -> spark_core::configuration::ConfigurationErrorKind",
  "pub fn spark_core::ConfigurationError::with_context<C>(kind: spark_core::configuration::ConfigurationErrorKind, context: C) -> Self where C: core::convert::Into<alloc::borrow::Cow<'static, str>>",
  "impl core::fmt::Debug for spark_core::ConfigurationError",
  "pub fn spark_core::ConfigurationError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::ConfigurationError",
  "pub fn spark_core::ConfigurationError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl spark_core::Error for spark_core::ConfigurationError",
  "pub fn spark_core::ConfigurationError::source(&self) -> core::option::Option<&(dyn spark_core::Error + 'static)>",
  "impl core::marker::Freeze for spark_core::ConfigurationError",
  "impl core::marker::Send for spark_core::ConfigurationError",
  "impl core::marker::Sync for spark_core::ConfigurationError",
  "impl core::marker::Unpin for spark_core::ConfigurationError",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ConfigurationError",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ConfigurationError",
  "#[non_exhaustive] pub enum spark_core::configuration::ConfigurationErrorKind",
  "pub spark_core::configuration::ConfigurationErrorKind::Audit",
  "pub spark_core::configuration::ConfigurationErrorKind::Conflict",
  "pub spark_core::configuration::ConfigurationErrorKind::Decode",
  "pub spark_core::configuration::ConfigurationErrorKind::Source",
  "pub spark_core::configuration::ConfigurationErrorKind::Validation",
  "impl core::clone::Clone for spark_core::configuration::ConfigurationErrorKind",
  "pub fn spark_core::configuration::ConfigurationErrorKind::clone(&self) -> spark_core::configuration::ConfigurationErrorKind",
  "impl core::cmp::Eq for spark_core::configuration::ConfigurationErrorKind",
  "impl core::cmp::PartialEq for spark_core::configuration::ConfigurationErrorKind",
  "pub fn spark_core::configuration::ConfigurationErrorKind::eq(&self, other: &spark_core::configuration::ConfigurationErrorKind) -> bool",
  "impl core::fmt::Debug for spark_core::configuration::ConfigurationErrorKind",
  "pub fn spark_core::configuration::ConfigurationErrorKind::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::configuration::ConfigurationErrorKind",
  "pub fn spark_core::configuration::ConfigurationErrorKind::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::configuration::ConfigurationErrorKind",
  "impl core::marker::StructuralPartialEq for spark_core::configuration::ConfigurationErrorKind",
  "impl core::marker::Freeze for spark_core::configuration::ConfigurationErrorKind",
  "impl core::marker::Send for spark_core::configuration::ConfigurationErrorKind",
  "impl core::marker::Sync for spark_core::configuration::ConfigurationErrorKind",
  "impl core::marker::Unpin for spark_core::configuration::ConfigurationErrorKind",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::configuration::ConfigurationErrorKind",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::configuration::ConfigurationErrorKind",
  "pub enum spark_core::configuration::ConfigurationUpdateKind",
  "pub spark_core::configuration::ConfigurationUpdateKind::Incremental",
  "pub spark_core::configuration::ConfigurationUpdateKind::Incremental::change_set: spark_core::ChangeSet",
  "pub spark_core::configuration::ConfigurationUpdateKind::Incremental::notification: spark_core::ChangeNotification",
  "pub spark_core::configuration::ConfigurationUpdateKind::Refresh",
  "impl core::clone::Clone for spark_core::ConfigurationUpdateKind",
  "pub fn spark_core::ConfigurationUpdateKind::clone(&self) -> spark_core::ConfigurationUpdateKind",
  "impl core::cmp::PartialEq for spark_core::ConfigurationUpdateKind",
  "pub fn spark_core::ConfigurationUpdateKind::eq(&self, other: &spark_core::ConfigurationUpdateKind) -> bool",
  "impl core::fmt::Debug for spark_core::ConfigurationUpdateKind",
  "pub fn spark_core::ConfigurationUpdateKind::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::ConfigurationUpdateKind",
  "impl core::marker::Freeze for spark_core::ConfigurationUpdateKind",
  "impl core::marker::Send for spark_core::ConfigurationUpdateKind",
  "impl core::marker::Sync for spark_core::ConfigurationUpdateKind",
  "impl core::marker::Unpin for spark_core::ConfigurationUpdateKind",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ConfigurationUpdateKind",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ConfigurationUpdateKind",
  "#[non_exhaustive] pub enum spark_core::configuration::ProfileLayering",
  "pub spark_core::configuration::ProfileLayering::BaseFirst",
  "pub spark_core::configuration::ProfileLayering::OverrideFirst",
  "impl core::clone::Clone for spark_core::ProfileLayering",
  "pub fn spark_core::ProfileLayering::clone(&self) -> spark_core::ProfileLayering",
  "impl core::cmp::Eq for spark_core::ProfileLayering",
  "impl core::cmp::PartialEq for spark_core::ProfileLayering",
  "pub fn spark_core::ProfileLayering::eq(&self, other: &spark_core::ProfileLayering) -> bool",
  "impl core::fmt::Debug for spark_core::ProfileLayering",
  "pub fn spark_core::ProfileLayering::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::ProfileLayering",
  "impl core::marker::StructuralPartialEq for spark_core::ProfileLayering",
  "impl core::marker::Freeze for spark_core::ProfileLayering",
  "impl core::marker::Send for spark_core::ProfileLayering",
  "impl core::marker::Sync for spark_core::ProfileLayering",
  "impl core::marker::Unpin for spark_core::ProfileLayering",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ProfileLayering",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ProfileLayering",
  "#[non_exhaustive] pub enum spark_core::configuration::SnapshotValue",
  "pub spark_core::configuration::SnapshotValue::Boolean(bool)",
  "pub spark_core::configuration::SnapshotValue::Dictionary(alloc::vec::Vec<(alloc::string::String, spark_core::SnapshotValue)>)",
  "pub spark_core::configuration::SnapshotValue::Duration(u128)",
  "pub spark_core::configuration::SnapshotValue::Float(u64)",
  "pub spark_core::configuration::SnapshotValue::Integer(i64)",
  "pub spark_core::configuration::SnapshotValue::List(alloc::vec::Vec<spark_core::SnapshotValue>)",
  "pub spark_core::configuration::SnapshotValue::Redacted",
  "pub spark_core::configuration::SnapshotValue::Text(alloc::string::String)",
  "impl core::clone::Clone for spark_core::SnapshotValue",
  "pub fn spark_core::SnapshotValue::clone(&self) -> spark_core::SnapshotValue",
  "impl core::cmp::Eq for spark_core::SnapshotValue",
  "impl core::cmp::PartialEq for spark_core::SnapshotValue",
  "pub fn spark_core::SnapshotValue::eq(&self, other: &spark_core::SnapshotValue) -> bool",
  "impl core::fmt::Debug for spark_core::SnapshotValue",
  "pub fn spark_core::SnapshotValue::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::SnapshotValue",
  "impl core::marker::Freeze for spark_core::SnapshotValue",
  "impl core::marker::Send for spark_core::SnapshotValue",
  "impl core::marker::Sync for spark_core::SnapshotValue",
  "impl core::marker::Unpin for spark_core::SnapshotValue",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::SnapshotValue",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::SnapshotValue",
  "#[non_exhaustive] pub enum spark_core::configuration::SourceRegistrationError",
  "pub spark_core::configuration::SourceRegistrationError::Capacity",
  "pub spark_core::configuration::SourceRegistrationError::Duplicate",
  "impl core::fmt::Debug for spark_core::configuration::SourceRegistrationError",
  "pub fn spark_core::configuration::SourceRegistrationError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::configuration::SourceRegistrationError",
  "pub fn spark_core::configuration::SourceRegistrationError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl spark_core::Error for spark_core::configuration::SourceRegistrationError",
  "pub fn spark_core::configuration::SourceRegistrationError::source(&self) -> core::option::Option<&(dyn spark_core::Error + 'static)>",
  "impl core::marker::Freeze for spark_core::configuration::SourceRegistrationError",
  "impl core::marker::Send for spark_core::configuration::SourceRegistrationError",
  "impl core::marker::Sync for spark_core::configuration::SourceRegistrationError",
  "impl core::marker::Unpin for spark_core::configuration::SourceRegistrationError",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::configuration::SourceRegistrationError",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::configuration::SourceRegistrationError",
  "pub enum spark_core::configuration::ValidationState",
  "pub spark_core::configuration::ValidationState::Failed",
  "pub spark_core::configuration::ValidationState::Passed",
  "impl core::clone::Clone for spark_core::ValidationState",
  "pub fn spark_core::ValidationState::clone(&self) -> spark_core::ValidationState",
  "impl core::cmp::Eq for spark_core::ValidationState",
  "impl core::cmp::PartialEq for spark_core::ValidationState",
  "pub fn spark_core::ValidationState::eq(&self, other: &spark_core::ValidationState) -> bool",
  "impl core::fmt::Debug for spark_core::ValidationState",
  "pub fn spark_core::ValidationState::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::ValidationState",
  "impl core::marker::StructuralPartialEq for spark_core::ValidationState",
  "impl core::marker::Freeze for spark_core::ValidationState",
  "impl core::marker::Send for spark_core::ValidationState",
  "impl core::marker::Sync for spark_core::ValidationState",
  "impl core::marker::Unpin for spark_core::ValidationState",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ValidationState",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ValidationState",
  "pub struct spark_core::configuration::BuildError",
  "impl spark_core::BuildError",
  "pub fn spark_core::BuildError::cause(&self) -> core::option::Option<&spark_core::ConfigurationError>",
  "pub fn spark_core::BuildError::kind(&self) -> &spark_core::BuildErrorKind",
  "pub fn spark_core::BuildError::report(&self) -> &spark_core::ValidationReport",
  "pub fn spark_core::BuildError::stage(&self) -> spark_core::BuildErrorStage",
  "impl core::fmt::Debug for spark_core::BuildError",
  "pub fn spark_core::BuildError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::BuildError",
  "pub fn spark_core::BuildError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl spark_core::Error for spark_core::BuildError",
  "pub fn spark_core::BuildError::source(&self) -> core::option::Option<&(dyn spark_core::Error + 'static)>",
  "impl core::marker::Freeze for spark_core::BuildError",
  "impl core::marker::Send for spark_core::BuildError",
  "impl core::marker::Sync for spark_core::BuildError",
  "impl core::marker::Unpin for spark_core::BuildError",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::BuildError",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::BuildError",
  "pub struct spark_core::configuration::BuildOutcome",
  "pub spark_core::configuration::BuildOutcome::handle: spark_core::ConfigurationHandle",
  "pub spark_core::configuration::BuildOutcome::initial: spark_core::ResolvedConfiguration",
  "pub spark_core::configuration::BuildOutcome::report: spark_core::BuildReport",
  "impl core::fmt::Debug for spark_core::BuildOutcome",
  "pub fn spark_core::BuildOutcome::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl !core::marker::Freeze for spark_core::BuildOutcome",
  "impl core::marker::Send for spark_core::BuildOutcome",
  "impl core::marker::Sync for spark_core::BuildOutcome",
  "impl core::marker::Unpin for spark_core::BuildOutcome",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::BuildOutcome",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::BuildOutcome",
  "pub struct spark_core::configuration::BuildReport",
  "impl spark_core::BuildReport",
  "pub fn spark_core::BuildReport::new(validation: spark_core::ValidationReport, snapshot: spark_core::ConfigurationSnapshot) -> Self",
  "pub fn spark_core::BuildReport::snapshot(&self) -> &spark_core::ConfigurationSnapshot",
  "pub fn spark_core::BuildReport::validation(&self) -> &spark_core::ValidationReport",
  "impl core::clone::Clone for spark_core::BuildReport",
  "pub fn spark_core::BuildReport::clone(&self) -> spark_core::BuildReport",
  "impl core::fmt::Debug for spark_core::BuildReport",
  "pub fn spark_core::BuildReport::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::BuildReport",
  "pub fn spark_core::BuildReport::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::BuildReport",
  "impl core::marker::Send for spark_core::BuildReport",
  "impl core::marker::Sync for spark_core::BuildReport",
  "impl core::marker::Unpin for spark_core::BuildReport",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::BuildReport",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::BuildReport",
  "pub struct spark_core::configuration::ChangeNotification",
  "pub spark_core::configuration::ChangeNotification::events: alloc::vec::Vec<spark_core::ChangeEvent>",
  "pub spark_core::configuration::ChangeNotification::occurred_at: u64",
  "pub spark_core::configuration::ChangeNotification::sequence: u64",
  "impl spark_core::ChangeNotification",
  "pub fn spark_core::ChangeNotification::new(sequence: u64, occurred_at: u64, events: alloc::vec::Vec<spark_core::ChangeEvent>) -> Self",
  "impl core::clone::Clone for spark_core::ChangeNotification",
  "pub fn spark_core::ChangeNotification::clone(&self) -> spark_core::ChangeNotification",
  "impl core::cmp::PartialEq for spark_core::ChangeNotification",
  "pub fn spark_core::ChangeNotification::eq(&self, other: &spark_core::ChangeNotification) -> bool",
  "impl core::fmt::Debug for spark_core::ChangeNotification",
  "pub fn spark_core::ChangeNotification::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::ChangeNotification",
  "impl core::marker::Freeze for spark_core::ChangeNotification",
  "impl core::marker::Send for spark_core::ChangeNotification",
  "impl core::marker::Sync for spark_core::ChangeNotification",
  "impl core::marker::Unpin for spark_core::ChangeNotification",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ChangeNotification",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ChangeNotification",
  "pub struct spark_core::configuration::ChangeSet",
  "pub spark_core::configuration::ChangeSet::created: alloc::vec::Vec<(spark_core::ConfigKey, spark_core::ConfigValue)>",
  "pub spark_core::configuration::ChangeSet::deleted: alloc::vec::Vec<spark_core::ConfigKey>",
  "pub spark_core::configuration::ChangeSet::updated: alloc::vec::Vec<(spark_core::ConfigKey, spark_core::ConfigValue)>",
  "impl core::clone::Clone for spark_core::ChangeSet",
  "pub fn spark_core::ChangeSet::clone(&self) -> spark_core::ChangeSet",
  "impl core::cmp::PartialEq for spark_core::ChangeSet",
  "pub fn spark_core::ChangeSet::eq(&self, other: &spark_core::ChangeSet) -> bool",
  "impl core::fmt::Debug for spark_core::ChangeSet",
  "pub fn spark_core::ChangeSet::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::ChangeSet",
  "impl core::marker::Freeze for spark_core::ChangeSet",
  "impl core::marker::Send for spark_core::ChangeSet",
  "impl core::marker::Sync for spark_core::ChangeSet",
  "impl core::marker::Unpin for spark_core::ChangeSet",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ChangeSet",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ChangeSet",
  "pub struct spark_core::configuration::ConfigKey",
  "impl spark_core::ConfigKey",
  "pub fn spark_core::ConfigKey::domain(&self) -> &str",
  "pub fn spark_core::ConfigKey::name(&self) -> &str",
  "pub fn spark_core::ConfigKey::new<D, N, S>(domain: D, name: N, scope: spark_core::ConfigScope, summary: S) -> Self where D: core::convert::Into<alloc::borrow::Cow<'static, str>>, N: core::convert::Into<alloc::borrow::Cow<'static, str>>, S: core::convert::Into<alloc::borrow::Cow<'static, str>>",
  "pub fn spark_core::ConfigKey::scope(&self) -> spark_core::ConfigScope",
  "pub fn spark_core::ConfigKey::summary(&self) -> &str",
  "impl core::clone::Clone for spark_core::ConfigKey",
  "pub fn spark_core::ConfigKey::clone(&self) -> spark_core::ConfigKey",
  "impl core::cmp::Eq for spark_core::ConfigKey",
  "impl core::cmp::Ord for spark_core::ConfigKey",
  "pub fn spark_core::ConfigKey::cmp(&self, other: &Self) -> core::cmp::Ordering",
  "impl core::cmp::PartialEq for spark_core::ConfigKey",
  "pub fn spark_core::ConfigKey::eq(&self, other: &spark_core::ConfigKey) -> bool",
  "impl core::cmp::PartialOrd for spark_core::ConfigKey",
  "pub fn spark_core::ConfigKey::partial_cmp(&self, other: &Self) -> core::option::Option<core::cmp::Ordering>",
  "impl core::convert::From<&spark_core::ConfigKey> for alloc::string::String",
  "pub fn alloc::string::String::from(value: &spark_core::ConfigKey) -> Self",
  "impl core::fmt::Debug for spark_core::ConfigKey",
  "pub fn spark_core::ConfigKey::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::ConfigKey",
  "pub fn spark_core::ConfigKey::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::ConfigKey",
  "pub fn spark_core::ConfigKey::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::StructuralPartialEq for spark_core::ConfigKey",
  "impl core::marker::Freeze for spark_core::ConfigKey",
  "impl core::marker::Send for spark_core::ConfigKey",
  "impl core::marker::Sync for spark_core::ConfigKey",
  "impl core::marker::Unpin for spark_core::ConfigKey",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ConfigKey",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ConfigKey",
  "pub struct spark_core::configuration::ConfigMetadata",
  "pub spark_core::configuration::ConfigMetadata::encrypted: bool",
  "pub spark_core::configuration::ConfigMetadata::experimental: bool",
  "pub spark_core::configuration::ConfigMetadata::hot_reloadable: bool",
  "pub spark_core::configuration::ConfigMetadata::tags: alloc::vec::Vec<(alloc::borrow::Cow<'static, str>, alloc::borrow::Cow<'static, str>)>",
  "impl core::clone::Clone for spark_core::ConfigMetadata",
  "pub fn spark_core::ConfigMetadata::clone(&self) -> spark_core::ConfigMetadata",
  "impl core::cmp::Eq for spark_core::ConfigMetadata",
  "impl core::cmp::PartialEq for spark_core::ConfigMetadata",
  "pub fn spark_core::ConfigMetadata::eq(&self, other: &spark_core::ConfigMetadata) -> bool",
  "impl core::default::Default for spark_core::ConfigMetadata",
  "pub fn spark_core::ConfigMetadata::default() -> spark_core::ConfigMetadata",
  "impl core::fmt::Debug for spark_core::ConfigMetadata",
  "pub fn spark_core::ConfigMetadata::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::ConfigMetadata",
  "impl core::marker::Freeze for spark_core::ConfigMetadata",
  "impl core::marker::Send for spark_core::ConfigMetadata",
  "impl core::marker::Sync for spark_core::ConfigMetadata",
  "impl core::marker::Unpin for spark_core::ConfigMetadata",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ConfigMetadata",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ConfigMetadata",
  "pub struct spark_core::configuration::ConfigurationBuilder",
  "impl spark_core::ConfigurationBuilder",
  "pub fn spark_core::ConfigurationBuilder::build(self) -> core::result::Result<spark_core::BuildOutcome, spark_core::BuildError>",
  "pub fn spark_core::ConfigurationBuilder::new() -> Self",
  "pub fn spark_core::ConfigurationBuilder::register_source(&mut self, source: alloc::boxed::Box<dyn spark_core::DynConfigurationSource>) -> core::result::Result<(), spark_core::configuration::SourceRegistrationError>",
  "pub fn spark_core::ConfigurationBuilder::register_source_static(&mut self, source: &'static dyn spark_core::DynConfigurationSource) -> core::result::Result<(), spark_core::configuration::SourceRegistrationError>",
  "pub fn spark_core::ConfigurationBuilder::with_audit_pipeline(self, pipeline: spark_core::audit::AuditPipeline) -> Self",
  "pub fn spark_core::ConfigurationBuilder::with_capacity(self, capacity: usize) -> Self",
  "pub fn spark_core::ConfigurationBuilder::with_profile(self, descriptor: spark_core::ProfileDescriptor) -> Self",
  "impl core::default::Default for spark_core::ConfigurationBuilder",
  "pub fn spark_core::ConfigurationBuilder::default() -> spark_core::ConfigurationBuilder",
  "impl core::marker::Freeze for spark_core::ConfigurationBuilder",
  "impl core::marker::Send for spark_core::ConfigurationBuilder",
  "impl core::marker::Sync for spark_core::ConfigurationBuilder",
  "impl core::marker::Unpin for spark_core::ConfigurationBuilder",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::ConfigurationBuilder",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::ConfigurationBuilder",
  "pub struct spark_core::configuration::ConfigurationHandle",
  "impl spark_core::ConfigurationHandle",
  "pub fn spark_core::ConfigurationHandle::profile(&self) -> &spark_core::ProfileDescriptor",
  "pub fn spark_core::ConfigurationHandle::snapshot(&self) -> spark_core::ResolvedConfiguration",
  "pub fn spark_core::ConfigurationHandle::watch(&mut self) -> core::result::Result<spark_core::ConfigurationWatch<'_>, spark_core::ConfigurationError>",
  "impl !core::marker::Freeze for spark_core::ConfigurationHandle",
  "impl core::marker::Send for spark_core::ConfigurationHandle",
  "impl core::marker::Sync for spark_core::ConfigurationHandle",
  "impl core::marker::Unpin for spark_core::ConfigurationHandle",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::ConfigurationHandle",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::ConfigurationHandle",
  "pub struct spark_core::configuration::ConfigurationLayer",
  "pub spark_core::configuration::ConfigurationLayer::entries: alloc::vec::Vec<(spark_core::ConfigKey, spark_core::ConfigValue)>",
  "pub spark_core::configuration::ConfigurationLayer::metadata: spark_core::SourceMetadata",
  "impl core::clone::Clone for spark_core::ConfigurationLayer",
  "pub fn spark_core::ConfigurationLayer::clone(&self) -> spark_core::ConfigurationLayer",
  "impl core::cmp::PartialEq for spark_core::ConfigurationLayer",
  "pub fn spark_core::ConfigurationLayer::eq(&self, other: &spark_core::ConfigurationLayer) -> bool",
  "impl core::fmt::Debug for spark_core::ConfigurationLayer",
  "pub fn spark_core::ConfigurationLayer::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::ConfigurationLayer",
  "impl core::marker::Freeze for spark_core::ConfigurationLayer",
  "impl core::marker::Send for spark_core::ConfigurationLayer",
  "impl core::marker::Sync for spark_core::ConfigurationLayer",
  "impl core::marker::Unpin for spark_core::ConfigurationLayer",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ConfigurationLayer",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ConfigurationLayer",
  "pub struct spark_core::configuration::ConfigurationSnapshot",
  "pub spark_core::configuration::ConfigurationSnapshot::entries: alloc::vec::Vec<spark_core::SnapshotEntry>",
  "pub spark_core::configuration::ConfigurationSnapshot::layers: alloc::vec::Vec<spark_core::SnapshotLayer>",
  "pub spark_core::configuration::ConfigurationSnapshot::profile: spark_core::SnapshotProfile",
  "pub spark_core::configuration::ConfigurationSnapshot::version: u64",
  "impl spark_core::ConfigurationSnapshot",
  "pub fn spark_core::ConfigurationSnapshot::capture(profile: &spark_core::ProfileDescriptor, layers: &[spark_core::ConfigurationLayer], resolved: &spark_core::ResolvedConfiguration) -> Self",
  "pub fn spark_core::ConfigurationSnapshot::to_json(&self) -> alloc::string::String",
  "impl core::clone::Clone for spark_core::ConfigurationSnapshot",
  "pub fn spark_core::ConfigurationSnapshot::clone(&self) -> spark_core::ConfigurationSnapshot",
  "impl core::cmp::Eq for spark_core::ConfigurationSnapshot",
  "impl core::cmp::PartialEq for spark_core::ConfigurationSnapshot",
  "pub fn spark_core::ConfigurationSnapshot::eq(&self, other: &spark_core::ConfigurationSnapshot) -> bool",
  "impl core::fmt::Debug for spark_core::ConfigurationSnapshot",
  "pub fn spark_core::ConfigurationSnapshot::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::ConfigurationSnapshot",
  "impl core::marker::Freeze for spark_core::ConfigurationSnapshot",
  "impl core::marker::Send for spark_core::ConfigurationSnapshot",
  "impl core::marker::Sync for spark_core::ConfigurationSnapshot",
  "impl core::marker::Unpin for spark_core::ConfigurationSnapshot",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ConfigurationSnapshot",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ConfigurationSnapshot",
  "pub struct spark_core::configuration::ConfigurationUpdate",
  "pub spark_core::configuration::ConfigurationUpdate::kind: spark_core::ConfigurationUpdateKind",
  "pub spark_core::configuration::ConfigurationUpdate::snapshot: spark_core::ResolvedConfiguration",
  "impl core::clone::Clone for spark_core::ConfigurationUpdate",
  "pub fn spark_core::ConfigurationUpdate::clone(&self) -> spark_core::ConfigurationUpdate",
  "impl core::cmp::PartialEq for spark_core::ConfigurationUpdate",
  "pub fn spark_core::ConfigurationUpdate::eq(&self, other: &spark_core::ConfigurationUpdate) -> bool",
  "impl core::fmt::Debug for spark_core::ConfigurationUpdate",
  "pub fn spark_core::ConfigurationUpdate::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::ConfigurationUpdate",
  "impl core::marker::Freeze for spark_core::ConfigurationUpdate",
  "impl core::marker::Send for spark_core::ConfigurationUpdate",
  "impl core::marker::Sync for spark_core::ConfigurationUpdate",
  "impl core::marker::Unpin for spark_core::ConfigurationUpdate",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ConfigurationUpdate",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ConfigurationUpdate",
  "pub struct spark_core::configuration::ConfigurationWatch<'a>",
  "impl<'a> spark_core::future::Stream for spark_core::ConfigurationWatch<'a>",
  "pub type spark_core::ConfigurationWatch<'a>::Item = core::result::Result<spark_core::ConfigurationUpdate, spark_core::ConfigurationError>",
  "pub fn spark_core::ConfigurationWatch<'a>::poll_next(self: core::pin::Pin<&mut Self>, cx: &mut core::task::wake::Context<'_>) -> core::task::poll::Poll<core::option::Option<Self::Item>>",
  "impl<'a> core::marker::Freeze for spark_core::ConfigurationWatch<'a>",
  "impl<'a> core::marker::Send for spark_core::ConfigurationWatch<'a>",
  "impl<'a> !core::marker::Sync for spark_core::ConfigurationWatch<'a>",
  "impl<'a> core::marker::Unpin for spark_core::ConfigurationWatch<'a>",
  "impl<'a> !core::panic::unwind_safe::RefUnwindSafe for spark_core::ConfigurationWatch<'a>",
  "impl<'a> !core::panic::unwind_safe::UnwindSafe for spark_core::ConfigurationWatch<'a>",
  "pub struct spark_core::configuration::LayeredConfiguration",
  "impl spark_core::LayeredConfiguration",
  "pub fn spark_core::LayeredConfiguration::apply_change(&mut self, notification: spark_core::ChangeNotification) -> core::result::Result<spark_core::ChangeSet, spark_core::ConfigurationError>",
  "pub fn spark_core::LayeredConfiguration::apply_refresh(&mut self, layers: alloc::vec::Vec<spark_core::ConfigurationLayer>) -> core::result::Result<spark_core::ResolvedConfiguration, spark_core::ConfigurationError>",
  "impl spark_core::LayeredConfiguration",
  "pub fn spark_core::LayeredConfiguration::new(profile: spark_core::ProfileId, layering: spark_core::ProfileLayering) -> Self",
  "pub fn spark_core::LayeredConfiguration::profile(&self) -> &spark_core::ProfileId",
  "pub fn spark_core::LayeredConfiguration::push_layer(&mut self, layer: spark_core::ConfigurationLayer)",
  "pub fn spark_core::LayeredConfiguration::resolve(&self) -> spark_core::ResolvedConfiguration",
  "impl !core::marker::Freeze for spark_core::LayeredConfiguration",
  "impl core::marker::Send for spark_core::LayeredConfiguration",
  "impl core::marker::Sync for spark_core::LayeredConfiguration",
  "impl core::marker::Unpin for spark_core::LayeredConfiguration",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::LayeredConfiguration",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::LayeredConfiguration",
  "pub struct spark_core::configuration::NoopConfigStream",
  "impl spark_core::NoopConfigStream",
  "pub const fn spark_core::NoopConfigStream::new() -> Self",
  "impl core::default::Default for spark_core::NoopConfigStream",
  "pub fn spark_core::NoopConfigStream::default() -> Self",
  "impl spark_core::future::Stream for spark_core::NoopConfigStream",
  "pub type spark_core::NoopConfigStream::Item = spark_core::ConfigDelta",
  "pub fn spark_core::NoopConfigStream::poll_next(self: core::pin::Pin<&mut Self>, _cx: &mut core::task::wake::Context<'_>) -> core::task::poll::Poll<core::option::Option<Self::Item>>",
  "impl core::marker::Freeze for spark_core::NoopConfigStream",
  "impl core::marker::Send for spark_core::NoopConfigStream",
  "impl core::marker::Sync for spark_core::NoopConfigStream",
  "impl core::marker::Unpin for spark_core::NoopConfigStream",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::NoopConfigStream",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::NoopConfigStream",
  "pub struct spark_core::configuration::ProfileDescriptor",
  "pub spark_core::configuration::ProfileDescriptor::extends: alloc::vec::Vec<spark_core::ProfileId>",
  "pub spark_core::configuration::ProfileDescriptor::identifier: spark_core::ProfileId",
  "pub spark_core::configuration::ProfileDescriptor::layering: spark_core::ProfileLayering",
  "pub spark_core::configuration::ProfileDescriptor::summary: alloc::borrow::Cow<'static, str>",
  "impl spark_core::ProfileDescriptor",
  "pub fn spark_core::ProfileDescriptor::new<S>(identifier: spark_core::ProfileId, extends: alloc::vec::Vec<spark_core::ProfileId>, layering: spark_core::ProfileLayering, summary: S) -> Self where S: core::convert::Into<alloc::borrow::Cow<'static, str>>",
  "impl core::clone::Clone for spark_core::ProfileDescriptor",
  "pub fn spark_core::ProfileDescriptor::clone(&self) -> spark_core::ProfileDescriptor",
  "impl core::fmt::Debug for spark_core::ProfileDescriptor",
  "pub fn spark_core::ProfileDescriptor::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::ProfileDescriptor",
  "impl core::marker::Send for spark_core::ProfileDescriptor",
  "impl core::marker::Sync for spark_core::ProfileDescriptor",
  "impl core::marker::Unpin for spark_core::ProfileDescriptor",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ProfileDescriptor",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ProfileDescriptor",
  "pub struct spark_core::configuration::ProfileId(_)",
  "impl spark_core::ProfileId",
  "pub fn spark_core::ProfileId::as_str(&self) -> &str",
  "pub fn spark_core::ProfileId::new<N>(name: N) -> Self where N: core::convert::Into<alloc::borrow::Cow<'static, str>>",
  "impl core::clone::Clone for spark_core::ProfileId",
  "pub fn spark_core::ProfileId::clone(&self) -> spark_core::ProfileId",
  "impl core::cmp::Eq for spark_core::ProfileId",
  "impl core::cmp::PartialEq for spark_core::ProfileId",
  "pub fn spark_core::ProfileId::eq(&self, other: &spark_core::ProfileId) -> bool",
  "impl core::fmt::Debug for spark_core::ProfileId",
  "pub fn spark_core::ProfileId::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::ProfileId",
  "pub fn spark_core::ProfileId::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::StructuralPartialEq for spark_core::ProfileId",
  "impl core::marker::Freeze for spark_core::ProfileId",
  "impl core::marker::Send for spark_core::ProfileId",
  "impl core::marker::Sync for spark_core::ProfileId",
  "impl core::marker::Unpin for spark_core::ProfileId",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ProfileId",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ProfileId",
  "pub struct spark_core::configuration::ResolvedConfiguration",
  "pub spark_core::configuration::ResolvedConfiguration::values: alloc::collections::btree::map::BTreeMap<spark_core::ConfigKey, spark_core::ConfigValue>",
  "pub spark_core::configuration::ResolvedConfiguration::version: u64",
  "impl core::clone::Clone for spark_core::ResolvedConfiguration",
  "pub fn spark_core::ResolvedConfiguration::clone(&self) -> spark_core::ResolvedConfiguration",
  "impl core::cmp::PartialEq for spark_core::ResolvedConfiguration",
  "pub fn spark_core::ResolvedConfiguration::eq(&self, other: &spark_core::ResolvedConfiguration) -> bool",
  "impl core::fmt::Debug for spark_core::ResolvedConfiguration",
  "pub fn spark_core::ResolvedConfiguration::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::ResolvedConfiguration",
  "impl core::marker::Freeze for spark_core::ResolvedConfiguration",
  "impl core::marker::Send for spark_core::ResolvedConfiguration",
  "impl core::marker::Sync for spark_core::ResolvedConfiguration",
  "impl core::marker::Unpin for spark_core::ResolvedConfiguration",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ResolvedConfiguration",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ResolvedConfiguration",
  "pub struct spark_core::configuration::SnapshotEntry",
  "pub spark_core::configuration::SnapshotEntry::key: alloc::string::String",
  "pub spark_core::configuration::SnapshotEntry::metadata: spark_core::SnapshotMetadata",
  "pub spark_core::configuration::SnapshotEntry::value: spark_core::SnapshotValue",
  "impl spark_core::SnapshotEntry",
  "pub fn spark_core::SnapshotEntry::from_key_value(key: &spark_core::ConfigKey, value: &spark_core::ConfigValue) -> Self",
  "impl core::clone::Clone for spark_core::SnapshotEntry",
  "pub fn spark_core::SnapshotEntry::clone(&self) -> spark_core::SnapshotEntry",
  "impl core::cmp::Eq for spark_core::SnapshotEntry",
  "impl core::cmp::PartialEq for spark_core::SnapshotEntry",
  "pub fn spark_core::SnapshotEntry::eq(&self, other: &spark_core::SnapshotEntry) -> bool",
  "impl core::fmt::Debug for spark_core::SnapshotEntry",
  "pub fn spark_core::SnapshotEntry::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::SnapshotEntry",
  "impl core::marker::Freeze for spark_core::SnapshotEntry",
  "impl core::marker::Send for spark_core::SnapshotEntry",
  "impl core::marker::Sync for spark_core::SnapshotEntry",
  "impl core::marker::Unpin for spark_core::SnapshotEntry",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::SnapshotEntry",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::SnapshotEntry",
  "pub struct spark_core::configuration::SnapshotLayer",
  "pub spark_core::configuration::SnapshotLayer::name: alloc::string::String",
  "pub spark_core::configuration::SnapshotLayer::priority: u16",
  "pub spark_core::configuration::SnapshotLayer::version: core::option::Option<alloc::string::String>",
  "impl core::clone::Clone for spark_core::SnapshotLayer",
  "pub fn spark_core::SnapshotLayer::clone(&self) -> spark_core::SnapshotLayer",
  "impl core::cmp::Eq for spark_core::SnapshotLayer",
  "impl core::cmp::PartialEq for spark_core::SnapshotLayer",
  "pub fn spark_core::SnapshotLayer::eq(&self, other: &spark_core::SnapshotLayer) -> bool",
  "impl core::fmt::Debug for spark_core::SnapshotLayer",
  "pub fn spark_core::SnapshotLayer::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::SnapshotLayer",
  "impl core::marker::Freeze for spark_core::SnapshotLayer",
  "impl core::marker::Send for spark_core::SnapshotLayer",
  "impl core::marker::Sync for spark_core::SnapshotLayer",
  "impl core::marker::Unpin for spark_core::SnapshotLayer",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::SnapshotLayer",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::SnapshotLayer",
  "pub struct spark_core::configuration::SnapshotMetadata",
  "pub spark_core::configuration::SnapshotMetadata::encrypted: bool",
  "pub spark_core::configuration::SnapshotMetadata::experimental: bool",
  "pub spark_core::configuration::SnapshotMetadata::hot_reloadable: bool",
  "pub spark_core::configuration::SnapshotMetadata::tags: alloc::vec::Vec<(alloc::string::String, alloc::string::String)>",
  "impl core::clone::Clone for spark_core::SnapshotMetadata",
  "pub fn spark_core::SnapshotMetadata::clone(&self) -> spark_core::SnapshotMetadata",
  "impl core::cmp::Eq for spark_core::SnapshotMetadata",
  "impl core::cmp::PartialEq for spark_core::SnapshotMetadata",
  "pub fn spark_core::SnapshotMetadata::eq(&self, other: &spark_core::SnapshotMetadata) -> bool",
  "impl core::fmt::Debug for spark_core::SnapshotMetadata",
  "pub fn spark_core::SnapshotMetadata::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::SnapshotMetadata",
  "impl core::marker::Freeze for spark_core::SnapshotMetadata",
  "impl core::marker::Send for spark_core::SnapshotMetadata",
  "impl core::marker::Sync for spark_core::SnapshotMetadata",
  "impl core::marker::Unpin for spark_core::SnapshotMetadata",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::SnapshotMetadata",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::SnapshotMetadata",
  "pub struct spark_core::configuration::SnapshotProfile",
  "pub spark_core::configuration::SnapshotProfile::extends: alloc::vec::Vec<alloc::string::String>",
  "pub spark_core::configuration::SnapshotProfile::identifier: alloc::string::String",
  "pub spark_core::configuration::SnapshotProfile::layering: &'static str",
  "pub spark_core::configuration::SnapshotProfile::summary: alloc::string::String",
  "impl core::clone::Clone for spark_core::SnapshotProfile",
  "pub fn spark_core::SnapshotProfile::clone(&self) -> spark_core::SnapshotProfile",
  "impl core::cmp::Eq for spark_core::SnapshotProfile",
  "impl core::cmp::PartialEq for spark_core::SnapshotProfile",
  "pub fn spark_core::SnapshotProfile::eq(&self, other: &spark_core::SnapshotProfile) -> bool",
  "impl core::fmt::Debug for spark_core::SnapshotProfile",
  "pub fn spark_core::SnapshotProfile::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::SnapshotProfile",
  "impl core::marker::Freeze for spark_core::SnapshotProfile",
  "impl core::marker::Send for spark_core::SnapshotProfile",
  "impl core::marker::Sync for spark_core::SnapshotProfile",
  "impl core::marker::Unpin for spark_core::SnapshotProfile",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::SnapshotProfile",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::SnapshotProfile",
  "pub struct spark_core::configuration::SourceMetadata",
  "pub spark_core::configuration::SourceMetadata::name: alloc::borrow::Cow<'static, str>",
  "pub spark_core::configuration::SourceMetadata::priority: u16",
  "pub spark_core::configuration::SourceMetadata::version: core::option::Option<alloc::borrow::Cow<'static, str>>",
  "impl spark_core::SourceMetadata",
  "pub fn spark_core::SourceMetadata::new<N>(name: N, priority: u16, version: core::option::Option<alloc::borrow::Cow<'static, str>>) -> Self where N: core::convert::Into<alloc::borrow::Cow<'static, str>>",
  "impl core::clone::Clone for spark_core::SourceMetadata",
  "pub fn spark_core::SourceMetadata::clone(&self) -> spark_core::SourceMetadata",
  "impl core::cmp::Eq for spark_core::SourceMetadata",
  "impl core::cmp::PartialEq for spark_core::SourceMetadata",
  "pub fn spark_core::SourceMetadata::eq(&self, other: &spark_core::SourceMetadata) -> bool",
  "impl core::fmt::Debug for spark_core::SourceMetadata",
  "pub fn spark_core::SourceMetadata::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::SourceMetadata",
  "impl core::marker::Freeze for spark_core::SourceMetadata",
  "impl core::marker::Send for spark_core::SourceMetadata",
  "impl core::marker::Sync for spark_core::SourceMetadata",
  "impl core::marker::Unpin for spark_core::SourceMetadata",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::SourceMetadata",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::SourceMetadata",
  "pub struct spark_core::configuration::ValidationFinding",
  "impl spark_core::ValidationFinding",
  "pub fn spark_core::ValidationFinding::check(&self) -> &str",
  "pub fn spark_core::ValidationFinding::detail(&self) -> &str",
  "pub fn spark_core::ValidationFinding::new<C, D>(check: C, state: spark_core::ValidationState, detail: D) -> Self where C: core::convert::Into<alloc::borrow::Cow<'static, str>>, D: core::convert::Into<alloc::borrow::Cow<'static, str>>",
  "pub fn spark_core::ValidationFinding::state(&self) -> spark_core::ValidationState",
  "impl core::clone::Clone for spark_core::ValidationFinding",
  "pub fn spark_core::ValidationFinding::clone(&self) -> spark_core::ValidationFinding",
  "impl core::cmp::Eq for spark_core::ValidationFinding",
  "impl core::cmp::PartialEq for spark_core::ValidationFinding",
  "pub fn spark_core::ValidationFinding::eq(&self, other: &spark_core::ValidationFinding) -> bool",
  "impl core::fmt::Debug for spark_core::ValidationFinding",
  "pub fn spark_core::ValidationFinding::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::ValidationFinding",
  "impl core::marker::Freeze for spark_core::ValidationFinding",
  "impl core::marker::Send for spark_core::ValidationFinding",
  "impl core::marker::Sync for spark_core::ValidationFinding",
  "impl core::marker::Unpin for spark_core::ValidationFinding",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ValidationFinding",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ValidationFinding",
  "pub struct spark_core::configuration::ValidationReport",
  "impl spark_core::ValidationReport",
  "pub fn spark_core::ValidationReport::failed_count(&self) -> usize",
  "pub fn spark_core::ValidationReport::findings(&self) -> &[spark_core::ValidationFinding]",
  "pub fn spark_core::ValidationReport::new() -> Self",
  "pub fn spark_core::ValidationReport::passed_count(&self) -> usize",
  "pub fn spark_core::ValidationReport::push(&mut self, finding: spark_core::ValidationFinding)",
  "pub fn spark_core::ValidationReport::record_fail<C, D>(&mut self, check: C, detail: D) where C: core::convert::Into<alloc::borrow::Cow<'static, str>>, D: core::convert::Into<alloc::borrow::Cow<'static, str>>",
  "pub fn spark_core::ValidationReport::record_pass<C, D>(&mut self, check: C, detail: D) where C: core::convert::Into<alloc::borrow::Cow<'static, str>>, D: core::convert::Into<alloc::borrow::Cow<'static, str>>",
  "impl core::clone::Clone for spark_core::ValidationReport",
  "pub fn spark_core::ValidationReport::clone(&self) -> spark_core::ValidationReport",
  "impl core::cmp::Eq for spark_core::ValidationReport",
  "impl core::cmp::PartialEq for spark_core::ValidationReport",
  "pub fn spark_core::ValidationReport::eq(&self, other: &spark_core::ValidationReport) -> bool",
  "impl core::default::Default for spark_core::ValidationReport",
  "pub fn spark_core::ValidationReport::default() -> spark_core::ValidationReport",
  "impl core::fmt::Debug for spark_core::ValidationReport",
  "pub fn spark_core::ValidationReport::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::ValidationReport",
  "pub fn spark_core::ValidationReport::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::ValidationReport",
  "impl core::marker::Freeze for spark_core::ValidationReport",
  "impl core::marker::Send for spark_core::ValidationReport",
  "impl core::marker::Sync for spark_core::ValidationReport",
  "impl core::marker::Unpin for spark_core::ValidationReport",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ValidationReport",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ValidationReport",
  "pub trait spark_core::configuration::ConfigurationSource: core::marker::Send + core::marker::Sync + Sealed",
  "pub type spark_core::configuration::ConfigurationSource::Stream<'a> where Self: 'a: spark_core::future::Stream<Item = spark_core::ConfigDelta> + core::marker::Send + 'a",
  "pub fn spark_core::configuration::ConfigurationSource::load(&self, profile: &spark_core::ProfileId) -> core::result::Result<alloc::vec::Vec<spark_core::ConfigurationLayer>, spark_core::ConfigurationError>",
  "pub fn spark_core::configuration::ConfigurationSource::watch<'a>(&'a self, profile: &spark_core::ProfileId) -> core::result::Result<Self::Stream, spark_core::ConfigurationError>",
  "pub fn spark_core::configuration::ConfigurationSource::watch_boxed<'a>(&'a self, profile: &spark_core::ProfileId) -> core::result::Result<spark_core::future::BoxStream<'a, spark_core::ConfigDelta>, spark_core::ConfigurationError> where Self::Stream: core::marker::Sized",
  "pub trait spark_core::configuration::DynConfigurationSource: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::configuration::DynConfigurationSource::load_dyn(&self, profile: &spark_core::ProfileId) -> core::result::Result<alloc::vec::Vec<spark_core::ConfigurationLayer>, spark_core::ConfigurationError>",
  "pub fn spark_core::configuration::DynConfigurationSource::watch_dyn<'a>(&'a self, profile: &spark_core::ProfileId) -> core::result::Result<spark_core::future::BoxStream<'a, spark_core::ConfigDelta>, spark_core::ConfigurationError>",
  "impl<T> spark_core::DynConfigurationSource for T where T: spark_core::ConfigurationSource, for<'a> <T as spark_core::ConfigurationSource>::Stream: core::marker::Sized",
  "pub fn T::load_dyn(&self, profile: &spark_core::ProfileId) -> core::result::Result<alloc::vec::Vec<spark_core::ConfigurationLayer>, spark_core::ConfigurationError>",
  "pub fn T::watch_dyn<'a>(&'a self, profile: &spark_core::ProfileId) -> core::result::Result<spark_core::future::BoxStream<'a, spark_core::ConfigDelta>, spark_core::ConfigurationError>",
  "pub mod spark_core::context",
  "pub struct spark_core::context::ExecutionContext<'a>",
  "impl<'a> spark_core::context::ExecutionContext<'a>",
  "pub fn spark_core::context::ExecutionContext<'a>::budget(&self, kind: &spark_core::contract::BudgetKind) -> core::option::Option<&'a spark_core::contract::Budget>",
  "pub fn spark_core::context::ExecutionContext<'a>::budgets(&self) -> core::slice::iter::Iter<'a, spark_core::contract::Budget>",
  "pub fn spark_core::context::ExecutionContext<'a>::cancellation(&self) -> &'a spark_core::contract::Cancellation",
  "pub fn spark_core::context::ExecutionContext<'a>::deadline(&self) -> spark_core::contract::Deadline",
  "pub fn spark_core::context::ExecutionContext<'a>::new(cancellation: &'a spark_core::contract::Cancellation, deadline: spark_core::contract::Deadline, budgets: &'a [spark_core::contract::Budget]) -> Self",
  "impl<'a> core::clone::Clone for spark_core::context::ExecutionContext<'a>",
  "pub fn spark_core::context::ExecutionContext<'a>::clone(&self) -> spark_core::context::ExecutionContext<'a>",
  "impl<'a> core::convert::From<&'a spark_core::contract::CallContext> for spark_core::context::ExecutionContext<'a>",
  "pub fn spark_core::context::ExecutionContext<'a>::from(ctx: &'a spark_core::contract::CallContext) -> Self",
  "impl<'a> core::marker::Copy for spark_core::context::ExecutionContext<'a>",
  "impl<'a> core::marker::Freeze for spark_core::context::ExecutionContext<'a>",
  "impl<'a> core::marker::Send for spark_core::context::ExecutionContext<'a>",
  "impl<'a> core::marker::Sync for spark_core::context::ExecutionContext<'a>",
  "impl<'a> core::marker::Unpin for spark_core::context::ExecutionContext<'a>",
  "impl<'a> core::panic::unwind_safe::RefUnwindSafe for spark_core::context::ExecutionContext<'a>",
  "impl<'a> core::panic::unwind_safe::UnwindSafe for spark_core::context::ExecutionContext<'a>",
  "pub mod spark_core::contract",
  "#[non_exhaustive] pub enum spark_core::contract::BudgetDecision",
  "pub spark_core::contract::BudgetDecision::Exhausted",
  "pub spark_core::contract::BudgetDecision::Exhausted::snapshot: spark_core::contract::BudgetSnapshot",
  "pub spark_core::contract::BudgetDecision::Granted",
  "pub spark_core::contract::BudgetDecision::Granted::snapshot: spark_core::contract::BudgetSnapshot",
  "impl spark_core::contract::BudgetDecision",
  "pub fn spark_core::contract::BudgetDecision::is_granted(&self) -> bool",
  "pub fn spark_core::contract::BudgetDecision::snapshot(&self) -> &spark_core::contract::BudgetSnapshot",
  "impl core::clone::Clone for spark_core::contract::BudgetDecision",
  "pub fn spark_core::contract::BudgetDecision::clone(&self) -> spark_core::contract::BudgetDecision",
  "impl core::cmp::Eq for spark_core::contract::BudgetDecision",
  "impl core::cmp::PartialEq for spark_core::contract::BudgetDecision",
  "pub fn spark_core::contract::BudgetDecision::eq(&self, other: &spark_core::contract::BudgetDecision) -> bool",
  "impl core::fmt::Debug for spark_core::contract::BudgetDecision",
  "pub fn spark_core::contract::BudgetDecision::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::contract::BudgetDecision",
  "impl core::marker::Freeze for spark_core::contract::BudgetDecision",
  "impl core::marker::Send for spark_core::contract::BudgetDecision",
  "impl core::marker::Sync for spark_core::contract::BudgetDecision",
  "impl core::marker::Unpin for spark_core::contract::BudgetDecision",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::contract::BudgetDecision",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::contract::BudgetDecision",
  "#[non_exhaustive] pub enum spark_core::contract::BudgetKind",
  "pub spark_core::contract::BudgetKind::Custom(alloc::sync::Arc<str>)",
  "pub spark_core::contract::BudgetKind::Decode",
  "pub spark_core::contract::BudgetKind::Flow",
  "impl spark_core::contract::BudgetKind",
  "pub fn spark_core::contract::BudgetKind::custom(name: impl core::convert::Into<alloc::sync::Arc<str>>) -> Self",
  "impl core::clone::Clone for spark_core::contract::BudgetKind",
  "pub fn spark_core::contract::BudgetKind::clone(&self) -> spark_core::contract::BudgetKind",
  "impl core::cmp::Eq for spark_core::contract::BudgetKind",
  "impl core::cmp::PartialEq for spark_core::contract::BudgetKind",
  "pub fn spark_core::contract::BudgetKind::eq(&self, other: &spark_core::contract::BudgetKind) -> bool",
  "impl core::fmt::Debug for spark_core::contract::BudgetKind",
  "pub fn spark_core::contract::BudgetKind::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::contract::BudgetKind",
  "pub fn spark_core::contract::BudgetKind::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::StructuralPartialEq for spark_core::contract::BudgetKind",
  "impl core::marker::Freeze for spark_core::contract::BudgetKind",
  "impl core::marker::Send for spark_core::contract::BudgetKind",
  "impl core::marker::Sync for spark_core::contract::BudgetKind",
  "impl core::marker::Unpin for spark_core::contract::BudgetKind",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::contract::BudgetKind",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::contract::BudgetKind",
  "pub struct spark_core::contract::Budget",
  "impl spark_core::contract::Budget",
  "pub fn spark_core::contract::Budget::kind(&self) -> &spark_core::contract::BudgetKind",
  "pub fn spark_core::contract::Budget::limit(&self) -> u64",
  "pub fn spark_core::contract::Budget::new(kind: spark_core::contract::BudgetKind, limit: u64) -> Self",
  "pub fn spark_core::contract::Budget::refund(&self, amount: u64)",
  "pub fn spark_core::contract::Budget::remaining(&self) -> u64",
  "pub fn spark_core::contract::Budget::snapshot(&self) -> spark_core::contract::BudgetSnapshot",
  "pub fn spark_core::contract::Budget::try_consume(&self, amount: u64) -> spark_core::contract::BudgetDecision",
  "pub fn spark_core::contract::Budget::unbounded(kind: spark_core::contract::BudgetKind) -> Self",
  "impl core::clone::Clone for spark_core::contract::Budget",
  "pub fn spark_core::contract::Budget::clone(&self) -> spark_core::contract::Budget",
  "impl core::fmt::Debug for spark_core::contract::Budget",
  "pub fn spark_core::contract::Budget::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::contract::Budget",
  "impl core::marker::Send for spark_core::contract::Budget",
  "impl core::marker::Sync for spark_core::contract::Budget",
  "impl core::marker::Unpin for spark_core::contract::Budget",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::contract::Budget",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::contract::Budget",
  "pub struct spark_core::contract::BudgetSnapshot",
  "impl spark_core::contract::BudgetSnapshot",
  "pub fn spark_core::contract::BudgetSnapshot::kind(&self) -> &spark_core::contract::BudgetKind",
  "pub fn spark_core::contract::BudgetSnapshot::limit(&self) -> u64",
  "pub fn spark_core::contract::BudgetSnapshot::new(kind: spark_core::contract::BudgetKind, remaining: u64, limit: u64) -> Self",
  "pub fn spark_core::contract::BudgetSnapshot::remaining(&self) -> u64",
  "impl core::clone::Clone for spark_core::contract::BudgetSnapshot",
  "pub fn spark_core::contract::BudgetSnapshot::clone(&self) -> spark_core::contract::BudgetSnapshot",
  "impl core::cmp::Eq for spark_core::contract::BudgetSnapshot",
  "impl core::cmp::PartialEq for spark_core::contract::BudgetSnapshot",
  "pub fn spark_core::contract::BudgetSnapshot::eq(&self, other: &spark_core::contract::BudgetSnapshot) -> bool",
  "impl core::convert::From<&spark_core::contract::BudgetSnapshot> for spark_core::status::ready::SubscriptionBudget",
  "pub fn spark_core::status::ready::SubscriptionBudget::from(snapshot: &spark_core::contract::BudgetSnapshot) -> Self",
  "impl core::fmt::Debug for spark_core::contract::BudgetSnapshot",
  "pub fn spark_core::contract::BudgetSnapshot::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::contract::BudgetSnapshot",
  "impl core::marker::Freeze for spark_core::contract::BudgetSnapshot",
  "impl core::marker::Send for spark_core::contract::BudgetSnapshot",
  "impl core::marker::Sync for spark_core::contract::BudgetSnapshot",
  "impl core::marker::Unpin for spark_core::contract::BudgetSnapshot",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::contract::BudgetSnapshot",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::contract::BudgetSnapshot",
  "pub struct spark_core::contract::CallContext",
  "impl spark_core::contract::CallContext",
  "pub fn spark_core::contract::CallContext::budget(&self, kind: &spark_core::contract::BudgetKind) -> core::option::Option<spark_core::contract::Budget>",
  "pub fn spark_core::contract::CallContext::budgets(&self) -> impl core::iter::traits::iterator::Iterator<Item = &spark_core::contract::Budget>",
  "pub fn spark_core::contract::CallContext::builder() -> spark_core::contract::CallContextBuilder",
  "pub fn spark_core::contract::CallContext::cancellation(&self) -> &spark_core::contract::Cancellation",
  "pub fn spark_core::contract::CallContext::deadline(&self) -> spark_core::contract::Deadline",
  "pub fn spark_core::contract::CallContext::execution(&self) -> spark_core::context::ExecutionContext<'_>",
  "pub fn spark_core::contract::CallContext::observability(&self) -> &spark_core::contract::ObservabilityContract",
  "pub fn spark_core::contract::CallContext::security(&self) -> &spark_core::contract::SecurityContextSnapshot",
  "pub fn spark_core::contract::CallContext::trace_context(&self) -> &spark_core::observability::trace::TraceContext",
  "impl core::clone::Clone for spark_core::contract::CallContext",
  "pub fn spark_core::contract::CallContext::clone(&self) -> spark_core::contract::CallContext",
  "impl core::fmt::Debug for spark_core::contract::CallContext",
  "pub fn spark_core::contract::CallContext::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::contract::CallContext",
  "pub fn spark_core::contract::CallContext::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<'a> core::convert::From<&'a spark_core::contract::CallContext> for spark_core::context::ExecutionContext<'a>",
  "pub fn spark_core::context::ExecutionContext<'a>::from(ctx: &'a spark_core::contract::CallContext) -> Self",
  "impl core::marker::Freeze for spark_core::contract::CallContext",
  "impl core::marker::Send for spark_core::contract::CallContext",
  "impl core::marker::Sync for spark_core::contract::CallContext",
  "impl core::marker::Unpin for spark_core::contract::CallContext",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::contract::CallContext",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::contract::CallContext",
  "pub struct spark_core::contract::CallContextBuilder",
  "impl spark_core::contract::CallContextBuilder",
  "pub fn spark_core::contract::CallContextBuilder::add_budget(self, budget: spark_core::contract::Budget) -> Self",
  "pub fn spark_core::contract::CallContextBuilder::build(self) -> spark_core::contract::CallContext",
  "pub fn spark_core::contract::CallContextBuilder::with_cancellation(self, cancellation: spark_core::contract::Cancellation) -> Self",
  "pub fn spark_core::contract::CallContextBuilder::with_deadline(self, deadline: spark_core::contract::Deadline) -> Self",
  "pub fn spark_core::contract::CallContextBuilder::with_observability(self, observability: spark_core::contract::ObservabilityContract) -> Self",
  "pub fn spark_core::contract::CallContextBuilder::with_security(self, security: spark_core::contract::SecurityContextSnapshot) -> Self",
  "pub fn spark_core::contract::CallContextBuilder::with_trace_context(self, trace_context: spark_core::observability::trace::TraceContext) -> Self",
  "impl core::default::Default for spark_core::contract::CallContextBuilder",
  "pub fn spark_core::contract::CallContextBuilder::default() -> Self",
  "impl core::marker::Freeze for spark_core::contract::CallContextBuilder",
  "impl core::marker::Send for spark_core::contract::CallContextBuilder",
  "impl core::marker::Sync for spark_core::contract::CallContextBuilder",
  "impl core::marker::Unpin for spark_core::contract::CallContextBuilder",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::contract::CallContextBuilder",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::contract::CallContextBuilder",
  "pub struct spark_core::contract::Cancellation",
  "impl spark_core::contract::Cancellation",
  "pub fn spark_core::contract::Cancellation::cancel(&self) -> bool",
  "pub fn spark_core::contract::Cancellation::child(&self) -> Self",
  "pub fn spark_core::contract::Cancellation::is_cancelled(&self) -> bool",
  "pub fn spark_core::contract::Cancellation::new() -> Self",
  "impl core::clone::Clone for spark_core::contract::Cancellation",
  "pub fn spark_core::contract::Cancellation::clone(&self) -> spark_core::contract::Cancellation",
  "impl core::default::Default for spark_core::contract::Cancellation",
  "pub fn spark_core::contract::Cancellation::default() -> Self",
  "impl core::fmt::Debug for spark_core::contract::Cancellation",
  "pub fn spark_core::contract::Cancellation::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::contract::Cancellation",
  "impl core::marker::Send for spark_core::contract::Cancellation",
  "impl core::marker::Sync for spark_core::contract::Cancellation",
  "impl core::marker::Unpin for spark_core::contract::Cancellation",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::contract::Cancellation",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::contract::Cancellation",
  "pub struct spark_core::contract::CloseReason",
  "impl spark_core::contract::CloseReason",
  "pub fn spark_core::contract::CloseReason::code(&self) -> &str",
  "pub fn spark_core::contract::CloseReason::message(&self) -> &str",
  "pub fn spark_core::contract::CloseReason::new(code: impl core::convert::Into<alloc::borrow::Cow<'static, str>>, message: impl core::convert::Into<alloc::borrow::Cow<'static, str>>) -> Self",
  "impl core::clone::Clone for spark_core::contract::CloseReason",
  "pub fn spark_core::contract::CloseReason::clone(&self) -> spark_core::contract::CloseReason",
  "impl core::cmp::Eq for spark_core::contract::CloseReason",
  "impl core::cmp::PartialEq for spark_core::contract::CloseReason",
  "pub fn spark_core::contract::CloseReason::eq(&self, other: &spark_core::contract::CloseReason) -> bool",
  "impl core::fmt::Debug for spark_core::contract::CloseReason",
  "pub fn spark_core::contract::CloseReason::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::contract::CloseReason",
  "impl core::marker::Freeze for spark_core::contract::CloseReason",
  "impl core::marker::Send for spark_core::contract::CloseReason",
  "impl core::marker::Sync for spark_core::contract::CloseReason",
  "impl core::marker::Unpin for spark_core::contract::CloseReason",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::contract::CloseReason",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::contract::CloseReason",
  "pub struct spark_core::contract::Deadline",
  "impl spark_core::contract::Deadline",
  "pub fn spark_core::contract::Deadline::at(instant: spark_core::MonotonicTimePoint) -> Self",
  "pub fn spark_core::contract::Deadline::instant(&self) -> core::option::Option<spark_core::MonotonicTimePoint>",
  "pub fn spark_core::contract::Deadline::is_expired(&self, now: spark_core::MonotonicTimePoint) -> bool",
  "pub const fn spark_core::contract::Deadline::none() -> Self",
  "pub fn spark_core::contract::Deadline::with_timeout(now: spark_core::MonotonicTimePoint, timeout: core::time::Duration) -> Self",
  "impl core::clone::Clone for spark_core::contract::Deadline",
  "pub fn spark_core::contract::Deadline::clone(&self) -> spark_core::contract::Deadline",
  "impl core::cmp::Eq for spark_core::contract::Deadline",
  "impl core::cmp::PartialEq for spark_core::contract::Deadline",
  "pub fn spark_core::contract::Deadline::eq(&self, other: &spark_core::contract::Deadline) -> bool",
  "impl core::default::Default for spark_core::contract::Deadline",
  "pub fn spark_core::contract::Deadline::default() -> Self",
  "impl core::fmt::Debug for spark_core::contract::Deadline",
  "pub fn spark_core::contract::Deadline::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::contract::Deadline",
  "impl core::marker::StructuralPartialEq for spark_core::contract::Deadline",
  "impl core::marker::Freeze for spark_core::contract::Deadline",
  "impl core::marker::Send for spark_core::contract::Deadline",
  "impl core::marker::Sync for spark_core::contract::Deadline",
  "impl core::marker::Unpin for spark_core::contract::Deadline",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::contract::Deadline",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::contract::Deadline",
  "pub struct spark_core::contract::ObservabilityContract",
  "impl spark_core::contract::ObservabilityContract",
  "pub fn spark_core::contract::ObservabilityContract::audit_schema(&self) -> &'static [&'static str]",
  "pub fn spark_core::contract::ObservabilityContract::log_fields(&self) -> &'static [&'static str]",
  "pub fn spark_core::contract::ObservabilityContract::metric_names(&self) -> &'static [&'static str]",
  "pub const fn spark_core::contract::ObservabilityContract::new(metric_names: &'static [&'static str], log_fields: &'static [&'static str], trace_keys: &'static [&'static str], audit_schema: &'static [&'static str]) -> Self",
  "pub fn spark_core::contract::ObservabilityContract::trace_keys(&self) -> &'static [&'static str]",
  "impl core::clone::Clone for spark_core::contract::ObservabilityContract",
  "pub fn spark_core::contract::ObservabilityContract::clone(&self) -> spark_core::contract::ObservabilityContract",
  "impl core::default::Default for spark_core::contract::ObservabilityContract",
  "pub fn spark_core::contract::ObservabilityContract::default() -> spark_core::contract::ObservabilityContract",
  "impl core::fmt::Debug for spark_core::contract::ObservabilityContract",
  "pub fn spark_core::contract::ObservabilityContract::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::contract::ObservabilityContract",
  "impl core::marker::Send for spark_core::contract::ObservabilityContract",
  "impl core::marker::Sync for spark_core::contract::ObservabilityContract",
  "impl core::marker::Unpin for spark_core::contract::ObservabilityContract",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::contract::ObservabilityContract",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::contract::ObservabilityContract",
  "pub struct spark_core::contract::SecurityContextSnapshot",
  "impl spark_core::contract::SecurityContextSnapshot",
  "pub fn spark_core::contract::SecurityContextSnapshot::allow_insecure(self) -> Self",
  "pub fn spark_core::contract::SecurityContextSnapshot::ensure_secure(&self) -> core::result::Result<(), spark_core::error::SparkError>",
  "pub fn spark_core::contract::SecurityContextSnapshot::identity(&self) -> core::option::Option<&alloc::sync::Arc<spark_core::security::identity::IdentityDescriptor>>",
  "pub fn spark_core::contract::SecurityContextSnapshot::is_insecure_allowed(&self) -> bool",
  "pub fn spark_core::contract::SecurityContextSnapshot::peer_identity(&self) -> core::option::Option<&alloc::sync::Arc<spark_core::security::identity::IdentityDescriptor>>",
  "pub fn spark_core::contract::SecurityContextSnapshot::policy(&self) -> core::option::Option<&alloc::sync::Arc<spark_core::security::policy::SecurityPolicy>>",
  "pub fn spark_core::contract::SecurityContextSnapshot::with_identity(self, identity: spark_core::security::identity::IdentityDescriptor) -> Self",
  "pub fn spark_core::contract::SecurityContextSnapshot::with_peer_identity(self, identity: spark_core::security::identity::IdentityDescriptor) -> Self",
  "pub fn spark_core::contract::SecurityContextSnapshot::with_policy(self, policy: spark_core::security::policy::SecurityPolicy) -> Self",
  "impl core::clone::Clone for spark_core::contract::SecurityContextSnapshot",
  "pub fn spark_core::contract::SecurityContextSnapshot::clone(&self) -> spark_core::contract::SecurityContextSnapshot",
  "impl core::default::Default for spark_core::contract::SecurityContextSnapshot",
  "pub fn spark_core::contract::SecurityContextSnapshot::default() -> spark_core::contract::SecurityContextSnapshot",
  "impl core::fmt::Debug for spark_core::contract::SecurityContextSnapshot",
  "pub fn spark_core::contract::SecurityContextSnapshot::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::contract::SecurityContextSnapshot",
  "impl core::marker::Send for spark_core::contract::SecurityContextSnapshot",
  "impl core::marker::Sync for spark_core::contract::SecurityContextSnapshot",
  "impl core::marker::Unpin for spark_core::contract::SecurityContextSnapshot",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::contract::SecurityContextSnapshot",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::contract::SecurityContextSnapshot",
  "pub const spark_core::contract::DEFAULT_OBSERVABILITY_CONTRACT: spark_core::contract::ObservabilityContract",
  "pub mod spark_core::deprecation",
  "pub struct spark_core::deprecation::DeprecationNotice",
  "impl spark_core::deprecation::DeprecationNotice",
  "pub fn spark_core::deprecation::DeprecationNotice::emit(&self, logger: core::option::Option<&dyn spark_core::observability::logging::Logger>)",
  "pub fn spark_core::deprecation::DeprecationNotice::has_emitted(&self) -> bool",
  "pub const fn spark_core::deprecation::DeprecationNotice::new(symbol: &'static str, since: &'static str, removal: &'static str, tracking: core::option::Option<&'static str>, migration_hint: core::option::Option<&'static str>) -> Self",
  "impl core::fmt::Debug for spark_core::deprecation::DeprecationNotice",
  "pub fn spark_core::deprecation::DeprecationNotice::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl !core::marker::Freeze for spark_core::deprecation::DeprecationNotice",
  "impl core::marker::Send for spark_core::deprecation::DeprecationNotice",
  "impl core::marker::Sync for spark_core::deprecation::DeprecationNotice",
  "impl core::marker::Unpin for spark_core::deprecation::DeprecationNotice",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::deprecation::DeprecationNotice",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::deprecation::DeprecationNotice",
  "pub static spark_core::deprecation::LEGACY_LOOPBACK_OUTBOUND: spark_core::deprecation::DeprecationNotice",
  "pub mod spark_core::error",
  "pub mod spark_core::error::category_matrix",
  "pub mod spark_core::error::category_matrix::matrix",
  "pub fn spark_core::error::category_matrix::matrix::default_autoresponse(code: &str) -> core::option::Option<spark_core::error::category_matrix::DefaultAutoResponse>",
  "pub const fn spark_core::error::category_matrix::matrix::entries() -> &'static [spark_core::error::category_matrix::CategoryMatrixEntry]",
  "pub fn spark_core::error::category_matrix::matrix::entry_for_code(code: &str) -> core::option::Option<&'static spark_core::error::category_matrix::CategoryMatrixEntry>",
  "pub enum spark_core::error::category_matrix::BudgetDisposition",
  "pub spark_core::error::category_matrix::BudgetDisposition::Decode",
  "pub spark_core::error::category_matrix::BudgetDisposition::Flow",
  "impl spark_core::error::category_matrix::BudgetDisposition",
  "pub fn spark_core::error::category_matrix::BudgetDisposition::to_budget_kind(self) -> spark_core::contract::BudgetKind",
  "impl core::clone::Clone for spark_core::error::category_matrix::BudgetDisposition",
  "pub fn spark_core::error::category_matrix::BudgetDisposition::clone(&self) -> spark_core::error::category_matrix::BudgetDisposition",
  "impl core::cmp::Eq for spark_core::error::category_matrix::BudgetDisposition",
  "impl core::cmp::PartialEq for spark_core::error::category_matrix::BudgetDisposition",
  "pub fn spark_core::error::category_matrix::BudgetDisposition::eq(&self, other: &spark_core::error::category_matrix::BudgetDisposition) -> bool",
  "impl core::fmt::Debug for spark_core::error::category_matrix::BudgetDisposition",
  "pub fn spark_core::error::category_matrix::BudgetDisposition::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::error::category_matrix::BudgetDisposition",
  "impl core::marker::StructuralPartialEq for spark_core::error::category_matrix::BudgetDisposition",
  "impl core::marker::Freeze for spark_core::error::category_matrix::BudgetDisposition",
  "impl core::marker::Send for spark_core::error::category_matrix::BudgetDisposition",
  "impl core::marker::Sync for spark_core::error::category_matrix::BudgetDisposition",
  "impl core::marker::Unpin for spark_core::error::category_matrix::BudgetDisposition",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::error::category_matrix::BudgetDisposition",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::error::category_matrix::BudgetDisposition",
  "pub enum spark_core::error::category_matrix::BusyDisposition",
  "pub spark_core::error::category_matrix::BusyDisposition::Downstream",
  "pub spark_core::error::category_matrix::BusyDisposition::Upstream",
  "impl spark_core::error::category_matrix::BusyDisposition",
  "pub fn spark_core::error::category_matrix::BusyDisposition::to_busy_reason(self) -> spark_core::status::ready::BusyReason",
  "impl core::clone::Clone for spark_core::error::category_matrix::BusyDisposition",
  "pub fn spark_core::error::category_matrix::BusyDisposition::clone(&self) -> spark_core::error::category_matrix::BusyDisposition",
  "impl core::cmp::Eq for spark_core::error::category_matrix::BusyDisposition",
  "impl core::cmp::PartialEq for spark_core::error::category_matrix::BusyDisposition",
  "pub fn spark_core::error::category_matrix::BusyDisposition::eq(&self, other: &spark_core::error::category_matrix::BusyDisposition) -> bool",
  "impl core::fmt::Debug for spark_core::error::category_matrix::BusyDisposition",
  "pub fn spark_core::error::category_matrix::BusyDisposition::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::error::category_matrix::BusyDisposition",
  "impl core::marker::StructuralPartialEq for spark_core::error::category_matrix::BusyDisposition",
  "impl core::marker::Freeze for spark_core::error::category_matrix::BusyDisposition",
  "impl core::marker::Send for spark_core::error::category_matrix::BusyDisposition",
  "impl core::marker::Sync for spark_core::error::category_matrix::BusyDisposition",
  "impl core::marker::Unpin for spark_core::error::category_matrix::BusyDisposition",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::error::category_matrix::BusyDisposition",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::error::category_matrix::BusyDisposition",
  "pub enum spark_core::error::category_matrix::CategoryTemplate",
  "pub spark_core::error::category_matrix::CategoryTemplate::Cancelled",
  "pub spark_core::error::category_matrix::CategoryTemplate::NonRetryable",
  "pub spark_core::error::category_matrix::CategoryTemplate::ProtocolViolation",
  "pub spark_core::error::category_matrix::CategoryTemplate::ProtocolViolation::close_message: &'static str",
  "pub spark_core::error::category_matrix::CategoryTemplate::ResourceExhausted",
  "pub spark_core::error::category_matrix::CategoryTemplate::ResourceExhausted::budget: spark_core::error::category_matrix::BudgetDisposition",
  "pub spark_core::error::category_matrix::CategoryTemplate::Retryable",
  "pub spark_core::error::category_matrix::CategoryTemplate::Retryable::busy: core::option::Option<spark_core::error::category_matrix::BusyDisposition>",
  "pub spark_core::error::category_matrix::CategoryTemplate::Retryable::reason: &'static str",
  "pub spark_core::error::category_matrix::CategoryTemplate::Retryable::wait_ms: u64",
  "pub spark_core::error::category_matrix::CategoryTemplate::Security",
  "pub spark_core::error::category_matrix::CategoryTemplate::Security::class: spark_core::security::class::SecurityClass",
  "pub spark_core::error::category_matrix::CategoryTemplate::Timeout",
  "impl spark_core::error::category_matrix::CategoryTemplate",
  "pub fn spark_core::error::category_matrix::CategoryTemplate::default_response(&self) -> spark_core::error::category_matrix::DefaultAutoResponse",
  "pub fn spark_core::error::category_matrix::CategoryTemplate::instantiate(&self) -> spark_core::error::ErrorCategory",
  "impl core::clone::Clone for spark_core::error::category_matrix::CategoryTemplate",
  "pub fn spark_core::error::category_matrix::CategoryTemplate::clone(&self) -> spark_core::error::category_matrix::CategoryTemplate",
  "impl core::marker::Copy for spark_core::error::category_matrix::CategoryTemplate",
  "impl core::marker::Freeze for spark_core::error::category_matrix::CategoryTemplate",
  "impl core::marker::Send for spark_core::error::category_matrix::CategoryTemplate",
  "impl core::marker::Sync for spark_core::error::category_matrix::CategoryTemplate",
  "impl core::marker::Unpin for spark_core::error::category_matrix::CategoryTemplate",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::error::category_matrix::CategoryTemplate",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::error::category_matrix::CategoryTemplate",
  "pub enum spark_core::error::category_matrix::DefaultAutoResponse",
  "pub spark_core::error::category_matrix::DefaultAutoResponse::BudgetExhausted",
  "pub spark_core::error::category_matrix::DefaultAutoResponse::BudgetExhausted::budget: spark_core::error::category_matrix::BudgetDisposition",
  "pub spark_core::error::category_matrix::DefaultAutoResponse::Cancel",
  "pub spark_core::error::category_matrix::DefaultAutoResponse::Close",
  "pub spark_core::error::category_matrix::DefaultAutoResponse::Close::message: &'static str",
  "pub spark_core::error::category_matrix::DefaultAutoResponse::Close::reason_code: &'static str",
  "pub spark_core::error::category_matrix::DefaultAutoResponse::None",
  "pub spark_core::error::category_matrix::DefaultAutoResponse::RetryAfter",
  "pub spark_core::error::category_matrix::DefaultAutoResponse::RetryAfter::busy: core::option::Option<spark_core::error::category_matrix::BusyDisposition>",
  "pub spark_core::error::category_matrix::DefaultAutoResponse::RetryAfter::reason: &'static str",
  "pub spark_core::error::category_matrix::DefaultAutoResponse::RetryAfter::wait_ms: u64",
  "impl spark_core::error::category_matrix::DefaultAutoResponse",
  "pub const fn spark_core::error::category_matrix::DefaultAutoResponse::budget(&self) -> core::option::Option<spark_core::error::category_matrix::BudgetDisposition>",
  "pub const fn spark_core::error::category_matrix::DefaultAutoResponse::close_reason(&self) -> core::option::Option<(&'static str, &'static str)>",
  "pub const fn spark_core::error::category_matrix::DefaultAutoResponse::retry(&self) -> core::option::Option<(u64, &'static str, core::option::Option<spark_core::error::category_matrix::BusyDisposition>)>",
  "impl core::clone::Clone for spark_core::error::category_matrix::DefaultAutoResponse",
  "pub fn spark_core::error::category_matrix::DefaultAutoResponse::clone(&self) -> spark_core::error::category_matrix::DefaultAutoResponse",
  "impl core::cmp::Eq for spark_core::error::category_matrix::DefaultAutoResponse",
  "impl core::cmp::PartialEq for spark_core::error::category_matrix::DefaultAutoResponse",
  "pub fn spark_core::error::category_matrix::DefaultAutoResponse::eq(&self, other: &spark_core::error::category_matrix::DefaultAutoResponse) -> bool",
  "impl core::fmt::Debug for spark_core::error::category_matrix::DefaultAutoResponse",
  "pub fn spark_core::error::category_matrix::DefaultAutoResponse::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::error::category_matrix::DefaultAutoResponse",
  "impl core::marker::StructuralPartialEq for spark_core::error::category_matrix::DefaultAutoResponse",
  "impl core::marker::Freeze for spark_core::error::category_matrix::DefaultAutoResponse",
  "impl core::marker::Send for spark_core::error::category_matrix::DefaultAutoResponse",
  "impl core::marker::Sync for spark_core::error::category_matrix::DefaultAutoResponse",
  "impl core::marker::Unpin for spark_core::error::category_matrix::DefaultAutoResponse",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::error::category_matrix::DefaultAutoResponse",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::error::category_matrix::DefaultAutoResponse",
  "pub struct spark_core::error::category_matrix::CategoryMatrixEntry",
  "impl spark_core::error::category_matrix::CategoryMatrixEntry",
  "pub fn spark_core::error::category_matrix::CategoryMatrixEntry::category(&self) -> spark_core::error::ErrorCategory",
  "pub const fn spark_core::error::category_matrix::CategoryMatrixEntry::code(&self) -> &'static str",
  "pub fn spark_core::error::category_matrix::CategoryMatrixEntry::default_response(&self) -> spark_core::error::category_matrix::DefaultAutoResponse",
  "impl core::clone::Clone for spark_core::error::category_matrix::CategoryMatrixEntry",
  "pub fn spark_core::error::category_matrix::CategoryMatrixEntry::clone(&self) -> spark_core::error::category_matrix::CategoryMatrixEntry",
  "impl core::marker::Copy for spark_core::error::category_matrix::CategoryMatrixEntry",
  "impl core::marker::Freeze for spark_core::error::category_matrix::CategoryMatrixEntry",
  "impl core::marker::Send for spark_core::error::category_matrix::CategoryMatrixEntry",
  "impl core::marker::Sync for spark_core::error::category_matrix::CategoryMatrixEntry",
  "impl core::marker::Unpin for spark_core::error::category_matrix::CategoryMatrixEntry",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::error::category_matrix::CategoryMatrixEntry",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::error::category_matrix::CategoryMatrixEntry",
  "pub fn spark_core::error::category_matrix::default_autoresponse(code: &str) -> core::option::Option<spark_core::error::category_matrix::DefaultAutoResponse>",
  "pub const fn spark_core::error::category_matrix::entries() -> &'static [spark_core::error::category_matrix::CategoryMatrixEntry]",
  "pub fn spark_core::error::category_matrix::entry_for_code(code: &str) -> core::option::Option<&'static spark_core::error::category_matrix::CategoryMatrixEntry>",
  "pub mod spark_core::error::codes",
  "pub const spark_core::error::codes::APP_BACKPRESSURE_APPLIED: &str",
  "pub const spark_core::error::codes::APP_ROUTING_FAILED: &str",
  "pub const spark_core::error::codes::APP_UNAUTHORIZED: &str",
  "pub const spark_core::error::codes::CLUSTER_LEADER_LOST: &str",
  "pub const spark_core::error::codes::CLUSTER_NETWORK_PARTITION: &str",
  "pub const spark_core::error::codes::CLUSTER_NODE_UNAVAILABLE: &str",
  "pub const spark_core::error::codes::CLUSTER_QUEUE_OVERFLOW: &str",
  "pub const spark_core::error::codes::CLUSTER_SERVICE_NOT_FOUND: &str",
  "pub const spark_core::error::codes::DISCOVERY_STALE_READ: &str",
  "pub const spark_core::error::codes::PROTOCOL_BUDGET_EXCEEDED: &str",
  "pub const spark_core::error::codes::PROTOCOL_DECODE: &str",
  "pub const spark_core::error::codes::PROTOCOL_NEGOTIATION: &str",
  "pub const spark_core::error::codes::PROTOCOL_TYPE_MISMATCH: &str",
  "pub const spark_core::error::codes::ROUTER_VERSION_CONFLICT: &str",
  "pub const spark_core::error::codes::RUNTIME_SHUTDOWN: &str",
  "pub const spark_core::error::codes::TRANSPORT_IO: &str",
  "pub const spark_core::error::codes::TRANSPORT_TIMEOUT: &str",
  "#[non_exhaustive] pub enum spark_core::error::DomainErrorKind",
  "pub spark_core::error::DomainErrorKind::Application",
  "pub spark_core::error::DomainErrorKind::Buffer",
  "pub spark_core::error::DomainErrorKind::Cluster",
  "pub spark_core::error::DomainErrorKind::Discovery",
  "pub spark_core::error::DomainErrorKind::Protocol",
  "pub spark_core::error::DomainErrorKind::Router",
  "pub spark_core::error::DomainErrorKind::Runtime",
  "pub spark_core::error::DomainErrorKind::Transport",
  "impl core::clone::Clone for spark_core::error::DomainErrorKind",
  "pub fn spark_core::error::DomainErrorKind::clone(&self) -> spark_core::error::DomainErrorKind",
  "impl core::cmp::Eq for spark_core::error::DomainErrorKind",
  "impl core::cmp::PartialEq for spark_core::error::DomainErrorKind",
  "pub fn spark_core::error::DomainErrorKind::eq(&self, other: &spark_core::error::DomainErrorKind) -> bool",
  "impl core::fmt::Debug for spark_core::error::DomainErrorKind",
  "pub fn spark_core::error::DomainErrorKind::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::error::DomainErrorKind",
  "pub fn spark_core::error::DomainErrorKind::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::Copy for spark_core::error::DomainErrorKind",
  "impl core::marker::StructuralPartialEq for spark_core::error::DomainErrorKind",
  "impl core::marker::Freeze for spark_core::error::DomainErrorKind",
  "impl core::marker::Send for spark_core::error::DomainErrorKind",
  "impl core::marker::Sync for spark_core::error::DomainErrorKind",
  "impl core::marker::Unpin for spark_core::error::DomainErrorKind",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::error::DomainErrorKind",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::error::DomainErrorKind",
  "#[non_exhaustive] pub enum spark_core::error::ErrorCategory",
  "pub spark_core::error::ErrorCategory::Cancelled",
  "pub spark_core::error::ErrorCategory::NonRetryable",
  "pub spark_core::error::ErrorCategory::ProtocolViolation",
  "pub spark_core::error::ErrorCategory::ResourceExhausted(spark_core::contract::BudgetKind)",
  "pub spark_core::error::ErrorCategory::Retryable(spark_core::status::ready::RetryAdvice)",
  "pub spark_core::error::ErrorCategory::Security(spark_core::security::class::SecurityClass)",
  "pub spark_core::error::ErrorCategory::Timeout",
  "impl core::clone::Clone for spark_core::error::ErrorCategory",
  "pub fn spark_core::error::ErrorCategory::clone(&self) -> spark_core::error::ErrorCategory",
  "impl core::cmp::Eq for spark_core::error::ErrorCategory",
  "impl core::cmp::PartialEq for spark_core::error::ErrorCategory",
  "pub fn spark_core::error::ErrorCategory::eq(&self, other: &spark_core::error::ErrorCategory) -> bool",
  "impl core::fmt::Debug for spark_core::error::ErrorCategory",
  "pub fn spark_core::error::ErrorCategory::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::error::ErrorCategory",
  "impl core::marker::Freeze for spark_core::error::ErrorCategory",
  "impl core::marker::Send for spark_core::error::ErrorCategory",
  "impl core::marker::Sync for spark_core::error::ErrorCategory",
  "impl core::marker::Unpin for spark_core::error::ErrorCategory",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::error::ErrorCategory",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::error::ErrorCategory",
  "#[non_exhaustive] pub enum spark_core::error::ImplErrorKind",
  "pub spark_core::error::ImplErrorKind::BufferExhausted",
  "pub spark_core::error::ImplErrorKind::CodecRegistry",
  "pub spark_core::error::ImplErrorKind::Io",
  "pub spark_core::error::ImplErrorKind::StateViolation",
  "pub spark_core::error::ImplErrorKind::Timeout",
  "pub spark_core::error::ImplErrorKind::Uncategorized",
  "impl core::clone::Clone for spark_core::error::ImplErrorKind",
  "pub fn spark_core::error::ImplErrorKind::clone(&self) -> spark_core::error::ImplErrorKind",
  "impl core::cmp::Eq for spark_core::error::ImplErrorKind",
  "impl core::cmp::PartialEq for spark_core::error::ImplErrorKind",
  "pub fn spark_core::error::ImplErrorKind::eq(&self, other: &spark_core::error::ImplErrorKind) -> bool",
  "impl core::fmt::Debug for spark_core::error::ImplErrorKind",
  "pub fn spark_core::error::ImplErrorKind::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::error::ImplErrorKind",
  "pub fn spark_core::error::ImplErrorKind::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::Copy for spark_core::error::ImplErrorKind",
  "impl core::marker::StructuralPartialEq for spark_core::error::ImplErrorKind",
  "impl core::marker::Freeze for spark_core::error::ImplErrorKind",
  "impl core::marker::Send for spark_core::error::ImplErrorKind",
  "impl core::marker::Sync for spark_core::error::ImplErrorKind",
  "impl core::marker::Unpin for spark_core::error::ImplErrorKind",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::error::ImplErrorKind",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::error::ImplErrorKind",
  "pub struct spark_core::error::CoreError",
  "impl spark_core::error::CoreError",
  "pub fn spark_core::error::CoreError::category(&self) -> spark_core::error::ErrorCategory",
  "pub fn spark_core::error::CoreError::cause(&self) -> core::option::Option<&spark_core::error::ErrorCause>",
  "pub fn spark_core::error::CoreError::code(&self) -> &'static str",
  "pub fn spark_core::error::CoreError::hint(&self) -> core::option::Option<alloc::borrow::Cow<'static, str>>",
  "pub fn spark_core::error::CoreError::human(&self) -> alloc::borrow::Cow<'static, str>",
  "pub fn spark_core::error::CoreError::message(&self) -> &str",
  "pub fn spark_core::error::CoreError::new(code: &'static str, message: impl core::convert::Into<alloc::borrow::Cow<'static, str>>) -> Self",
  "pub fn spark_core::error::CoreError::set_category(&mut self, category: spark_core::error::ErrorCategory)",
  "pub fn spark_core::error::CoreError::set_cause(&mut self, cause: impl spark_core::Error + core::marker::Send + core::marker::Sync + 'static)",
  "pub fn spark_core::error::CoreError::with_category(self, category: spark_core::error::ErrorCategory) -> Self",
  "pub fn spark_core::error::CoreError::with_cause(self, cause: impl spark_core::Error + core::marker::Send + core::marker::Sync + 'static) -> Self",
  "impl core::fmt::Debug for spark_core::error::CoreError",
  "pub fn spark_core::error::CoreError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::error::CoreError",
  "pub fn spark_core::error::CoreError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl spark_core::Error for spark_core::error::CoreError",
  "pub fn spark_core::error::CoreError::source(&self) -> core::option::Option<&(dyn spark_core::Error + 'static)>",
  "impl core::marker::Freeze for spark_core::error::CoreError",
  "impl core::marker::Send for spark_core::error::CoreError",
  "impl core::marker::Sync for spark_core::error::CoreError",
  "impl core::marker::Unpin for spark_core::error::CoreError",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::error::CoreError",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::error::CoreError",
  "pub struct spark_core::error::DomainError",
  "impl spark_core::error::DomainError",
  "pub fn spark_core::error::DomainError::core(&self) -> &spark_core::error::CoreError",
  "pub fn spark_core::error::DomainError::from_impl(kind: spark_core::error::DomainErrorKind, code: &'static str, impl_error: spark_core::error::ImplError) -> Self",
  "pub fn spark_core::error::DomainError::hint(&self) -> core::option::Option<alloc::borrow::Cow<'static, str>>",
  "pub fn spark_core::error::DomainError::human(&self) -> alloc::borrow::Cow<'static, str>",
  "pub fn spark_core::error::DomainError::impl_cause(&self) -> core::option::Option<&spark_core::error::ImplError>",
  "pub fn spark_core::error::DomainError::kind(&self) -> spark_core::error::DomainErrorKind",
  "pub fn spark_core::error::DomainError::new(kind: spark_core::error::DomainErrorKind, core: spark_core::error::CoreError) -> Self",
  "pub fn spark_core::error::DomainError::with_impl_cause(self, cause: spark_core::error::ImplError) -> Self",
  "impl core::fmt::Debug for spark_core::error::DomainError",
  "pub fn spark_core::error::DomainError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::error::DomainError",
  "pub fn spark_core::error::DomainError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl spark_core::Error for spark_core::error::DomainError",
  "pub fn spark_core::error::DomainError::source(&self) -> core::option::Option<&(dyn spark_core::Error + 'static)>",
  "impl spark_core::error::IntoCoreError for spark_core::error::DomainError",
  "pub fn spark_core::error::DomainError::into_core_error(self) -> spark_core::error::CoreError",
  "impl core::marker::Freeze for spark_core::error::DomainError",
  "impl core::marker::Send for spark_core::error::DomainError",
  "impl core::marker::Sync for spark_core::error::DomainError",
  "impl core::marker::Unpin for spark_core::error::DomainError",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::error::DomainError",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::error::DomainError",
  "pub struct spark_core::error::ImplError",
  "impl spark_core::error::ImplError",
  "pub fn spark_core::error::ImplError::detail(&self) -> core::option::Option<&alloc::borrow::Cow<'static, str>>",
  "pub fn spark_core::error::ImplError::domain(&self) -> &spark_core::error::SparkError",
  "pub fn spark_core::error::ImplError::into_domain(self) -> spark_core::error::SparkError",
  "pub fn spark_core::error::ImplError::kind(&self) -> spark_core::error::ImplErrorKind",
  "pub fn spark_core::error::ImplError::new(kind: spark_core::error::ImplErrorKind, domain: spark_core::error::SparkError) -> Self",
  "pub fn spark_core::error::ImplError::with_detail(self, detail: impl core::convert::Into<alloc::borrow::Cow<'static, str>>) -> Self",
  "pub fn spark_core::error::ImplError::with_source(self, cause: impl spark_core::Error + core::marker::Send + core::marker::Sync + 'static) -> Self",
  "impl core::fmt::Debug for spark_core::error::ImplError",
  "pub fn spark_core::error::ImplError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::error::ImplError",
  "pub fn spark_core::error::ImplError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl spark_core::Error for spark_core::error::ImplError",
  "pub fn spark_core::error::ImplError::source(&self) -> core::option::Option<&(dyn spark_core::Error + 'static)>",
  "impl spark_core::error::IntoDomainError for spark_core::error::ImplError",
  "pub fn spark_core::error::ImplError::into_domain_error(self, kind: spark_core::error::DomainErrorKind, code: &'static str) -> spark_core::error::DomainError",
  "impl core::marker::Freeze for spark_core::error::ImplError",
  "impl core::marker::Send for spark_core::error::ImplError",
  "impl core::marker::Sync for spark_core::error::ImplError",
  "impl core::marker::Unpin for spark_core::error::ImplError",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::error::ImplError",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::error::ImplError",
  "pub struct spark_core::error::SparkError",
  "impl spark_core::error::SparkError",
  "pub fn spark_core::error::SparkError::category(&self) -> spark_core::error::ErrorCategory",
  "pub fn spark_core::error::SparkError::cause(&self) -> core::option::Option<&spark_core::error::ErrorCause>",
  "pub fn spark_core::error::SparkError::code(&self) -> &'static str",
  "pub fn spark_core::error::SparkError::core(&self) -> &spark_core::error::CoreError",
  "pub fn spark_core::error::SparkError::hint(&self) -> core::option::Option<alloc::borrow::Cow<'static, str>>",
  "pub fn spark_core::error::SparkError::human(&self) -> alloc::borrow::Cow<'static, str>",
  "pub fn spark_core::error::SparkError::message(&self) -> &str",
  "pub fn spark_core::error::SparkError::new(code: &'static str, message: impl core::convert::Into<alloc::string::String>) -> Self",
  "pub fn spark_core::error::SparkError::node_id(&self) -> core::option::Option<&spark_core::cluster::membership::NodeId>",
  "pub fn spark_core::error::SparkError::peer_addr(&self) -> core::option::Option<&spark_core::transport::address::TransportSocketAddr>",
  "pub fn spark_core::error::SparkError::set_category(&mut self, category: spark_core::error::ErrorCategory)",
  "pub fn spark_core::error::SparkError::trace_context(&self) -> core::option::Option<&spark_core::observability::trace::TraceContext>",
  "pub fn spark_core::error::SparkError::with_category(self, category: spark_core::error::ErrorCategory) -> Self",
  "pub fn spark_core::error::SparkError::with_cause(self, cause: impl spark_core::Error + core::marker::Send + core::marker::Sync + 'static) -> Self",
  "pub fn spark_core::error::SparkError::with_node_id(self, node: spark_core::cluster::membership::NodeId) -> Self",
  "pub fn spark_core::error::SparkError::with_peer_addr(self, peer: spark_core::transport::address::TransportSocketAddr) -> Self",
  "pub fn spark_core::error::SparkError::with_trace(self, trace_context: spark_core::observability::trace::TraceContext) -> Self",
  "impl core::convert::From<spark_core::transport::handshake::HandshakeError> for spark_core::error::SparkError",
  "pub fn spark_core::error::SparkError::from(error: spark_core::transport::handshake::HandshakeError) -> Self",
  "impl core::fmt::Debug for spark_core::error::SparkError",
  "pub fn spark_core::error::SparkError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::error::SparkError",
  "pub fn spark_core::error::SparkError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl spark_core::Error for spark_core::error::SparkError",
  "pub fn spark_core::error::SparkError::source(&self) -> core::option::Option<&(dyn spark_core::Error + 'static)>",
  "impl core::marker::Freeze for spark_core::error::SparkError",
  "impl core::marker::Send for spark_core::error::SparkError",
  "impl core::marker::Sync for spark_core::error::SparkError",
  "impl core::marker::Unpin for spark_core::error::SparkError",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::error::SparkError",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::error::SparkError",
  "pub trait spark_core::error::IntoCoreError: Sealed",
  "pub fn spark_core::error::IntoCoreError::into_core_error(self) -> spark_core::error::CoreError",
  "impl spark_core::error::IntoCoreError for spark_core::error::DomainError",
  "pub fn spark_core::error::DomainError::into_core_error(self) -> spark_core::error::CoreError",
  "pub trait spark_core::error::IntoDomainError: Sealed",
  "pub fn spark_core::error::IntoDomainError::into_domain_error(self, kind: spark_core::error::DomainErrorKind, code: &'static str) -> spark_core::error::DomainError",
  "impl spark_core::error::IntoDomainError for spark_core::error::ImplError",
  "pub fn spark_core::error::ImplError::into_domain_error(self, kind: spark_core::error::DomainErrorKind, code: &'static str) -> spark_core::error::DomainError",
  "pub type spark_core::error::ErrorCause = alloc::boxed::Box<(dyn spark_core::Error + core::marker::Send + core::marker::Sync + 'static)>",
  "pub mod spark_core::future",
  "pub trait spark_core::future::Stream: Sealed",
  "pub type spark_core::future::Stream::Item",
  "pub fn spark_core::future::Stream::poll_next(self: core::pin::Pin<&mut Self>, cx: &mut core::task::wake::Context<'_>) -> core::task::poll::Poll<core::option::Option<Self::Item>>",
  "impl spark_core::future::Stream for spark_core::NoopConfigStream",
  "pub type spark_core::NoopConfigStream::Item = spark_core::ConfigDelta",
  "pub fn spark_core::NoopConfigStream::poll_next(self: core::pin::Pin<&mut Self>, _cx: &mut core::task::wake::Context<'_>) -> core::task::poll::Poll<core::option::Option<Self::Item>>",
  "impl<'a> spark_core::future::Stream for spark_core::ConfigurationWatch<'a>",
  "pub type spark_core::ConfigurationWatch<'a>::Item = core::result::Result<spark_core::ConfigurationUpdate, spark_core::ConfigurationError>",
  "pub fn spark_core::ConfigurationWatch<'a>::poll_next(self: core::pin::Pin<&mut Self>, cx: &mut core::task::wake::Context<'_>) -> core::task::poll::Poll<core::option::Option<Self::Item>>",
  "pub type spark_core::future::BoxFuture<'a, T> = core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = T> + core::marker::Send + 'a)>>",
  "pub type spark_core::future::BoxStream<'a, T> = core::pin::Pin<alloc::boxed::Box<(dyn spark_core::future::Stream<Item = T> + core::marker::Send + 'a)>>",
  "pub type spark_core::future::LocalBoxFuture<'a, T> = core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = T> + 'a)>>",
  "pub mod spark_core::host",
  "pub mod spark_core::host::capability",
  "#[non_exhaustive] pub enum spark_core::host::capability::CapabilityLevel",
  "pub spark_core::host::capability::CapabilityLevel::Full",
  "pub spark_core::host::capability::CapabilityLevel::Limited",
  "pub spark_core::host::capability::CapabilityLevel::Unsupported",
  "impl core::clone::Clone for spark_core::host::capability::CapabilityLevel",
  "pub fn spark_core::host::capability::CapabilityLevel::clone(&self) -> spark_core::host::capability::CapabilityLevel",
  "impl core::cmp::Eq for spark_core::host::capability::CapabilityLevel",
  "impl core::cmp::PartialEq for spark_core::host::capability::CapabilityLevel",
  "pub fn spark_core::host::capability::CapabilityLevel::eq(&self, other: &spark_core::host::capability::CapabilityLevel) -> bool",
  "impl core::fmt::Debug for spark_core::host::capability::CapabilityLevel",
  "pub fn spark_core::host::capability::CapabilityLevel::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::capability::CapabilityLevel",
  "impl core::marker::Freeze for spark_core::host::capability::CapabilityLevel",
  "impl core::marker::Send for spark_core::host::capability::CapabilityLevel",
  "impl core::marker::Sync for spark_core::host::capability::CapabilityLevel",
  "impl core::marker::Unpin for spark_core::host::capability::CapabilityLevel",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::capability::CapabilityLevel",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::capability::CapabilityLevel",
  "#[non_exhaustive] pub enum spark_core::host::capability::NetworkAddressFamily",
  "pub spark_core::host::capability::NetworkAddressFamily::Custom(alloc::string::String)",
  "pub spark_core::host::capability::NetworkAddressFamily::Ipv4",
  "pub spark_core::host::capability::NetworkAddressFamily::Ipv6",
  "pub spark_core::host::capability::NetworkAddressFamily::UnixDomain",
  "impl core::clone::Clone for spark_core::host::capability::NetworkAddressFamily",
  "pub fn spark_core::host::capability::NetworkAddressFamily::clone(&self) -> spark_core::host::capability::NetworkAddressFamily",
  "impl core::cmp::Eq for spark_core::host::capability::NetworkAddressFamily",
  "impl core::cmp::PartialEq for spark_core::host::capability::NetworkAddressFamily",
  "pub fn spark_core::host::capability::NetworkAddressFamily::eq(&self, other: &spark_core::host::capability::NetworkAddressFamily) -> bool",
  "impl core::fmt::Debug for spark_core::host::capability::NetworkAddressFamily",
  "pub fn spark_core::host::capability::NetworkAddressFamily::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::capability::NetworkAddressFamily",
  "impl core::marker::Freeze for spark_core::host::capability::NetworkAddressFamily",
  "impl core::marker::Send for spark_core::host::capability::NetworkAddressFamily",
  "impl core::marker::Sync for spark_core::host::capability::NetworkAddressFamily",
  "impl core::marker::Unpin for spark_core::host::capability::NetworkAddressFamily",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::capability::NetworkAddressFamily",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::capability::NetworkAddressFamily",
  "#[non_exhaustive] pub enum spark_core::host::capability::NetworkProtocol",
  "pub spark_core::host::capability::NetworkProtocol::Custom(alloc::string::String)",
  "pub spark_core::host::capability::NetworkProtocol::Grpc",
  "pub spark_core::host::capability::NetworkProtocol::Http3",
  "pub spark_core::host::capability::NetworkProtocol::MessageStream",
  "pub spark_core::host::capability::NetworkProtocol::Quic",
  "pub spark_core::host::capability::NetworkProtocol::WebSocket",
  "impl core::clone::Clone for spark_core::host::capability::NetworkProtocol",
  "pub fn spark_core::host::capability::NetworkProtocol::clone(&self) -> spark_core::host::capability::NetworkProtocol",
  "impl core::cmp::Eq for spark_core::host::capability::NetworkProtocol",
  "impl core::cmp::PartialEq for spark_core::host::capability::NetworkProtocol",
  "pub fn spark_core::host::capability::NetworkProtocol::eq(&self, other: &spark_core::host::capability::NetworkProtocol) -> bool",
  "impl core::fmt::Debug for spark_core::host::capability::NetworkProtocol",
  "pub fn spark_core::host::capability::NetworkProtocol::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::capability::NetworkProtocol",
  "impl core::marker::Freeze for spark_core::host::capability::NetworkProtocol",
  "impl core::marker::Send for spark_core::host::capability::NetworkProtocol",
  "impl core::marker::Sync for spark_core::host::capability::NetworkProtocol",
  "impl core::marker::Unpin for spark_core::host::capability::NetworkProtocol",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::capability::NetworkProtocol",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::capability::NetworkProtocol",
  "#[non_exhaustive] pub enum spark_core::host::capability::SecurityFeature",
  "pub spark_core::host::capability::SecurityFeature::ApiKey",
  "pub spark_core::host::capability::SecurityFeature::Custom(alloc::string::String)",
  "pub spark_core::host::capability::SecurityFeature::JsonWebToken",
  "pub spark_core::host::capability::SecurityFeature::MutualTls",
  "pub spark_core::host::capability::SecurityFeature::TrustedExecution",
  "pub spark_core::host::capability::SecurityFeature::WorkloadIdentity",
  "impl core::clone::Clone for spark_core::host::capability::SecurityFeature",
  "pub fn spark_core::host::capability::SecurityFeature::clone(&self) -> spark_core::host::capability::SecurityFeature",
  "impl core::cmp::Eq for spark_core::host::capability::SecurityFeature",
  "impl core::cmp::PartialEq for spark_core::host::capability::SecurityFeature",
  "pub fn spark_core::host::capability::SecurityFeature::eq(&self, other: &spark_core::host::capability::SecurityFeature) -> bool",
  "impl core::fmt::Debug for spark_core::host::capability::SecurityFeature",
  "pub fn spark_core::host::capability::SecurityFeature::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::capability::SecurityFeature",
  "impl core::marker::Freeze for spark_core::host::capability::SecurityFeature",
  "impl core::marker::Send for spark_core::host::capability::SecurityFeature",
  "impl core::marker::Sync for spark_core::host::capability::SecurityFeature",
  "impl core::marker::Unpin for spark_core::host::capability::SecurityFeature",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::capability::SecurityFeature",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::capability::SecurityFeature",
  "#[non_exhaustive] pub enum spark_core::host::capability::ThroughputClass",
  "pub spark_core::host::capability::ThroughputClass::Balanced",
  "pub spark_core::host::capability::ThroughputClass::LatencyOptimized",
  "pub spark_core::host::capability::ThroughputClass::ThroughputOptimized",
  "impl core::clone::Clone for spark_core::host::capability::ThroughputClass",
  "pub fn spark_core::host::capability::ThroughputClass::clone(&self) -> spark_core::host::capability::ThroughputClass",
  "impl core::cmp::Eq for spark_core::host::capability::ThroughputClass",
  "impl core::cmp::PartialEq for spark_core::host::capability::ThroughputClass",
  "pub fn spark_core::host::capability::ThroughputClass::eq(&self, other: &spark_core::host::capability::ThroughputClass) -> bool",
  "impl core::fmt::Debug for spark_core::host::capability::ThroughputClass",
  "pub fn spark_core::host::capability::ThroughputClass::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::capability::ThroughputClass",
  "impl core::marker::Freeze for spark_core::host::capability::ThroughputClass",
  "impl core::marker::Send for spark_core::host::capability::ThroughputClass",
  "impl core::marker::Sync for spark_core::host::capability::ThroughputClass",
  "impl core::marker::Unpin for spark_core::host::capability::ThroughputClass",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::capability::ThroughputClass",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::capability::ThroughputClass",
  "pub struct spark_core::host::capability::CapabilityDescriptor",
  "pub spark_core::host::capability::CapabilityDescriptor::address_families: alloc::vec::Vec<spark_core::host::capability::NetworkAddressFamily>",
  "pub spark_core::host::capability::CapabilityDescriptor::max_concurrent_streams: core::option::Option<u32>",
  "pub spark_core::host::capability::CapabilityDescriptor::notes: core::option::Option<alloc::string::String>",
  "pub spark_core::host::capability::CapabilityDescriptor::protocols: alloc::vec::Vec<spark_core::host::capability::NetworkProtocol>",
  "pub spark_core::host::capability::CapabilityDescriptor::security: alloc::vec::Vec<(spark_core::host::capability::SecurityFeature, spark_core::host::capability::CapabilityLevel)>",
  "pub spark_core::host::capability::CapabilityDescriptor::throughput: spark_core::host::capability::ThroughputClass",
  "impl spark_core::host::capability::CapabilityDescriptor",
  "pub fn spark_core::host::capability::CapabilityDescriptor::minimal(protocols: alloc::vec::Vec<spark_core::host::capability::NetworkProtocol>, address_families: alloc::vec::Vec<spark_core::host::capability::NetworkAddressFamily>, security: alloc::vec::Vec<(spark_core::host::capability::SecurityFeature, spark_core::host::capability::CapabilityLevel)>) -> Self",
  "impl core::clone::Clone for spark_core::host::capability::CapabilityDescriptor",
  "pub fn spark_core::host::capability::CapabilityDescriptor::clone(&self) -> spark_core::host::capability::CapabilityDescriptor",
  "impl core::cmp::Eq for spark_core::host::capability::CapabilityDescriptor",
  "impl core::cmp::PartialEq for spark_core::host::capability::CapabilityDescriptor",
  "pub fn spark_core::host::capability::CapabilityDescriptor::eq(&self, other: &spark_core::host::capability::CapabilityDescriptor) -> bool",
  "impl core::fmt::Debug for spark_core::host::capability::CapabilityDescriptor",
  "pub fn spark_core::host::capability::CapabilityDescriptor::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::capability::CapabilityDescriptor",
  "impl core::marker::Freeze for spark_core::host::capability::CapabilityDescriptor",
  "impl core::marker::Send for spark_core::host::capability::CapabilityDescriptor",
  "impl core::marker::Sync for spark_core::host::capability::CapabilityDescriptor",
  "impl core::marker::Unpin for spark_core::host::capability::CapabilityDescriptor",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::capability::CapabilityDescriptor",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::capability::CapabilityDescriptor",
  "pub mod spark_core::host::component",
  "#[non_exhaustive] pub enum spark_core::host::component::ComponentHealthState",
  "pub spark_core::host::component::ComponentHealthState::Degraded",
  "pub spark_core::host::component::ComponentHealthState::Failed",
  "pub spark_core::host::component::ComponentHealthState::Initializing",
  "pub spark_core::host::component::ComponentHealthState::Ready",
  "impl core::clone::Clone for spark_core::host::component::ComponentHealthState",
  "pub fn spark_core::host::component::ComponentHealthState::clone(&self) -> spark_core::host::component::ComponentHealthState",
  "impl core::cmp::Eq for spark_core::host::component::ComponentHealthState",
  "impl core::cmp::PartialEq for spark_core::host::component::ComponentHealthState",
  "pub fn spark_core::host::component::ComponentHealthState::eq(&self, other: &spark_core::host::component::ComponentHealthState) -> bool",
  "impl core::fmt::Debug for spark_core::host::component::ComponentHealthState",
  "pub fn spark_core::host::component::ComponentHealthState::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::component::ComponentHealthState",
  "impl core::marker::Freeze for spark_core::host::component::ComponentHealthState",
  "impl core::marker::Send for spark_core::host::component::ComponentHealthState",
  "impl core::marker::Sync for spark_core::host::component::ComponentHealthState",
  "impl core::marker::Unpin for spark_core::host::component::ComponentHealthState",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::component::ComponentHealthState",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::component::ComponentHealthState",
  "#[non_exhaustive] pub enum spark_core::host::component::ComponentKind",
  "pub spark_core::host::component::ComponentKind::ConfigurationProvider",
  "pub spark_core::host::component::ComponentKind::Custom(alloc::string::String)",
  "pub spark_core::host::component::ComponentKind::Extension",
  "pub spark_core::host::component::ComponentKind::ObservabilityExporter",
  "pub spark_core::host::component::ComponentKind::ServiceRuntime",
  "pub spark_core::host::component::ComponentKind::TransportAdapter",
  "impl core::clone::Clone for spark_core::host::component::ComponentKind",
  "pub fn spark_core::host::component::ComponentKind::clone(&self) -> spark_core::host::component::ComponentKind",
  "impl core::cmp::Eq for spark_core::host::component::ComponentKind",
  "impl core::cmp::PartialEq for spark_core::host::component::ComponentKind",
  "pub fn spark_core::host::component::ComponentKind::eq(&self, other: &spark_core::host::component::ComponentKind) -> bool",
  "impl core::fmt::Debug for spark_core::host::component::ComponentKind",
  "pub fn spark_core::host::component::ComponentKind::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::component::ComponentKind",
  "impl core::marker::Freeze for spark_core::host::component::ComponentKind",
  "impl core::marker::Send for spark_core::host::component::ComponentKind",
  "impl core::marker::Sync for spark_core::host::component::ComponentKind",
  "impl core::marker::Unpin for spark_core::host::component::ComponentKind",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::component::ComponentKind",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::component::ComponentKind",
  "pub struct spark_core::host::component::ComponentDescriptor",
  "pub spark_core::host::component::ComponentDescriptor::dependencies: alloc::vec::Vec<alloc::string::String>",
  "pub spark_core::host::component::ComponentDescriptor::description: core::option::Option<alloc::string::String>",
  "pub spark_core::host::component::ComponentDescriptor::kind: spark_core::host::component::ComponentKind",
  "pub spark_core::host::component::ComponentDescriptor::name: alloc::string::String",
  "pub spark_core::host::component::ComponentDescriptor::version: alloc::string::String",
  "impl spark_core::host::component::ComponentDescriptor",
  "pub fn spark_core::host::component::ComponentDescriptor::new(name: alloc::string::String, kind: spark_core::host::component::ComponentKind, version: alloc::string::String) -> Self",
  "impl core::clone::Clone for spark_core::host::component::ComponentDescriptor",
  "pub fn spark_core::host::component::ComponentDescriptor::clone(&self) -> spark_core::host::component::ComponentDescriptor",
  "impl core::cmp::Eq for spark_core::host::component::ComponentDescriptor",
  "impl core::cmp::PartialEq for spark_core::host::component::ComponentDescriptor",
  "pub fn spark_core::host::component::ComponentDescriptor::eq(&self, other: &spark_core::host::component::ComponentDescriptor) -> bool",
  "impl core::fmt::Debug for spark_core::host::component::ComponentDescriptor",
  "pub fn spark_core::host::component::ComponentDescriptor::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::component::ComponentDescriptor",
  "impl core::marker::Freeze for spark_core::host::component::ComponentDescriptor",
  "impl core::marker::Send for spark_core::host::component::ComponentDescriptor",
  "impl core::marker::Sync for spark_core::host::component::ComponentDescriptor",
  "impl core::marker::Unpin for spark_core::host::component::ComponentDescriptor",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::component::ComponentDescriptor",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::component::ComponentDescriptor",
  "pub trait spark_core::host::component::ComponentFactory: Sealed",
  "pub type spark_core::host::component::ComponentFactory::Error: spark_core::Error",
  "pub type spark_core::host::component::ComponentFactory::Instance",
  "pub fn spark_core::host::component::ComponentFactory::descriptor(&self) -> &spark_core::host::component::ComponentDescriptor",
  "pub fn spark_core::host::component::ComponentFactory::initialize(&self, ctx: &spark_core::host::context::HostContext) -> core::result::Result<Self::Instance, Self::Error>",
  "pub mod spark_core::host::context",
  "pub struct spark_core::host::context::HostContext",
  "pub spark_core::host::context::HostContext::capabilities: spark_core::host::capability::CapabilityDescriptor",
  "pub spark_core::host::context::HostContext::extensions: alloc::collections::btree::map::BTreeMap<alloc::string::String, alloc::string::String>",
  "pub spark_core::host::context::HostContext::metadata: spark_core::host::context::HostMetadata",
  "pub spark_core::host::context::HostContext::runtime: spark_core::host::context::HostRuntimeProfile",
  "impl spark_core::host::context::HostContext",
  "pub fn spark_core::host::context::HostContext::new(metadata: spark_core::host::context::HostMetadata, runtime: spark_core::host::context::HostRuntimeProfile, capabilities: spark_core::host::capability::CapabilityDescriptor, extensions: alloc::collections::btree::map::BTreeMap<alloc::string::String, alloc::string::String>) -> Self",
  "impl core::clone::Clone for spark_core::host::context::HostContext",
  "pub fn spark_core::host::context::HostContext::clone(&self) -> spark_core::host::context::HostContext",
  "impl core::cmp::Eq for spark_core::host::context::HostContext",
  "impl core::cmp::PartialEq for spark_core::host::context::HostContext",
  "pub fn spark_core::host::context::HostContext::eq(&self, other: &spark_core::host::context::HostContext) -> bool",
  "impl core::fmt::Debug for spark_core::host::context::HostContext",
  "pub fn spark_core::host::context::HostContext::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::context::HostContext",
  "impl core::marker::Freeze for spark_core::host::context::HostContext",
  "impl core::marker::Send for spark_core::host::context::HostContext",
  "impl core::marker::Sync for spark_core::host::context::HostContext",
  "impl core::marker::Unpin for spark_core::host::context::HostContext",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::context::HostContext",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::context::HostContext",
  "pub struct spark_core::host::context::HostMetadata",
  "pub spark_core::host::context::HostMetadata::labels: alloc::collections::btree::map::BTreeMap<alloc::string::String, alloc::string::String>",
  "pub spark_core::host::context::HostMetadata::name: alloc::string::String",
  "pub spark_core::host::context::HostMetadata::region: core::option::Option<alloc::string::String>",
  "pub spark_core::host::context::HostMetadata::vendor: core::option::Option<alloc::string::String>",
  "pub spark_core::host::context::HostMetadata::version: alloc::string::String",
  "pub spark_core::host::context::HostMetadata::zone: core::option::Option<alloc::string::String>",
  "impl spark_core::host::context::HostMetadata",
  "pub fn spark_core::host::context::HostMetadata::new(name: alloc::string::String, version: alloc::string::String, labels: alloc::collections::btree::map::BTreeMap<alloc::string::String, alloc::string::String>) -> Self",
  "impl core::clone::Clone for spark_core::host::context::HostMetadata",
  "pub fn spark_core::host::context::HostMetadata::clone(&self) -> spark_core::host::context::HostMetadata",
  "impl core::cmp::Eq for spark_core::host::context::HostMetadata",
  "impl core::cmp::PartialEq for spark_core::host::context::HostMetadata",
  "pub fn spark_core::host::context::HostMetadata::eq(&self, other: &spark_core::host::context::HostMetadata) -> bool",
  "impl core::fmt::Debug for spark_core::host::context::HostMetadata",
  "pub fn spark_core::host::context::HostMetadata::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::context::HostMetadata",
  "impl core::marker::Freeze for spark_core::host::context::HostMetadata",
  "impl core::marker::Send for spark_core::host::context::HostMetadata",
  "impl core::marker::Sync for spark_core::host::context::HostMetadata",
  "impl core::marker::Unpin for spark_core::host::context::HostMetadata",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::context::HostMetadata",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::context::HostMetadata",
  "pub struct spark_core::host::context::HostRuntimeProfile",
  "pub spark_core::host::context::HostRuntimeProfile::accelerators: alloc::vec::Vec<alloc::string::String>",
  "pub spark_core::host::context::HostRuntimeProfile::architecture: alloc::string::String",
  "pub spark_core::host::context::HostRuntimeProfile::cpu_cores: core::option::Option<u16>",
  "pub spark_core::host::context::HostRuntimeProfile::memory_bytes: core::option::Option<u64>",
  "pub spark_core::host::context::HostRuntimeProfile::operating_system: alloc::string::String",
  "impl spark_core::host::context::HostRuntimeProfile",
  "pub fn spark_core::host::context::HostRuntimeProfile::minimal(operating_system: alloc::string::String, architecture: alloc::string::String) -> Self",
  "impl core::clone::Clone for spark_core::host::context::HostRuntimeProfile",
  "pub fn spark_core::host::context::HostRuntimeProfile::clone(&self) -> spark_core::host::context::HostRuntimeProfile",
  "impl core::cmp::Eq for spark_core::host::context::HostRuntimeProfile",
  "impl core::cmp::PartialEq for spark_core::host::context::HostRuntimeProfile",
  "pub fn spark_core::host::context::HostRuntimeProfile::eq(&self, other: &spark_core::host::context::HostRuntimeProfile) -> bool",
  "impl core::fmt::Debug for spark_core::host::context::HostRuntimeProfile",
  "pub fn spark_core::host::context::HostRuntimeProfile::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::context::HostRuntimeProfile",
  "impl core::marker::Freeze for spark_core::host::context::HostRuntimeProfile",
  "impl core::marker::Send for spark_core::host::context::HostRuntimeProfile",
  "impl core::marker::Sync for spark_core::host::context::HostRuntimeProfile",
  "impl core::marker::Unpin for spark_core::host::context::HostRuntimeProfile",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::context::HostRuntimeProfile",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::context::HostRuntimeProfile",
  "pub mod spark_core::host::lifecycle",
  "#[non_exhaustive] pub enum spark_core::host::lifecycle::ShutdownReason",
  "pub spark_core::host::lifecycle::ShutdownReason::Failure(alloc::string::String)",
  "pub spark_core::host::lifecycle::ShutdownReason::Graceful",
  "pub spark_core::host::lifecycle::ShutdownReason::Maintenance",
  "impl core::clone::Clone for spark_core::host::lifecycle::ShutdownReason",
  "pub fn spark_core::host::lifecycle::ShutdownReason::clone(&self) -> spark_core::host::lifecycle::ShutdownReason",
  "impl core::cmp::Eq for spark_core::host::lifecycle::ShutdownReason",
  "impl core::cmp::PartialEq for spark_core::host::lifecycle::ShutdownReason",
  "pub fn spark_core::host::lifecycle::ShutdownReason::eq(&self, other: &spark_core::host::lifecycle::ShutdownReason) -> bool",
  "impl core::fmt::Debug for spark_core::host::lifecycle::ShutdownReason",
  "pub fn spark_core::host::lifecycle::ShutdownReason::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::lifecycle::ShutdownReason",
  "impl core::marker::Freeze for spark_core::host::lifecycle::ShutdownReason",
  "impl core::marker::Send for spark_core::host::lifecycle::ShutdownReason",
  "impl core::marker::Sync for spark_core::host::lifecycle::ShutdownReason",
  "impl core::marker::Unpin for spark_core::host::lifecycle::ShutdownReason",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::lifecycle::ShutdownReason",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::lifecycle::ShutdownReason",
  "#[non_exhaustive] pub enum spark_core::host::lifecycle::StartupPhase",
  "pub spark_core::host::lifecycle::StartupPhase::Bootstrapping",
  "pub spark_core::host::lifecycle::StartupPhase::Ready",
  "pub spark_core::host::lifecycle::StartupPhase::Warming",
  "impl core::clone::Clone for spark_core::host::lifecycle::StartupPhase",
  "pub fn spark_core::host::lifecycle::StartupPhase::clone(&self) -> spark_core::host::lifecycle::StartupPhase",
  "impl core::cmp::Eq for spark_core::host::lifecycle::StartupPhase",
  "impl core::cmp::PartialEq for spark_core::host::lifecycle::StartupPhase",
  "pub fn spark_core::host::lifecycle::StartupPhase::eq(&self, other: &spark_core::host::lifecycle::StartupPhase) -> bool",
  "impl core::fmt::Debug for spark_core::host::lifecycle::StartupPhase",
  "pub fn spark_core::host::lifecycle::StartupPhase::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::lifecycle::StartupPhase",
  "impl core::marker::Freeze for spark_core::host::lifecycle::StartupPhase",
  "impl core::marker::Send for spark_core::host::lifecycle::StartupPhase",
  "impl core::marker::Sync for spark_core::host::lifecycle::StartupPhase",
  "impl core::marker::Unpin for spark_core::host::lifecycle::StartupPhase",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::lifecycle::StartupPhase",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::lifecycle::StartupPhase",
  "pub trait spark_core::host::lifecycle::HostLifecycle: Sealed",
  "pub type spark_core::host::lifecycle::HostLifecycle::Error: spark_core::Error",
  "pub fn spark_core::host::lifecycle::HostLifecycle::on_ready(&self, ctx: &spark_core::host::context::HostContext) -> core::result::Result<(), Self::Error>",
  "pub fn spark_core::host::lifecycle::HostLifecycle::on_shutdown(&self, ctx: &spark_core::host::context::HostContext, reason: spark_core::host::lifecycle::ShutdownReason) -> core::result::Result<(), Self::Error>",
  "pub fn spark_core::host::lifecycle::HostLifecycle::on_starting(&self, ctx: &spark_core::host::context::HostContext, phase: spark_core::host::lifecycle::StartupPhase) -> core::result::Result<(), Self::Error>",
  "pub mod spark_core::host::provisioning",
  "#[non_exhaustive] pub enum spark_core::host::provisioning::ProvisioningOutcome",
  "pub spark_core::host::provisioning::ProvisioningOutcome::Applied",
  "pub spark_core::host::provisioning::ProvisioningOutcome::Applied::details: core::option::Option<alloc::string::String>",
  "pub spark_core::host::provisioning::ProvisioningOutcome::Deferred",
  "pub spark_core::host::provisioning::ProvisioningOutcome::Deferred::retry_after_seconds: core::option::Option<u32>",
  "pub spark_core::host::provisioning::ProvisioningOutcome::Rejected",
  "pub spark_core::host::provisioning::ProvisioningOutcome::Rejected::reason: alloc::string::String",
  "impl spark_core::host::provisioning::ProvisioningOutcome",
  "pub fn spark_core::host::provisioning::ProvisioningOutcome::applied(details: core::option::Option<alloc::string::String>) -> Self",
  "pub fn spark_core::host::provisioning::ProvisioningOutcome::deferred(retry_after_seconds: core::option::Option<u32>) -> Self",
  "pub fn spark_core::host::provisioning::ProvisioningOutcome::rejected(reason: alloc::string::String) -> Self",
  "impl core::clone::Clone for spark_core::host::provisioning::ProvisioningOutcome",
  "pub fn spark_core::host::provisioning::ProvisioningOutcome::clone(&self) -> spark_core::host::provisioning::ProvisioningOutcome",
  "impl core::cmp::Eq for spark_core::host::provisioning::ProvisioningOutcome",
  "impl core::cmp::PartialEq for spark_core::host::provisioning::ProvisioningOutcome",
  "pub fn spark_core::host::provisioning::ProvisioningOutcome::eq(&self, other: &spark_core::host::provisioning::ProvisioningOutcome) -> bool",
  "impl core::fmt::Debug for spark_core::host::provisioning::ProvisioningOutcome",
  "pub fn spark_core::host::provisioning::ProvisioningOutcome::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::provisioning::ProvisioningOutcome",
  "impl core::marker::Freeze for spark_core::host::provisioning::ProvisioningOutcome",
  "impl core::marker::Send for spark_core::host::provisioning::ProvisioningOutcome",
  "impl core::marker::Sync for spark_core::host::provisioning::ProvisioningOutcome",
  "impl core::marker::Unpin for spark_core::host::provisioning::ProvisioningOutcome",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::provisioning::ProvisioningOutcome",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::provisioning::ProvisioningOutcome",
  "pub struct spark_core::host::provisioning::ConfigChange",
  "pub spark_core::host::provisioning::ConfigChange::changed_keys: alloc::vec::Vec<alloc::string::String>",
  "pub spark_core::host::provisioning::ConfigChange::envelope: spark_core::host::provisioning::ConfigEnvelope",
  "impl spark_core::host::provisioning::ConfigChange",
  "pub fn spark_core::host::provisioning::ConfigChange::new(envelope: spark_core::host::provisioning::ConfigEnvelope, changed_keys: alloc::vec::Vec<alloc::string::String>) -> Self",
  "impl core::clone::Clone for spark_core::host::provisioning::ConfigChange",
  "pub fn spark_core::host::provisioning::ConfigChange::clone(&self) -> spark_core::host::provisioning::ConfigChange",
  "impl core::cmp::Eq for spark_core::host::provisioning::ConfigChange",
  "impl core::cmp::PartialEq for spark_core::host::provisioning::ConfigChange",
  "pub fn spark_core::host::provisioning::ConfigChange::eq(&self, other: &spark_core::host::provisioning::ConfigChange) -> bool",
  "impl core::fmt::Debug for spark_core::host::provisioning::ConfigChange",
  "pub fn spark_core::host::provisioning::ConfigChange::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::provisioning::ConfigChange",
  "impl core::marker::Freeze for spark_core::host::provisioning::ConfigChange",
  "impl core::marker::Send for spark_core::host::provisioning::ConfigChange",
  "impl core::marker::Sync for spark_core::host::provisioning::ConfigChange",
  "impl core::marker::Unpin for spark_core::host::provisioning::ConfigChange",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::provisioning::ConfigChange",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::provisioning::ConfigChange",
  "pub struct spark_core::host::provisioning::ConfigEnvelope",
  "pub spark_core::host::provisioning::ConfigEnvelope::items: alloc::collections::btree::map::BTreeMap<alloc::string::String, alloc::string::String>",
  "pub spark_core::host::provisioning::ConfigEnvelope::metadata: alloc::collections::btree::map::BTreeMap<alloc::string::String, alloc::string::String>",
  "pub spark_core::host::provisioning::ConfigEnvelope::namespace: alloc::string::String",
  "pub spark_core::host::provisioning::ConfigEnvelope::version: core::option::Option<alloc::string::String>",
  "impl spark_core::host::provisioning::ConfigEnvelope",
  "pub fn spark_core::host::provisioning::ConfigEnvelope::empty(namespace: alloc::string::String) -> Self",
  "impl core::clone::Clone for spark_core::host::provisioning::ConfigEnvelope",
  "pub fn spark_core::host::provisioning::ConfigEnvelope::clone(&self) -> spark_core::host::provisioning::ConfigEnvelope",
  "impl core::cmp::Eq for spark_core::host::provisioning::ConfigEnvelope",
  "impl core::cmp::PartialEq for spark_core::host::provisioning::ConfigEnvelope",
  "pub fn spark_core::host::provisioning::ConfigEnvelope::eq(&self, other: &spark_core::host::provisioning::ConfigEnvelope) -> bool",
  "impl core::fmt::Debug for spark_core::host::provisioning::ConfigEnvelope",
  "pub fn spark_core::host::provisioning::ConfigEnvelope::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::provisioning::ConfigEnvelope",
  "impl core::marker::Freeze for spark_core::host::provisioning::ConfigEnvelope",
  "impl core::marker::Send for spark_core::host::provisioning::ConfigEnvelope",
  "impl core::marker::Sync for spark_core::host::provisioning::ConfigEnvelope",
  "impl core::marker::Unpin for spark_core::host::provisioning::ConfigEnvelope",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::provisioning::ConfigEnvelope",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::provisioning::ConfigEnvelope",
  "pub struct spark_core::host::provisioning::ConfigQuery",
  "pub spark_core::host::provisioning::ConfigQuery::keys: alloc::vec::Vec<alloc::string::String>",
  "pub spark_core::host::provisioning::ConfigQuery::metadata: alloc::collections::btree::map::BTreeMap<alloc::string::String, alloc::string::String>",
  "pub spark_core::host::provisioning::ConfigQuery::namespace: alloc::string::String",
  "impl spark_core::host::provisioning::ConfigQuery",
  "pub fn spark_core::host::provisioning::ConfigQuery::namespace(namespace: alloc::string::String) -> Self",
  "impl core::clone::Clone for spark_core::host::provisioning::ConfigQuery",
  "pub fn spark_core::host::provisioning::ConfigQuery::clone(&self) -> spark_core::host::provisioning::ConfigQuery",
  "impl core::cmp::Eq for spark_core::host::provisioning::ConfigQuery",
  "impl core::cmp::PartialEq for spark_core::host::provisioning::ConfigQuery",
  "pub fn spark_core::host::provisioning::ConfigQuery::eq(&self, other: &spark_core::host::provisioning::ConfigQuery) -> bool",
  "impl core::fmt::Debug for spark_core::host::provisioning::ConfigQuery",
  "pub fn spark_core::host::provisioning::ConfigQuery::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::provisioning::ConfigQuery",
  "impl core::marker::Freeze for spark_core::host::provisioning::ConfigQuery",
  "impl core::marker::Send for spark_core::host::provisioning::ConfigQuery",
  "impl core::marker::Sync for spark_core::host::provisioning::ConfigQuery",
  "impl core::marker::Unpin for spark_core::host::provisioning::ConfigQuery",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::provisioning::ConfigQuery",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::provisioning::ConfigQuery",
  "pub trait spark_core::host::provisioning::ConfigConsumer: Sealed",
  "pub type spark_core::host::provisioning::ConfigConsumer::Error: spark_core::Error",
  "pub fn spark_core::host::provisioning::ConfigConsumer::on_incremental_change(&self, ctx: &spark_core::host::context::HostContext, change: spark_core::host::provisioning::ConfigChange) -> core::result::Result<spark_core::host::provisioning::ProvisioningOutcome, Self::Error>",
  "pub fn spark_core::host::provisioning::ConfigConsumer::on_initial_provision(&self, ctx: &spark_core::host::context::HostContext, config: spark_core::host::provisioning::ConfigEnvelope) -> core::result::Result<spark_core::host::provisioning::ProvisioningOutcome, Self::Error>",
  "pub mod spark_core::host::shutdown",
  "#[non_exhaustive] pub enum spark_core::host::shutdown::GracefulShutdownStatus",
  "pub spark_core::host::shutdown::GracefulShutdownStatus::Completed",
  "pub spark_core::host::shutdown::GracefulShutdownStatus::Failed(spark_core::error::SparkError)",
  "pub spark_core::host::shutdown::GracefulShutdownStatus::ForcedTimeout",
  "impl core::fmt::Debug for spark_core::host::shutdown::GracefulShutdownStatus",
  "pub fn spark_core::host::shutdown::GracefulShutdownStatus::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::host::shutdown::GracefulShutdownStatus",
  "impl core::marker::Send for spark_core::host::shutdown::GracefulShutdownStatus",
  "impl core::marker::Sync for spark_core::host::shutdown::GracefulShutdownStatus",
  "impl core::marker::Unpin for spark_core::host::shutdown::GracefulShutdownStatus",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::host::shutdown::GracefulShutdownStatus",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::host::shutdown::GracefulShutdownStatus",
  "pub struct spark_core::host::shutdown::GracefulShutdownCoordinator",
  "impl spark_core::host::shutdown::GracefulShutdownCoordinator",
  "pub fn spark_core::host::shutdown::GracefulShutdownCoordinator::add_audit_trace(&mut self, trace: spark_core::observability::trace::TraceContext)",
  "pub fn spark_core::host::shutdown::GracefulShutdownCoordinator::new(services: spark_core::CoreServices) -> Self",
  "pub fn spark_core::host::shutdown::GracefulShutdownCoordinator::register_channel(&mut self, label: impl core::convert::Into<alloc::borrow::Cow<'static, str>>, channel: alloc::sync::Arc<dyn spark_core::pipeline::channel::Channel>)",
  "pub fn spark_core::host::shutdown::GracefulShutdownCoordinator::register_target(&mut self, target: spark_core::host::shutdown::GracefulShutdownTarget)",
  "pub fn spark_core::host::shutdown::GracefulShutdownCoordinator::shutdown(self, reason: spark_core::contract::CloseReason, deadline: core::option::Option<spark_core::contract::Deadline>) -> spark_core::future::BoxFuture<'static, spark_core::host::shutdown::GracefulShutdownReport>",
  "impl core::marker::Freeze for spark_core::host::shutdown::GracefulShutdownCoordinator",
  "impl core::marker::Send for spark_core::host::shutdown::GracefulShutdownCoordinator",
  "impl core::marker::Sync for spark_core::host::shutdown::GracefulShutdownCoordinator",
  "impl core::marker::Unpin for spark_core::host::shutdown::GracefulShutdownCoordinator",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::host::shutdown::GracefulShutdownCoordinator",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::host::shutdown::GracefulShutdownCoordinator",
  "pub struct spark_core::host::shutdown::GracefulShutdownRecord",
  "impl spark_core::host::shutdown::GracefulShutdownRecord",
  "pub fn spark_core::host::shutdown::GracefulShutdownRecord::elapsed(&self) -> core::time::Duration",
  "pub fn spark_core::host::shutdown::GracefulShutdownRecord::label(&self) -> &str",
  "pub fn spark_core::host::shutdown::GracefulShutdownRecord::status(&self) -> &spark_core::host::shutdown::GracefulShutdownStatus",
  "impl core::fmt::Debug for spark_core::host::shutdown::GracefulShutdownRecord",
  "pub fn spark_core::host::shutdown::GracefulShutdownRecord::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::host::shutdown::GracefulShutdownRecord",
  "impl core::marker::Send for spark_core::host::shutdown::GracefulShutdownRecord",
  "impl core::marker::Sync for spark_core::host::shutdown::GracefulShutdownRecord",
  "impl core::marker::Unpin for spark_core::host::shutdown::GracefulShutdownRecord",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::host::shutdown::GracefulShutdownRecord",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::host::shutdown::GracefulShutdownRecord",
  "pub struct spark_core::host::shutdown::GracefulShutdownReport",
  "impl spark_core::host::shutdown::GracefulShutdownReport",
  "pub fn spark_core::host::shutdown::GracefulShutdownReport::deadline(&self) -> core::option::Option<spark_core::contract::Deadline>",
  "pub fn spark_core::host::shutdown::GracefulShutdownReport::failure_count(&self) -> usize",
  "pub fn spark_core::host::shutdown::GracefulShutdownReport::forced_count(&self) -> usize",
  "pub fn spark_core::host::shutdown::GracefulShutdownReport::reason(&self) -> &spark_core::contract::CloseReason",
  "pub fn spark_core::host::shutdown::GracefulShutdownReport::results(&self) -> &[spark_core::host::shutdown::GracefulShutdownRecord]",
  "impl core::fmt::Debug for spark_core::host::shutdown::GracefulShutdownReport",
  "pub fn spark_core::host::shutdown::GracefulShutdownReport::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::host::shutdown::GracefulShutdownReport",
  "impl core::marker::Send for spark_core::host::shutdown::GracefulShutdownReport",
  "impl core::marker::Sync for spark_core::host::shutdown::GracefulShutdownReport",
  "impl core::marker::Unpin for spark_core::host::shutdown::GracefulShutdownReport",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::host::shutdown::GracefulShutdownReport",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::host::shutdown::GracefulShutdownReport",
  "pub struct spark_core::host::shutdown::GracefulShutdownTarget",
  "impl spark_core::host::shutdown::GracefulShutdownTarget",
  "pub fn spark_core::host::shutdown::GracefulShutdownTarget::for_callbacks(label: impl core::convert::Into<alloc::borrow::Cow<'static, str>>, trigger_graceful: impl core::ops::function::Fn(&spark_core::contract::CloseReason, core::option::Option<spark_core::contract::Deadline>) + core::marker::Send + core::marker::Sync + 'static, await_closed: impl core::ops::function::Fn() -> spark_core::future::BoxFuture<'static, core::result::Result<(), spark_core::error::SparkError>> + core::marker::Send + core::marker::Sync + 'static, force_close: impl core::ops::function::Fn() + core::marker::Send + core::marker::Sync + 'static) -> Self",
  "pub fn spark_core::host::shutdown::GracefulShutdownTarget::for_channel(label: impl core::convert::Into<alloc::borrow::Cow<'static, str>>, channel: alloc::sync::Arc<dyn spark_core::pipeline::channel::Channel>) -> Self",
  "impl core::fmt::Debug for spark_core::host::shutdown::GracefulShutdownTarget",
  "pub fn spark_core::host::shutdown::GracefulShutdownTarget::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::host::shutdown::GracefulShutdownTarget",
  "impl core::marker::Send for spark_core::host::shutdown::GracefulShutdownTarget",
  "impl core::marker::Sync for spark_core::host::shutdown::GracefulShutdownTarget",
  "impl core::marker::Unpin for spark_core::host::shutdown::GracefulShutdownTarget",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::host::shutdown::GracefulShutdownTarget",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::host::shutdown::GracefulShutdownTarget",
  "#[non_exhaustive] pub enum spark_core::host::CapabilityLevel",
  "pub spark_core::host::CapabilityLevel::Full",
  "pub spark_core::host::CapabilityLevel::Limited",
  "pub spark_core::host::CapabilityLevel::Unsupported",
  "impl core::clone::Clone for spark_core::host::capability::CapabilityLevel",
  "pub fn spark_core::host::capability::CapabilityLevel::clone(&self) -> spark_core::host::capability::CapabilityLevel",
  "impl core::cmp::Eq for spark_core::host::capability::CapabilityLevel",
  "impl core::cmp::PartialEq for spark_core::host::capability::CapabilityLevel",
  "pub fn spark_core::host::capability::CapabilityLevel::eq(&self, other: &spark_core::host::capability::CapabilityLevel) -> bool",
  "impl core::fmt::Debug for spark_core::host::capability::CapabilityLevel",
  "pub fn spark_core::host::capability::CapabilityLevel::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::capability::CapabilityLevel",
  "impl core::marker::Freeze for spark_core::host::capability::CapabilityLevel",
  "impl core::marker::Send for spark_core::host::capability::CapabilityLevel",
  "impl core::marker::Sync for spark_core::host::capability::CapabilityLevel",
  "impl core::marker::Unpin for spark_core::host::capability::CapabilityLevel",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::capability::CapabilityLevel",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::capability::CapabilityLevel",
  "#[non_exhaustive] pub enum spark_core::host::ComponentHealthState",
  "pub spark_core::host::ComponentHealthState::Degraded",
  "pub spark_core::host::ComponentHealthState::Failed",
  "pub spark_core::host::ComponentHealthState::Initializing",
  "pub spark_core::host::ComponentHealthState::Ready",
  "impl core::clone::Clone for spark_core::host::component::ComponentHealthState",
  "pub fn spark_core::host::component::ComponentHealthState::clone(&self) -> spark_core::host::component::ComponentHealthState",
  "impl core::cmp::Eq for spark_core::host::component::ComponentHealthState",
  "impl core::cmp::PartialEq for spark_core::host::component::ComponentHealthState",
  "pub fn spark_core::host::component::ComponentHealthState::eq(&self, other: &spark_core::host::component::ComponentHealthState) -> bool",
  "impl core::fmt::Debug for spark_core::host::component::ComponentHealthState",
  "pub fn spark_core::host::component::ComponentHealthState::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::component::ComponentHealthState",
  "impl core::marker::Freeze for spark_core::host::component::ComponentHealthState",
  "impl core::marker::Send for spark_core::host::component::ComponentHealthState",
  "impl core::marker::Sync for spark_core::host::component::ComponentHealthState",
  "impl core::marker::Unpin for spark_core::host::component::ComponentHealthState",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::component::ComponentHealthState",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::component::ComponentHealthState",
  "#[non_exhaustive] pub enum spark_core::host::ComponentKind",
  "pub spark_core::host::ComponentKind::ConfigurationProvider",
  "pub spark_core::host::ComponentKind::Custom(alloc::string::String)",
  "pub spark_core::host::ComponentKind::Extension",
  "pub spark_core::host::ComponentKind::ObservabilityExporter",
  "pub spark_core::host::ComponentKind::ServiceRuntime",
  "pub spark_core::host::ComponentKind::TransportAdapter",
  "impl core::clone::Clone for spark_core::host::component::ComponentKind",
  "pub fn spark_core::host::component::ComponentKind::clone(&self) -> spark_core::host::component::ComponentKind",
  "impl core::cmp::Eq for spark_core::host::component::ComponentKind",
  "impl core::cmp::PartialEq for spark_core::host::component::ComponentKind",
  "pub fn spark_core::host::component::ComponentKind::eq(&self, other: &spark_core::host::component::ComponentKind) -> bool",
  "impl core::fmt::Debug for spark_core::host::component::ComponentKind",
  "pub fn spark_core::host::component::ComponentKind::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::component::ComponentKind",
  "impl core::marker::Freeze for spark_core::host::component::ComponentKind",
  "impl core::marker::Send for spark_core::host::component::ComponentKind",
  "impl core::marker::Sync for spark_core::host::component::ComponentKind",
  "impl core::marker::Unpin for spark_core::host::component::ComponentKind",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::component::ComponentKind",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::component::ComponentKind",
  "#[non_exhaustive] pub enum spark_core::host::GracefulShutdownStatus",
  "pub spark_core::host::GracefulShutdownStatus::Completed",
  "pub spark_core::host::GracefulShutdownStatus::Failed(spark_core::error::SparkError)",
  "pub spark_core::host::GracefulShutdownStatus::ForcedTimeout",
  "impl core::fmt::Debug for spark_core::host::shutdown::GracefulShutdownStatus",
  "pub fn spark_core::host::shutdown::GracefulShutdownStatus::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::host::shutdown::GracefulShutdownStatus",
  "impl core::marker::Send for spark_core::host::shutdown::GracefulShutdownStatus",
  "impl core::marker::Sync for spark_core::host::shutdown::GracefulShutdownStatus",
  "impl core::marker::Unpin for spark_core::host::shutdown::GracefulShutdownStatus",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::host::shutdown::GracefulShutdownStatus",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::host::shutdown::GracefulShutdownStatus",
  "#[non_exhaustive] pub enum spark_core::host::NetworkAddressFamily",
  "pub spark_core::host::NetworkAddressFamily::Custom(alloc::string::String)",
  "pub spark_core::host::NetworkAddressFamily::Ipv4",
  "pub spark_core::host::NetworkAddressFamily::Ipv6",
  "pub spark_core::host::NetworkAddressFamily::UnixDomain",
  "impl core::clone::Clone for spark_core::host::capability::NetworkAddressFamily",
  "pub fn spark_core::host::capability::NetworkAddressFamily::clone(&self) -> spark_core::host::capability::NetworkAddressFamily",
  "impl core::cmp::Eq for spark_core::host::capability::NetworkAddressFamily",
  "impl core::cmp::PartialEq for spark_core::host::capability::NetworkAddressFamily",
  "pub fn spark_core::host::capability::NetworkAddressFamily::eq(&self, other: &spark_core::host::capability::NetworkAddressFamily) -> bool",
  "impl core::fmt::Debug for spark_core::host::capability::NetworkAddressFamily",
  "pub fn spark_core::host::capability::NetworkAddressFamily::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::capability::NetworkAddressFamily",
  "impl core::marker::Freeze for spark_core::host::capability::NetworkAddressFamily",
  "impl core::marker::Send for spark_core::host::capability::NetworkAddressFamily",
  "impl core::marker::Sync for spark_core::host::capability::NetworkAddressFamily",
  "impl core::marker::Unpin for spark_core::host::capability::NetworkAddressFamily",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::capability::NetworkAddressFamily",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::capability::NetworkAddressFamily",
  "#[non_exhaustive] pub enum spark_core::host::NetworkProtocol",
  "pub spark_core::host::NetworkProtocol::Custom(alloc::string::String)",
  "pub spark_core::host::NetworkProtocol::Grpc",
  "pub spark_core::host::NetworkProtocol::Http3",
  "pub spark_core::host::NetworkProtocol::MessageStream",
  "pub spark_core::host::NetworkProtocol::Quic",
  "pub spark_core::host::NetworkProtocol::WebSocket",
  "impl core::clone::Clone for spark_core::host::capability::NetworkProtocol",
  "pub fn spark_core::host::capability::NetworkProtocol::clone(&self) -> spark_core::host::capability::NetworkProtocol",
  "impl core::cmp::Eq for spark_core::host::capability::NetworkProtocol",
  "impl core::cmp::PartialEq for spark_core::host::capability::NetworkProtocol",
  "pub fn spark_core::host::capability::NetworkProtocol::eq(&self, other: &spark_core::host::capability::NetworkProtocol) -> bool",
  "impl core::fmt::Debug for spark_core::host::capability::NetworkProtocol",
  "pub fn spark_core::host::capability::NetworkProtocol::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::capability::NetworkProtocol",
  "impl core::marker::Freeze for spark_core::host::capability::NetworkProtocol",
  "impl core::marker::Send for spark_core::host::capability::NetworkProtocol",
  "impl core::marker::Sync for spark_core::host::capability::NetworkProtocol",
  "impl core::marker::Unpin for spark_core::host::capability::NetworkProtocol",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::capability::NetworkProtocol",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::capability::NetworkProtocol",
  "#[non_exhaustive] pub enum spark_core::host::ProvisioningOutcome",
  "pub spark_core::host::ProvisioningOutcome::Applied",
  "pub spark_core::host::ProvisioningOutcome::Applied::details: core::option::Option<alloc::string::String>",
  "pub spark_core::host::ProvisioningOutcome::Deferred",
  "pub spark_core::host::ProvisioningOutcome::Deferred::retry_after_seconds: core::option::Option<u32>",
  "pub spark_core::host::ProvisioningOutcome::Rejected",
  "pub spark_core::host::ProvisioningOutcome::Rejected::reason: alloc::string::String",
  "impl spark_core::host::provisioning::ProvisioningOutcome",
  "pub fn spark_core::host::provisioning::ProvisioningOutcome::applied(details: core::option::Option<alloc::string::String>) -> Self",
  "pub fn spark_core::host::provisioning::ProvisioningOutcome::deferred(retry_after_seconds: core::option::Option<u32>) -> Self",
  "pub fn spark_core::host::provisioning::ProvisioningOutcome::rejected(reason: alloc::string::String) -> Self",
  "impl core::clone::Clone for spark_core::host::provisioning::ProvisioningOutcome",
  "pub fn spark_core::host::provisioning::ProvisioningOutcome::clone(&self) -> spark_core::host::provisioning::ProvisioningOutcome",
  "impl core::cmp::Eq for spark_core::host::provisioning::ProvisioningOutcome",
  "impl core::cmp::PartialEq for spark_core::host::provisioning::ProvisioningOutcome",
  "pub fn spark_core::host::provisioning::ProvisioningOutcome::eq(&self, other: &spark_core::host::provisioning::ProvisioningOutcome) -> bool",
  "impl core::fmt::Debug for spark_core::host::provisioning::ProvisioningOutcome",
  "pub fn spark_core::host::provisioning::ProvisioningOutcome::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::provisioning::ProvisioningOutcome",
  "impl core::marker::Freeze for spark_core::host::provisioning::ProvisioningOutcome",
  "impl core::marker::Send for spark_core::host::provisioning::ProvisioningOutcome",
  "impl core::marker::Sync for spark_core::host::provisioning::ProvisioningOutcome",
  "impl core::marker::Unpin for spark_core::host::provisioning::ProvisioningOutcome",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::provisioning::ProvisioningOutcome",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::provisioning::ProvisioningOutcome",
  "#[non_exhaustive] pub enum spark_core::host::SecurityFeature",
  "pub spark_core::host::SecurityFeature::ApiKey",
  "pub spark_core::host::SecurityFeature::Custom(alloc::string::String)",
  "pub spark_core::host::SecurityFeature::JsonWebToken",
  "pub spark_core::host::SecurityFeature::MutualTls",
  "pub spark_core::host::SecurityFeature::TrustedExecution",
  "pub spark_core::host::SecurityFeature::WorkloadIdentity",
  "impl core::clone::Clone for spark_core::host::capability::SecurityFeature",
  "pub fn spark_core::host::capability::SecurityFeature::clone(&self) -> spark_core::host::capability::SecurityFeature",
  "impl core::cmp::Eq for spark_core::host::capability::SecurityFeature",
  "impl core::cmp::PartialEq for spark_core::host::capability::SecurityFeature",
  "pub fn spark_core::host::capability::SecurityFeature::eq(&self, other: &spark_core::host::capability::SecurityFeature) -> bool",
  "impl core::fmt::Debug for spark_core::host::capability::SecurityFeature",
  "pub fn spark_core::host::capability::SecurityFeature::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::capability::SecurityFeature",
  "impl core::marker::Freeze for spark_core::host::capability::SecurityFeature",
  "impl core::marker::Send for spark_core::host::capability::SecurityFeature",
  "impl core::marker::Sync for spark_core::host::capability::SecurityFeature",
  "impl core::marker::Unpin for spark_core::host::capability::SecurityFeature",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::capability::SecurityFeature",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::capability::SecurityFeature",
  "#[non_exhaustive] pub enum spark_core::host::ShutdownReason",
  "pub spark_core::host::ShutdownReason::Failure(alloc::string::String)",
  "pub spark_core::host::ShutdownReason::Graceful",
  "pub spark_core::host::ShutdownReason::Maintenance",
  "impl core::clone::Clone for spark_core::host::lifecycle::ShutdownReason",
  "pub fn spark_core::host::lifecycle::ShutdownReason::clone(&self) -> spark_core::host::lifecycle::ShutdownReason",
  "impl core::cmp::Eq for spark_core::host::lifecycle::ShutdownReason",
  "impl core::cmp::PartialEq for spark_core::host::lifecycle::ShutdownReason",
  "pub fn spark_core::host::lifecycle::ShutdownReason::eq(&self, other: &spark_core::host::lifecycle::ShutdownReason) -> bool",
  "impl core::fmt::Debug for spark_core::host::lifecycle::ShutdownReason",
  "pub fn spark_core::host::lifecycle::ShutdownReason::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::lifecycle::ShutdownReason",
  "impl core::marker::Freeze for spark_core::host::lifecycle::ShutdownReason",
  "impl core::marker::Send for spark_core::host::lifecycle::ShutdownReason",
  "impl core::marker::Sync for spark_core::host::lifecycle::ShutdownReason",
  "impl core::marker::Unpin for spark_core::host::lifecycle::ShutdownReason",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::lifecycle::ShutdownReason",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::lifecycle::ShutdownReason",
  "#[non_exhaustive] pub enum spark_core::host::StartupPhase",
  "pub spark_core::host::StartupPhase::Bootstrapping",
  "pub spark_core::host::StartupPhase::Ready",
  "pub spark_core::host::StartupPhase::Warming",
  "impl core::clone::Clone for spark_core::host::lifecycle::StartupPhase",
  "pub fn spark_core::host::lifecycle::StartupPhase::clone(&self) -> spark_core::host::lifecycle::StartupPhase",
  "impl core::cmp::Eq for spark_core::host::lifecycle::StartupPhase",
  "impl core::cmp::PartialEq for spark_core::host::lifecycle::StartupPhase",
  "pub fn spark_core::host::lifecycle::StartupPhase::eq(&self, other: &spark_core::host::lifecycle::StartupPhase) -> bool",
  "impl core::fmt::Debug for spark_core::host::lifecycle::StartupPhase",
  "pub fn spark_core::host::lifecycle::StartupPhase::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::lifecycle::StartupPhase",
  "impl core::marker::Freeze for spark_core::host::lifecycle::StartupPhase",
  "impl core::marker::Send for spark_core::host::lifecycle::StartupPhase",
  "impl core::marker::Sync for spark_core::host::lifecycle::StartupPhase",
  "impl core::marker::Unpin for spark_core::host::lifecycle::StartupPhase",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::lifecycle::StartupPhase",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::lifecycle::StartupPhase",
  "#[non_exhaustive] pub enum spark_core::host::ThroughputClass",
  "pub spark_core::host::ThroughputClass::Balanced",
  "pub spark_core::host::ThroughputClass::LatencyOptimized",
  "pub spark_core::host::ThroughputClass::ThroughputOptimized",
  "impl core::clone::Clone for spark_core::host::capability::ThroughputClass",
  "pub fn spark_core::host::capability::ThroughputClass::clone(&self) -> spark_core::host::capability::ThroughputClass",
  "impl core::cmp::Eq for spark_core::host::capability::ThroughputClass",
  "impl core::cmp::PartialEq for spark_core::host::capability::ThroughputClass",
  "pub fn spark_core::host::capability::ThroughputClass::eq(&self, other: &spark_core::host::capability::ThroughputClass) -> bool",
  "impl core::fmt::Debug for spark_core::host::capability::ThroughputClass",
  "pub fn spark_core::host::capability::ThroughputClass::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::capability::ThroughputClass",
  "impl core::marker::Freeze for spark_core::host::capability::ThroughputClass",
  "impl core::marker::Send for spark_core::host::capability::ThroughputClass",
  "impl core::marker::Sync for spark_core::host::capability::ThroughputClass",
  "impl core::marker::Unpin for spark_core::host::capability::ThroughputClass",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::capability::ThroughputClass",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::capability::ThroughputClass",
  "pub struct spark_core::host::CapabilityDescriptor",
  "pub spark_core::host::CapabilityDescriptor::address_families: alloc::vec::Vec<spark_core::host::capability::NetworkAddressFamily>",
  "pub spark_core::host::CapabilityDescriptor::max_concurrent_streams: core::option::Option<u32>",
  "pub spark_core::host::CapabilityDescriptor::notes: core::option::Option<alloc::string::String>",
  "pub spark_core::host::CapabilityDescriptor::protocols: alloc::vec::Vec<spark_core::host::capability::NetworkProtocol>",
  "pub spark_core::host::CapabilityDescriptor::security: alloc::vec::Vec<(spark_core::host::capability::SecurityFeature, spark_core::host::capability::CapabilityLevel)>",
  "pub spark_core::host::CapabilityDescriptor::throughput: spark_core::host::capability::ThroughputClass",
  "impl spark_core::host::capability::CapabilityDescriptor",
  "pub fn spark_core::host::capability::CapabilityDescriptor::minimal(protocols: alloc::vec::Vec<spark_core::host::capability::NetworkProtocol>, address_families: alloc::vec::Vec<spark_core::host::capability::NetworkAddressFamily>, security: alloc::vec::Vec<(spark_core::host::capability::SecurityFeature, spark_core::host::capability::CapabilityLevel)>) -> Self",
  "impl core::clone::Clone for spark_core::host::capability::CapabilityDescriptor",
  "pub fn spark_core::host::capability::CapabilityDescriptor::clone(&self) -> spark_core::host::capability::CapabilityDescriptor",
  "impl core::cmp::Eq for spark_core::host::capability::CapabilityDescriptor",
  "impl core::cmp::PartialEq for spark_core::host::capability::CapabilityDescriptor",
  "pub fn spark_core::host::capability::CapabilityDescriptor::eq(&self, other: &spark_core::host::capability::CapabilityDescriptor) -> bool",
  "impl core::fmt::Debug for spark_core::host::capability::CapabilityDescriptor",
  "pub fn spark_core::host::capability::CapabilityDescriptor::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::capability::CapabilityDescriptor",
  "impl core::marker::Freeze for spark_core::host::capability::CapabilityDescriptor",
  "impl core::marker::Send for spark_core::host::capability::CapabilityDescriptor",
  "impl core::marker::Sync for spark_core::host::capability::CapabilityDescriptor",
  "impl core::marker::Unpin for spark_core::host::capability::CapabilityDescriptor",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::capability::CapabilityDescriptor",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::capability::CapabilityDescriptor",
  "pub struct spark_core::host::ComponentDescriptor",
  "pub spark_core::host::ComponentDescriptor::dependencies: alloc::vec::Vec<alloc::string::String>",
  "pub spark_core::host::ComponentDescriptor::description: core::option::Option<alloc::string::String>",
  "pub spark_core::host::ComponentDescriptor::kind: spark_core::host::component::ComponentKind",
  "pub spark_core::host::ComponentDescriptor::name: alloc::string::String",
  "pub spark_core::host::ComponentDescriptor::version: alloc::string::String",
  "impl spark_core::host::component::ComponentDescriptor",
  "pub fn spark_core::host::component::ComponentDescriptor::new(name: alloc::string::String, kind: spark_core::host::component::ComponentKind, version: alloc::string::String) -> Self",
  "impl core::clone::Clone for spark_core::host::component::ComponentDescriptor",
  "pub fn spark_core::host::component::ComponentDescriptor::clone(&self) -> spark_core::host::component::ComponentDescriptor",
  "impl core::cmp::Eq for spark_core::host::component::ComponentDescriptor",
  "impl core::cmp::PartialEq for spark_core::host::component::ComponentDescriptor",
  "pub fn spark_core::host::component::ComponentDescriptor::eq(&self, other: &spark_core::host::component::ComponentDescriptor) -> bool",
  "impl core::fmt::Debug for spark_core::host::component::ComponentDescriptor",
  "pub fn spark_core::host::component::ComponentDescriptor::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::component::ComponentDescriptor",
  "impl core::marker::Freeze for spark_core::host::component::ComponentDescriptor",
  "impl core::marker::Send for spark_core::host::component::ComponentDescriptor",
  "impl core::marker::Sync for spark_core::host::component::ComponentDescriptor",
  "impl core::marker::Unpin for spark_core::host::component::ComponentDescriptor",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::component::ComponentDescriptor",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::component::ComponentDescriptor",
  "pub struct spark_core::host::ConfigChange",
  "pub spark_core::host::ConfigChange::changed_keys: alloc::vec::Vec<alloc::string::String>",
  "pub spark_core::host::ConfigChange::envelope: spark_core::host::provisioning::ConfigEnvelope",
  "impl spark_core::host::provisioning::ConfigChange",
  "pub fn spark_core::host::provisioning::ConfigChange::new(envelope: spark_core::host::provisioning::ConfigEnvelope, changed_keys: alloc::vec::Vec<alloc::string::String>) -> Self",
  "impl core::clone::Clone for spark_core::host::provisioning::ConfigChange",
  "pub fn spark_core::host::provisioning::ConfigChange::clone(&self) -> spark_core::host::provisioning::ConfigChange",
  "impl core::cmp::Eq for spark_core::host::provisioning::ConfigChange",
  "impl core::cmp::PartialEq for spark_core::host::provisioning::ConfigChange",
  "pub fn spark_core::host::provisioning::ConfigChange::eq(&self, other: &spark_core::host::provisioning::ConfigChange) -> bool",
  "impl core::fmt::Debug for spark_core::host::provisioning::ConfigChange",
  "pub fn spark_core::host::provisioning::ConfigChange::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::provisioning::ConfigChange",
  "impl core::marker::Freeze for spark_core::host::provisioning::ConfigChange",
  "impl core::marker::Send for spark_core::host::provisioning::ConfigChange",
  "impl core::marker::Sync for spark_core::host::provisioning::ConfigChange",
  "impl core::marker::Unpin for spark_core::host::provisioning::ConfigChange",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::provisioning::ConfigChange",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::provisioning::ConfigChange",
  "pub struct spark_core::host::ConfigEnvelope",
  "pub spark_core::host::ConfigEnvelope::items: alloc::collections::btree::map::BTreeMap<alloc::string::String, alloc::string::String>",
  "pub spark_core::host::ConfigEnvelope::metadata: alloc::collections::btree::map::BTreeMap<alloc::string::String, alloc::string::String>",
  "pub spark_core::host::ConfigEnvelope::namespace: alloc::string::String",
  "pub spark_core::host::ConfigEnvelope::version: core::option::Option<alloc::string::String>",
  "impl spark_core::host::provisioning::ConfigEnvelope",
  "pub fn spark_core::host::provisioning::ConfigEnvelope::empty(namespace: alloc::string::String) -> Self",
  "impl core::clone::Clone for spark_core::host::provisioning::ConfigEnvelope",
  "pub fn spark_core::host::provisioning::ConfigEnvelope::clone(&self) -> spark_core::host::provisioning::ConfigEnvelope",
  "impl core::cmp::Eq for spark_core::host::provisioning::ConfigEnvelope",
  "impl core::cmp::PartialEq for spark_core::host::provisioning::ConfigEnvelope",
  "pub fn spark_core::host::provisioning::ConfigEnvelope::eq(&self, other: &spark_core::host::provisioning::ConfigEnvelope) -> bool",
  "impl core::fmt::Debug for spark_core::host::provisioning::ConfigEnvelope",
  "pub fn spark_core::host::provisioning::ConfigEnvelope::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::provisioning::ConfigEnvelope",
  "impl core::marker::Freeze for spark_core::host::provisioning::ConfigEnvelope",
  "impl core::marker::Send for spark_core::host::provisioning::ConfigEnvelope",
  "impl core::marker::Sync for spark_core::host::provisioning::ConfigEnvelope",
  "impl core::marker::Unpin for spark_core::host::provisioning::ConfigEnvelope",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::provisioning::ConfigEnvelope",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::provisioning::ConfigEnvelope",
  "pub struct spark_core::host::ConfigQuery",
  "pub spark_core::host::ConfigQuery::keys: alloc::vec::Vec<alloc::string::String>",
  "pub spark_core::host::ConfigQuery::metadata: alloc::collections::btree::map::BTreeMap<alloc::string::String, alloc::string::String>",
  "pub spark_core::host::ConfigQuery::namespace: alloc::string::String",
  "impl spark_core::host::provisioning::ConfigQuery",
  "pub fn spark_core::host::provisioning::ConfigQuery::namespace(namespace: alloc::string::String) -> Self",
  "impl core::clone::Clone for spark_core::host::provisioning::ConfigQuery",
  "pub fn spark_core::host::provisioning::ConfigQuery::clone(&self) -> spark_core::host::provisioning::ConfigQuery",
  "impl core::cmp::Eq for spark_core::host::provisioning::ConfigQuery",
  "impl core::cmp::PartialEq for spark_core::host::provisioning::ConfigQuery",
  "pub fn spark_core::host::provisioning::ConfigQuery::eq(&self, other: &spark_core::host::provisioning::ConfigQuery) -> bool",
  "impl core::fmt::Debug for spark_core::host::provisioning::ConfigQuery",
  "pub fn spark_core::host::provisioning::ConfigQuery::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::provisioning::ConfigQuery",
  "impl core::marker::Freeze for spark_core::host::provisioning::ConfigQuery",
  "impl core::marker::Send for spark_core::host::provisioning::ConfigQuery",
  "impl core::marker::Sync for spark_core::host::provisioning::ConfigQuery",
  "impl core::marker::Unpin for spark_core::host::provisioning::ConfigQuery",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::provisioning::ConfigQuery",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::provisioning::ConfigQuery",
  "pub struct spark_core::host::GracefulShutdownCoordinator",
  "impl spark_core::host::shutdown::GracefulShutdownCoordinator",
  "pub fn spark_core::host::shutdown::GracefulShutdownCoordinator::add_audit_trace(&mut self, trace: spark_core::observability::trace::TraceContext)",
  "pub fn spark_core::host::shutdown::GracefulShutdownCoordinator::new(services: spark_core::CoreServices) -> Self",
  "pub fn spark_core::host::shutdown::GracefulShutdownCoordinator::register_channel(&mut self, label: impl core::convert::Into<alloc::borrow::Cow<'static, str>>, channel: alloc::sync::Arc<dyn spark_core::pipeline::channel::Channel>)",
  "pub fn spark_core::host::shutdown::GracefulShutdownCoordinator::register_target(&mut self, target: spark_core::host::shutdown::GracefulShutdownTarget)",
  "pub fn spark_core::host::shutdown::GracefulShutdownCoordinator::shutdown(self, reason: spark_core::contract::CloseReason, deadline: core::option::Option<spark_core::contract::Deadline>) -> spark_core::future::BoxFuture<'static, spark_core::host::shutdown::GracefulShutdownReport>",
  "impl core::marker::Freeze for spark_core::host::shutdown::GracefulShutdownCoordinator",
  "impl core::marker::Send for spark_core::host::shutdown::GracefulShutdownCoordinator",
  "impl core::marker::Sync for spark_core::host::shutdown::GracefulShutdownCoordinator",
  "impl core::marker::Unpin for spark_core::host::shutdown::GracefulShutdownCoordinator",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::host::shutdown::GracefulShutdownCoordinator",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::host::shutdown::GracefulShutdownCoordinator",
  "pub struct spark_core::host::GracefulShutdownRecord",
  "impl spark_core::host::shutdown::GracefulShutdownRecord",
  "pub fn spark_core::host::shutdown::GracefulShutdownRecord::elapsed(&self) -> core::time::Duration",
  "pub fn spark_core::host::shutdown::GracefulShutdownRecord::label(&self) -> &str",
  "pub fn spark_core::host::shutdown::GracefulShutdownRecord::status(&self) -> &spark_core::host::shutdown::GracefulShutdownStatus",
  "impl core::fmt::Debug for spark_core::host::shutdown::GracefulShutdownRecord",
  "pub fn spark_core::host::shutdown::GracefulShutdownRecord::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::host::shutdown::GracefulShutdownRecord",
  "impl core::marker::Send for spark_core::host::shutdown::GracefulShutdownRecord",
  "impl core::marker::Sync for spark_core::host::shutdown::GracefulShutdownRecord",
  "impl core::marker::Unpin for spark_core::host::shutdown::GracefulShutdownRecord",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::host::shutdown::GracefulShutdownRecord",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::host::shutdown::GracefulShutdownRecord",
  "pub struct spark_core::host::GracefulShutdownReport",
  "impl spark_core::host::shutdown::GracefulShutdownReport",
  "pub fn spark_core::host::shutdown::GracefulShutdownReport::deadline(&self) -> core::option::Option<spark_core::contract::Deadline>",
  "pub fn spark_core::host::shutdown::GracefulShutdownReport::failure_count(&self) -> usize",
  "pub fn spark_core::host::shutdown::GracefulShutdownReport::forced_count(&self) -> usize",
  "pub fn spark_core::host::shutdown::GracefulShutdownReport::reason(&self) -> &spark_core::contract::CloseReason",
  "pub fn spark_core::host::shutdown::GracefulShutdownReport::results(&self) -> &[spark_core::host::shutdown::GracefulShutdownRecord]",
  "impl core::fmt::Debug for spark_core::host::shutdown::GracefulShutdownReport",
  "pub fn spark_core::host::shutdown::GracefulShutdownReport::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::host::shutdown::GracefulShutdownReport",
  "impl core::marker::Send for spark_core::host::shutdown::GracefulShutdownReport",
  "impl core::marker::Sync for spark_core::host::shutdown::GracefulShutdownReport",
  "impl core::marker::Unpin for spark_core::host::shutdown::GracefulShutdownReport",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::host::shutdown::GracefulShutdownReport",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::host::shutdown::GracefulShutdownReport",
  "pub struct spark_core::host::GracefulShutdownTarget",
  "impl spark_core::host::shutdown::GracefulShutdownTarget",
  "pub fn spark_core::host::shutdown::GracefulShutdownTarget::for_callbacks(label: impl core::convert::Into<alloc::borrow::Cow<'static, str>>, trigger_graceful: impl core::ops::function::Fn(&spark_core::contract::CloseReason, core::option::Option<spark_core::contract::Deadline>) + core::marker::Send + core::marker::Sync + 'static, await_closed: impl core::ops::function::Fn() -> spark_core::future::BoxFuture<'static, core::result::Result<(), spark_core::error::SparkError>> + core::marker::Send + core::marker::Sync + 'static, force_close: impl core::ops::function::Fn() + core::marker::Send + core::marker::Sync + 'static) -> Self",
  "pub fn spark_core::host::shutdown::GracefulShutdownTarget::for_channel(label: impl core::convert::Into<alloc::borrow::Cow<'static, str>>, channel: alloc::sync::Arc<dyn spark_core::pipeline::channel::Channel>) -> Self",
  "impl core::fmt::Debug for spark_core::host::shutdown::GracefulShutdownTarget",
  "pub fn spark_core::host::shutdown::GracefulShutdownTarget::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::host::shutdown::GracefulShutdownTarget",
  "impl core::marker::Send for spark_core::host::shutdown::GracefulShutdownTarget",
  "impl core::marker::Sync for spark_core::host::shutdown::GracefulShutdownTarget",
  "impl core::marker::Unpin for spark_core::host::shutdown::GracefulShutdownTarget",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::host::shutdown::GracefulShutdownTarget",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::host::shutdown::GracefulShutdownTarget",
  "pub struct spark_core::host::HostContext",
  "pub spark_core::host::HostContext::capabilities: spark_core::host::capability::CapabilityDescriptor",
  "pub spark_core::host::HostContext::extensions: alloc::collections::btree::map::BTreeMap<alloc::string::String, alloc::string::String>",
  "pub spark_core::host::HostContext::metadata: spark_core::host::context::HostMetadata",
  "pub spark_core::host::HostContext::runtime: spark_core::host::context::HostRuntimeProfile",
  "impl spark_core::host::context::HostContext",
  "pub fn spark_core::host::context::HostContext::new(metadata: spark_core::host::context::HostMetadata, runtime: spark_core::host::context::HostRuntimeProfile, capabilities: spark_core::host::capability::CapabilityDescriptor, extensions: alloc::collections::btree::map::BTreeMap<alloc::string::String, alloc::string::String>) -> Self",
  "impl core::clone::Clone for spark_core::host::context::HostContext",
  "pub fn spark_core::host::context::HostContext::clone(&self) -> spark_core::host::context::HostContext",
  "impl core::cmp::Eq for spark_core::host::context::HostContext",
  "impl core::cmp::PartialEq for spark_core::host::context::HostContext",
  "pub fn spark_core::host::context::HostContext::eq(&self, other: &spark_core::host::context::HostContext) -> bool",
  "impl core::fmt::Debug for spark_core::host::context::HostContext",
  "pub fn spark_core::host::context::HostContext::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::context::HostContext",
  "impl core::marker::Freeze for spark_core::host::context::HostContext",
  "impl core::marker::Send for spark_core::host::context::HostContext",
  "impl core::marker::Sync for spark_core::host::context::HostContext",
  "impl core::marker::Unpin for spark_core::host::context::HostContext",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::context::HostContext",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::context::HostContext",
  "pub struct spark_core::host::HostMetadata",
  "pub spark_core::host::HostMetadata::labels: alloc::collections::btree::map::BTreeMap<alloc::string::String, alloc::string::String>",
  "pub spark_core::host::HostMetadata::name: alloc::string::String",
  "pub spark_core::host::HostMetadata::region: core::option::Option<alloc::string::String>",
  "pub spark_core::host::HostMetadata::vendor: core::option::Option<alloc::string::String>",
  "pub spark_core::host::HostMetadata::version: alloc::string::String",
  "pub spark_core::host::HostMetadata::zone: core::option::Option<alloc::string::String>",
  "impl spark_core::host::context::HostMetadata",
  "pub fn spark_core::host::context::HostMetadata::new(name: alloc::string::String, version: alloc::string::String, labels: alloc::collections::btree::map::BTreeMap<alloc::string::String, alloc::string::String>) -> Self",
  "impl core::clone::Clone for spark_core::host::context::HostMetadata",
  "pub fn spark_core::host::context::HostMetadata::clone(&self) -> spark_core::host::context::HostMetadata",
  "impl core::cmp::Eq for spark_core::host::context::HostMetadata",
  "impl core::cmp::PartialEq for spark_core::host::context::HostMetadata",
  "pub fn spark_core::host::context::HostMetadata::eq(&self, other: &spark_core::host::context::HostMetadata) -> bool",
  "impl core::fmt::Debug for spark_core::host::context::HostMetadata",
  "pub fn spark_core::host::context::HostMetadata::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::context::HostMetadata",
  "impl core::marker::Freeze for spark_core::host::context::HostMetadata",
  "impl core::marker::Send for spark_core::host::context::HostMetadata",
  "impl core::marker::Sync for spark_core::host::context::HostMetadata",
  "impl core::marker::Unpin for spark_core::host::context::HostMetadata",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::context::HostMetadata",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::context::HostMetadata",
  "pub struct spark_core::host::HostRuntimeProfile",
  "pub spark_core::host::HostRuntimeProfile::accelerators: alloc::vec::Vec<alloc::string::String>",
  "pub spark_core::host::HostRuntimeProfile::architecture: alloc::string::String",
  "pub spark_core::host::HostRuntimeProfile::cpu_cores: core::option::Option<u16>",
  "pub spark_core::host::HostRuntimeProfile::memory_bytes: core::option::Option<u64>",
  "pub spark_core::host::HostRuntimeProfile::operating_system: alloc::string::String",
  "impl spark_core::host::context::HostRuntimeProfile",
  "pub fn spark_core::host::context::HostRuntimeProfile::minimal(operating_system: alloc::string::String, architecture: alloc::string::String) -> Self",
  "impl core::clone::Clone for spark_core::host::context::HostRuntimeProfile",
  "pub fn spark_core::host::context::HostRuntimeProfile::clone(&self) -> spark_core::host::context::HostRuntimeProfile",
  "impl core::cmp::Eq for spark_core::host::context::HostRuntimeProfile",
  "impl core::cmp::PartialEq for spark_core::host::context::HostRuntimeProfile",
  "pub fn spark_core::host::context::HostRuntimeProfile::eq(&self, other: &spark_core::host::context::HostRuntimeProfile) -> bool",
  "impl core::fmt::Debug for spark_core::host::context::HostRuntimeProfile",
  "pub fn spark_core::host::context::HostRuntimeProfile::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::context::HostRuntimeProfile",
  "impl core::marker::Freeze for spark_core::host::context::HostRuntimeProfile",
  "impl core::marker::Send for spark_core::host::context::HostRuntimeProfile",
  "impl core::marker::Sync for spark_core::host::context::HostRuntimeProfile",
  "impl core::marker::Unpin for spark_core::host::context::HostRuntimeProfile",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::context::HostRuntimeProfile",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::context::HostRuntimeProfile",
  "pub trait spark_core::host::ComponentFactory: Sealed",
  "pub type spark_core::host::ComponentFactory::Error: spark_core::Error",
  "pub type spark_core::host::ComponentFactory::Instance",
  "pub fn spark_core::host::ComponentFactory::descriptor(&self) -> &spark_core::host::component::ComponentDescriptor",
  "pub fn spark_core::host::ComponentFactory::initialize(&self, ctx: &spark_core::host::context::HostContext) -> core::result::Result<Self::Instance, Self::Error>",
  "pub trait spark_core::host::ConfigConsumer: Sealed",
  "pub type spark_core::host::ConfigConsumer::Error: spark_core::Error",
  "pub fn spark_core::host::ConfigConsumer::on_incremental_change(&self, ctx: &spark_core::host::context::HostContext, change: spark_core::host::provisioning::ConfigChange) -> core::result::Result<spark_core::host::provisioning::ProvisioningOutcome, Self::Error>",
  "pub fn spark_core::host::ConfigConsumer::on_initial_provision(&self, ctx: &spark_core::host::context::HostContext, config: spark_core::host::provisioning::ConfigEnvelope) -> core::result::Result<spark_core::host::provisioning::ProvisioningOutcome, Self::Error>",
  "pub trait spark_core::host::HostLifecycle: Sealed",
  "pub type spark_core::host::HostLifecycle::Error: spark_core::Error",
  "pub fn spark_core::host::HostLifecycle::on_ready(&self, ctx: &spark_core::host::context::HostContext) -> core::result::Result<(), Self::Error>",
  "pub fn spark_core::host::HostLifecycle::on_shutdown(&self, ctx: &spark_core::host::context::HostContext, reason: spark_core::host::lifecycle::ShutdownReason) -> core::result::Result<(), Self::Error>",
  "pub fn spark_core::host::HostLifecycle::on_starting(&self, ctx: &spark_core::host::context::HostContext, phase: spark_core::host::lifecycle::StartupPhase) -> core::result::Result<(), Self::Error>",
  "pub mod spark_core::limits",
  "#[non_exhaustive] pub enum spark_core::limits::LimitAction",
  "pub spark_core::limits::LimitAction::Degrade",
  "pub spark_core::limits::LimitAction::Queue",
  "pub spark_core::limits::LimitAction::Queue::max_queue_depth: u32",
  "pub spark_core::limits::LimitAction::Reject",
  "impl spark_core::limits::LimitAction",
  "pub const fn spark_core::limits::LimitAction::as_str(self) -> &'static str",
  "pub const fn spark_core::limits::LimitAction::queue_capacity(self) -> core::option::Option<u32>",
  "impl core::clone::Clone for spark_core::limits::LimitAction",
  "pub fn spark_core::limits::LimitAction::clone(&self) -> spark_core::limits::LimitAction",
  "impl core::cmp::Eq for spark_core::limits::LimitAction",
  "impl core::cmp::PartialEq for spark_core::limits::LimitAction",
  "pub fn spark_core::limits::LimitAction::eq(&self, other: &spark_core::limits::LimitAction) -> bool",
  "impl core::fmt::Debug for spark_core::limits::LimitAction",
  "pub fn spark_core::limits::LimitAction::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::limits::LimitAction",
  "pub fn spark_core::limits::LimitAction::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::limits::LimitAction",
  "impl core::marker::StructuralPartialEq for spark_core::limits::LimitAction",
  "impl core::marker::Freeze for spark_core::limits::LimitAction",
  "impl core::marker::Send for spark_core::limits::LimitAction",
  "impl core::marker::Sync for spark_core::limits::LimitAction",
  "impl core::marker::Unpin for spark_core::limits::LimitAction",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::limits::LimitAction",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::limits::LimitAction",
  "pub enum spark_core::limits::LimitConfigError",
  "pub spark_core::limits::LimitConfigError::InvalidAction",
  "pub spark_core::limits::LimitConfigError::InvalidAction::provided: alloc::string::String",
  "pub spark_core::limits::LimitConfigError::InvalidAction::resource: spark_core::limits::ResourceKind",
  "pub spark_core::limits::LimitConfigError::InvalidValueType",
  "pub spark_core::limits::LimitConfigError::InvalidValueType::expected: &'static str",
  "pub spark_core::limits::LimitConfigError::InvalidValueType::field: spark_core::limits::LimitField",
  "pub spark_core::limits::LimitConfigError::InvalidValueType::resource: spark_core::limits::ResourceKind",
  "pub spark_core::limits::LimitConfigError::LimitBelowMinimum",
  "pub spark_core::limits::LimitConfigError::LimitBelowMinimum::provided: i64",
  "pub spark_core::limits::LimitConfigError::LimitBelowMinimum::resource: spark_core::limits::ResourceKind",
  "pub spark_core::limits::LimitConfigError::LimitExceedsMaximum",
  "pub spark_core::limits::LimitConfigError::LimitExceedsMaximum::maximum: u64",
  "pub spark_core::limits::LimitConfigError::LimitExceedsMaximum::provided: u64",
  "pub spark_core::limits::LimitConfigError::LimitExceedsMaximum::resource: spark_core::limits::ResourceKind",
  "pub spark_core::limits::LimitConfigError::QueueCapacityInvalid",
  "pub spark_core::limits::LimitConfigError::QueueCapacityInvalid::provided: u32",
  "pub spark_core::limits::LimitConfigError::QueueCapacityInvalid::resource: spark_core::limits::ResourceKind",
  "pub spark_core::limits::LimitConfigError::QueueCapacityWithoutQueueStrategy",
  "pub spark_core::limits::LimitConfigError::QueueCapacityWithoutQueueStrategy::resource: spark_core::limits::ResourceKind",
  "impl core::clone::Clone for spark_core::limits::LimitConfigError",
  "pub fn spark_core::limits::LimitConfigError::clone(&self) -> spark_core::limits::LimitConfigError",
  "impl core::cmp::Eq for spark_core::limits::LimitConfigError",
  "impl core::cmp::PartialEq for spark_core::limits::LimitConfigError",
  "pub fn spark_core::limits::LimitConfigError::eq(&self, other: &spark_core::limits::LimitConfigError) -> bool",
  "impl core::fmt::Debug for spark_core::limits::LimitConfigError",
  "pub fn spark_core::limits::LimitConfigError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::limits::LimitConfigError",
  "pub fn spark_core::limits::LimitConfigError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::limits::LimitConfigError",
  "impl spark_core::Error for spark_core::limits::LimitConfigError",
  "pub fn spark_core::limits::LimitConfigError::source(&self) -> core::option::Option<&(dyn spark_core::Error + 'static)>",
  "impl core::marker::Freeze for spark_core::limits::LimitConfigError",
  "impl core::marker::Send for spark_core::limits::LimitConfigError",
  "impl core::marker::Sync for spark_core::limits::LimitConfigError",
  "impl core::marker::Unpin for spark_core::limits::LimitConfigError",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::limits::LimitConfigError",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::limits::LimitConfigError",
  "#[non_exhaustive] pub enum spark_core::limits::LimitDecision",
  "pub spark_core::limits::LimitDecision::Degraded",
  "pub spark_core::limits::LimitDecision::Permit",
  "pub spark_core::limits::LimitDecision::Queued",
  "pub spark_core::limits::LimitDecision::Queued::capacity: u32",
  "pub spark_core::limits::LimitDecision::Queued::depth: u32",
  "pub spark_core::limits::LimitDecision::Rejected",
  "impl spark_core::limits::LimitDecision",
  "pub const fn spark_core::limits::LimitDecision::as_str(self) -> &'static str",
  "impl core::clone::Clone for spark_core::limits::LimitDecision",
  "pub fn spark_core::limits::LimitDecision::clone(&self) -> spark_core::limits::LimitDecision",
  "impl core::cmp::Eq for spark_core::limits::LimitDecision",
  "impl core::cmp::PartialEq for spark_core::limits::LimitDecision",
  "pub fn spark_core::limits::LimitDecision::eq(&self, other: &spark_core::limits::LimitDecision) -> bool",
  "impl core::fmt::Debug for spark_core::limits::LimitDecision",
  "pub fn spark_core::limits::LimitDecision::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::limits::LimitDecision",
  "pub fn spark_core::limits::LimitDecision::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::limits::LimitDecision",
  "impl core::marker::StructuralPartialEq for spark_core::limits::LimitDecision",
  "impl core::marker::Freeze for spark_core::limits::LimitDecision",
  "impl core::marker::Send for spark_core::limits::LimitDecision",
  "impl core::marker::Sync for spark_core::limits::LimitDecision",
  "impl core::marker::Unpin for spark_core::limits::LimitDecision",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::limits::LimitDecision",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::limits::LimitDecision",
  "pub enum spark_core::limits::LimitField",
  "pub spark_core::limits::LimitField::Action",
  "pub spark_core::limits::LimitField::Limit",
  "pub spark_core::limits::LimitField::QueueCapacity",
  "impl core::clone::Clone for spark_core::limits::LimitField",
  "pub fn spark_core::limits::LimitField::clone(&self) -> spark_core::limits::LimitField",
  "impl core::cmp::Eq for spark_core::limits::LimitField",
  "impl core::cmp::PartialEq for spark_core::limits::LimitField",
  "pub fn spark_core::limits::LimitField::eq(&self, other: &spark_core::limits::LimitField) -> bool",
  "impl core::fmt::Debug for spark_core::limits::LimitField",
  "pub fn spark_core::limits::LimitField::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::limits::LimitField",
  "pub fn spark_core::limits::LimitField::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::limits::LimitField",
  "impl core::marker::StructuralPartialEq for spark_core::limits::LimitField",
  "impl core::marker::Freeze for spark_core::limits::LimitField",
  "impl core::marker::Send for spark_core::limits::LimitField",
  "impl core::marker::Sync for spark_core::limits::LimitField",
  "impl core::marker::Unpin for spark_core::limits::LimitField",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::limits::LimitField",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::limits::LimitField",
  "#[non_exhaustive] pub enum spark_core::limits::ResourceKind",
  "pub spark_core::limits::ResourceKind::Connections",
  "pub spark_core::limits::ResourceKind::FileHandles",
  "pub spark_core::limits::ResourceKind::MemoryBytes",
  "impl spark_core::limits::ResourceKind",
  "pub const spark_core::limits::ResourceKind::ALL: [spark_core::limits::ResourceKind; 3]",
  "pub const fn spark_core::limits::ResourceKind::as_str(self) -> &'static str",
  "pub const fn spark_core::limits::ResourceKind::default_limit(self) -> u64",
  "pub const fn spark_core::limits::ResourceKind::default_queue_capacity(self) -> core::option::Option<u32>",
  "pub const fn spark_core::limits::ResourceKind::max_limit(self) -> u64",
  "pub const fn spark_core::limits::ResourceKind::unit(self) -> &'static str",
  "impl core::clone::Clone for spark_core::limits::ResourceKind",
  "pub fn spark_core::limits::ResourceKind::clone(&self) -> spark_core::limits::ResourceKind",
  "impl core::cmp::Eq for spark_core::limits::ResourceKind",
  "impl core::cmp::PartialEq for spark_core::limits::ResourceKind",
  "pub fn spark_core::limits::ResourceKind::eq(&self, other: &spark_core::limits::ResourceKind) -> bool",
  "impl core::fmt::Debug for spark_core::limits::ResourceKind",
  "pub fn spark_core::limits::ResourceKind::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::limits::ResourceKind",
  "pub fn spark_core::limits::ResourceKind::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::limits::ResourceKind",
  "pub fn spark_core::limits::ResourceKind::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::Copy for spark_core::limits::ResourceKind",
  "impl core::marker::StructuralPartialEq for spark_core::limits::ResourceKind",
  "impl core::marker::Freeze for spark_core::limits::ResourceKind",
  "impl core::marker::Send for spark_core::limits::ResourceKind",
  "impl core::marker::Sync for spark_core::limits::ResourceKind",
  "impl core::marker::Unpin for spark_core::limits::ResourceKind",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::limits::ResourceKind",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::limits::ResourceKind",
  "pub struct spark_core::limits::LimitMetricsHook<'a>",
  "impl<'a> spark_core::limits::LimitMetricsHook<'a>",
  "pub fn spark_core::limits::LimitMetricsHook<'a>::base_attributes(resource: spark_core::limits::ResourceKind, action: spark_core::limits::LimitAction) -> spark_core::observability::attributes::OwnedAttributeSet",
  "pub fn spark_core::limits::LimitMetricsHook<'a>::new(provider: &'a dyn spark_core::observability::metrics::MetricsProvider) -> Self",
  "pub fn spark_core::limits::LimitMetricsHook<'a>::observe(&self, plan: &spark_core::limits::LimitPlan, current_usage: u64, queue_depth: core::option::Option<spark_core::status::ready::QueueDepth>, decision: spark_core::limits::LimitDecision, attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "impl<'a> core::marker::Freeze for spark_core::limits::LimitMetricsHook<'a>",
  "impl<'a> core::marker::Send for spark_core::limits::LimitMetricsHook<'a>",
  "impl<'a> core::marker::Sync for spark_core::limits::LimitMetricsHook<'a>",
  "impl<'a> core::marker::Unpin for spark_core::limits::LimitMetricsHook<'a>",
  "impl<'a> !core::panic::unwind_safe::RefUnwindSafe for spark_core::limits::LimitMetricsHook<'a>",
  "impl<'a> !core::panic::unwind_safe::UnwindSafe for spark_core::limits::LimitMetricsHook<'a>",
  "pub struct spark_core::limits::LimitPlan",
  "impl spark_core::limits::LimitPlan",
  "pub const fn spark_core::limits::LimitPlan::action(&self) -> spark_core::limits::LimitAction",
  "pub fn spark_core::limits::LimitPlan::default_for(resource: spark_core::limits::ResourceKind) -> Self",
  "pub fn spark_core::limits::LimitPlan::evaluate(&self, current_usage: u64, queue_depth: core::option::Option<u32>) -> spark_core::limits::LimitDecision",
  "pub const fn spark_core::limits::LimitPlan::limit(&self) -> u64",
  "pub const fn spark_core::limits::LimitPlan::queue_capacity(&self) -> core::option::Option<u32>",
  "pub const fn spark_core::limits::LimitPlan::resource(&self) -> spark_core::limits::ResourceKind",
  "pub fn spark_core::limits::LimitPlan::set_action(&mut self, action: spark_core::limits::LimitAction) -> core::result::Result<(), spark_core::limits::LimitConfigError>",
  "pub fn spark_core::limits::LimitPlan::set_limit(&mut self, new_limit: u64) -> core::result::Result<(), spark_core::limits::LimitConfigError>",
  "pub fn spark_core::limits::LimitPlan::update_queue_capacity(&mut self, capacity: u32) -> core::result::Result<(), spark_core::limits::LimitConfigError>",
  "impl core::clone::Clone for spark_core::limits::LimitPlan",
  "pub fn spark_core::limits::LimitPlan::clone(&self) -> spark_core::limits::LimitPlan",
  "impl core::cmp::Eq for spark_core::limits::LimitPlan",
  "impl core::cmp::PartialEq for spark_core::limits::LimitPlan",
  "pub fn spark_core::limits::LimitPlan::eq(&self, other: &spark_core::limits::LimitPlan) -> bool",
  "impl core::fmt::Debug for spark_core::limits::LimitPlan",
  "pub fn spark_core::limits::LimitPlan::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::limits::LimitPlan",
  "impl core::marker::Freeze for spark_core::limits::LimitPlan",
  "impl core::marker::Send for spark_core::limits::LimitPlan",
  "impl core::marker::Sync for spark_core::limits::LimitPlan",
  "impl core::marker::Unpin for spark_core::limits::LimitPlan",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::limits::LimitPlan",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::limits::LimitPlan",
  "pub struct spark_core::limits::LimitRuntimeConfig",
  "impl spark_core::limits::LimitRuntimeConfig",
  "pub fn spark_core::limits::LimitRuntimeConfig::config_epoch(&self) -> u64",
  "pub fn spark_core::limits::LimitRuntimeConfig::fence(&self) -> spark_core::runtime::HotReloadFence",
  "pub fn spark_core::limits::LimitRuntimeConfig::new(initial: spark_core::limits::LimitSettings) -> Self",
  "pub fn spark_core::limits::LimitRuntimeConfig::replace(&self, next: spark_core::limits::LimitSettings)",
  "pub fn spark_core::limits::LimitRuntimeConfig::replace_with_fence(&self, guard: &spark_core::runtime::HotReloadWriteGuard<'_>, next: spark_core::limits::LimitSettings, timer: spark_core::runtime::HotReloadApplyTimer)",
  "pub fn spark_core::limits::LimitRuntimeConfig::snapshot(&self) -> alloc::sync::Arc<spark_core::limits::LimitSettings>",
  "pub fn spark_core::limits::LimitRuntimeConfig::snapshot_with_fence(&self, _guard: &spark_core::runtime::HotReloadReadGuard<'_>) -> alloc::sync::Arc<spark_core::limits::LimitSettings>",
  "pub fn spark_core::limits::LimitRuntimeConfig::update_from_configuration(&self, config: &spark_core::ResolvedConfiguration) -> core::result::Result<(), spark_core::limits::LimitConfigError>",
  "pub fn spark_core::limits::LimitRuntimeConfig::update_from_configuration_with_fence(&self, guard: &spark_core::runtime::HotReloadWriteGuard<'_>, config: &spark_core::ResolvedConfiguration, timer: spark_core::runtime::HotReloadApplyTimer) -> core::result::Result<(), spark_core::limits::LimitConfigError>",
  "pub fn spark_core::limits::LimitRuntimeConfig::with_observability(initial: spark_core::limits::LimitSettings, fence: spark_core::runtime::HotReloadFence, metrics: alloc::sync::Arc<dyn spark_core::observability::metrics::MetricsProvider>, component: impl core::convert::Into<alloc::borrow::Cow<'static, str>>) -> Self",
  "pub fn spark_core::limits::LimitRuntimeConfig::with_shared_fence(initial: spark_core::limits::LimitSettings, fence: spark_core::runtime::HotReloadFence) -> Self",
  "impl core::default::Default for spark_core::limits::LimitRuntimeConfig",
  "pub fn spark_core::limits::LimitRuntimeConfig::default() -> Self",
  "impl !core::marker::Freeze for spark_core::limits::LimitRuntimeConfig",
  "impl core::marker::Send for spark_core::limits::LimitRuntimeConfig",
  "impl core::marker::Sync for spark_core::limits::LimitRuntimeConfig",
  "impl core::marker::Unpin for spark_core::limits::LimitRuntimeConfig",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::limits::LimitRuntimeConfig",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::limits::LimitRuntimeConfig",
  "pub struct spark_core::limits::LimitSettings",
  "impl spark_core::limits::LimitSettings",
  "pub fn spark_core::limits::LimitSettings::from_configuration(config: &spark_core::ResolvedConfiguration) -> core::result::Result<Self, spark_core::limits::LimitConfigError>",
  "pub fn spark_core::limits::LimitSettings::new() -> Self",
  "pub fn spark_core::limits::LimitSettings::plan(&self, resource: spark_core::limits::ResourceKind) -> &spark_core::limits::LimitPlan",
  "impl core::clone::Clone for spark_core::limits::LimitSettings",
  "pub fn spark_core::limits::LimitSettings::clone(&self) -> spark_core::limits::LimitSettings",
  "impl core::cmp::Eq for spark_core::limits::LimitSettings",
  "impl core::cmp::PartialEq for spark_core::limits::LimitSettings",
  "pub fn spark_core::limits::LimitSettings::eq(&self, other: &spark_core::limits::LimitSettings) -> bool",
  "impl core::default::Default for spark_core::limits::LimitSettings",
  "pub fn spark_core::limits::LimitSettings::default() -> Self",
  "impl core::fmt::Debug for spark_core::limits::LimitSettings",
  "pub fn spark_core::limits::LimitSettings::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::limits::LimitSettings",
  "impl core::marker::Freeze for spark_core::limits::LimitSettings",
  "impl core::marker::Send for spark_core::limits::LimitSettings",
  "impl core::marker::Sync for spark_core::limits::LimitSettings",
  "impl core::marker::Unpin for spark_core::limits::LimitSettings",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::limits::LimitSettings",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::limits::LimitSettings",
  "pub fn spark_core::limits::config_error_to_spark(err: spark_core::limits::LimitConfigError) -> spark_core::error::SparkError",
  "pub fn spark_core::limits::decision_queue_snapshot(decision: &spark_core::limits::LimitDecision) -> core::option::Option<spark_core::status::ready::QueueDepth>",
  "pub mod spark_core::observability",
  "pub mod spark_core::observability::attributes",
  "#[non_exhaustive] pub enum spark_core::observability::attributes::MetricAttributeValue<'a>",
  "pub spark_core::observability::attributes::MetricAttributeValue::Bool(bool)",
  "pub spark_core::observability::attributes::MetricAttributeValue::F64(f64)",
  "pub spark_core::observability::attributes::MetricAttributeValue::I64(i64)",
  "pub spark_core::observability::attributes::MetricAttributeValue::Text(alloc::borrow::Cow<'a, str>)",
  "impl<'a> spark_core::observability::attributes::MetricAttributeValue<'a>",
  "pub fn spark_core::observability::attributes::MetricAttributeValue<'a>::into_owned(self) -> spark_core::observability::attributes::MetricAttributeValue<'static>",
  "impl core::convert::From<alloc::string::String> for spark_core::observability::attributes::MetricAttributeValue<'_>",
  "pub fn spark_core::observability::attributes::MetricAttributeValue<'_>::from(value: alloc::string::String) -> Self",
  "impl core::convert::From<bool> for spark_core::observability::attributes::MetricAttributeValue<'_>",
  "pub fn spark_core::observability::attributes::MetricAttributeValue<'_>::from(value: bool) -> Self",
  "impl core::convert::From<f32> for spark_core::observability::attributes::MetricAttributeValue<'_>",
  "pub fn spark_core::observability::attributes::MetricAttributeValue<'_>::from(value: f32) -> Self",
  "impl core::convert::From<f64> for spark_core::observability::attributes::MetricAttributeValue<'_>",
  "pub fn spark_core::observability::attributes::MetricAttributeValue<'_>::from(value: f64) -> Self",
  "impl core::convert::From<i32> for spark_core::observability::attributes::MetricAttributeValue<'_>",
  "pub fn spark_core::observability::attributes::MetricAttributeValue<'_>::from(value: i32) -> Self",
  "impl core::convert::From<i64> for spark_core::observability::attributes::MetricAttributeValue<'_>",
  "pub fn spark_core::observability::attributes::MetricAttributeValue<'_>::from(value: i64) -> Self",
  "impl core::convert::From<u32> for spark_core::observability::attributes::MetricAttributeValue<'_>",
  "pub fn spark_core::observability::attributes::MetricAttributeValue<'_>::from(value: u32) -> Self",
  "impl core::convert::From<u64> for spark_core::observability::attributes::MetricAttributeValue<'_>",
  "pub fn spark_core::observability::attributes::MetricAttributeValue<'_>::from(value: u64) -> Self",
  "impl<'a> core::clone::Clone for spark_core::observability::attributes::MetricAttributeValue<'a>",
  "pub fn spark_core::observability::attributes::MetricAttributeValue<'a>::clone(&self) -> spark_core::observability::attributes::MetricAttributeValue<'a>",
  "impl<'a> core::cmp::PartialEq for spark_core::observability::attributes::MetricAttributeValue<'a>",
  "pub fn spark_core::observability::attributes::MetricAttributeValue<'a>::eq(&self, other: &spark_core::observability::attributes::MetricAttributeValue<'a>) -> bool",
  "impl<'a> core::convert::From<&'a str> for spark_core::observability::attributes::MetricAttributeValue<'a>",
  "pub fn spark_core::observability::attributes::MetricAttributeValue<'a>::from(value: &'a str) -> Self",
  "impl<'a> core::convert::From<alloc::borrow::Cow<'a, str>> for spark_core::observability::attributes::MetricAttributeValue<'a>",
  "pub fn spark_core::observability::attributes::MetricAttributeValue<'a>::from(value: alloc::borrow::Cow<'a, str>) -> Self",
  "impl<'a> core::fmt::Debug for spark_core::observability::attributes::MetricAttributeValue<'a>",
  "pub fn spark_core::observability::attributes::MetricAttributeValue<'a>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<'a> core::marker::StructuralPartialEq for spark_core::observability::attributes::MetricAttributeValue<'a>",
  "impl<'a> core::marker::Freeze for spark_core::observability::attributes::MetricAttributeValue<'a>",
  "impl<'a> core::marker::Send for spark_core::observability::attributes::MetricAttributeValue<'a>",
  "impl<'a> core::marker::Sync for spark_core::observability::attributes::MetricAttributeValue<'a>",
  "impl<'a> core::marker::Unpin for spark_core::observability::attributes::MetricAttributeValue<'a>",
  "impl<'a> core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::attributes::MetricAttributeValue<'a>",
  "impl<'a> core::panic::unwind_safe::UnwindSafe for spark_core::observability::attributes::MetricAttributeValue<'a>",
  "pub struct spark_core::observability::attributes::KeyValue<'a>",
  "pub spark_core::observability::attributes::KeyValue::key: spark_core::observability::attributes::AttributeKey<'a>",
  "pub spark_core::observability::attributes::KeyValue::value: spark_core::observability::attributes::MetricAttributeValue<'a>",
  "impl<'a> spark_core::observability::attributes::KeyValue<'a>",
  "pub fn spark_core::observability::attributes::KeyValue<'a>::new(key: impl core::convert::Into<spark_core::observability::attributes::AttributeKey<'a>>, value: impl core::convert::Into<spark_core::observability::attributes::MetricAttributeValue<'a>>) -> Self",
  "impl<'a> core::clone::Clone for spark_core::observability::attributes::KeyValue<'a>",
  "pub fn spark_core::observability::attributes::KeyValue<'a>::clone(&self) -> spark_core::observability::attributes::KeyValue<'a>",
  "impl<'a> core::cmp::PartialEq for spark_core::observability::attributes::KeyValue<'a>",
  "pub fn spark_core::observability::attributes::KeyValue<'a>::eq(&self, other: &spark_core::observability::attributes::KeyValue<'a>) -> bool",
  "impl<'a> core::fmt::Debug for spark_core::observability::attributes::KeyValue<'a>",
  "pub fn spark_core::observability::attributes::KeyValue<'a>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<'a> core::marker::StructuralPartialEq for spark_core::observability::attributes::KeyValue<'a>",
  "impl<'a> core::marker::Freeze for spark_core::observability::attributes::KeyValue<'a>",
  "impl<'a> core::marker::Send for spark_core::observability::attributes::KeyValue<'a>",
  "impl<'a> core::marker::Sync for spark_core::observability::attributes::KeyValue<'a>",
  "impl<'a> core::marker::Unpin for spark_core::observability::attributes::KeyValue<'a>",
  "impl<'a> core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::attributes::KeyValue<'a>",
  "impl<'a> core::panic::unwind_safe::UnwindSafe for spark_core::observability::attributes::KeyValue<'a>",
  "pub struct spark_core::observability::attributes::OwnedAttributeSet",
  "impl spark_core::observability::attributes::OwnedAttributeSet",
  "pub fn spark_core::observability::attributes::OwnedAttributeSet::as_slice(&self) -> spark_core::observability::attributes::AttributeSet<'_>",
  "pub fn spark_core::observability::attributes::OwnedAttributeSet::clear(&mut self)",
  "pub fn spark_core::observability::attributes::OwnedAttributeSet::extend_from(&mut self, borrowed: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub fn spark_core::observability::attributes::OwnedAttributeSet::new() -> Self",
  "pub fn spark_core::observability::attributes::OwnedAttributeSet::push_owned(&mut self, key: impl core::convert::Into<spark_core::observability::attributes::AttributeKey<'static>>, value: impl core::convert::Into<spark_core::observability::attributes::MetricAttributeValue<'static>>)",
  "impl core::clone::Clone for spark_core::observability::attributes::OwnedAttributeSet",
  "pub fn spark_core::observability::attributes::OwnedAttributeSet::clone(&self) -> spark_core::observability::attributes::OwnedAttributeSet",
  "impl core::default::Default for spark_core::observability::attributes::OwnedAttributeSet",
  "pub fn spark_core::observability::attributes::OwnedAttributeSet::default() -> spark_core::observability::attributes::OwnedAttributeSet",
  "impl core::fmt::Debug for spark_core::observability::attributes::OwnedAttributeSet",
  "pub fn spark_core::observability::attributes::OwnedAttributeSet::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::observability::attributes::OwnedAttributeSet",
  "impl core::marker::Send for spark_core::observability::attributes::OwnedAttributeSet",
  "impl core::marker::Sync for spark_core::observability::attributes::OwnedAttributeSet",
  "impl core::marker::Unpin for spark_core::observability::attributes::OwnedAttributeSet",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::attributes::OwnedAttributeSet",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::attributes::OwnedAttributeSet",
  "pub type spark_core::observability::attributes::AttributeKey<'a> = alloc::borrow::Cow<'a, str>",
  "pub type spark_core::observability::attributes::AttributeSet<'a> = &'a [spark_core::observability::attributes::KeyValue<'a>]",
  "pub mod spark_core::observability::events",
  "#[non_exhaustive] pub enum spark_core::observability::events::CoreUserEvent",
  "pub spark_core::observability::events::CoreUserEvent::ApplicationSpecific(alloc::sync::Arc<dyn spark_core::observability::events::ApplicationEvent>)",
  "pub spark_core::observability::events::CoreUserEvent::ConfigChanged",
  "pub spark_core::observability::events::CoreUserEvent::ConfigChanged::keys: alloc::vec::Vec<alloc::string::String>",
  "pub spark_core::observability::events::CoreUserEvent::IdleTimeout(spark_core::observability::events::IdleTimeout)",
  "pub spark_core::observability::events::CoreUserEvent::RateLimited(spark_core::observability::events::RateLimited)",
  "pub spark_core::observability::events::CoreUserEvent::TlsEstablished(spark_core::observability::events::TlsInfo)",
  "impl spark_core::observability::events::CoreUserEvent",
  "pub fn spark_core::observability::events::CoreUserEvent::application_event_kind(&self) -> core::option::Option<&'static str>",
  "pub fn spark_core::observability::events::CoreUserEvent::downcast_application_event<E>(&self) -> core::option::Option<&E> where E: spark_core::observability::events::ApplicationEvent",
  "pub fn spark_core::observability::events::CoreUserEvent::from_application_event<E>(event: E) -> Self where E: spark_core::observability::events::ApplicationEvent",
  "impl core::clone::Clone for spark_core::observability::events::CoreUserEvent",
  "pub fn spark_core::observability::events::CoreUserEvent::clone(&self) -> spark_core::observability::events::CoreUserEvent",
  "impl core::fmt::Debug for spark_core::observability::events::CoreUserEvent",
  "pub fn spark_core::observability::events::CoreUserEvent::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::observability::events::CoreUserEvent",
  "impl core::marker::Send for spark_core::observability::events::CoreUserEvent",
  "impl core::marker::Sync for spark_core::observability::events::CoreUserEvent",
  "impl core::marker::Unpin for spark_core::observability::events::CoreUserEvent",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::events::CoreUserEvent",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::observability::events::CoreUserEvent",
  "#[non_exhaustive] pub enum spark_core::observability::events::EventPolicy",
  "pub spark_core::observability::events::EventPolicy::BoundedBuffer",
  "pub spark_core::observability::events::EventPolicy::BoundedBuffer::capacity: core::num::nonzero::NonZeroUsize",
  "pub spark_core::observability::events::EventPolicy::BoundedBuffer::overflow: spark_core::cluster::flow_control::OverflowPolicy",
  "pub spark_core::observability::events::EventPolicy::Debounce",
  "pub spark_core::observability::events::EventPolicy::Debounce::window: core::time::Duration",
  "pub spark_core::observability::events::EventPolicy::Passthrough",
  "pub spark_core::observability::events::EventPolicy::RateLimit",
  "pub spark_core::observability::events::EventPolicy::RateLimit::burst: core::num::nonzero::NonZeroU32",
  "pub spark_core::observability::events::EventPolicy::RateLimit::permits_per_sec: core::num::nonzero::NonZeroU32",
  "pub spark_core::observability::events::EventPolicy::Sample",
  "pub spark_core::observability::events::EventPolicy::Sample::every: core::num::nonzero::NonZeroUsize",
  "impl core::clone::Clone for spark_core::observability::events::EventPolicy",
  "pub fn spark_core::observability::events::EventPolicy::clone(&self) -> spark_core::observability::events::EventPolicy",
  "impl core::cmp::Eq for spark_core::observability::events::EventPolicy",
  "impl core::cmp::PartialEq for spark_core::observability::events::EventPolicy",
  "pub fn spark_core::observability::events::EventPolicy::eq(&self, other: &spark_core::observability::events::EventPolicy) -> bool",
  "impl core::fmt::Debug for spark_core::observability::events::EventPolicy",
  "pub fn spark_core::observability::events::EventPolicy::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::observability::events::EventPolicy",
  "impl core::marker::Freeze for spark_core::observability::events::EventPolicy",
  "impl core::marker::Send for spark_core::observability::events::EventPolicy",
  "impl core::marker::Sync for spark_core::observability::events::EventPolicy",
  "impl core::marker::Unpin for spark_core::observability::events::EventPolicy",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::events::EventPolicy",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::events::EventPolicy",
  "#[non_exhaustive] pub enum spark_core::observability::events::IdleDirection",
  "pub spark_core::observability::events::IdleDirection::Both",
  "pub spark_core::observability::events::IdleDirection::Read",
  "pub spark_core::observability::events::IdleDirection::Write",
  "impl core::clone::Clone for spark_core::observability::events::IdleDirection",
  "pub fn spark_core::observability::events::IdleDirection::clone(&self) -> spark_core::observability::events::IdleDirection",
  "impl core::cmp::Eq for spark_core::observability::events::IdleDirection",
  "impl core::cmp::PartialEq for spark_core::observability::events::IdleDirection",
  "pub fn spark_core::observability::events::IdleDirection::eq(&self, other: &spark_core::observability::events::IdleDirection) -> bool",
  "impl core::fmt::Debug for spark_core::observability::events::IdleDirection",
  "pub fn spark_core::observability::events::IdleDirection::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::observability::events::IdleDirection",
  "impl core::marker::StructuralPartialEq for spark_core::observability::events::IdleDirection",
  "impl core::marker::Freeze for spark_core::observability::events::IdleDirection",
  "impl core::marker::Send for spark_core::observability::events::IdleDirection",
  "impl core::marker::Sync for spark_core::observability::events::IdleDirection",
  "impl core::marker::Unpin for spark_core::observability::events::IdleDirection",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::events::IdleDirection",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::events::IdleDirection",
  "#[non_exhaustive] pub enum spark_core::observability::events::OpsEvent",
  "pub spark_core::observability::events::OpsEvent::BufferLeakDetected",
  "pub spark_core::observability::events::OpsEvent::BufferLeakDetected::count: usize",
  "pub spark_core::observability::events::OpsEvent::ClusterChange(spark_core::cluster::membership::ClusterMembershipEvent)",
  "pub spark_core::observability::events::OpsEvent::DiscoveryJitter(spark_core::cluster::discovery::DiscoveryEvent)",
  "pub spark_core::observability::events::OpsEvent::FailureClusterDetected",
  "pub spark_core::observability::events::OpsEvent::FailureClusterDetected::count: u64",
  "pub spark_core::observability::events::OpsEvent::FailureClusterDetected::error_code: &'static str",
  "pub spark_core::observability::events::OpsEvent::FlowControlApplied",
  "pub spark_core::observability::events::OpsEvent::FlowControlApplied::channel_id: alloc::string::String",
  "pub spark_core::observability::events::OpsEvent::HealthChange(spark_core::observability::health::ComponentHealth)",
  "pub spark_core::observability::events::OpsEvent::ShutdownTriggered",
  "pub spark_core::observability::events::OpsEvent::ShutdownTriggered::deadline: core::time::Duration",
  "impl core::clone::Clone for spark_core::observability::events::OpsEvent",
  "pub fn spark_core::observability::events::OpsEvent::clone(&self) -> spark_core::observability::events::OpsEvent",
  "impl core::fmt::Debug for spark_core::observability::events::OpsEvent",
  "pub fn spark_core::observability::events::OpsEvent::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::observability::events::OpsEvent",
  "impl core::marker::Send for spark_core::observability::events::OpsEvent",
  "impl core::marker::Sync for spark_core::observability::events::OpsEvent",
  "impl core::marker::Unpin for spark_core::observability::events::OpsEvent",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::events::OpsEvent",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::events::OpsEvent",
  "#[non_exhaustive] pub enum spark_core::observability::events::OpsEventKind",
  "pub spark_core::observability::events::OpsEventKind::BufferLeakDetected",
  "pub spark_core::observability::events::OpsEventKind::ClusterChange",
  "pub spark_core::observability::events::OpsEventKind::Custom(alloc::string::String)",
  "pub spark_core::observability::events::OpsEventKind::DiscoveryJitter",
  "pub spark_core::observability::events::OpsEventKind::FailureClusterDetected",
  "pub spark_core::observability::events::OpsEventKind::FlowControlApplied",
  "pub spark_core::observability::events::OpsEventKind::HealthChange",
  "pub spark_core::observability::events::OpsEventKind::ShutdownTriggered",
  "impl core::clone::Clone for spark_core::observability::events::OpsEventKind",
  "pub fn spark_core::observability::events::OpsEventKind::clone(&self) -> spark_core::observability::events::OpsEventKind",
  "impl core::cmp::Eq for spark_core::observability::events::OpsEventKind",
  "impl core::cmp::PartialEq for spark_core::observability::events::OpsEventKind",
  "pub fn spark_core::observability::events::OpsEventKind::eq(&self, other: &spark_core::observability::events::OpsEventKind) -> bool",
  "impl core::fmt::Debug for spark_core::observability::events::OpsEventKind",
  "pub fn spark_core::observability::events::OpsEventKind::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::observability::events::OpsEventKind",
  "pub fn spark_core::observability::events::OpsEventKind::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::StructuralPartialEq for spark_core::observability::events::OpsEventKind",
  "impl core::marker::Freeze for spark_core::observability::events::OpsEventKind",
  "impl core::marker::Send for spark_core::observability::events::OpsEventKind",
  "impl core::marker::Sync for spark_core::observability::events::OpsEventKind",
  "impl core::marker::Unpin for spark_core::observability::events::OpsEventKind",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::events::OpsEventKind",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::events::OpsEventKind",
  "#[non_exhaustive] pub enum spark_core::observability::events::RateDirection",
  "pub spark_core::observability::events::RateDirection::Inbound",
  "pub spark_core::observability::events::RateDirection::Outbound",
  "impl core::clone::Clone for spark_core::observability::events::RateDirection",
  "pub fn spark_core::observability::events::RateDirection::clone(&self) -> spark_core::observability::events::RateDirection",
  "impl core::cmp::Eq for spark_core::observability::events::RateDirection",
  "impl core::cmp::PartialEq for spark_core::observability::events::RateDirection",
  "pub fn spark_core::observability::events::RateDirection::eq(&self, other: &spark_core::observability::events::RateDirection) -> bool",
  "impl core::fmt::Debug for spark_core::observability::events::RateDirection",
  "pub fn spark_core::observability::events::RateDirection::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::observability::events::RateDirection",
  "impl core::marker::StructuralPartialEq for spark_core::observability::events::RateDirection",
  "impl core::marker::Freeze for spark_core::observability::events::RateDirection",
  "impl core::marker::Send for spark_core::observability::events::RateDirection",
  "impl core::marker::Sync for spark_core::observability::events::RateDirection",
  "impl core::marker::Unpin for spark_core::observability::events::RateDirection",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::events::RateDirection",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::events::RateDirection",
  "pub struct spark_core::observability::events::IdleTimeout",
  "pub spark_core::observability::events::IdleTimeout::direction: spark_core::observability::events::IdleDirection",
  "impl core::clone::Clone for spark_core::observability::events::IdleTimeout",
  "pub fn spark_core::observability::events::IdleTimeout::clone(&self) -> spark_core::observability::events::IdleTimeout",
  "impl core::cmp::Eq for spark_core::observability::events::IdleTimeout",
  "impl core::cmp::PartialEq for spark_core::observability::events::IdleTimeout",
  "pub fn spark_core::observability::events::IdleTimeout::eq(&self, other: &spark_core::observability::events::IdleTimeout) -> bool",
  "impl core::fmt::Debug for spark_core::observability::events::IdleTimeout",
  "pub fn spark_core::observability::events::IdleTimeout::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::observability::events::IdleTimeout",
  "impl core::marker::StructuralPartialEq for spark_core::observability::events::IdleTimeout",
  "impl core::marker::Freeze for spark_core::observability::events::IdleTimeout",
  "impl core::marker::Send for spark_core::observability::events::IdleTimeout",
  "impl core::marker::Sync for spark_core::observability::events::IdleTimeout",
  "impl core::marker::Unpin for spark_core::observability::events::IdleTimeout",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::events::IdleTimeout",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::events::IdleTimeout",
  "pub struct spark_core::observability::events::RateLimited",
  "pub spark_core::observability::events::RateLimited::direction: spark_core::observability::events::RateDirection",
  "impl core::clone::Clone for spark_core::observability::events::RateLimited",
  "pub fn spark_core::observability::events::RateLimited::clone(&self) -> spark_core::observability::events::RateLimited",
  "impl core::cmp::Eq for spark_core::observability::events::RateLimited",
  "impl core::cmp::PartialEq for spark_core::observability::events::RateLimited",
  "pub fn spark_core::observability::events::RateLimited::eq(&self, other: &spark_core::observability::events::RateLimited) -> bool",
  "impl core::fmt::Debug for spark_core::observability::events::RateLimited",
  "pub fn spark_core::observability::events::RateLimited::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::observability::events::RateLimited",
  "impl core::marker::StructuralPartialEq for spark_core::observability::events::RateLimited",
  "impl core::marker::Freeze for spark_core::observability::events::RateLimited",
  "impl core::marker::Send for spark_core::observability::events::RateLimited",
  "impl core::marker::Sync for spark_core::observability::events::RateLimited",
  "impl core::marker::Unpin for spark_core::observability::events::RateLimited",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::events::RateLimited",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::events::RateLimited",
  "pub struct spark_core::observability::events::TlsInfo",
  "pub spark_core::observability::events::TlsInfo::cipher: alloc::string::String",
  "pub spark_core::observability::events::TlsInfo::peer_identity: core::option::Option<alloc::string::String>",
  "pub spark_core::observability::events::TlsInfo::version: alloc::string::String",
  "impl core::clone::Clone for spark_core::observability::events::TlsInfo",
  "pub fn spark_core::observability::events::TlsInfo::clone(&self) -> spark_core::observability::events::TlsInfo",
  "impl core::cmp::Eq for spark_core::observability::events::TlsInfo",
  "impl core::cmp::PartialEq for spark_core::observability::events::TlsInfo",
  "pub fn spark_core::observability::events::TlsInfo::eq(&self, other: &spark_core::observability::events::TlsInfo) -> bool",
  "impl core::fmt::Debug for spark_core::observability::events::TlsInfo",
  "pub fn spark_core::observability::events::TlsInfo::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::observability::events::TlsInfo",
  "impl core::marker::Freeze for spark_core::observability::events::TlsInfo",
  "impl core::marker::Send for spark_core::observability::events::TlsInfo",
  "impl core::marker::Sync for spark_core::observability::events::TlsInfo",
  "impl core::marker::Unpin for spark_core::observability::events::TlsInfo",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::events::TlsInfo",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::events::TlsInfo",
  "pub trait spark_core::observability::events::ApplicationEvent: core::fmt::Debug + core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::observability::events::ApplicationEvent::as_any(&self) -> &dyn core::any::Any",
  "pub fn spark_core::observability::events::ApplicationEvent::clone_event(&self) -> alloc::sync::Arc<dyn spark_core::observability::events::ApplicationEvent>",
  "pub fn spark_core::observability::events::ApplicationEvent::event_kind(&self) -> &'static str",
  "impl<T> spark_core::observability::events::ApplicationEvent for T where T: core::any::Any + core::clone::Clone + core::marker::Send + core::marker::Sync + core::fmt::Debug + 'static",
  "pub fn T::as_any(&self) -> &(dyn core::any::Any + 'static)",
  "pub fn T::clone_event(&self) -> alloc::sync::Arc<dyn spark_core::observability::events::ApplicationEvent>",
  "pub fn T::event_kind(&self) -> &'static str",
  "pub trait spark_core::observability::events::OpsEventBus: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::observability::events::OpsEventBus::broadcast(&self, event: spark_core::observability::events::OpsEvent)",
  "pub fn spark_core::observability::events::OpsEventBus::set_event_policy(&self, kind: spark_core::observability::events::OpsEventKind, policy: spark_core::observability::events::EventPolicy)",
  "pub fn spark_core::observability::events::OpsEventBus::subscribe(&self) -> spark_core::future::BoxStream<'static, spark_core::observability::events::OpsEvent>",
  "pub mod spark_core::observability::facade",
  "pub struct spark_core::observability::facade::DefaultObservabilityFacade",
  "impl spark_core::observability::facade::DefaultObservabilityFacade",
  "pub fn spark_core::observability::facade::DefaultObservabilityFacade::new(logger: alloc::sync::Arc<dyn spark_core::observability::logging::Logger>, metrics: alloc::sync::Arc<dyn spark_core::observability::metrics::MetricsProvider>, ops_bus: alloc::sync::Arc<dyn spark_core::observability::events::OpsEventBus>, health_checks: spark_core::observability::health::HealthChecks) -> Self",
  "impl core::clone::Clone for spark_core::observability::facade::DefaultObservabilityFacade",
  "pub fn spark_core::observability::facade::DefaultObservabilityFacade::clone(&self) -> spark_core::observability::facade::DefaultObservabilityFacade",
  "impl spark_core::observability::facade::ObservabilityFacade for spark_core::observability::facade::DefaultObservabilityFacade",
  "pub fn spark_core::observability::facade::DefaultObservabilityFacade::health_checks(&self) -> &spark_core::observability::health::HealthChecks",
  "pub fn spark_core::observability::facade::DefaultObservabilityFacade::logger(&self) -> alloc::sync::Arc<dyn spark_core::observability::logging::Logger>",
  "pub fn spark_core::observability::facade::DefaultObservabilityFacade::metrics(&self) -> alloc::sync::Arc<dyn spark_core::observability::metrics::MetricsProvider>",
  "pub fn spark_core::observability::facade::DefaultObservabilityFacade::ops_bus(&self) -> alloc::sync::Arc<dyn spark_core::observability::events::OpsEventBus>",
  "impl core::marker::Freeze for spark_core::observability::facade::DefaultObservabilityFacade",
  "impl core::marker::Send for spark_core::observability::facade::DefaultObservabilityFacade",
  "impl core::marker::Sync for spark_core::observability::facade::DefaultObservabilityFacade",
  "impl core::marker::Unpin for spark_core::observability::facade::DefaultObservabilityFacade",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::facade::DefaultObservabilityFacade",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::observability::facade::DefaultObservabilityFacade",
  "pub trait spark_core::observability::facade::ObservabilityFacade: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::observability::facade::ObservabilityFacade::health_checks(&self) -> &spark_core::observability::health::HealthChecks",
  "pub fn spark_core::observability::facade::ObservabilityFacade::logger(&self) -> alloc::sync::Arc<dyn spark_core::observability::logging::Logger>",
  "pub fn spark_core::observability::facade::ObservabilityFacade::metrics(&self) -> alloc::sync::Arc<dyn spark_core::observability::metrics::MetricsProvider>",
  "pub fn spark_core::observability::facade::ObservabilityFacade::ops_bus(&self) -> alloc::sync::Arc<dyn spark_core::observability::events::OpsEventBus>",
  "impl spark_core::observability::facade::ObservabilityFacade for spark_core::observability::facade::DefaultObservabilityFacade",
  "pub fn spark_core::observability::facade::DefaultObservabilityFacade::health_checks(&self) -> &spark_core::observability::health::HealthChecks",
  "pub fn spark_core::observability::facade::DefaultObservabilityFacade::logger(&self) -> alloc::sync::Arc<dyn spark_core::observability::logging::Logger>",
  "pub fn spark_core::observability::facade::DefaultObservabilityFacade::metrics(&self) -> alloc::sync::Arc<dyn spark_core::observability::metrics::MetricsProvider>",
  "pub fn spark_core::observability::facade::DefaultObservabilityFacade::ops_bus(&self) -> alloc::sync::Arc<dyn spark_core::observability::events::OpsEventBus>",
  "pub mod spark_core::observability::health",
  "#[non_exhaustive] pub enum spark_core::observability::health::HealthState",
  "pub spark_core::observability::health::HealthState::Degraded",
  "pub spark_core::observability::health::HealthState::Down",
  "pub spark_core::observability::health::HealthState::Up",
  "impl core::clone::Clone for spark_core::observability::health::HealthState",
  "pub fn spark_core::observability::health::HealthState::clone(&self) -> spark_core::observability::health::HealthState",
  "impl core::cmp::Eq for spark_core::observability::health::HealthState",
  "impl core::cmp::PartialEq for spark_core::observability::health::HealthState",
  "pub fn spark_core::observability::health::HealthState::eq(&self, other: &spark_core::observability::health::HealthState) -> bool",
  "impl core::fmt::Debug for spark_core::observability::health::HealthState",
  "pub fn spark_core::observability::health::HealthState::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::observability::health::HealthState",
  "impl core::marker::StructuralPartialEq for spark_core::observability::health::HealthState",
  "impl core::marker::Freeze for spark_core::observability::health::HealthState",
  "impl core::marker::Send for spark_core::observability::health::HealthState",
  "impl core::marker::Sync for spark_core::observability::health::HealthState",
  "impl core::marker::Unpin for spark_core::observability::health::HealthState",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::health::HealthState",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::health::HealthState",
  "pub struct spark_core::observability::health::ComponentHealth",
  "pub spark_core::observability::health::ComponentHealth::details: alloc::string::String",
  "pub spark_core::observability::health::ComponentHealth::name: &'static str",
  "pub spark_core::observability::health::ComponentHealth::state: spark_core::observability::health::HealthState",
  "impl spark_core::observability::health::ComponentHealth",
  "pub fn spark_core::observability::health::ComponentHealth::new(name: &'static str, state: spark_core::observability::health::HealthState, details: impl core::convert::Into<alloc::string::String>) -> Self",
  "impl core::clone::Clone for spark_core::observability::health::ComponentHealth",
  "pub fn spark_core::observability::health::ComponentHealth::clone(&self) -> spark_core::observability::health::ComponentHealth",
  "impl core::fmt::Debug for spark_core::observability::health::ComponentHealth",
  "pub fn spark_core::observability::health::ComponentHealth::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::observability::health::ComponentHealth",
  "impl core::marker::Send for spark_core::observability::health::ComponentHealth",
  "impl core::marker::Sync for spark_core::observability::health::ComponentHealth",
  "impl core::marker::Unpin for spark_core::observability::health::ComponentHealth",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::health::ComponentHealth",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::health::ComponentHealth",
  "pub trait spark_core::observability::health::HealthCheckProvider: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::observability::health::HealthCheckProvider::check_health<'life0, 'async_trait>(&'life0 self) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = spark_core::observability::health::ComponentHealth> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait",
  "pub type spark_core::observability::health::HealthChecks = alloc::sync::Arc<alloc::vec::Vec<alloc::sync::Arc<dyn spark_core::observability::health::HealthCheckProvider>>>",
  "pub mod spark_core::observability::logging",
  "#[non_exhaustive] pub enum spark_core::observability::logging::LogSeverity",
  "pub spark_core::observability::logging::LogSeverity::Debug",
  "pub spark_core::observability::logging::LogSeverity::Error",
  "pub spark_core::observability::logging::LogSeverity::Fatal",
  "pub spark_core::observability::logging::LogSeverity::Info",
  "pub spark_core::observability::logging::LogSeverity::Trace",
  "pub spark_core::observability::logging::LogSeverity::Warn",
  "impl core::clone::Clone for spark_core::observability::logging::LogSeverity",
  "pub fn spark_core::observability::logging::LogSeverity::clone(&self) -> spark_core::observability::logging::LogSeverity",
  "impl core::cmp::Eq for spark_core::observability::logging::LogSeverity",
  "impl core::cmp::PartialEq for spark_core::observability::logging::LogSeverity",
  "pub fn spark_core::observability::logging::LogSeverity::eq(&self, other: &spark_core::observability::logging::LogSeverity) -> bool",
  "impl core::fmt::Debug for spark_core::observability::logging::LogSeverity",
  "pub fn spark_core::observability::logging::LogSeverity::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::observability::logging::LogSeverity",
  "pub fn spark_core::observability::logging::LogSeverity::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::Copy for spark_core::observability::logging::LogSeverity",
  "impl core::marker::StructuralPartialEq for spark_core::observability::logging::LogSeverity",
  "impl core::marker::Freeze for spark_core::observability::logging::LogSeverity",
  "impl core::marker::Send for spark_core::observability::logging::LogSeverity",
  "impl core::marker::Sync for spark_core::observability::logging::LogSeverity",
  "impl core::marker::Unpin for spark_core::observability::logging::LogSeverity",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::logging::LogSeverity",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::logging::LogSeverity",
  "pub struct spark_core::observability::logging::LogRecord<'a>",
  "pub spark_core::observability::logging::LogRecord::attributes: spark_core::observability::logging::LogField<'a>",
  "pub spark_core::observability::logging::LogRecord::error: core::option::Option<&'a dyn spark_core::Error>",
  "pub spark_core::observability::logging::LogRecord::message: alloc::borrow::Cow<'a, str>",
  "pub spark_core::observability::logging::LogRecord::severity: spark_core::observability::logging::LogSeverity",
  "pub spark_core::observability::logging::LogRecord::target: core::option::Option<alloc::borrow::Cow<'a, str>>",
  "pub spark_core::observability::logging::LogRecord::trace_context: core::option::Option<&'a spark_core::observability::trace::TraceContext>",
  "impl<'a> spark_core::observability::logging::LogRecord<'a>",
  "pub fn spark_core::observability::logging::LogRecord<'a>::new(message: impl core::convert::Into<alloc::borrow::Cow<'a, str>>, severity: spark_core::observability::logging::LogSeverity, target: core::option::Option<impl core::convert::Into<alloc::borrow::Cow<'a, str>>>, trace_context: core::option::Option<&'a spark_core::observability::trace::TraceContext>, error: core::option::Option<&'a dyn spark_core::Error>, attributes: spark_core::observability::logging::LogField<'a>) -> Self",
  "impl<'a> core::fmt::Debug for spark_core::observability::logging::LogRecord<'a>",
  "pub fn spark_core::observability::logging::LogRecord<'a>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<'a> core::marker::Freeze for spark_core::observability::logging::LogRecord<'a>",
  "impl<'a> !core::marker::Send for spark_core::observability::logging::LogRecord<'a>",
  "impl<'a> !core::marker::Sync for spark_core::observability::logging::LogRecord<'a>",
  "impl<'a> core::marker::Unpin for spark_core::observability::logging::LogRecord<'a>",
  "impl<'a> !core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::logging::LogRecord<'a>",
  "impl<'a> !core::panic::unwind_safe::UnwindSafe for spark_core::observability::logging::LogRecord<'a>",
  "pub trait spark_core::observability::logging::Logger: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::observability::logging::Logger::debug(&self, message: &str, trace: core::option::Option<&spark_core::observability::trace::TraceContext>)",
  "pub fn spark_core::observability::logging::Logger::debug_with_fields(&self, message: &str, attributes: spark_core::observability::logging::LogField<'_>, trace: core::option::Option<&spark_core::observability::trace::TraceContext>)",
  "pub fn spark_core::observability::logging::Logger::error(&self, message: &str, error: core::option::Option<&dyn spark_core::Error>, trace: core::option::Option<&spark_core::observability::trace::TraceContext>)",
  "pub fn spark_core::observability::logging::Logger::error_with_fields(&self, message: &str, error: core::option::Option<&dyn spark_core::Error>, attributes: spark_core::observability::logging::LogField<'_>, trace: core::option::Option<&spark_core::observability::trace::TraceContext>)",
  "pub fn spark_core::observability::logging::Logger::fatal(&self, message: &str, error: core::option::Option<&dyn spark_core::Error>, trace: core::option::Option<&spark_core::observability::trace::TraceContext>)",
  "pub fn spark_core::observability::logging::Logger::fatal_with_fields(&self, message: &str, error: core::option::Option<&dyn spark_core::Error>, attributes: spark_core::observability::logging::LogField<'_>, trace: core::option::Option<&spark_core::observability::trace::TraceContext>)",
  "pub fn spark_core::observability::logging::Logger::info(&self, message: &str, trace: core::option::Option<&spark_core::observability::trace::TraceContext>)",
  "pub fn spark_core::observability::logging::Logger::info_with_fields(&self, message: &str, attributes: spark_core::observability::logging::LogField<'_>, trace: core::option::Option<&spark_core::observability::trace::TraceContext>)",
  "pub fn spark_core::observability::logging::Logger::log(&self, record: &spark_core::observability::logging::LogRecord<'_>)",
  "pub fn spark_core::observability::logging::Logger::trace(&self, message: &str, trace: core::option::Option<&spark_core::observability::trace::TraceContext>)",
  "pub fn spark_core::observability::logging::Logger::trace_with_fields(&self, message: &str, attributes: spark_core::observability::logging::LogField<'_>, trace: core::option::Option<&spark_core::observability::trace::TraceContext>)",
  "pub fn spark_core::observability::logging::Logger::warn(&self, message: &str, trace: core::option::Option<&spark_core::observability::trace::TraceContext>)",
  "pub fn spark_core::observability::logging::Logger::warn_with_fields(&self, message: &str, attributes: spark_core::observability::logging::LogField<'_>, trace: core::option::Option<&spark_core::observability::trace::TraceContext>)",
  "impl spark_core::observability::logging::Logger for spark_core::pipeline::instrument::InstrumentedLogger",
  "pub fn spark_core::pipeline::instrument::InstrumentedLogger::log(&self, record: &spark_core::observability::logging::LogRecord<'_>)",
  "pub type spark_core::observability::logging::LogField<'a> = spark_core::observability::attributes::AttributeSet<'a>",
  "pub mod spark_core::observability::metrics",
  "pub mod spark_core::observability::metrics::contract",
  "pub mod spark_core::observability::metrics::contract::codec",
  "pub const spark_core::observability::metrics::contract::codec::ATTR_CODEC_NAME: &str",
  "pub const spark_core::observability::metrics::contract::codec::ATTR_CONTENT_TYPE: &str",
  "pub const spark_core::observability::metrics::contract::codec::ATTR_ERROR_KIND: &str",
  "pub const spark_core::observability::metrics::contract::codec::ATTR_MODE: &str",
  "pub const spark_core::observability::metrics::contract::codec::DECODE_BYTES: spark_core::observability::metrics::InstrumentDescriptor<'static>",
  "pub const spark_core::observability::metrics::contract::codec::DECODE_DURATION: spark_core::observability::metrics::InstrumentDescriptor<'static>",
  "pub const spark_core::observability::metrics::contract::codec::DECODE_ERRORS: spark_core::observability::metrics::InstrumentDescriptor<'static>",
  "pub const spark_core::observability::metrics::contract::codec::ENCODE_BYTES: spark_core::observability::metrics::InstrumentDescriptor<'static>",
  "pub const spark_core::observability::metrics::contract::codec::ENCODE_DURATION: spark_core::observability::metrics::InstrumentDescriptor<'static>",
  "pub const spark_core::observability::metrics::contract::codec::ENCODE_ERRORS: spark_core::observability::metrics::InstrumentDescriptor<'static>",
  "pub const spark_core::observability::metrics::contract::codec::MODE_DECODE: &str",
  "pub const spark_core::observability::metrics::contract::codec::MODE_ENCODE: &str",
  "pub mod spark_core::observability::metrics::contract::hot_reload",
  "pub const spark_core::observability::metrics::contract::hot_reload::APPLY_LATENCY_MS: spark_core::observability::metrics::InstrumentDescriptor<'static>",
  "pub const spark_core::observability::metrics::contract::hot_reload::ATTR_COMPONENT: &str",
  "pub const spark_core::observability::metrics::contract::hot_reload::CONFIG_EPOCH: spark_core::observability::metrics::InstrumentDescriptor<'static>",
  "pub mod spark_core::observability::metrics::contract::limits",
  "pub const spark_core::observability::metrics::contract::limits::ATTR_ACTION: &str",
  "pub const spark_core::observability::metrics::contract::limits::ATTR_RESOURCE: &str",
  "pub const spark_core::observability::metrics::contract::limits::DEGRADE_TOTAL: spark_core::observability::metrics::InstrumentDescriptor<'static>",
  "pub const spark_core::observability::metrics::contract::limits::DROP_TOTAL: spark_core::observability::metrics::InstrumentDescriptor<'static>",
  "pub const spark_core::observability::metrics::contract::limits::HIT_TOTAL: spark_core::observability::metrics::InstrumentDescriptor<'static>",
  "pub const spark_core::observability::metrics::contract::limits::QUEUE_DEPTH: spark_core::observability::metrics::InstrumentDescriptor<'static>",
  "pub const spark_core::observability::metrics::contract::limits::RESOURCE_LIMIT: spark_core::observability::metrics::InstrumentDescriptor<'static>",
  "pub const spark_core::observability::metrics::contract::limits::RESOURCE_USAGE: spark_core::observability::metrics::InstrumentDescriptor<'static>",
  "pub mod spark_core::observability::metrics::contract::pipeline",
  "pub const spark_core::observability::metrics::contract::pipeline::ATTR_CONTROLLER: &str",
  "pub const spark_core::observability::metrics::contract::pipeline::ATTR_EPOCH: &str",
  "pub const spark_core::observability::metrics::contract::pipeline::ATTR_MUTATION_OP: &str",
  "pub const spark_core::observability::metrics::contract::pipeline::ATTR_PIPELINE_ID: &str",
  "pub const spark_core::observability::metrics::contract::pipeline::EPOCH: spark_core::observability::metrics::InstrumentDescriptor<'static>",
  "pub const spark_core::observability::metrics::contract::pipeline::MUTATION_TOTAL: spark_core::observability::metrics::InstrumentDescriptor<'static>",
  "pub const spark_core::observability::metrics::contract::pipeline::OP_ADD: &str",
  "pub const spark_core::observability::metrics::contract::pipeline::OP_REMOVE: &str",
  "pub const spark_core::observability::metrics::contract::pipeline::OP_REPLACE: &str",
  "pub mod spark_core::observability::metrics::contract::service",
  "pub const spark_core::observability::metrics::contract::service::ATTR_ERROR_KIND: &str",
  "pub const spark_core::observability::metrics::contract::service::ATTR_OPERATION: &str",
  "pub const spark_core::observability::metrics::contract::service::ATTR_OUTCOME: &str",
  "pub const spark_core::observability::metrics::contract::service::ATTR_PEER_IDENTITY: &str",
  "pub const spark_core::observability::metrics::contract::service::ATTR_PROTOCOL: &str",
  "pub const spark_core::observability::metrics::contract::service::ATTR_READY_DETAIL: &str",
  "pub const spark_core::observability::metrics::contract::service::ATTR_READY_STATE: &str",
  "pub const spark_core::observability::metrics::contract::service::ATTR_ROUTE_ID: &str",
  "pub const spark_core::observability::metrics::contract::service::ATTR_SERVICE_NAME: &str",
  "pub const spark_core::observability::metrics::contract::service::ATTR_STATUS_CODE: &str",
  "pub const spark_core::observability::metrics::contract::service::BYTES_INBOUND: spark_core::observability::metrics::InstrumentDescriptor<'static>",
  "pub const spark_core::observability::metrics::contract::service::BYTES_OUTBOUND: spark_core::observability::metrics::InstrumentDescriptor<'static>",
  "pub const spark_core::observability::metrics::contract::service::OUTCOME_ERROR: &str",
  "pub const spark_core::observability::metrics::contract::service::OUTCOME_SUCCESS: &str",
  "pub const spark_core::observability::metrics::contract::service::READY_DETAIL_CUSTOM: &str",
  "pub const spark_core::observability::metrics::contract::service::READY_DETAIL_DOWNSTREAM: &str",
  "pub const spark_core::observability::metrics::contract::service::READY_DETAIL_PLACEHOLDER: &str",
  "pub const spark_core::observability::metrics::contract::service::READY_DETAIL_QUEUE_FULL: &str",
  "pub const spark_core::observability::metrics::contract::service::READY_DETAIL_RETRY_AFTER: &str",
  "pub const spark_core::observability::metrics::contract::service::READY_DETAIL_UPSTREAM: &str",
  "pub const spark_core::observability::metrics::contract::service::READY_STATE_BUDGET_EXHAUSTED: &str",
  "pub const spark_core::observability::metrics::contract::service::READY_STATE_BUSY: &str",
  "pub const spark_core::observability::metrics::contract::service::READY_STATE_READY: &str",
  "pub const spark_core::observability::metrics::contract::service::READY_STATE_RETRY_AFTER: &str",
  "pub const spark_core::observability::metrics::contract::service::REQUEST_DURATION: spark_core::observability::metrics::InstrumentDescriptor<'static>",
  "pub const spark_core::observability::metrics::contract::service::REQUEST_ERRORS: spark_core::observability::metrics::InstrumentDescriptor<'static>",
  "pub const spark_core::observability::metrics::contract::service::REQUEST_INFLIGHT: spark_core::observability::metrics::InstrumentDescriptor<'static>",
  "pub const spark_core::observability::metrics::contract::service::REQUEST_READY_STATE: spark_core::observability::metrics::InstrumentDescriptor<'static>",
  "pub const spark_core::observability::metrics::contract::service::REQUEST_TOTAL: spark_core::observability::metrics::InstrumentDescriptor<'static>",
  "pub const spark_core::observability::metrics::contract::service::RETRY_AFTER_DELAY_MS: spark_core::observability::metrics::InstrumentDescriptor<'static>",
  "pub const spark_core::observability::metrics::contract::service::RETRY_AFTER_TOTAL: spark_core::observability::metrics::InstrumentDescriptor<'static>",
  "pub mod spark_core::observability::metrics::contract::transport",
  "pub const spark_core::observability::metrics::contract::transport::ATTR_ERROR_KIND: &str",
  "pub const spark_core::observability::metrics::contract::transport::ATTR_LISTENER_ID: &str",
  "pub const spark_core::observability::metrics::contract::transport::ATTR_PEER_ROLE: &str",
  "pub const spark_core::observability::metrics::contract::transport::ATTR_PROTOCOL: &str",
  "pub const spark_core::observability::metrics::contract::transport::ATTR_RESULT: &str",
  "pub const spark_core::observability::metrics::contract::transport::ATTR_SOCKET_FAMILY: &str",
  "pub const spark_core::observability::metrics::contract::transport::BYTES_INBOUND: spark_core::observability::metrics::InstrumentDescriptor<'static>",
  "pub const spark_core::observability::metrics::contract::transport::BYTES_OUTBOUND: spark_core::observability::metrics::InstrumentDescriptor<'static>",
  "pub const spark_core::observability::metrics::contract::transport::CONNECTIONS_ACTIVE: spark_core::observability::metrics::InstrumentDescriptor<'static>",
  "pub const spark_core::observability::metrics::contract::transport::CONNECTION_ATTEMPTS: spark_core::observability::metrics::InstrumentDescriptor<'static>",
  "pub const spark_core::observability::metrics::contract::transport::CONNECTION_FAILURES: spark_core::observability::metrics::InstrumentDescriptor<'static>",
  "pub const spark_core::observability::metrics::contract::transport::HANDSHAKE_DURATION: spark_core::observability::metrics::InstrumentDescriptor<'static>",
  "pub const spark_core::observability::metrics::contract::transport::RESULT_FAILURE: &str",
  "pub const spark_core::observability::metrics::contract::transport::RESULT_SUCCESS: &str",
  "pub const spark_core::observability::metrics::contract::transport::ROLE_CLIENT: &str",
  "pub const spark_core::observability::metrics::contract::transport::ROLE_SERVER: &str",
  "pub struct spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "pub spark_core::observability::metrics::InstrumentDescriptor::description: core::option::Option<&'a str>",
  "pub spark_core::observability::metrics::InstrumentDescriptor::name: &'a str",
  "pub spark_core::observability::metrics::InstrumentDescriptor::unit: core::option::Option<&'a str>",
  "impl<'a> spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "pub const fn spark_core::observability::metrics::InstrumentDescriptor<'a>::new(name: &'a str) -> Self",
  "pub const fn spark_core::observability::metrics::InstrumentDescriptor<'a>::with_description(self, description: &'a str) -> Self",
  "pub const fn spark_core::observability::metrics::InstrumentDescriptor<'a>::with_unit(self, unit: &'a str) -> Self",
  "impl<'a> core::clone::Clone for spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "pub fn spark_core::observability::metrics::InstrumentDescriptor<'a>::clone(&self) -> spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "impl<'a> core::cmp::Eq for spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "impl<'a> core::cmp::PartialEq for spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "pub fn spark_core::observability::metrics::InstrumentDescriptor<'a>::eq(&self, other: &spark_core::observability::metrics::InstrumentDescriptor<'a>) -> bool",
  "impl<'a> core::fmt::Debug for spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "pub fn spark_core::observability::metrics::InstrumentDescriptor<'a>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<'a> core::marker::Copy for spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "impl<'a> core::marker::StructuralPartialEq for spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "impl<'a> core::marker::Freeze for spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "impl<'a> core::marker::Send for spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "impl<'a> core::marker::Sync for spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "impl<'a> core::marker::Unpin for spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "impl<'a> core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "impl<'a> core::panic::unwind_safe::UnwindSafe for spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "pub trait spark_core::observability::metrics::Counter: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::observability::metrics::Counter::add(&self, value: u64, attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub fn spark_core::observability::metrics::Counter::increment(&self, attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub trait spark_core::observability::metrics::Gauge: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::observability::metrics::Gauge::decrement(&self, delta: f64, attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub fn spark_core::observability::metrics::Gauge::increment(&self, delta: f64, attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub fn spark_core::observability::metrics::Gauge::set(&self, value: f64, attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub trait spark_core::observability::metrics::Histogram: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::observability::metrics::Histogram::record(&self, value: f64, attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub trait spark_core::observability::metrics::MetricsProvider: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::observability::metrics::MetricsProvider::counter(&self, descriptor: &spark_core::observability::metrics::InstrumentDescriptor<'_>) -> alloc::sync::Arc<dyn spark_core::observability::metrics::Counter>",
  "pub fn spark_core::observability::metrics::MetricsProvider::gauge(&self, descriptor: &spark_core::observability::metrics::InstrumentDescriptor<'_>) -> alloc::sync::Arc<dyn spark_core::observability::metrics::Gauge>",
  "pub fn spark_core::observability::metrics::MetricsProvider::histogram(&self, descriptor: &spark_core::observability::metrics::InstrumentDescriptor<'_>) -> alloc::sync::Arc<dyn spark_core::observability::metrics::Histogram>",
  "pub fn spark_core::observability::metrics::MetricsProvider::record_counter_add(&self, descriptor: &spark_core::observability::metrics::InstrumentDescriptor<'_>, value: u64, attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub fn spark_core::observability::metrics::MetricsProvider::record_gauge_set(&self, descriptor: &spark_core::observability::metrics::InstrumentDescriptor<'_>, value: f64, attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub fn spark_core::observability::metrics::MetricsProvider::record_histogram(&self, descriptor: &spark_core::observability::metrics::InstrumentDescriptor<'_>, value: f64, attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub mod spark_core::observability::trace",
  "#[non_exhaustive] pub enum spark_core::observability::trace::TraceContextError",
  "pub spark_core::observability::trace::TraceContextError::InvalidSpanId",
  "pub spark_core::observability::trace::TraceContextError::InvalidTraceId",
  "pub spark_core::observability::trace::TraceContextError::InvalidTraceState(spark_core::observability::trace::TraceStateError)",
  "impl core::clone::Clone for spark_core::observability::trace::TraceContextError",
  "pub fn spark_core::observability::trace::TraceContextError::clone(&self) -> spark_core::observability::trace::TraceContextError",
  "impl core::cmp::Eq for spark_core::observability::trace::TraceContextError",
  "impl core::cmp::PartialEq for spark_core::observability::trace::TraceContextError",
  "pub fn spark_core::observability::trace::TraceContextError::eq(&self, other: &spark_core::observability::trace::TraceContextError) -> bool",
  "impl core::fmt::Debug for spark_core::observability::trace::TraceContextError",
  "pub fn spark_core::observability::trace::TraceContextError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::observability::trace::TraceContextError",
  "pub fn spark_core::observability::trace::TraceContextError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::observability::trace::TraceContextError",
  "impl core::marker::Freeze for spark_core::observability::trace::TraceContextError",
  "impl core::marker::Send for spark_core::observability::trace::TraceContextError",
  "impl core::marker::Sync for spark_core::observability::trace::TraceContextError",
  "impl core::marker::Unpin for spark_core::observability::trace::TraceContextError",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::trace::TraceContextError",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::trace::TraceContextError",
  "#[non_exhaustive] pub enum spark_core::observability::trace::TraceStateError",
  "pub spark_core::observability::trace::TraceStateError::InvalidKey",
  "pub spark_core::observability::trace::TraceStateError::InvalidValue",
  "impl core::clone::Clone for spark_core::observability::trace::TraceStateError",
  "pub fn spark_core::observability::trace::TraceStateError::clone(&self) -> spark_core::observability::trace::TraceStateError",
  "impl core::cmp::Eq for spark_core::observability::trace::TraceStateError",
  "impl core::cmp::PartialEq for spark_core::observability::trace::TraceStateError",
  "pub fn spark_core::observability::trace::TraceStateError::eq(&self, other: &spark_core::observability::trace::TraceStateError) -> bool",
  "impl core::fmt::Debug for spark_core::observability::trace::TraceStateError",
  "pub fn spark_core::observability::trace::TraceStateError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::observability::trace::TraceStateError",
  "pub fn spark_core::observability::trace::TraceStateError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::observability::trace::TraceStateError",
  "pub fn spark_core::observability::trace::TraceStateError::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::StructuralPartialEq for spark_core::observability::trace::TraceStateError",
  "impl core::marker::Freeze for spark_core::observability::trace::TraceStateError",
  "impl core::marker::Send for spark_core::observability::trace::TraceStateError",
  "impl core::marker::Sync for spark_core::observability::trace::TraceStateError",
  "impl core::marker::Unpin for spark_core::observability::trace::TraceStateError",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::trace::TraceStateError",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::trace::TraceStateError",
  "pub struct spark_core::observability::trace::TraceContext",
  "pub spark_core::observability::trace::TraceContext::span_id: [u8; 8]",
  "pub spark_core::observability::trace::TraceContext::trace_flags: spark_core::observability::trace::TraceFlags",
  "pub spark_core::observability::trace::TraceContext::trace_id: [u8; 16]",
  "pub spark_core::observability::trace::TraceContext::trace_state: spark_core::observability::trace::TraceState",
  "impl spark_core::observability::trace::TraceContext",
  "pub const spark_core::observability::trace::TraceContext::SPAN_ID_LENGTH: usize",
  "pub const spark_core::observability::trace::TraceContext::TRACE_ID_LENGTH: usize",
  "pub fn spark_core::observability::trace::TraceContext::child_context(&self, child_span_id: [u8; 8]) -> Self",
  "pub fn spark_core::observability::trace::TraceContext::generate() -> Self",
  "pub fn spark_core::observability::trace::TraceContext::is_sampled(&self) -> bool",
  "pub fn spark_core::observability::trace::TraceContext::mark_sampled(self) -> Self",
  "pub fn spark_core::observability::trace::TraceContext::new(trace_id: [u8; 16], span_id: [u8; 8], trace_flags: spark_core::observability::trace::TraceFlags) -> Self",
  "pub fn spark_core::observability::trace::TraceContext::validate(&self) -> core::result::Result<(), spark_core::observability::trace::TraceContextError>",
  "pub fn spark_core::observability::trace::TraceContext::with_state(self, state: spark_core::observability::trace::TraceState) -> Self",
  "impl core::clone::Clone for spark_core::observability::trace::TraceContext",
  "pub fn spark_core::observability::trace::TraceContext::clone(&self) -> spark_core::observability::trace::TraceContext",
  "impl core::cmp::Eq for spark_core::observability::trace::TraceContext",
  "impl core::cmp::PartialEq for spark_core::observability::trace::TraceContext",
  "pub fn spark_core::observability::trace::TraceContext::eq(&self, other: &spark_core::observability::trace::TraceContext) -> bool",
  "impl core::fmt::Debug for spark_core::observability::trace::TraceContext",
  "pub fn spark_core::observability::trace::TraceContext::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::observability::trace::TraceContext",
  "pub fn spark_core::observability::trace::TraceContext::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::StructuralPartialEq for spark_core::observability::trace::TraceContext",
  "impl core::marker::Freeze for spark_core::observability::trace::TraceContext",
  "impl core::marker::Send for spark_core::observability::trace::TraceContext",
  "impl core::marker::Sync for spark_core::observability::trace::TraceContext",
  "impl core::marker::Unpin for spark_core::observability::trace::TraceContext",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::trace::TraceContext",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::trace::TraceContext",
  "pub struct spark_core::observability::trace::TraceFlags",
  "impl spark_core::observability::trace::TraceFlags",
  "pub const spark_core::observability::trace::TraceFlags::SAMPLED: u8",
  "pub const fn spark_core::observability::trace::TraceFlags::bits(&self) -> u8",
  "pub fn spark_core::observability::trace::TraceFlags::is_sampled(&self) -> bool",
  "pub const fn spark_core::observability::trace::TraceFlags::new(bits: u8) -> Self",
  "pub fn spark_core::observability::trace::TraceFlags::set_sampled(&mut self, sampled: bool)",
  "impl core::clone::Clone for spark_core::observability::trace::TraceFlags",
  "pub fn spark_core::observability::trace::TraceFlags::clone(&self) -> spark_core::observability::trace::TraceFlags",
  "impl core::cmp::Eq for spark_core::observability::trace::TraceFlags",
  "impl core::cmp::PartialEq for spark_core::observability::trace::TraceFlags",
  "pub fn spark_core::observability::trace::TraceFlags::eq(&self, other: &spark_core::observability::trace::TraceFlags) -> bool",
  "impl core::fmt::Debug for spark_core::observability::trace::TraceFlags",
  "pub fn spark_core::observability::trace::TraceFlags::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::observability::trace::TraceFlags",
  "pub fn spark_core::observability::trace::TraceFlags::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::Copy for spark_core::observability::trace::TraceFlags",
  "impl core::marker::StructuralPartialEq for spark_core::observability::trace::TraceFlags",
  "impl core::marker::Freeze for spark_core::observability::trace::TraceFlags",
  "impl core::marker::Send for spark_core::observability::trace::TraceFlags",
  "impl core::marker::Sync for spark_core::observability::trace::TraceFlags",
  "impl core::marker::Unpin for spark_core::observability::trace::TraceFlags",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::trace::TraceFlags",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::trace::TraceFlags",
  "pub struct spark_core::observability::trace::TraceState",
  "impl spark_core::observability::trace::TraceState",
  "pub fn spark_core::observability::trace::TraceState::clear(&mut self)",
  "pub fn spark_core::observability::trace::TraceState::from_entries(entries: alloc::vec::Vec<spark_core::observability::trace::TraceStateEntry>) -> core::result::Result<Self, spark_core::observability::trace::TraceStateError>",
  "pub fn spark_core::observability::trace::TraceState::insert(&mut self, entry: spark_core::observability::trace::TraceStateEntry) -> core::result::Result<(), spark_core::observability::trace::TraceStateError>",
  "pub fn spark_core::observability::trace::TraceState::iter(&self) -> impl core::iter::traits::exact_size::ExactSizeIterator<Item = &spark_core::observability::trace::TraceStateEntry>",
  "pub fn spark_core::observability::trace::TraceState::new() -> Self",
  "pub fn spark_core::observability::trace::TraceState::remove(&mut self, key: &str)",
  "pub fn spark_core::observability::trace::TraceState::validate(&self) -> core::result::Result<(), spark_core::observability::trace::TraceContextError>",
  "impl core::clone::Clone for spark_core::observability::trace::TraceState",
  "pub fn spark_core::observability::trace::TraceState::clone(&self) -> spark_core::observability::trace::TraceState",
  "impl core::cmp::Eq for spark_core::observability::trace::TraceState",
  "impl core::cmp::PartialEq for spark_core::observability::trace::TraceState",
  "pub fn spark_core::observability::trace::TraceState::eq(&self, other: &spark_core::observability::trace::TraceState) -> bool",
  "impl core::default::Default for spark_core::observability::trace::TraceState",
  "pub fn spark_core::observability::trace::TraceState::default() -> spark_core::observability::trace::TraceState",
  "impl core::fmt::Debug for spark_core::observability::trace::TraceState",
  "pub fn spark_core::observability::trace::TraceState::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::observability::trace::TraceState",
  "pub fn spark_core::observability::trace::TraceState::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::StructuralPartialEq for spark_core::observability::trace::TraceState",
  "impl core::marker::Freeze for spark_core::observability::trace::TraceState",
  "impl core::marker::Send for spark_core::observability::trace::TraceState",
  "impl core::marker::Sync for spark_core::observability::trace::TraceState",
  "impl core::marker::Unpin for spark_core::observability::trace::TraceState",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::trace::TraceState",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::trace::TraceState",
  "pub struct spark_core::observability::trace::TraceStateEntry",
  "pub spark_core::observability::trace::TraceStateEntry::key: alloc::string::String",
  "pub spark_core::observability::trace::TraceStateEntry::value: alloc::string::String",
  "impl spark_core::observability::trace::TraceStateEntry",
  "pub fn spark_core::observability::trace::TraceStateEntry::new(key: impl core::convert::Into<alloc::string::String>, value: impl core::convert::Into<alloc::string::String>) -> Self",
  "pub fn spark_core::observability::trace::TraceStateEntry::validate(&self) -> core::result::Result<(), spark_core::observability::trace::TraceStateError>",
  "impl core::clone::Clone for spark_core::observability::trace::TraceStateEntry",
  "pub fn spark_core::observability::trace::TraceStateEntry::clone(&self) -> spark_core::observability::trace::TraceStateEntry",
  "impl core::cmp::Eq for spark_core::observability::trace::TraceStateEntry",
  "impl core::cmp::PartialEq for spark_core::observability::trace::TraceStateEntry",
  "pub fn spark_core::observability::trace::TraceStateEntry::eq(&self, other: &spark_core::observability::trace::TraceStateEntry) -> bool",
  "impl core::fmt::Debug for spark_core::observability::trace::TraceStateEntry",
  "pub fn spark_core::observability::trace::TraceStateEntry::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::observability::trace::TraceStateEntry",
  "pub fn spark_core::observability::trace::TraceStateEntry::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::StructuralPartialEq for spark_core::observability::trace::TraceStateEntry",
  "impl core::marker::Freeze for spark_core::observability::trace::TraceStateEntry",
  "impl core::marker::Send for spark_core::observability::trace::TraceStateEntry",
  "impl core::marker::Sync for spark_core::observability::trace::TraceStateEntry",
  "impl core::marker::Unpin for spark_core::observability::trace::TraceStateEntry",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::trace::TraceStateEntry",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::trace::TraceStateEntry",
  "#[non_exhaustive] pub enum spark_core::observability::CoreUserEvent",
  "pub spark_core::observability::CoreUserEvent::ApplicationSpecific(alloc::sync::Arc<dyn spark_core::observability::events::ApplicationEvent>)",
  "pub spark_core::observability::CoreUserEvent::ConfigChanged",
  "pub spark_core::observability::CoreUserEvent::ConfigChanged::keys: alloc::vec::Vec<alloc::string::String>",
  "pub spark_core::observability::CoreUserEvent::IdleTimeout(spark_core::observability::events::IdleTimeout)",
  "pub spark_core::observability::CoreUserEvent::RateLimited(spark_core::observability::events::RateLimited)",
  "pub spark_core::observability::CoreUserEvent::TlsEstablished(spark_core::observability::events::TlsInfo)",
  "impl spark_core::observability::events::CoreUserEvent",
  "pub fn spark_core::observability::events::CoreUserEvent::application_event_kind(&self) -> core::option::Option<&'static str>",
  "pub fn spark_core::observability::events::CoreUserEvent::downcast_application_event<E>(&self) -> core::option::Option<&E> where E: spark_core::observability::events::ApplicationEvent",
  "pub fn spark_core::observability::events::CoreUserEvent::from_application_event<E>(event: E) -> Self where E: spark_core::observability::events::ApplicationEvent",
  "impl core::clone::Clone for spark_core::observability::events::CoreUserEvent",
  "pub fn spark_core::observability::events::CoreUserEvent::clone(&self) -> spark_core::observability::events::CoreUserEvent",
  "impl core::fmt::Debug for spark_core::observability::events::CoreUserEvent",
  "pub fn spark_core::observability::events::CoreUserEvent::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::observability::events::CoreUserEvent",
  "impl core::marker::Send for spark_core::observability::events::CoreUserEvent",
  "impl core::marker::Sync for spark_core::observability::events::CoreUserEvent",
  "impl core::marker::Unpin for spark_core::observability::events::CoreUserEvent",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::events::CoreUserEvent",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::observability::events::CoreUserEvent",
  "#[non_exhaustive] pub enum spark_core::observability::EventPolicy",
  "pub spark_core::observability::EventPolicy::BoundedBuffer",
  "pub spark_core::observability::EventPolicy::BoundedBuffer::capacity: core::num::nonzero::NonZeroUsize",
  "pub spark_core::observability::EventPolicy::BoundedBuffer::overflow: spark_core::cluster::flow_control::OverflowPolicy",
  "pub spark_core::observability::EventPolicy::Debounce",
  "pub spark_core::observability::EventPolicy::Debounce::window: core::time::Duration",
  "pub spark_core::observability::EventPolicy::Passthrough",
  "pub spark_core::observability::EventPolicy::RateLimit",
  "pub spark_core::observability::EventPolicy::RateLimit::burst: core::num::nonzero::NonZeroU32",
  "pub spark_core::observability::EventPolicy::RateLimit::permits_per_sec: core::num::nonzero::NonZeroU32",
  "pub spark_core::observability::EventPolicy::Sample",
  "pub spark_core::observability::EventPolicy::Sample::every: core::num::nonzero::NonZeroUsize",
  "impl core::clone::Clone for spark_core::observability::events::EventPolicy",
  "pub fn spark_core::observability::events::EventPolicy::clone(&self) -> spark_core::observability::events::EventPolicy",
  "impl core::cmp::Eq for spark_core::observability::events::EventPolicy",
  "impl core::cmp::PartialEq for spark_core::observability::events::EventPolicy",
  "pub fn spark_core::observability::events::EventPolicy::eq(&self, other: &spark_core::observability::events::EventPolicy) -> bool",
  "impl core::fmt::Debug for spark_core::observability::events::EventPolicy",
  "pub fn spark_core::observability::events::EventPolicy::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::observability::events::EventPolicy",
  "impl core::marker::Freeze for spark_core::observability::events::EventPolicy",
  "impl core::marker::Send for spark_core::observability::events::EventPolicy",
  "impl core::marker::Sync for spark_core::observability::events::EventPolicy",
  "impl core::marker::Unpin for spark_core::observability::events::EventPolicy",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::events::EventPolicy",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::events::EventPolicy",
  "#[non_exhaustive] pub enum spark_core::observability::HealthState",
  "pub spark_core::observability::HealthState::Degraded",
  "pub spark_core::observability::HealthState::Down",
  "pub spark_core::observability::HealthState::Up",
  "impl core::clone::Clone for spark_core::observability::health::HealthState",
  "pub fn spark_core::observability::health::HealthState::clone(&self) -> spark_core::observability::health::HealthState",
  "impl core::cmp::Eq for spark_core::observability::health::HealthState",
  "impl core::cmp::PartialEq for spark_core::observability::health::HealthState",
  "pub fn spark_core::observability::health::HealthState::eq(&self, other: &spark_core::observability::health::HealthState) -> bool",
  "impl core::fmt::Debug for spark_core::observability::health::HealthState",
  "pub fn spark_core::observability::health::HealthState::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::observability::health::HealthState",
  "impl core::marker::StructuralPartialEq for spark_core::observability::health::HealthState",
  "impl core::marker::Freeze for spark_core::observability::health::HealthState",
  "impl core::marker::Send for spark_core::observability::health::HealthState",
  "impl core::marker::Sync for spark_core::observability::health::HealthState",
  "impl core::marker::Unpin for spark_core::observability::health::HealthState",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::health::HealthState",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::health::HealthState",
  "#[non_exhaustive] pub enum spark_core::observability::IdleDirection",
  "pub spark_core::observability::IdleDirection::Both",
  "pub spark_core::observability::IdleDirection::Read",
  "pub spark_core::observability::IdleDirection::Write",
  "impl core::clone::Clone for spark_core::observability::events::IdleDirection",
  "pub fn spark_core::observability::events::IdleDirection::clone(&self) -> spark_core::observability::events::IdleDirection",
  "impl core::cmp::Eq for spark_core::observability::events::IdleDirection",
  "impl core::cmp::PartialEq for spark_core::observability::events::IdleDirection",
  "pub fn spark_core::observability::events::IdleDirection::eq(&self, other: &spark_core::observability::events::IdleDirection) -> bool",
  "impl core::fmt::Debug for spark_core::observability::events::IdleDirection",
  "pub fn spark_core::observability::events::IdleDirection::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::observability::events::IdleDirection",
  "impl core::marker::StructuralPartialEq for spark_core::observability::events::IdleDirection",
  "impl core::marker::Freeze for spark_core::observability::events::IdleDirection",
  "impl core::marker::Send for spark_core::observability::events::IdleDirection",
  "impl core::marker::Sync for spark_core::observability::events::IdleDirection",
  "impl core::marker::Unpin for spark_core::observability::events::IdleDirection",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::events::IdleDirection",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::events::IdleDirection",
  "#[non_exhaustive] pub enum spark_core::observability::LogSeverity",
  "pub spark_core::observability::LogSeverity::Debug",
  "pub spark_core::observability::LogSeverity::Error",
  "pub spark_core::observability::LogSeverity::Fatal",
  "pub spark_core::observability::LogSeverity::Info",
  "pub spark_core::observability::LogSeverity::Trace",
  "pub spark_core::observability::LogSeverity::Warn",
  "impl core::clone::Clone for spark_core::observability::logging::LogSeverity",
  "pub fn spark_core::observability::logging::LogSeverity::clone(&self) -> spark_core::observability::logging::LogSeverity",
  "impl core::cmp::Eq for spark_core::observability::logging::LogSeverity",
  "impl core::cmp::PartialEq for spark_core::observability::logging::LogSeverity",
  "pub fn spark_core::observability::logging::LogSeverity::eq(&self, other: &spark_core::observability::logging::LogSeverity) -> bool",
  "impl core::fmt::Debug for spark_core::observability::logging::LogSeverity",
  "pub fn spark_core::observability::logging::LogSeverity::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::observability::logging::LogSeverity",
  "pub fn spark_core::observability::logging::LogSeverity::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::Copy for spark_core::observability::logging::LogSeverity",
  "impl core::marker::StructuralPartialEq for spark_core::observability::logging::LogSeverity",
  "impl core::marker::Freeze for spark_core::observability::logging::LogSeverity",
  "impl core::marker::Send for spark_core::observability::logging::LogSeverity",
  "impl core::marker::Sync for spark_core::observability::logging::LogSeverity",
  "impl core::marker::Unpin for spark_core::observability::logging::LogSeverity",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::logging::LogSeverity",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::logging::LogSeverity",
  "#[non_exhaustive] pub enum spark_core::observability::MetricAttributeValue<'a>",
  "pub spark_core::observability::MetricAttributeValue::Bool(bool)",
  "pub spark_core::observability::MetricAttributeValue::F64(f64)",
  "pub spark_core::observability::MetricAttributeValue::I64(i64)",
  "pub spark_core::observability::MetricAttributeValue::Text(alloc::borrow::Cow<'a, str>)",
  "impl<'a> spark_core::observability::attributes::MetricAttributeValue<'a>",
  "pub fn spark_core::observability::attributes::MetricAttributeValue<'a>::into_owned(self) -> spark_core::observability::attributes::MetricAttributeValue<'static>",
  "impl core::convert::From<alloc::string::String> for spark_core::observability::attributes::MetricAttributeValue<'_>",
  "pub fn spark_core::observability::attributes::MetricAttributeValue<'_>::from(value: alloc::string::String) -> Self",
  "impl core::convert::From<bool> for spark_core::observability::attributes::MetricAttributeValue<'_>",
  "pub fn spark_core::observability::attributes::MetricAttributeValue<'_>::from(value: bool) -> Self",
  "impl core::convert::From<f32> for spark_core::observability::attributes::MetricAttributeValue<'_>",
  "pub fn spark_core::observability::attributes::MetricAttributeValue<'_>::from(value: f32) -> Self",
  "impl core::convert::From<f64> for spark_core::observability::attributes::MetricAttributeValue<'_>",
  "pub fn spark_core::observability::attributes::MetricAttributeValue<'_>::from(value: f64) -> Self",
  "impl core::convert::From<i32> for spark_core::observability::attributes::MetricAttributeValue<'_>",
  "pub fn spark_core::observability::attributes::MetricAttributeValue<'_>::from(value: i32) -> Self",
  "impl core::convert::From<i64> for spark_core::observability::attributes::MetricAttributeValue<'_>",
  "pub fn spark_core::observability::attributes::MetricAttributeValue<'_>::from(value: i64) -> Self",
  "impl core::convert::From<u32> for spark_core::observability::attributes::MetricAttributeValue<'_>",
  "pub fn spark_core::observability::attributes::MetricAttributeValue<'_>::from(value: u32) -> Self",
  "impl core::convert::From<u64> for spark_core::observability::attributes::MetricAttributeValue<'_>",
  "pub fn spark_core::observability::attributes::MetricAttributeValue<'_>::from(value: u64) -> Self",
  "impl<'a> core::clone::Clone for spark_core::observability::attributes::MetricAttributeValue<'a>",
  "pub fn spark_core::observability::attributes::MetricAttributeValue<'a>::clone(&self) -> spark_core::observability::attributes::MetricAttributeValue<'a>",
  "impl<'a> core::cmp::PartialEq for spark_core::observability::attributes::MetricAttributeValue<'a>",
  "pub fn spark_core::observability::attributes::MetricAttributeValue<'a>::eq(&self, other: &spark_core::observability::attributes::MetricAttributeValue<'a>) -> bool",
  "impl<'a> core::convert::From<&'a str> for spark_core::observability::attributes::MetricAttributeValue<'a>",
  "pub fn spark_core::observability::attributes::MetricAttributeValue<'a>::from(value: &'a str) -> Self",
  "impl<'a> core::convert::From<alloc::borrow::Cow<'a, str>> for spark_core::observability::attributes::MetricAttributeValue<'a>",
  "pub fn spark_core::observability::attributes::MetricAttributeValue<'a>::from(value: alloc::borrow::Cow<'a, str>) -> Self",
  "impl<'a> core::fmt::Debug for spark_core::observability::attributes::MetricAttributeValue<'a>",
  "pub fn spark_core::observability::attributes::MetricAttributeValue<'a>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<'a> core::marker::StructuralPartialEq for spark_core::observability::attributes::MetricAttributeValue<'a>",
  "impl<'a> core::marker::Freeze for spark_core::observability::attributes::MetricAttributeValue<'a>",
  "impl<'a> core::marker::Send for spark_core::observability::attributes::MetricAttributeValue<'a>",
  "impl<'a> core::marker::Sync for spark_core::observability::attributes::MetricAttributeValue<'a>",
  "impl<'a> core::marker::Unpin for spark_core::observability::attributes::MetricAttributeValue<'a>",
  "impl<'a> core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::attributes::MetricAttributeValue<'a>",
  "impl<'a> core::panic::unwind_safe::UnwindSafe for spark_core::observability::attributes::MetricAttributeValue<'a>",
  "#[non_exhaustive] pub enum spark_core::observability::OpsEvent",
  "pub spark_core::observability::OpsEvent::BufferLeakDetected",
  "pub spark_core::observability::OpsEvent::BufferLeakDetected::count: usize",
  "pub spark_core::observability::OpsEvent::ClusterChange(spark_core::cluster::membership::ClusterMembershipEvent)",
  "pub spark_core::observability::OpsEvent::DiscoveryJitter(spark_core::cluster::discovery::DiscoveryEvent)",
  "pub spark_core::observability::OpsEvent::FailureClusterDetected",
  "pub spark_core::observability::OpsEvent::FailureClusterDetected::count: u64",
  "pub spark_core::observability::OpsEvent::FailureClusterDetected::error_code: &'static str",
  "pub spark_core::observability::OpsEvent::FlowControlApplied",
  "pub spark_core::observability::OpsEvent::FlowControlApplied::channel_id: alloc::string::String",
  "pub spark_core::observability::OpsEvent::HealthChange(spark_core::observability::health::ComponentHealth)",
  "pub spark_core::observability::OpsEvent::ShutdownTriggered",
  "pub spark_core::observability::OpsEvent::ShutdownTriggered::deadline: core::time::Duration",
  "impl core::clone::Clone for spark_core::observability::events::OpsEvent",
  "pub fn spark_core::observability::events::OpsEvent::clone(&self) -> spark_core::observability::events::OpsEvent",
  "impl core::fmt::Debug for spark_core::observability::events::OpsEvent",
  "pub fn spark_core::observability::events::OpsEvent::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::observability::events::OpsEvent",
  "impl core::marker::Send for spark_core::observability::events::OpsEvent",
  "impl core::marker::Sync for spark_core::observability::events::OpsEvent",
  "impl core::marker::Unpin for spark_core::observability::events::OpsEvent",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::events::OpsEvent",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::events::OpsEvent",
  "#[non_exhaustive] pub enum spark_core::observability::OpsEventKind",
  "pub spark_core::observability::OpsEventKind::BufferLeakDetected",
  "pub spark_core::observability::OpsEventKind::ClusterChange",
  "pub spark_core::observability::OpsEventKind::Custom(alloc::string::String)",
  "pub spark_core::observability::OpsEventKind::DiscoveryJitter",
  "pub spark_core::observability::OpsEventKind::FailureClusterDetected",
  "pub spark_core::observability::OpsEventKind::FlowControlApplied",
  "pub spark_core::observability::OpsEventKind::HealthChange",
  "pub spark_core::observability::OpsEventKind::ShutdownTriggered",
  "impl core::clone::Clone for spark_core::observability::events::OpsEventKind",
  "pub fn spark_core::observability::events::OpsEventKind::clone(&self) -> spark_core::observability::events::OpsEventKind",
  "impl core::cmp::Eq for spark_core::observability::events::OpsEventKind",
  "impl core::cmp::PartialEq for spark_core::observability::events::OpsEventKind",
  "pub fn spark_core::observability::events::OpsEventKind::eq(&self, other: &spark_core::observability::events::OpsEventKind) -> bool",
  "impl core::fmt::Debug for spark_core::observability::events::OpsEventKind",
  "pub fn spark_core::observability::events::OpsEventKind::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::observability::events::OpsEventKind",
  "pub fn spark_core::observability::events::OpsEventKind::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::StructuralPartialEq for spark_core::observability::events::OpsEventKind",
  "impl core::marker::Freeze for spark_core::observability::events::OpsEventKind",
  "impl core::marker::Send for spark_core::observability::events::OpsEventKind",
  "impl core::marker::Sync for spark_core::observability::events::OpsEventKind",
  "impl core::marker::Unpin for spark_core::observability::events::OpsEventKind",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::events::OpsEventKind",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::events::OpsEventKind",
  "#[non_exhaustive] pub enum spark_core::observability::RateDirection",
  "pub spark_core::observability::RateDirection::Inbound",
  "pub spark_core::observability::RateDirection::Outbound",
  "impl core::clone::Clone for spark_core::observability::events::RateDirection",
  "pub fn spark_core::observability::events::RateDirection::clone(&self) -> spark_core::observability::events::RateDirection",
  "impl core::cmp::Eq for spark_core::observability::events::RateDirection",
  "impl core::cmp::PartialEq for spark_core::observability::events::RateDirection",
  "pub fn spark_core::observability::events::RateDirection::eq(&self, other: &spark_core::observability::events::RateDirection) -> bool",
  "impl core::fmt::Debug for spark_core::observability::events::RateDirection",
  "pub fn spark_core::observability::events::RateDirection::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::observability::events::RateDirection",
  "impl core::marker::StructuralPartialEq for spark_core::observability::events::RateDirection",
  "impl core::marker::Freeze for spark_core::observability::events::RateDirection",
  "impl core::marker::Send for spark_core::observability::events::RateDirection",
  "impl core::marker::Sync for spark_core::observability::events::RateDirection",
  "impl core::marker::Unpin for spark_core::observability::events::RateDirection",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::events::RateDirection",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::events::RateDirection",
  "#[non_exhaustive] pub enum spark_core::observability::TraceContextError",
  "pub spark_core::observability::TraceContextError::InvalidSpanId",
  "pub spark_core::observability::TraceContextError::InvalidTraceId",
  "pub spark_core::observability::TraceContextError::InvalidTraceState(spark_core::observability::trace::TraceStateError)",
  "impl core::clone::Clone for spark_core::observability::trace::TraceContextError",
  "pub fn spark_core::observability::trace::TraceContextError::clone(&self) -> spark_core::observability::trace::TraceContextError",
  "impl core::cmp::Eq for spark_core::observability::trace::TraceContextError",
  "impl core::cmp::PartialEq for spark_core::observability::trace::TraceContextError",
  "pub fn spark_core::observability::trace::TraceContextError::eq(&self, other: &spark_core::observability::trace::TraceContextError) -> bool",
  "impl core::fmt::Debug for spark_core::observability::trace::TraceContextError",
  "pub fn spark_core::observability::trace::TraceContextError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::observability::trace::TraceContextError",
  "pub fn spark_core::observability::trace::TraceContextError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::observability::trace::TraceContextError",
  "impl core::marker::Freeze for spark_core::observability::trace::TraceContextError",
  "impl core::marker::Send for spark_core::observability::trace::TraceContextError",
  "impl core::marker::Sync for spark_core::observability::trace::TraceContextError",
  "impl core::marker::Unpin for spark_core::observability::trace::TraceContextError",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::trace::TraceContextError",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::trace::TraceContextError",
  "#[non_exhaustive] pub enum spark_core::observability::TraceStateError",
  "pub spark_core::observability::TraceStateError::InvalidKey",
  "pub spark_core::observability::TraceStateError::InvalidValue",
  "impl core::clone::Clone for spark_core::observability::trace::TraceStateError",
  "pub fn spark_core::observability::trace::TraceStateError::clone(&self) -> spark_core::observability::trace::TraceStateError",
  "impl core::cmp::Eq for spark_core::observability::trace::TraceStateError",
  "impl core::cmp::PartialEq for spark_core::observability::trace::TraceStateError",
  "pub fn spark_core::observability::trace::TraceStateError::eq(&self, other: &spark_core::observability::trace::TraceStateError) -> bool",
  "impl core::fmt::Debug for spark_core::observability::trace::TraceStateError",
  "pub fn spark_core::observability::trace::TraceStateError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::observability::trace::TraceStateError",
  "pub fn spark_core::observability::trace::TraceStateError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::observability::trace::TraceStateError",
  "pub fn spark_core::observability::trace::TraceStateError::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::StructuralPartialEq for spark_core::observability::trace::TraceStateError",
  "impl core::marker::Freeze for spark_core::observability::trace::TraceStateError",
  "impl core::marker::Send for spark_core::observability::trace::TraceStateError",
  "impl core::marker::Sync for spark_core::observability::trace::TraceStateError",
  "impl core::marker::Unpin for spark_core::observability::trace::TraceStateError",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::trace::TraceStateError",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::trace::TraceStateError",
  "pub struct spark_core::observability::ComponentHealth",
  "pub spark_core::observability::ComponentHealth::details: alloc::string::String",
  "pub spark_core::observability::ComponentHealth::name: &'static str",
  "pub spark_core::observability::ComponentHealth::state: spark_core::observability::health::HealthState",
  "impl spark_core::observability::health::ComponentHealth",
  "pub fn spark_core::observability::health::ComponentHealth::new(name: &'static str, state: spark_core::observability::health::HealthState, details: impl core::convert::Into<alloc::string::String>) -> Self",
  "impl core::clone::Clone for spark_core::observability::health::ComponentHealth",
  "pub fn spark_core::observability::health::ComponentHealth::clone(&self) -> spark_core::observability::health::ComponentHealth",
  "impl core::fmt::Debug for spark_core::observability::health::ComponentHealth",
  "pub fn spark_core::observability::health::ComponentHealth::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::observability::health::ComponentHealth",
  "impl core::marker::Send for spark_core::observability::health::ComponentHealth",
  "impl core::marker::Sync for spark_core::observability::health::ComponentHealth",
  "impl core::marker::Unpin for spark_core::observability::health::ComponentHealth",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::health::ComponentHealth",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::health::ComponentHealth",
  "pub struct spark_core::observability::DefaultObservabilityFacade",
  "impl spark_core::observability::facade::DefaultObservabilityFacade",
  "pub fn spark_core::observability::facade::DefaultObservabilityFacade::new(logger: alloc::sync::Arc<dyn spark_core::observability::logging::Logger>, metrics: alloc::sync::Arc<dyn spark_core::observability::metrics::MetricsProvider>, ops_bus: alloc::sync::Arc<dyn spark_core::observability::events::OpsEventBus>, health_checks: spark_core::observability::health::HealthChecks) -> Self",
  "impl core::clone::Clone for spark_core::observability::facade::DefaultObservabilityFacade",
  "pub fn spark_core::observability::facade::DefaultObservabilityFacade::clone(&self) -> spark_core::observability::facade::DefaultObservabilityFacade",
  "impl spark_core::observability::facade::ObservabilityFacade for spark_core::observability::facade::DefaultObservabilityFacade",
  "pub fn spark_core::observability::facade::DefaultObservabilityFacade::health_checks(&self) -> &spark_core::observability::health::HealthChecks",
  "pub fn spark_core::observability::facade::DefaultObservabilityFacade::logger(&self) -> alloc::sync::Arc<dyn spark_core::observability::logging::Logger>",
  "pub fn spark_core::observability::facade::DefaultObservabilityFacade::metrics(&self) -> alloc::sync::Arc<dyn spark_core::observability::metrics::MetricsProvider>",
  "pub fn spark_core::observability::facade::DefaultObservabilityFacade::ops_bus(&self) -> alloc::sync::Arc<dyn spark_core::observability::events::OpsEventBus>",
  "impl core::marker::Freeze for spark_core::observability::facade::DefaultObservabilityFacade",
  "impl core::marker::Send for spark_core::observability::facade::DefaultObservabilityFacade",
  "impl core::marker::Sync for spark_core::observability::facade::DefaultObservabilityFacade",
  "impl core::marker::Unpin for spark_core::observability::facade::DefaultObservabilityFacade",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::facade::DefaultObservabilityFacade",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::observability::facade::DefaultObservabilityFacade",
  "pub struct spark_core::observability::IdleTimeout",
  "pub spark_core::observability::IdleTimeout::direction: spark_core::observability::events::IdleDirection",
  "impl core::clone::Clone for spark_core::observability::events::IdleTimeout",
  "pub fn spark_core::observability::events::IdleTimeout::clone(&self) -> spark_core::observability::events::IdleTimeout",
  "impl core::cmp::Eq for spark_core::observability::events::IdleTimeout",
  "impl core::cmp::PartialEq for spark_core::observability::events::IdleTimeout",
  "pub fn spark_core::observability::events::IdleTimeout::eq(&self, other: &spark_core::observability::events::IdleTimeout) -> bool",
  "impl core::fmt::Debug for spark_core::observability::events::IdleTimeout",
  "pub fn spark_core::observability::events::IdleTimeout::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::observability::events::IdleTimeout",
  "impl core::marker::StructuralPartialEq for spark_core::observability::events::IdleTimeout",
  "impl core::marker::Freeze for spark_core::observability::events::IdleTimeout",
  "impl core::marker::Send for spark_core::observability::events::IdleTimeout",
  "impl core::marker::Sync for spark_core::observability::events::IdleTimeout",
  "impl core::marker::Unpin for spark_core::observability::events::IdleTimeout",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::events::IdleTimeout",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::events::IdleTimeout",
  "pub struct spark_core::observability::InstrumentDescriptor<'a>",
  "pub spark_core::observability::InstrumentDescriptor::description: core::option::Option<&'a str>",
  "pub spark_core::observability::InstrumentDescriptor::name: &'a str",
  "pub spark_core::observability::InstrumentDescriptor::unit: core::option::Option<&'a str>",
  "impl<'a> spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "pub const fn spark_core::observability::metrics::InstrumentDescriptor<'a>::new(name: &'a str) -> Self",
  "pub const fn spark_core::observability::metrics::InstrumentDescriptor<'a>::with_description(self, description: &'a str) -> Self",
  "pub const fn spark_core::observability::metrics::InstrumentDescriptor<'a>::with_unit(self, unit: &'a str) -> Self",
  "impl<'a> core::clone::Clone for spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "pub fn spark_core::observability::metrics::InstrumentDescriptor<'a>::clone(&self) -> spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "impl<'a> core::cmp::Eq for spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "impl<'a> core::cmp::PartialEq for spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "pub fn spark_core::observability::metrics::InstrumentDescriptor<'a>::eq(&self, other: &spark_core::observability::metrics::InstrumentDescriptor<'a>) -> bool",
  "impl<'a> core::fmt::Debug for spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "pub fn spark_core::observability::metrics::InstrumentDescriptor<'a>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<'a> core::marker::Copy for spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "impl<'a> core::marker::StructuralPartialEq for spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "impl<'a> core::marker::Freeze for spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "impl<'a> core::marker::Send for spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "impl<'a> core::marker::Sync for spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "impl<'a> core::marker::Unpin for spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "impl<'a> core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "impl<'a> core::panic::unwind_safe::UnwindSafe for spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "pub struct spark_core::observability::KeyValue<'a>",
  "pub spark_core::observability::KeyValue::key: spark_core::observability::attributes::AttributeKey<'a>",
  "pub spark_core::observability::KeyValue::value: spark_core::observability::attributes::MetricAttributeValue<'a>",
  "impl<'a> spark_core::observability::attributes::KeyValue<'a>",
  "pub fn spark_core::observability::attributes::KeyValue<'a>::new(key: impl core::convert::Into<spark_core::observability::attributes::AttributeKey<'a>>, value: impl core::convert::Into<spark_core::observability::attributes::MetricAttributeValue<'a>>) -> Self",
  "impl<'a> core::clone::Clone for spark_core::observability::attributes::KeyValue<'a>",
  "pub fn spark_core::observability::attributes::KeyValue<'a>::clone(&self) -> spark_core::observability::attributes::KeyValue<'a>",
  "impl<'a> core::cmp::PartialEq for spark_core::observability::attributes::KeyValue<'a>",
  "pub fn spark_core::observability::attributes::KeyValue<'a>::eq(&self, other: &spark_core::observability::attributes::KeyValue<'a>) -> bool",
  "impl<'a> core::fmt::Debug for spark_core::observability::attributes::KeyValue<'a>",
  "pub fn spark_core::observability::attributes::KeyValue<'a>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<'a> core::marker::StructuralPartialEq for spark_core::observability::attributes::KeyValue<'a>",
  "impl<'a> core::marker::Freeze for spark_core::observability::attributes::KeyValue<'a>",
  "impl<'a> core::marker::Send for spark_core::observability::attributes::KeyValue<'a>",
  "impl<'a> core::marker::Sync for spark_core::observability::attributes::KeyValue<'a>",
  "impl<'a> core::marker::Unpin for spark_core::observability::attributes::KeyValue<'a>",
  "impl<'a> core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::attributes::KeyValue<'a>",
  "impl<'a> core::panic::unwind_safe::UnwindSafe for spark_core::observability::attributes::KeyValue<'a>",
  "pub struct spark_core::observability::LogRecord<'a>",
  "pub spark_core::observability::LogRecord::attributes: spark_core::observability::logging::LogField<'a>",
  "pub spark_core::observability::LogRecord::error: core::option::Option<&'a dyn spark_core::Error>",
  "pub spark_core::observability::LogRecord::message: alloc::borrow::Cow<'a, str>",
  "pub spark_core::observability::LogRecord::severity: spark_core::observability::logging::LogSeverity",
  "pub spark_core::observability::LogRecord::target: core::option::Option<alloc::borrow::Cow<'a, str>>",
  "pub spark_core::observability::LogRecord::trace_context: core::option::Option<&'a spark_core::observability::trace::TraceContext>",
  "impl<'a> spark_core::observability::logging::LogRecord<'a>",
  "pub fn spark_core::observability::logging::LogRecord<'a>::new(message: impl core::convert::Into<alloc::borrow::Cow<'a, str>>, severity: spark_core::observability::logging::LogSeverity, target: core::option::Option<impl core::convert::Into<alloc::borrow::Cow<'a, str>>>, trace_context: core::option::Option<&'a spark_core::observability::trace::TraceContext>, error: core::option::Option<&'a dyn spark_core::Error>, attributes: spark_core::observability::logging::LogField<'a>) -> Self",
  "impl<'a> core::fmt::Debug for spark_core::observability::logging::LogRecord<'a>",
  "pub fn spark_core::observability::logging::LogRecord<'a>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<'a> core::marker::Freeze for spark_core::observability::logging::LogRecord<'a>",
  "impl<'a> !core::marker::Send for spark_core::observability::logging::LogRecord<'a>",
  "impl<'a> !core::marker::Sync for spark_core::observability::logging::LogRecord<'a>",
  "impl<'a> core::marker::Unpin for spark_core::observability::logging::LogRecord<'a>",
  "impl<'a> !core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::logging::LogRecord<'a>",
  "impl<'a> !core::panic::unwind_safe::UnwindSafe for spark_core::observability::logging::LogRecord<'a>",
  "pub struct spark_core::observability::OwnedAttributeSet",
  "impl spark_core::observability::attributes::OwnedAttributeSet",
  "pub fn spark_core::observability::attributes::OwnedAttributeSet::as_slice(&self) -> spark_core::observability::attributes::AttributeSet<'_>",
  "pub fn spark_core::observability::attributes::OwnedAttributeSet::clear(&mut self)",
  "pub fn spark_core::observability::attributes::OwnedAttributeSet::extend_from(&mut self, borrowed: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub fn spark_core::observability::attributes::OwnedAttributeSet::new() -> Self",
  "pub fn spark_core::observability::attributes::OwnedAttributeSet::push_owned(&mut self, key: impl core::convert::Into<spark_core::observability::attributes::AttributeKey<'static>>, value: impl core::convert::Into<spark_core::observability::attributes::MetricAttributeValue<'static>>)",
  "impl core::clone::Clone for spark_core::observability::attributes::OwnedAttributeSet",
  "pub fn spark_core::observability::attributes::OwnedAttributeSet::clone(&self) -> spark_core::observability::attributes::OwnedAttributeSet",
  "impl core::default::Default for spark_core::observability::attributes::OwnedAttributeSet",
  "pub fn spark_core::observability::attributes::OwnedAttributeSet::default() -> spark_core::observability::attributes::OwnedAttributeSet",
  "impl core::fmt::Debug for spark_core::observability::attributes::OwnedAttributeSet",
  "pub fn spark_core::observability::attributes::OwnedAttributeSet::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::observability::attributes::OwnedAttributeSet",
  "impl core::marker::Send for spark_core::observability::attributes::OwnedAttributeSet",
  "impl core::marker::Sync for spark_core::observability::attributes::OwnedAttributeSet",
  "impl core::marker::Unpin for spark_core::observability::attributes::OwnedAttributeSet",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::attributes::OwnedAttributeSet",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::attributes::OwnedAttributeSet",
  "pub struct spark_core::observability::RateLimited",
  "pub spark_core::observability::RateLimited::direction: spark_core::observability::events::RateDirection",
  "impl core::clone::Clone for spark_core::observability::events::RateLimited",
  "pub fn spark_core::observability::events::RateLimited::clone(&self) -> spark_core::observability::events::RateLimited",
  "impl core::cmp::Eq for spark_core::observability::events::RateLimited",
  "impl core::cmp::PartialEq for spark_core::observability::events::RateLimited",
  "pub fn spark_core::observability::events::RateLimited::eq(&self, other: &spark_core::observability::events::RateLimited) -> bool",
  "impl core::fmt::Debug for spark_core::observability::events::RateLimited",
  "pub fn spark_core::observability::events::RateLimited::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::observability::events::RateLimited",
  "impl core::marker::StructuralPartialEq for spark_core::observability::events::RateLimited",
  "impl core::marker::Freeze for spark_core::observability::events::RateLimited",
  "impl core::marker::Send for spark_core::observability::events::RateLimited",
  "impl core::marker::Sync for spark_core::observability::events::RateLimited",
  "impl core::marker::Unpin for spark_core::observability::events::RateLimited",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::events::RateLimited",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::events::RateLimited",
  "pub struct spark_core::observability::TlsInfo",
  "pub spark_core::observability::TlsInfo::cipher: alloc::string::String",
  "pub spark_core::observability::TlsInfo::peer_identity: core::option::Option<alloc::string::String>",
  "pub spark_core::observability::TlsInfo::version: alloc::string::String",
  "impl core::clone::Clone for spark_core::observability::events::TlsInfo",
  "pub fn spark_core::observability::events::TlsInfo::clone(&self) -> spark_core::observability::events::TlsInfo",
  "impl core::cmp::Eq for spark_core::observability::events::TlsInfo",
  "impl core::cmp::PartialEq for spark_core::observability::events::TlsInfo",
  "pub fn spark_core::observability::events::TlsInfo::eq(&self, other: &spark_core::observability::events::TlsInfo) -> bool",
  "impl core::fmt::Debug for spark_core::observability::events::TlsInfo",
  "pub fn spark_core::observability::events::TlsInfo::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::observability::events::TlsInfo",
  "impl core::marker::Freeze for spark_core::observability::events::TlsInfo",
  "impl core::marker::Send for spark_core::observability::events::TlsInfo",
  "impl core::marker::Sync for spark_core::observability::events::TlsInfo",
  "impl core::marker::Unpin for spark_core::observability::events::TlsInfo",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::events::TlsInfo",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::events::TlsInfo",
  "pub struct spark_core::observability::TraceContext",
  "pub spark_core::observability::TraceContext::span_id: [u8; 8]",
  "pub spark_core::observability::TraceContext::trace_flags: spark_core::observability::trace::TraceFlags",
  "pub spark_core::observability::TraceContext::trace_id: [u8; 16]",
  "pub spark_core::observability::TraceContext::trace_state: spark_core::observability::trace::TraceState",
  "impl spark_core::observability::trace::TraceContext",
  "pub const spark_core::observability::trace::TraceContext::SPAN_ID_LENGTH: usize",
  "pub const spark_core::observability::trace::TraceContext::TRACE_ID_LENGTH: usize",
  "pub fn spark_core::observability::trace::TraceContext::child_context(&self, child_span_id: [u8; 8]) -> Self",
  "pub fn spark_core::observability::trace::TraceContext::generate() -> Self",
  "pub fn spark_core::observability::trace::TraceContext::is_sampled(&self) -> bool",
  "pub fn spark_core::observability::trace::TraceContext::mark_sampled(self) -> Self",
  "pub fn spark_core::observability::trace::TraceContext::new(trace_id: [u8; 16], span_id: [u8; 8], trace_flags: spark_core::observability::trace::TraceFlags) -> Self",
  "pub fn spark_core::observability::trace::TraceContext::validate(&self) -> core::result::Result<(), spark_core::observability::trace::TraceContextError>",
  "pub fn spark_core::observability::trace::TraceContext::with_state(self, state: spark_core::observability::trace::TraceState) -> Self",
  "impl core::clone::Clone for spark_core::observability::trace::TraceContext",
  "pub fn spark_core::observability::trace::TraceContext::clone(&self) -> spark_core::observability::trace::TraceContext",
  "impl core::cmp::Eq for spark_core::observability::trace::TraceContext",
  "impl core::cmp::PartialEq for spark_core::observability::trace::TraceContext",
  "pub fn spark_core::observability::trace::TraceContext::eq(&self, other: &spark_core::observability::trace::TraceContext) -> bool",
  "impl core::fmt::Debug for spark_core::observability::trace::TraceContext",
  "pub fn spark_core::observability::trace::TraceContext::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::observability::trace::TraceContext",
  "pub fn spark_core::observability::trace::TraceContext::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::StructuralPartialEq for spark_core::observability::trace::TraceContext",
  "impl core::marker::Freeze for spark_core::observability::trace::TraceContext",
  "impl core::marker::Send for spark_core::observability::trace::TraceContext",
  "impl core::marker::Sync for spark_core::observability::trace::TraceContext",
  "impl core::marker::Unpin for spark_core::observability::trace::TraceContext",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::trace::TraceContext",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::trace::TraceContext",
  "pub struct spark_core::observability::TraceFlags",
  "impl spark_core::observability::trace::TraceFlags",
  "pub const spark_core::observability::trace::TraceFlags::SAMPLED: u8",
  "pub const fn spark_core::observability::trace::TraceFlags::bits(&self) -> u8",
  "pub fn spark_core::observability::trace::TraceFlags::is_sampled(&self) -> bool",
  "pub const fn spark_core::observability::trace::TraceFlags::new(bits: u8) -> Self",
  "pub fn spark_core::observability::trace::TraceFlags::set_sampled(&mut self, sampled: bool)",
  "impl core::clone::Clone for spark_core::observability::trace::TraceFlags",
  "pub fn spark_core::observability::trace::TraceFlags::clone(&self) -> spark_core::observability::trace::TraceFlags",
  "impl core::cmp::Eq for spark_core::observability::trace::TraceFlags",
  "impl core::cmp::PartialEq for spark_core::observability::trace::TraceFlags",
  "pub fn spark_core::observability::trace::TraceFlags::eq(&self, other: &spark_core::observability::trace::TraceFlags) -> bool",
  "impl core::fmt::Debug for spark_core::observability::trace::TraceFlags",
  "pub fn spark_core::observability::trace::TraceFlags::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::observability::trace::TraceFlags",
  "pub fn spark_core::observability::trace::TraceFlags::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::Copy for spark_core::observability::trace::TraceFlags",
  "impl core::marker::StructuralPartialEq for spark_core::observability::trace::TraceFlags",
  "impl core::marker::Freeze for spark_core::observability::trace::TraceFlags",
  "impl core::marker::Send for spark_core::observability::trace::TraceFlags",
  "impl core::marker::Sync for spark_core::observability::trace::TraceFlags",
  "impl core::marker::Unpin for spark_core::observability::trace::TraceFlags",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::trace::TraceFlags",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::trace::TraceFlags",
  "pub struct spark_core::observability::TraceState",
  "impl spark_core::observability::trace::TraceState",
  "pub fn spark_core::observability::trace::TraceState::clear(&mut self)",
  "pub fn spark_core::observability::trace::TraceState::from_entries(entries: alloc::vec::Vec<spark_core::observability::trace::TraceStateEntry>) -> core::result::Result<Self, spark_core::observability::trace::TraceStateError>",
  "pub fn spark_core::observability::trace::TraceState::insert(&mut self, entry: spark_core::observability::trace::TraceStateEntry) -> core::result::Result<(), spark_core::observability::trace::TraceStateError>",
  "pub fn spark_core::observability::trace::TraceState::iter(&self) -> impl core::iter::traits::exact_size::ExactSizeIterator<Item = &spark_core::observability::trace::TraceStateEntry>",
  "pub fn spark_core::observability::trace::TraceState::new() -> Self",
  "pub fn spark_core::observability::trace::TraceState::remove(&mut self, key: &str)",
  "pub fn spark_core::observability::trace::TraceState::validate(&self) -> core::result::Result<(), spark_core::observability::trace::TraceContextError>",
  "impl core::clone::Clone for spark_core::observability::trace::TraceState",
  "pub fn spark_core::observability::trace::TraceState::clone(&self) -> spark_core::observability::trace::TraceState",
  "impl core::cmp::Eq for spark_core::observability::trace::TraceState",
  "impl core::cmp::PartialEq for spark_core::observability::trace::TraceState",
  "pub fn spark_core::observability::trace::TraceState::eq(&self, other: &spark_core::observability::trace::TraceState) -> bool",
  "impl core::default::Default for spark_core::observability::trace::TraceState",
  "pub fn spark_core::observability::trace::TraceState::default() -> spark_core::observability::trace::TraceState",
  "impl core::fmt::Debug for spark_core::observability::trace::TraceState",
  "pub fn spark_core::observability::trace::TraceState::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::observability::trace::TraceState",
  "pub fn spark_core::observability::trace::TraceState::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::StructuralPartialEq for spark_core::observability::trace::TraceState",
  "impl core::marker::Freeze for spark_core::observability::trace::TraceState",
  "impl core::marker::Send for spark_core::observability::trace::TraceState",
  "impl core::marker::Sync for spark_core::observability::trace::TraceState",
  "impl core::marker::Unpin for spark_core::observability::trace::TraceState",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::trace::TraceState",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::trace::TraceState",
  "pub struct spark_core::observability::TraceStateEntry",
  "pub spark_core::observability::TraceStateEntry::key: alloc::string::String",
  "pub spark_core::observability::TraceStateEntry::value: alloc::string::String",
  "impl spark_core::observability::trace::TraceStateEntry",
  "pub fn spark_core::observability::trace::TraceStateEntry::new(key: impl core::convert::Into<alloc::string::String>, value: impl core::convert::Into<alloc::string::String>) -> Self",
  "pub fn spark_core::observability::trace::TraceStateEntry::validate(&self) -> core::result::Result<(), spark_core::observability::trace::TraceStateError>",
  "impl core::clone::Clone for spark_core::observability::trace::TraceStateEntry",
  "pub fn spark_core::observability::trace::TraceStateEntry::clone(&self) -> spark_core::observability::trace::TraceStateEntry",
  "impl core::cmp::Eq for spark_core::observability::trace::TraceStateEntry",
  "impl core::cmp::PartialEq for spark_core::observability::trace::TraceStateEntry",
  "pub fn spark_core::observability::trace::TraceStateEntry::eq(&self, other: &spark_core::observability::trace::TraceStateEntry) -> bool",
  "impl core::fmt::Debug for spark_core::observability::trace::TraceStateEntry",
  "pub fn spark_core::observability::trace::TraceStateEntry::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::observability::trace::TraceStateEntry",
  "pub fn spark_core::observability::trace::TraceStateEntry::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::StructuralPartialEq for spark_core::observability::trace::TraceStateEntry",
  "impl core::marker::Freeze for spark_core::observability::trace::TraceStateEntry",
  "impl core::marker::Send for spark_core::observability::trace::TraceStateEntry",
  "impl core::marker::Sync for spark_core::observability::trace::TraceStateEntry",
  "impl core::marker::Unpin for spark_core::observability::trace::TraceStateEntry",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::trace::TraceStateEntry",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::trace::TraceStateEntry",
  "pub trait spark_core::observability::ApplicationEvent: core::fmt::Debug + core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::observability::ApplicationEvent::as_any(&self) -> &dyn core::any::Any",
  "pub fn spark_core::observability::ApplicationEvent::clone_event(&self) -> alloc::sync::Arc<dyn spark_core::observability::events::ApplicationEvent>",
  "pub fn spark_core::observability::ApplicationEvent::event_kind(&self) -> &'static str",
  "impl<T> spark_core::observability::events::ApplicationEvent for T where T: core::any::Any + core::clone::Clone + core::marker::Send + core::marker::Sync + core::fmt::Debug + 'static",
  "pub fn T::as_any(&self) -> &(dyn core::any::Any + 'static)",
  "pub fn T::clone_event(&self) -> alloc::sync::Arc<dyn spark_core::observability::events::ApplicationEvent>",
  "pub fn T::event_kind(&self) -> &'static str",
  "pub trait spark_core::observability::Counter: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::observability::Counter::add(&self, value: u64, attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub fn spark_core::observability::Counter::increment(&self, attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub trait spark_core::observability::Gauge: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::observability::Gauge::decrement(&self, delta: f64, attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub fn spark_core::observability::Gauge::increment(&self, delta: f64, attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub fn spark_core::observability::Gauge::set(&self, value: f64, attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub trait spark_core::observability::HealthCheckProvider: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::observability::HealthCheckProvider::check_health<'life0, 'async_trait>(&'life0 self) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = spark_core::observability::health::ComponentHealth> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait",
  "pub trait spark_core::observability::Histogram: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::observability::Histogram::record(&self, value: f64, attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub trait spark_core::observability::Logger: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::observability::Logger::debug(&self, message: &str, trace: core::option::Option<&spark_core::observability::trace::TraceContext>)",
  "pub fn spark_core::observability::Logger::debug_with_fields(&self, message: &str, attributes: spark_core::observability::logging::LogField<'_>, trace: core::option::Option<&spark_core::observability::trace::TraceContext>)",
  "pub fn spark_core::observability::Logger::error(&self, message: &str, error: core::option::Option<&dyn spark_core::Error>, trace: core::option::Option<&spark_core::observability::trace::TraceContext>)",
  "pub fn spark_core::observability::Logger::error_with_fields(&self, message: &str, error: core::option::Option<&dyn spark_core::Error>, attributes: spark_core::observability::logging::LogField<'_>, trace: core::option::Option<&spark_core::observability::trace::TraceContext>)",
  "pub fn spark_core::observability::Logger::fatal(&self, message: &str, error: core::option::Option<&dyn spark_core::Error>, trace: core::option::Option<&spark_core::observability::trace::TraceContext>)",
  "pub fn spark_core::observability::Logger::fatal_with_fields(&self, message: &str, error: core::option::Option<&dyn spark_core::Error>, attributes: spark_core::observability::logging::LogField<'_>, trace: core::option::Option<&spark_core::observability::trace::TraceContext>)",
  "pub fn spark_core::observability::Logger::info(&self, message: &str, trace: core::option::Option<&spark_core::observability::trace::TraceContext>)",
  "pub fn spark_core::observability::Logger::info_with_fields(&self, message: &str, attributes: spark_core::observability::logging::LogField<'_>, trace: core::option::Option<&spark_core::observability::trace::TraceContext>)",
  "pub fn spark_core::observability::Logger::log(&self, record: &spark_core::observability::logging::LogRecord<'_>)",
  "pub fn spark_core::observability::Logger::trace(&self, message: &str, trace: core::option::Option<&spark_core::observability::trace::TraceContext>)",
  "pub fn spark_core::observability::Logger::trace_with_fields(&self, message: &str, attributes: spark_core::observability::logging::LogField<'_>, trace: core::option::Option<&spark_core::observability::trace::TraceContext>)",
  "pub fn spark_core::observability::Logger::warn(&self, message: &str, trace: core::option::Option<&spark_core::observability::trace::TraceContext>)",
  "pub fn spark_core::observability::Logger::warn_with_fields(&self, message: &str, attributes: spark_core::observability::logging::LogField<'_>, trace: core::option::Option<&spark_core::observability::trace::TraceContext>)",
  "impl spark_core::observability::logging::Logger for spark_core::pipeline::instrument::InstrumentedLogger",
  "pub fn spark_core::pipeline::instrument::InstrumentedLogger::log(&self, record: &spark_core::observability::logging::LogRecord<'_>)",
  "pub trait spark_core::observability::MetricsProvider: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::observability::MetricsProvider::counter(&self, descriptor: &spark_core::observability::metrics::InstrumentDescriptor<'_>) -> alloc::sync::Arc<dyn spark_core::observability::metrics::Counter>",
  "pub fn spark_core::observability::MetricsProvider::gauge(&self, descriptor: &spark_core::observability::metrics::InstrumentDescriptor<'_>) -> alloc::sync::Arc<dyn spark_core::observability::metrics::Gauge>",
  "pub fn spark_core::observability::MetricsProvider::histogram(&self, descriptor: &spark_core::observability::metrics::InstrumentDescriptor<'_>) -> alloc::sync::Arc<dyn spark_core::observability::metrics::Histogram>",
  "pub fn spark_core::observability::MetricsProvider::record_counter_add(&self, descriptor: &spark_core::observability::metrics::InstrumentDescriptor<'_>, value: u64, attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub fn spark_core::observability::MetricsProvider::record_gauge_set(&self, descriptor: &spark_core::observability::metrics::InstrumentDescriptor<'_>, value: f64, attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub fn spark_core::observability::MetricsProvider::record_histogram(&self, descriptor: &spark_core::observability::metrics::InstrumentDescriptor<'_>, value: f64, attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub trait spark_core::observability::ObservabilityFacade: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::observability::ObservabilityFacade::health_checks(&self) -> &spark_core::observability::health::HealthChecks",
  "pub fn spark_core::observability::ObservabilityFacade::logger(&self) -> alloc::sync::Arc<dyn spark_core::observability::logging::Logger>",
  "pub fn spark_core::observability::ObservabilityFacade::metrics(&self) -> alloc::sync::Arc<dyn spark_core::observability::metrics::MetricsProvider>",
  "pub fn spark_core::observability::ObservabilityFacade::ops_bus(&self) -> alloc::sync::Arc<dyn spark_core::observability::events::OpsEventBus>",
  "impl spark_core::observability::facade::ObservabilityFacade for spark_core::observability::facade::DefaultObservabilityFacade",
  "pub fn spark_core::observability::facade::DefaultObservabilityFacade::health_checks(&self) -> &spark_core::observability::health::HealthChecks",
  "pub fn spark_core::observability::facade::DefaultObservabilityFacade::logger(&self) -> alloc::sync::Arc<dyn spark_core::observability::logging::Logger>",
  "pub fn spark_core::observability::facade::DefaultObservabilityFacade::metrics(&self) -> alloc::sync::Arc<dyn spark_core::observability::metrics::MetricsProvider>",
  "pub fn spark_core::observability::facade::DefaultObservabilityFacade::ops_bus(&self) -> alloc::sync::Arc<dyn spark_core::observability::events::OpsEventBus>",
  "pub trait spark_core::observability::OpsEventBus: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::observability::OpsEventBus::broadcast(&self, event: spark_core::observability::events::OpsEvent)",
  "pub fn spark_core::observability::OpsEventBus::set_event_policy(&self, kind: spark_core::observability::events::OpsEventKind, policy: spark_core::observability::events::EventPolicy)",
  "pub fn spark_core::observability::OpsEventBus::subscribe(&self) -> spark_core::future::BoxStream<'static, spark_core::observability::events::OpsEvent>",
  "pub type spark_core::observability::AttributeKey<'a> = alloc::borrow::Cow<'a, str>",
  "pub type spark_core::observability::AttributeSet<'a> = &'a [spark_core::observability::attributes::KeyValue<'a>]",
  "pub type spark_core::observability::HealthChecks = alloc::sync::Arc<alloc::vec::Vec<alloc::sync::Arc<dyn spark_core::observability::health::HealthCheckProvider>>>",
  "pub type spark_core::observability::LogField<'a> = spark_core::observability::attributes::AttributeSet<'a>",
  "pub mod spark_core::pipeline",
  "pub mod spark_core::pipeline::channel",
  "#[non_exhaustive] pub enum spark_core::pipeline::channel::ChannelState",
  "pub spark_core::pipeline::channel::ChannelState::Active",
  "pub spark_core::pipeline::channel::ChannelState::Closed",
  "pub spark_core::pipeline::channel::ChannelState::Draining",
  "pub spark_core::pipeline::channel::ChannelState::Initialized",
  "impl core::clone::Clone for spark_core::pipeline::channel::ChannelState",
  "pub fn spark_core::pipeline::channel::ChannelState::clone(&self) -> spark_core::pipeline::channel::ChannelState",
  "impl core::cmp::Eq for spark_core::pipeline::channel::ChannelState",
  "impl core::cmp::Ord for spark_core::pipeline::channel::ChannelState",
  "pub fn spark_core::pipeline::channel::ChannelState::cmp(&self, other: &spark_core::pipeline::channel::ChannelState) -> core::cmp::Ordering",
  "impl core::cmp::PartialEq for spark_core::pipeline::channel::ChannelState",
  "pub fn spark_core::pipeline::channel::ChannelState::eq(&self, other: &spark_core::pipeline::channel::ChannelState) -> bool",
  "impl core::cmp::PartialOrd for spark_core::pipeline::channel::ChannelState",
  "pub fn spark_core::pipeline::channel::ChannelState::partial_cmp(&self, other: &spark_core::pipeline::channel::ChannelState) -> core::option::Option<core::cmp::Ordering>",
  "impl core::fmt::Debug for spark_core::pipeline::channel::ChannelState",
  "pub fn spark_core::pipeline::channel::ChannelState::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::pipeline::channel::ChannelState",
  "impl core::marker::StructuralPartialEq for spark_core::pipeline::channel::ChannelState",
  "impl core::marker::Freeze for spark_core::pipeline::channel::ChannelState",
  "impl core::marker::Send for spark_core::pipeline::channel::ChannelState",
  "impl core::marker::Sync for spark_core::pipeline::channel::ChannelState",
  "impl core::marker::Unpin for spark_core::pipeline::channel::ChannelState",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::pipeline::channel::ChannelState",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::pipeline::channel::ChannelState",
  "#[non_exhaustive] pub enum spark_core::pipeline::channel::WriteSignal",
  "pub spark_core::pipeline::channel::WriteSignal::Accepted",
  "pub spark_core::pipeline::channel::WriteSignal::AcceptedAndFlushed",
  "pub spark_core::pipeline::channel::WriteSignal::FlowControlApplied",
  "impl core::clone::Clone for spark_core::pipeline::channel::WriteSignal",
  "pub fn spark_core::pipeline::channel::WriteSignal::clone(&self) -> spark_core::pipeline::channel::WriteSignal",
  "impl core::cmp::Eq for spark_core::pipeline::channel::WriteSignal",
  "impl core::cmp::PartialEq for spark_core::pipeline::channel::WriteSignal",
  "pub fn spark_core::pipeline::channel::WriteSignal::eq(&self, other: &spark_core::pipeline::channel::WriteSignal) -> bool",
  "impl core::fmt::Debug for spark_core::pipeline::channel::WriteSignal",
  "pub fn spark_core::pipeline::channel::WriteSignal::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::pipeline::channel::WriteSignal",
  "impl core::marker::StructuralPartialEq for spark_core::pipeline::channel::WriteSignal",
  "impl core::marker::Freeze for spark_core::pipeline::channel::WriteSignal",
  "impl core::marker::Send for spark_core::pipeline::channel::WriteSignal",
  "impl core::marker::Sync for spark_core::pipeline::channel::WriteSignal",
  "impl core::marker::Unpin for spark_core::pipeline::channel::WriteSignal",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::pipeline::channel::WriteSignal",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::pipeline::channel::WriteSignal",
  "pub trait spark_core::pipeline::channel::Channel: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::pipeline::channel::Channel::close(&self)",
  "pub fn spark_core::pipeline::channel::Channel::close_graceful(&self, reason: spark_core::contract::CloseReason, deadline: core::option::Option<spark_core::contract::Deadline>)",
  "pub fn spark_core::pipeline::channel::Channel::closed(&self) -> spark_core::future::BoxFuture<'static, core::result::Result<(), spark_core::error::SparkError>>",
  "pub fn spark_core::pipeline::channel::Channel::controller(&self) -> &dyn spark_core::pipeline::controller::Controller<HandleId = spark_core::pipeline::controller::ControllerHandleId>",
  "pub fn spark_core::pipeline::channel::Channel::extensions(&self) -> &dyn spark_core::pipeline::extensions::ExtensionsMap",
  "pub fn spark_core::pipeline::channel::Channel::flush(&self)",
  "pub fn spark_core::pipeline::channel::Channel::id(&self) -> &str",
  "pub fn spark_core::pipeline::channel::Channel::is_writable(&self) -> bool",
  "pub fn spark_core::pipeline::channel::Channel::local_addr(&self) -> core::option::Option<spark_core::transport::address::TransportSocketAddr>",
  "pub fn spark_core::pipeline::channel::Channel::peer_addr(&self) -> core::option::Option<spark_core::transport::address::TransportSocketAddr>",
  "pub fn spark_core::pipeline::channel::Channel::state(&self) -> spark_core::pipeline::channel::ChannelState",
  "pub fn spark_core::pipeline::channel::Channel::write(&self, msg: spark_core::buffer::message::PipelineMessage) -> core::result::Result<spark_core::pipeline::channel::WriteSignal, spark_core::error::CoreError>",
  "pub mod spark_core::pipeline::context",
  "pub trait spark_core::pipeline::context::Context: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::pipeline::context::Context::buffer_pool(&self) -> &dyn spark_core::buffer::pool::BufferPool",
  "pub fn spark_core::pipeline::context::Context::call_context(&self) -> &spark_core::contract::CallContext",
  "pub fn spark_core::pipeline::context::Context::channel(&self) -> &dyn spark_core::pipeline::channel::Channel",
  "pub fn spark_core::pipeline::context::Context::close_graceful(&self, reason: spark_core::contract::CloseReason, deadline: core::option::Option<spark_core::contract::Deadline>)",
  "pub fn spark_core::pipeline::context::Context::closed(&self) -> spark_core::future::BoxFuture<'static, core::result::Result<(), spark_core::error::SparkError>>",
  "pub fn spark_core::pipeline::context::Context::controller(&self) -> &dyn spark_core::pipeline::controller::Controller<HandleId = spark_core::pipeline::controller::ControllerHandleId>",
  "pub fn spark_core::pipeline::context::Context::discovery(&self) -> core::option::Option<&dyn spark_core::cluster::discovery::ServiceDiscovery>",
  "pub fn spark_core::pipeline::context::Context::execution_context(&self) -> spark_core::context::ExecutionContext<'_>",
  "pub fn spark_core::pipeline::context::Context::executor(&self) -> &dyn spark_core::TaskExecutor",
  "pub fn spark_core::pipeline::context::Context::flush(&self)",
  "pub fn spark_core::pipeline::context::Context::forward_read(&self, msg: spark_core::buffer::message::PipelineMessage)",
  "pub fn spark_core::pipeline::context::Context::logger(&self) -> &dyn spark_core::observability::logging::Logger",
  "pub fn spark_core::pipeline::context::Context::membership(&self) -> core::option::Option<&dyn spark_core::cluster::membership::ClusterMembership>",
  "pub fn spark_core::pipeline::context::Context::metrics(&self) -> &dyn spark_core::observability::metrics::MetricsProvider",
  "pub fn spark_core::pipeline::context::Context::timer(&self) -> &dyn spark_core::TimeDriver",
  "pub fn spark_core::pipeline::context::Context::trace_context(&self) -> &spark_core::observability::trace::TraceContext",
  "pub fn spark_core::pipeline::context::Context::write(&self, msg: spark_core::buffer::message::PipelineMessage) -> core::result::Result<spark_core::pipeline::channel::WriteSignal, spark_core::error::CoreError>",
  "pub mod spark_core::pipeline::controller",
  "#[non_exhaustive] pub enum spark_core::pipeline::controller::ControllerEventKind",
  "pub spark_core::pipeline::controller::ControllerEventKind::ChannelActivated",
  "pub spark_core::pipeline::controller::ControllerEventKind::ChannelDeactivated",
  "pub spark_core::pipeline::controller::ControllerEventKind::ExceptionRaised",
  "pub spark_core::pipeline::controller::ControllerEventKind::ReadCompleted",
  "pub spark_core::pipeline::controller::ControllerEventKind::ReadDispatched",
  "pub spark_core::pipeline::controller::ControllerEventKind::UserEventDispatched",
  "pub spark_core::pipeline::controller::ControllerEventKind::WritabilityChanged",
  "impl core::clone::Clone for spark_core::pipeline::controller::ControllerEventKind",
  "pub fn spark_core::pipeline::controller::ControllerEventKind::clone(&self) -> spark_core::pipeline::controller::ControllerEventKind",
  "impl core::cmp::Eq for spark_core::pipeline::controller::ControllerEventKind",
  "impl core::cmp::PartialEq for spark_core::pipeline::controller::ControllerEventKind",
  "pub fn spark_core::pipeline::controller::ControllerEventKind::eq(&self, other: &spark_core::pipeline::controller::ControllerEventKind) -> bool",
  "impl core::fmt::Debug for spark_core::pipeline::controller::ControllerEventKind",
  "pub fn spark_core::pipeline::controller::ControllerEventKind::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::pipeline::controller::ControllerEventKind",
  "impl core::marker::StructuralPartialEq for spark_core::pipeline::controller::ControllerEventKind",
  "impl core::marker::Freeze for spark_core::pipeline::controller::ControllerEventKind",
  "impl core::marker::Send for spark_core::pipeline::controller::ControllerEventKind",
  "impl core::marker::Sync for spark_core::pipeline::controller::ControllerEventKind",
  "impl core::marker::Unpin for spark_core::pipeline::controller::ControllerEventKind",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::pipeline::controller::ControllerEventKind",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::pipeline::controller::ControllerEventKind",
  "#[non_exhaustive] pub enum spark_core::pipeline::controller::HandlerDirection",
  "pub spark_core::pipeline::controller::HandlerDirection::Inbound",
  "pub spark_core::pipeline::controller::HandlerDirection::Outbound",
  "impl core::clone::Clone for spark_core::pipeline::controller::HandlerDirection",
  "pub fn spark_core::pipeline::controller::HandlerDirection::clone(&self) -> spark_core::pipeline::controller::HandlerDirection",
  "impl core::cmp::Eq for spark_core::pipeline::controller::HandlerDirection",
  "impl core::cmp::PartialEq for spark_core::pipeline::controller::HandlerDirection",
  "pub fn spark_core::pipeline::controller::HandlerDirection::eq(&self, other: &spark_core::pipeline::controller::HandlerDirection) -> bool",
  "impl core::fmt::Debug for spark_core::pipeline::controller::HandlerDirection",
  "pub fn spark_core::pipeline::controller::HandlerDirection::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::pipeline::controller::HandlerDirection",
  "impl core::marker::StructuralPartialEq for spark_core::pipeline::controller::HandlerDirection",
  "impl core::marker::Freeze for spark_core::pipeline::controller::HandlerDirection",
  "impl core::marker::Send for spark_core::pipeline::controller::HandlerDirection",
  "impl core::marker::Sync for spark_core::pipeline::controller::HandlerDirection",
  "impl core::marker::Unpin for spark_core::pipeline::controller::HandlerDirection",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::pipeline::controller::HandlerDirection",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::pipeline::controller::HandlerDirection",
  "pub struct spark_core::pipeline::controller::ControllerEvent",
  "impl spark_core::pipeline::controller::ControllerEvent",
  "pub fn spark_core::pipeline::controller::ControllerEvent::kind(&self) -> spark_core::pipeline::controller::ControllerEventKind",
  "pub fn spark_core::pipeline::controller::ControllerEvent::new(kind: spark_core::pipeline::controller::ControllerEventKind, source: impl core::convert::Into<alloc::borrow::Cow<'static, str>>, note: core::option::Option<impl core::convert::Into<alloc::borrow::Cow<'static, str>>>) -> Self",
  "pub fn spark_core::pipeline::controller::ControllerEvent::note(&self) -> core::option::Option<&str>",
  "pub fn spark_core::pipeline::controller::ControllerEvent::source(&self) -> &str",
  "impl core::clone::Clone for spark_core::pipeline::controller::ControllerEvent",
  "pub fn spark_core::pipeline::controller::ControllerEvent::clone(&self) -> spark_core::pipeline::controller::ControllerEvent",
  "impl core::cmp::Eq for spark_core::pipeline::controller::ControllerEvent",
  "impl core::cmp::PartialEq for spark_core::pipeline::controller::ControllerEvent",
  "pub fn spark_core::pipeline::controller::ControllerEvent::eq(&self, other: &spark_core::pipeline::controller::ControllerEvent) -> bool",
  "impl core::fmt::Debug for spark_core::pipeline::controller::ControllerEvent",
  "pub fn spark_core::pipeline::controller::ControllerEvent::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::pipeline::controller::ControllerEvent",
  "impl core::marker::Freeze for spark_core::pipeline::controller::ControllerEvent",
  "impl core::marker::Send for spark_core::pipeline::controller::ControllerEvent",
  "impl core::marker::Sync for spark_core::pipeline::controller::ControllerEvent",
  "impl core::marker::Unpin for spark_core::pipeline::controller::ControllerEvent",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::pipeline::controller::ControllerEvent",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::pipeline::controller::ControllerEvent",
  "pub struct spark_core::pipeline::controller::ControllerHandleId(_)",
  "impl spark_core::pipeline::controller::ControllerHandleId",
  "pub const spark_core::pipeline::controller::ControllerHandleId::INBOUND_HEAD: Self",
  "pub const spark_core::pipeline::controller::ControllerHandleId::OUTBOUND_HEAD: Self",
  "pub fn spark_core::pipeline::controller::ControllerHandleId::direction(self) -> spark_core::pipeline::controller::HandlerDirection",
  "pub fn spark_core::pipeline::controller::ControllerHandleId::head(direction: spark_core::pipeline::controller::HandlerDirection) -> Self",
  "pub fn spark_core::pipeline::controller::ControllerHandleId::is_anchor(self) -> bool",
  "pub fn spark_core::pipeline::controller::ControllerHandleId::raw(self) -> u64",
  "impl core::clone::Clone for spark_core::pipeline::controller::ControllerHandleId",
  "pub fn spark_core::pipeline::controller::ControllerHandleId::clone(&self) -> spark_core::pipeline::controller::ControllerHandleId",
  "impl core::cmp::Eq for spark_core::pipeline::controller::ControllerHandleId",
  "impl core::cmp::Ord for spark_core::pipeline::controller::ControllerHandleId",
  "pub fn spark_core::pipeline::controller::ControllerHandleId::cmp(&self, other: &spark_core::pipeline::controller::ControllerHandleId) -> core::cmp::Ordering",
  "impl core::cmp::PartialEq for spark_core::pipeline::controller::ControllerHandleId",
  "pub fn spark_core::pipeline::controller::ControllerHandleId::eq(&self, other: &spark_core::pipeline::controller::ControllerHandleId) -> bool",
  "impl core::cmp::PartialOrd for spark_core::pipeline::controller::ControllerHandleId",
  "pub fn spark_core::pipeline::controller::ControllerHandleId::partial_cmp(&self, other: &spark_core::pipeline::controller::ControllerHandleId) -> core::option::Option<core::cmp::Ordering>",
  "impl core::fmt::Debug for spark_core::pipeline::controller::ControllerHandleId",
  "pub fn spark_core::pipeline::controller::ControllerHandleId::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::pipeline::controller::ControllerHandleId",
  "pub fn spark_core::pipeline::controller::ControllerHandleId::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::Copy for spark_core::pipeline::controller::ControllerHandleId",
  "impl core::marker::StructuralPartialEq for spark_core::pipeline::controller::ControllerHandleId",
  "impl core::marker::Freeze for spark_core::pipeline::controller::ControllerHandleId",
  "impl core::marker::Send for spark_core::pipeline::controller::ControllerHandleId",
  "impl core::marker::Sync for spark_core::pipeline::controller::ControllerHandleId",
  "impl core::marker::Unpin for spark_core::pipeline::controller::ControllerHandleId",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::pipeline::controller::ControllerHandleId",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::pipeline::controller::ControllerHandleId",
  "pub struct spark_core::pipeline::controller::HandlerRegistration",
  "impl spark_core::pipeline::controller::HandlerRegistration",
  "pub fn spark_core::pipeline::controller::HandlerRegistration::descriptor(&self) -> &spark_core::pipeline::middleware::MiddlewareDescriptor",
  "pub fn spark_core::pipeline::controller::HandlerRegistration::direction(&self) -> spark_core::pipeline::controller::HandlerDirection",
  "pub fn spark_core::pipeline::controller::HandlerRegistration::handle_id(&self) -> spark_core::pipeline::controller::ControllerHandleId",
  "pub fn spark_core::pipeline::controller::HandlerRegistration::label(&self) -> &str",
  "pub fn spark_core::pipeline::controller::HandlerRegistration::new(handle_id: spark_core::pipeline::controller::ControllerHandleId, label: impl core::convert::Into<alloc::string::String>, descriptor: spark_core::pipeline::middleware::MiddlewareDescriptor, direction: spark_core::pipeline::controller::HandlerDirection) -> Self",
  "impl core::clone::Clone for spark_core::pipeline::controller::HandlerRegistration",
  "pub fn spark_core::pipeline::controller::HandlerRegistration::clone(&self) -> spark_core::pipeline::controller::HandlerRegistration",
  "impl core::cmp::Eq for spark_core::pipeline::controller::HandlerRegistration",
  "impl core::cmp::PartialEq for spark_core::pipeline::controller::HandlerRegistration",
  "pub fn spark_core::pipeline::controller::HandlerRegistration::eq(&self, other: &spark_core::pipeline::controller::HandlerRegistration) -> bool",
  "impl core::fmt::Debug for spark_core::pipeline::controller::HandlerRegistration",
  "pub fn spark_core::pipeline::controller::HandlerRegistration::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::pipeline::controller::HandlerRegistration",
  "impl core::marker::Freeze for spark_core::pipeline::controller::HandlerRegistration",
  "impl core::marker::Send for spark_core::pipeline::controller::HandlerRegistration",
  "impl core::marker::Sync for spark_core::pipeline::controller::HandlerRegistration",
  "impl core::marker::Unpin for spark_core::pipeline::controller::HandlerRegistration",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::pipeline::controller::HandlerRegistration",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::pipeline::controller::HandlerRegistration",
  "pub struct spark_core::pipeline::controller::HotSwapController",
  "impl spark_core::pipeline::controller::HotSwapController",
  "pub fn spark_core::pipeline::controller::HotSwapController::new(channel: alloc::sync::Arc<dyn spark_core::pipeline::channel::Channel>, services: spark_core::CoreServices, call_context: spark_core::contract::CallContext) -> Self",
  "impl spark_core::pipeline::controller::Controller for spark_core::pipeline::controller::HotSwapController",
  "pub type spark_core::pipeline::controller::HotSwapController::HandleId = spark_core::pipeline::controller::ControllerHandleId",
  "pub fn spark_core::pipeline::controller::HotSwapController::add_handler_after(&self, anchor: Self::HandleId, label: &str, handler: alloc::sync::Arc<dyn spark_core::pipeline::controller::Handler>) -> Self::HandleId",
  "pub fn spark_core::pipeline::controller::HotSwapController::emit_channel_activated(&self)",
  "pub fn spark_core::pipeline::controller::HotSwapController::emit_channel_deactivated(&self)",
  "pub fn spark_core::pipeline::controller::HotSwapController::emit_exception(&self, error: spark_core::error::CoreError)",
  "pub fn spark_core::pipeline::controller::HotSwapController::emit_read(&self, msg: spark_core::buffer::message::PipelineMessage)",
  "pub fn spark_core::pipeline::controller::HotSwapController::emit_read_completed(&self)",
  "pub fn spark_core::pipeline::controller::HotSwapController::emit_user_event(&self, event: spark_core::observability::events::CoreUserEvent)",
  "pub fn spark_core::pipeline::controller::HotSwapController::emit_writability_changed(&self, is_writable: bool)",
  "pub fn spark_core::pipeline::controller::HotSwapController::epoch(&self) -> u64",
  "pub fn spark_core::pipeline::controller::HotSwapController::install_middleware(&self, _middleware: &dyn spark_core::pipeline::middleware::Middleware, _services: &spark_core::CoreServices) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::pipeline::controller::HotSwapController::register_inbound_handler(&self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::InboundHandler>)",
  "pub fn spark_core::pipeline::controller::HotSwapController::register_outbound_handler(&self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::OutboundHandler>)",
  "pub fn spark_core::pipeline::controller::HotSwapController::registry(&self) -> &dyn spark_core::pipeline::controller::HandlerRegistry",
  "pub fn spark_core::pipeline::controller::HotSwapController::remove_handler(&self, handle: Self::HandleId) -> bool",
  "pub fn spark_core::pipeline::controller::HotSwapController::replace_handler(&self, handle: Self::HandleId, handler: alloc::sync::Arc<dyn spark_core::pipeline::controller::Handler>) -> bool",
  "impl !core::marker::Freeze for spark_core::pipeline::controller::HotSwapController",
  "impl core::marker::Send for spark_core::pipeline::controller::HotSwapController",
  "impl core::marker::Sync for spark_core::pipeline::controller::HotSwapController",
  "impl core::marker::Unpin for spark_core::pipeline::controller::HotSwapController",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::pipeline::controller::HotSwapController",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::pipeline::controller::HotSwapController",
  "pub trait spark_core::pipeline::controller::Controller: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub type spark_core::pipeline::controller::Controller::HandleId: core::marker::Copy + core::cmp::Eq + core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::pipeline::controller::Controller::add_handler_after(&self, anchor: Self::HandleId, label: &str, handler: alloc::sync::Arc<dyn spark_core::pipeline::controller::Handler>) -> Self::HandleId",
  "pub fn spark_core::pipeline::controller::Controller::emit_channel_activated(&self)",
  "pub fn spark_core::pipeline::controller::Controller::emit_channel_deactivated(&self)",
  "pub fn spark_core::pipeline::controller::Controller::emit_exception(&self, error: spark_core::error::CoreError)",
  "pub fn spark_core::pipeline::controller::Controller::emit_read(&self, msg: spark_core::buffer::message::PipelineMessage)",
  "pub fn spark_core::pipeline::controller::Controller::emit_read_completed(&self)",
  "pub fn spark_core::pipeline::controller::Controller::emit_user_event(&self, event: spark_core::observability::events::CoreUserEvent)",
  "pub fn spark_core::pipeline::controller::Controller::emit_writability_changed(&self, is_writable: bool)",
  "pub fn spark_core::pipeline::controller::Controller::epoch(&self) -> u64",
  "pub fn spark_core::pipeline::controller::Controller::install_middleware(&self, middleware: &dyn spark_core::pipeline::middleware::Middleware, services: &spark_core::CoreServices) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::pipeline::controller::Controller::register_inbound_handler(&self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::InboundHandler>)",
  "pub fn spark_core::pipeline::controller::Controller::register_inbound_handler_static(&self, label: &str, handler: &'static dyn spark_core::pipeline::handler::InboundHandler)",
  "pub fn spark_core::pipeline::controller::Controller::register_outbound_handler(&self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::OutboundHandler>)",
  "pub fn spark_core::pipeline::controller::Controller::register_outbound_handler_static(&self, label: &str, handler: &'static dyn spark_core::pipeline::handler::OutboundHandler)",
  "pub fn spark_core::pipeline::controller::Controller::registry(&self) -> &dyn spark_core::pipeline::controller::HandlerRegistry",
  "pub fn spark_core::pipeline::controller::Controller::remove_handler(&self, handle: Self::HandleId) -> bool",
  "pub fn spark_core::pipeline::controller::Controller::replace_handler(&self, handle: Self::HandleId, handler: alloc::sync::Arc<dyn spark_core::pipeline::controller::Handler>) -> bool",
  "impl spark_core::pipeline::controller::Controller for spark_core::pipeline::controller::HotSwapController",
  "pub type spark_core::pipeline::controller::HotSwapController::HandleId = spark_core::pipeline::controller::ControllerHandleId",
  "pub fn spark_core::pipeline::controller::HotSwapController::add_handler_after(&self, anchor: Self::HandleId, label: &str, handler: alloc::sync::Arc<dyn spark_core::pipeline::controller::Handler>) -> Self::HandleId",
  "pub fn spark_core::pipeline::controller::HotSwapController::emit_channel_activated(&self)",
  "pub fn spark_core::pipeline::controller::HotSwapController::emit_channel_deactivated(&self)",
  "pub fn spark_core::pipeline::controller::HotSwapController::emit_exception(&self, error: spark_core::error::CoreError)",
  "pub fn spark_core::pipeline::controller::HotSwapController::emit_read(&self, msg: spark_core::buffer::message::PipelineMessage)",
  "pub fn spark_core::pipeline::controller::HotSwapController::emit_read_completed(&self)",
  "pub fn spark_core::pipeline::controller::HotSwapController::emit_user_event(&self, event: spark_core::observability::events::CoreUserEvent)",
  "pub fn spark_core::pipeline::controller::HotSwapController::emit_writability_changed(&self, is_writable: bool)",
  "pub fn spark_core::pipeline::controller::HotSwapController::epoch(&self) -> u64",
  "pub fn spark_core::pipeline::controller::HotSwapController::install_middleware(&self, _middleware: &dyn spark_core::pipeline::middleware::Middleware, _services: &spark_core::CoreServices) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::pipeline::controller::HotSwapController::register_inbound_handler(&self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::InboundHandler>)",
  "pub fn spark_core::pipeline::controller::HotSwapController::register_outbound_handler(&self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::OutboundHandler>)",
  "pub fn spark_core::pipeline::controller::HotSwapController::registry(&self) -> &dyn spark_core::pipeline::controller::HandlerRegistry",
  "pub fn spark_core::pipeline::controller::HotSwapController::remove_handler(&self, handle: Self::HandleId) -> bool",
  "pub fn spark_core::pipeline::controller::HotSwapController::replace_handler(&self, handle: Self::HandleId, handler: alloc::sync::Arc<dyn spark_core::pipeline::controller::Handler>) -> bool",
  "impl spark_core::pipeline::controller::Controller for spark_core::pipeline::traits::object::ControllerHandle",
  "pub type spark_core::pipeline::traits::object::ControllerHandle::HandleId = spark_core::pipeline::controller::ControllerHandleId",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::add_handler_after(&self, anchor: Self::HandleId, label: &str, handler: alloc::sync::Arc<dyn spark_core::pipeline::controller::Handler>) -> Self::HandleId",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_channel_activated(&self)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_channel_deactivated(&self)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_exception(&self, error: spark_core::error::CoreError)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_read(&self, msg: spark_core::buffer::message::PipelineMessage)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_read_completed(&self)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_user_event(&self, event: spark_core::observability::events::CoreUserEvent)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_writability_changed(&self, is_writable: bool)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::epoch(&self) -> u64",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::install_middleware(&self, middleware: &dyn spark_core::pipeline::middleware::Middleware, services: &spark_core::CoreServices) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::register_inbound_handler(&self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::InboundHandler>)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::register_inbound_handler_static(&self, label: &str, handler: &'static dyn spark_core::pipeline::handler::InboundHandler)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::register_outbound_handler(&self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::OutboundHandler>)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::register_outbound_handler_static(&self, label: &str, handler: &'static dyn spark_core::pipeline::handler::OutboundHandler)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::registry(&self) -> &dyn spark_core::pipeline::controller::HandlerRegistry",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::remove_handler(&self, handle: Self::HandleId) -> bool",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::replace_handler(&self, handle: Self::HandleId, handler: alloc::sync::Arc<dyn spark_core::pipeline::controller::Handler>) -> bool",
  "pub trait spark_core::pipeline::controller::Handler: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::pipeline::controller::Handler::clone_inbound(&self) -> core::option::Option<alloc::sync::Arc<dyn spark_core::pipeline::handler::InboundHandler>>",
  "pub fn spark_core::pipeline::controller::Handler::clone_outbound(&self) -> core::option::Option<alloc::sync::Arc<dyn spark_core::pipeline::handler::OutboundHandler>>",
  "pub fn spark_core::pipeline::controller::Handler::descriptor(&self) -> spark_core::pipeline::middleware::MiddlewareDescriptor",
  "pub fn spark_core::pipeline::controller::Handler::direction(&self) -> spark_core::pipeline::controller::HandlerDirection",
  "pub trait spark_core::pipeline::controller::HandlerRegistry: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::pipeline::controller::HandlerRegistry::snapshot(&self) -> alloc::vec::Vec<spark_core::pipeline::controller::HandlerRegistration>",
  "pub fn spark_core::pipeline::controller::handler_from_inbound(handler: alloc::sync::Arc<dyn spark_core::pipeline::handler::InboundHandler>) -> alloc::sync::Arc<dyn spark_core::pipeline::controller::Handler>",
  "pub fn spark_core::pipeline::controller::handler_from_outbound(handler: alloc::sync::Arc<dyn spark_core::pipeline::handler::OutboundHandler>) -> alloc::sync::Arc<dyn spark_core::pipeline::controller::Handler>",
  "pub mod spark_core::pipeline::default_handlers",
  "pub struct spark_core::pipeline::default_handlers::ExceptionAutoResponder",
  "impl spark_core::pipeline::default_handlers::ExceptionAutoResponder",
  "pub const fn spark_core::pipeline::default_handlers::ExceptionAutoResponder::new() -> Self",
  "impl core::default::Default for spark_core::pipeline::default_handlers::ExceptionAutoResponder",
  "pub fn spark_core::pipeline::default_handlers::ExceptionAutoResponder::default() -> spark_core::pipeline::default_handlers::ExceptionAutoResponder",
  "impl core::fmt::Debug for spark_core::pipeline::default_handlers::ExceptionAutoResponder",
  "pub fn spark_core::pipeline::default_handlers::ExceptionAutoResponder::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl spark_core::pipeline::handler::InboundHandler for spark_core::pipeline::default_handlers::ExceptionAutoResponder",
  "pub fn spark_core::pipeline::default_handlers::ExceptionAutoResponder::on_channel_active(&self, _ctx: &dyn spark_core::pipeline::context::Context)",
  "pub fn spark_core::pipeline::default_handlers::ExceptionAutoResponder::on_channel_inactive(&self, _ctx: &dyn spark_core::pipeline::context::Context)",
  "pub fn spark_core::pipeline::default_handlers::ExceptionAutoResponder::on_exception_caught(&self, ctx: &dyn spark_core::pipeline::context::Context, error: spark_core::error::CoreError)",
  "pub fn spark_core::pipeline::default_handlers::ExceptionAutoResponder::on_read(&self, _ctx: &dyn spark_core::pipeline::context::Context, _msg: spark_core::buffer::message::PipelineMessage)",
  "pub fn spark_core::pipeline::default_handlers::ExceptionAutoResponder::on_read_complete(&self, _ctx: &dyn spark_core::pipeline::context::Context)",
  "pub fn spark_core::pipeline::default_handlers::ExceptionAutoResponder::on_user_event(&self, _ctx: &dyn spark_core::pipeline::context::Context, _event: spark_core::observability::events::CoreUserEvent)",
  "pub fn spark_core::pipeline::default_handlers::ExceptionAutoResponder::on_writability_changed(&self, _ctx: &dyn spark_core::pipeline::context::Context, _is_writable: bool)",
  "impl core::marker::Freeze for spark_core::pipeline::default_handlers::ExceptionAutoResponder",
  "impl core::marker::Send for spark_core::pipeline::default_handlers::ExceptionAutoResponder",
  "impl core::marker::Sync for spark_core::pipeline::default_handlers::ExceptionAutoResponder",
  "impl core::marker::Unpin for spark_core::pipeline::default_handlers::ExceptionAutoResponder",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::pipeline::default_handlers::ExceptionAutoResponder",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::pipeline::default_handlers::ExceptionAutoResponder",
  "pub struct spark_core::pipeline::default_handlers::ReadyStateEvent",
  "impl spark_core::pipeline::default_handlers::ReadyStateEvent",
  "pub fn spark_core::pipeline::default_handlers::ReadyStateEvent::new(state: spark_core::status::ready::ReadyState) -> Self",
  "pub fn spark_core::pipeline::default_handlers::ReadyStateEvent::state(&self) -> &spark_core::status::ready::ReadyState",
  "impl core::clone::Clone for spark_core::pipeline::default_handlers::ReadyStateEvent",
  "pub fn spark_core::pipeline::default_handlers::ReadyStateEvent::clone(&self) -> spark_core::pipeline::default_handlers::ReadyStateEvent",
  "impl core::fmt::Debug for spark_core::pipeline::default_handlers::ReadyStateEvent",
  "pub fn spark_core::pipeline::default_handlers::ReadyStateEvent::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::pipeline::default_handlers::ReadyStateEvent",
  "impl core::marker::Send for spark_core::pipeline::default_handlers::ReadyStateEvent",
  "impl core::marker::Sync for spark_core::pipeline::default_handlers::ReadyStateEvent",
  "impl core::marker::Unpin for spark_core::pipeline::default_handlers::ReadyStateEvent",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::pipeline::default_handlers::ReadyStateEvent",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::pipeline::default_handlers::ReadyStateEvent",
  "pub mod spark_core::pipeline::extensions",
  "pub trait spark_core::pipeline::extensions::ExtensionsMap: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::pipeline::extensions::ExtensionsMap::clear(&self)",
  "pub fn spark_core::pipeline::extensions::ExtensionsMap::contains_key(&self, key: &core::any::TypeId) -> bool",
  "pub fn spark_core::pipeline::extensions::ExtensionsMap::get<'a>(&'a self, key: &core::any::TypeId) -> core::option::Option<&'a (dyn core::any::Any + core::marker::Send + core::marker::Sync + 'static)>",
  "pub fn spark_core::pipeline::extensions::ExtensionsMap::insert(&self, key: core::any::TypeId, value: alloc::boxed::Box<(dyn core::any::Any + core::marker::Send + core::marker::Sync)>)",
  "pub fn spark_core::pipeline::extensions::ExtensionsMap::remove(&self, key: &core::any::TypeId) -> core::option::Option<alloc::boxed::Box<(dyn core::any::Any + core::marker::Send + core::marker::Sync)>>",
  "pub mod spark_core::pipeline::factory",
  "pub struct spark_core::pipeline::factory::ControllerFactoryObject<F> where F: spark_core::pipeline::traits::generic::ControllerFactory",
  "impl<F> spark_core::pipeline::traits::object::ControllerFactoryObject<F> where F: spark_core::pipeline::traits::generic::ControllerFactory",
  "pub fn spark_core::pipeline::traits::object::ControllerFactoryObject<F>::into_inner(self) -> F",
  "pub fn spark_core::pipeline::traits::object::ControllerFactoryObject<F>::new(inner: F) -> Self",
  "impl<F> spark_core::pipeline::traits::object::DynControllerFactory for spark_core::pipeline::traits::object::ControllerFactoryObject<F> where F: spark_core::pipeline::traits::generic::ControllerFactory",
  "pub fn spark_core::pipeline::traits::object::ControllerFactoryObject<F>::build_dyn(&self, core_services: &spark_core::CoreServices) -> core::result::Result<spark_core::pipeline::traits::object::ControllerHandle, spark_core::error::CoreError>",
  "impl<F> core::marker::Freeze for spark_core::pipeline::traits::object::ControllerFactoryObject<F> where F: core::marker::Freeze",
  "impl<F> core::marker::Send for spark_core::pipeline::traits::object::ControllerFactoryObject<F>",
  "impl<F> core::marker::Sync for spark_core::pipeline::traits::object::ControllerFactoryObject<F>",
  "impl<F> core::marker::Unpin for spark_core::pipeline::traits::object::ControllerFactoryObject<F> where F: core::marker::Unpin",
  "impl<F> core::panic::unwind_safe::RefUnwindSafe for spark_core::pipeline::traits::object::ControllerFactoryObject<F> where F: core::panic::unwind_safe::RefUnwindSafe",
  "impl<F> core::panic::unwind_safe::UnwindSafe for spark_core::pipeline::traits::object::ControllerFactoryObject<F> where F: core::panic::unwind_safe::UnwindSafe",
  "pub struct spark_core::pipeline::factory::ControllerHandle",
  "impl spark_core::pipeline::traits::object::ControllerHandle",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::as_dyn(&self) -> &dyn spark_core::pipeline::controller::Controller<HandleId = spark_core::pipeline::controller::ControllerHandleId>",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::from_controller<C>(controller: C) -> Self where C: spark_core::pipeline::controller::Controller<HandleId = spark_core::pipeline::controller::ControllerHandleId>",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::new(inner: alloc::sync::Arc<dyn spark_core::pipeline::controller::Controller<HandleId = spark_core::pipeline::controller::ControllerHandleId>>) -> Self",
  "impl core::clone::Clone for spark_core::pipeline::traits::object::ControllerHandle",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::clone(&self) -> spark_core::pipeline::traits::object::ControllerHandle",
  "impl spark_core::pipeline::controller::Controller for spark_core::pipeline::traits::object::ControllerHandle",
  "pub type spark_core::pipeline::traits::object::ControllerHandle::HandleId = spark_core::pipeline::controller::ControllerHandleId",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::add_handler_after(&self, anchor: Self::HandleId, label: &str, handler: alloc::sync::Arc<dyn spark_core::pipeline::controller::Handler>) -> Self::HandleId",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_channel_activated(&self)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_channel_deactivated(&self)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_exception(&self, error: spark_core::error::CoreError)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_read(&self, msg: spark_core::buffer::message::PipelineMessage)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_read_completed(&self)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_user_event(&self, event: spark_core::observability::events::CoreUserEvent)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_writability_changed(&self, is_writable: bool)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::epoch(&self) -> u64",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::install_middleware(&self, middleware: &dyn spark_core::pipeline::middleware::Middleware, services: &spark_core::CoreServices) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::register_inbound_handler(&self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::InboundHandler>)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::register_inbound_handler_static(&self, label: &str, handler: &'static dyn spark_core::pipeline::handler::InboundHandler)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::register_outbound_handler(&self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::OutboundHandler>)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::register_outbound_handler_static(&self, label: &str, handler: &'static dyn spark_core::pipeline::handler::OutboundHandler)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::registry(&self) -> &dyn spark_core::pipeline::controller::HandlerRegistry",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::remove_handler(&self, handle: Self::HandleId) -> bool",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::replace_handler(&self, handle: Self::HandleId, handler: alloc::sync::Arc<dyn spark_core::pipeline::controller::Handler>) -> bool",
  "impl core::marker::Freeze for spark_core::pipeline::traits::object::ControllerHandle",
  "impl core::marker::Send for spark_core::pipeline::traits::object::ControllerHandle",
  "impl core::marker::Sync for spark_core::pipeline::traits::object::ControllerHandle",
  "impl core::marker::Unpin for spark_core::pipeline::traits::object::ControllerHandle",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::pipeline::traits::object::ControllerHandle",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::pipeline::traits::object::ControllerHandle",
  "pub struct spark_core::pipeline::factory::DynControllerFactoryAdapter",
  "impl spark_core::pipeline::traits::object::DynControllerFactoryAdapter",
  "pub fn spark_core::pipeline::traits::object::DynControllerFactoryAdapter::new(inner: alloc::sync::Arc<dyn spark_core::pipeline::traits::object::DynControllerFactory>) -> Self",
  "impl spark_core::pipeline::traits::generic::ControllerFactory for spark_core::pipeline::traits::object::DynControllerFactoryAdapter",
  "pub type spark_core::pipeline::traits::object::DynControllerFactoryAdapter::Controller = spark_core::pipeline::traits::object::ControllerHandle",
  "pub fn spark_core::pipeline::traits::object::DynControllerFactoryAdapter::build(&self, core_services: &spark_core::CoreServices) -> core::result::Result<Self::Controller, spark_core::error::CoreError>",
  "impl core::marker::Freeze for spark_core::pipeline::traits::object::DynControllerFactoryAdapter",
  "impl core::marker::Send for spark_core::pipeline::traits::object::DynControllerFactoryAdapter",
  "impl core::marker::Sync for spark_core::pipeline::traits::object::DynControllerFactoryAdapter",
  "impl core::marker::Unpin for spark_core::pipeline::traits::object::DynControllerFactoryAdapter",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::pipeline::traits::object::DynControllerFactoryAdapter",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::pipeline::traits::object::DynControllerFactoryAdapter",
  "pub trait spark_core::pipeline::factory::ControllerFactory: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub type spark_core::pipeline::factory::ControllerFactory::Controller: spark_core::pipeline::controller::Controller<HandleId = spark_core::pipeline::controller::ControllerHandleId>",
  "pub fn spark_core::pipeline::factory::ControllerFactory::build(&self, core_services: &spark_core::CoreServices) -> core::result::Result<Self::Controller, spark_core::error::CoreError>",
  "impl spark_core::pipeline::traits::generic::ControllerFactory for spark_core::pipeline::traits::object::DynControllerFactoryAdapter",
  "pub type spark_core::pipeline::traits::object::DynControllerFactoryAdapter::Controller = spark_core::pipeline::traits::object::ControllerHandle",
  "pub fn spark_core::pipeline::traits::object::DynControllerFactoryAdapter::build(&self, core_services: &spark_core::CoreServices) -> core::result::Result<Self::Controller, spark_core::error::CoreError>",
  "pub trait spark_core::pipeline::factory::DynControllerFactory: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::pipeline::factory::DynControllerFactory::build_dyn(&self, core_services: &spark_core::CoreServices) -> core::result::Result<spark_core::pipeline::traits::object::ControllerHandle, spark_core::error::CoreError>",
  "impl<F> spark_core::pipeline::traits::object::DynControllerFactory for spark_core::pipeline::traits::object::ControllerFactoryObject<F> where F: spark_core::pipeline::traits::generic::ControllerFactory",
  "pub fn spark_core::pipeline::traits::object::ControllerFactoryObject<F>::build_dyn(&self, core_services: &spark_core::CoreServices) -> core::result::Result<spark_core::pipeline::traits::object::ControllerHandle, spark_core::error::CoreError>",
  "pub mod spark_core::pipeline::handler",
  "pub trait spark_core::pipeline::handler::DuplexHandler: spark_core::pipeline::handler::InboundHandler + spark_core::pipeline::handler::OutboundHandler + Sealed",
  "impl<T> spark_core::pipeline::handler::DuplexHandler for T where T: spark_core::pipeline::handler::InboundHandler + spark_core::pipeline::handler::OutboundHandler",
  "pub trait spark_core::pipeline::handler::InboundHandler: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::pipeline::handler::InboundHandler::describe(&self) -> spark_core::pipeline::middleware::MiddlewareDescriptor",
  "pub fn spark_core::pipeline::handler::InboundHandler::on_channel_active(&self, ctx: &dyn spark_core::pipeline::context::Context)",
  "pub fn spark_core::pipeline::handler::InboundHandler::on_channel_inactive(&self, ctx: &dyn spark_core::pipeline::context::Context)",
  "pub fn spark_core::pipeline::handler::InboundHandler::on_exception_caught(&self, ctx: &dyn spark_core::pipeline::context::Context, error: spark_core::error::CoreError)",
  "pub fn spark_core::pipeline::handler::InboundHandler::on_read(&self, ctx: &dyn spark_core::pipeline::context::Context, msg: spark_core::buffer::message::PipelineMessage)",
  "pub fn spark_core::pipeline::handler::InboundHandler::on_read_complete(&self, ctx: &dyn spark_core::pipeline::context::Context)",
  "pub fn spark_core::pipeline::handler::InboundHandler::on_user_event(&self, ctx: &dyn spark_core::pipeline::context::Context, event: spark_core::observability::events::CoreUserEvent)",
  "pub fn spark_core::pipeline::handler::InboundHandler::on_writability_changed(&self, ctx: &dyn spark_core::pipeline::context::Context, is_writable: bool)",
  "impl spark_core::pipeline::handler::InboundHandler for spark_core::pipeline::default_handlers::ExceptionAutoResponder",
  "pub fn spark_core::pipeline::default_handlers::ExceptionAutoResponder::on_channel_active(&self, _ctx: &dyn spark_core::pipeline::context::Context)",
  "pub fn spark_core::pipeline::default_handlers::ExceptionAutoResponder::on_channel_inactive(&self, _ctx: &dyn spark_core::pipeline::context::Context)",
  "pub fn spark_core::pipeline::default_handlers::ExceptionAutoResponder::on_exception_caught(&self, ctx: &dyn spark_core::pipeline::context::Context, error: spark_core::error::CoreError)",
  "pub fn spark_core::pipeline::default_handlers::ExceptionAutoResponder::on_read(&self, _ctx: &dyn spark_core::pipeline::context::Context, _msg: spark_core::buffer::message::PipelineMessage)",
  "pub fn spark_core::pipeline::default_handlers::ExceptionAutoResponder::on_read_complete(&self, _ctx: &dyn spark_core::pipeline::context::Context)",
  "pub fn spark_core::pipeline::default_handlers::ExceptionAutoResponder::on_user_event(&self, _ctx: &dyn spark_core::pipeline::context::Context, _event: spark_core::observability::events::CoreUserEvent)",
  "pub fn spark_core::pipeline::default_handlers::ExceptionAutoResponder::on_writability_changed(&self, _ctx: &dyn spark_core::pipeline::context::Context, _is_writable: bool)",
  "pub trait spark_core::pipeline::handler::OutboundHandler: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::pipeline::handler::OutboundHandler::describe(&self) -> spark_core::pipeline::middleware::MiddlewareDescriptor",
  "pub fn spark_core::pipeline::handler::OutboundHandler::on_close_graceful(&self, ctx: &dyn spark_core::pipeline::context::Context, deadline: core::option::Option<core::time::Duration>) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::pipeline::handler::OutboundHandler::on_flush(&self, ctx: &dyn spark_core::pipeline::context::Context) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::pipeline::handler::OutboundHandler::on_write(&self, ctx: &dyn spark_core::pipeline::context::Context, msg: spark_core::buffer::message::PipelineMessage) -> core::result::Result<spark_core::pipeline::channel::WriteSignal, spark_core::error::CoreError>",
  "pub mod spark_core::pipeline::instrument",
  "pub enum spark_core::pipeline::instrument::HandlerTracerError",
  "pub spark_core::pipeline::instrument::HandlerTracerError::AlreadyInstalled",
  "impl core::clone::Clone for spark_core::pipeline::instrument::HandlerTracerError",
  "pub fn spark_core::pipeline::instrument::HandlerTracerError::clone(&self) -> spark_core::pipeline::instrument::HandlerTracerError",
  "impl core::cmp::Eq for spark_core::pipeline::instrument::HandlerTracerError",
  "impl core::cmp::PartialEq for spark_core::pipeline::instrument::HandlerTracerError",
  "pub fn spark_core::pipeline::instrument::HandlerTracerError::eq(&self, other: &spark_core::pipeline::instrument::HandlerTracerError) -> bool",
  "impl core::fmt::Debug for spark_core::pipeline::instrument::HandlerTracerError",
  "pub fn spark_core::pipeline::instrument::HandlerTracerError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::pipeline::instrument::HandlerTracerError",
  "pub fn spark_core::pipeline::instrument::HandlerTracerError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::pipeline::instrument::HandlerTracerError",
  "impl core::marker::StructuralPartialEq for spark_core::pipeline::instrument::HandlerTracerError",
  "impl core::marker::Freeze for spark_core::pipeline::instrument::HandlerTracerError",
  "impl core::marker::Send for spark_core::pipeline::instrument::HandlerTracerError",
  "impl core::marker::Sync for spark_core::pipeline::instrument::HandlerTracerError",
  "impl core::marker::Unpin for spark_core::pipeline::instrument::HandlerTracerError",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::pipeline::instrument::HandlerTracerError",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::pipeline::instrument::HandlerTracerError",
  "pub struct spark_core::pipeline::instrument::HandlerSpan",
  "impl spark_core::pipeline::instrument::HandlerSpan",
  "pub fn spark_core::pipeline::instrument::HandlerSpan::from_parts(trace_context: spark_core::observability::trace::TraceContext, guard: core::option::Option<alloc::boxed::Box<dyn spark_core::pipeline::instrument::HandlerSpanGuard>>) -> Self",
  "pub fn spark_core::pipeline::instrument::HandlerSpan::trace_context(&self) -> &spark_core::observability::trace::TraceContext",
  "impl core::fmt::Debug for spark_core::pipeline::instrument::HandlerSpan",
  "pub fn spark_core::pipeline::instrument::HandlerSpan::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::ops::drop::Drop for spark_core::pipeline::instrument::HandlerSpan",
  "pub fn spark_core::pipeline::instrument::HandlerSpan::drop(&mut self)",
  "impl core::marker::Freeze for spark_core::pipeline::instrument::HandlerSpan",
  "impl core::marker::Send for spark_core::pipeline::instrument::HandlerSpan",
  "impl core::marker::Sync for spark_core::pipeline::instrument::HandlerSpan",
  "impl core::marker::Unpin for spark_core::pipeline::instrument::HandlerSpan",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::pipeline::instrument::HandlerSpan",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::pipeline::instrument::HandlerSpan",
  "pub struct spark_core::pipeline::instrument::HandlerSpanParams<'a>",
  "pub spark_core::pipeline::instrument::HandlerSpanParams::descriptor: &'a spark_core::pipeline::middleware::MiddlewareDescriptor",
  "pub spark_core::pipeline::instrument::HandlerSpanParams::direction: spark_core::pipeline::controller::HandlerDirection",
  "pub spark_core::pipeline::instrument::HandlerSpanParams::label: &'a str",
  "impl<'a> spark_core::pipeline::instrument::HandlerSpanParams<'a>",
  "pub fn spark_core::pipeline::instrument::HandlerSpanParams<'a>::new(direction: spark_core::pipeline::controller::HandlerDirection, label: &'a str, descriptor: &'a spark_core::pipeline::middleware::MiddlewareDescriptor) -> Self",
  "impl<'a> core::clone::Clone for spark_core::pipeline::instrument::HandlerSpanParams<'a>",
  "pub fn spark_core::pipeline::instrument::HandlerSpanParams<'a>::clone(&self) -> spark_core::pipeline::instrument::HandlerSpanParams<'a>",
  "impl<'a> core::fmt::Debug for spark_core::pipeline::instrument::HandlerSpanParams<'a>",
  "pub fn spark_core::pipeline::instrument::HandlerSpanParams<'a>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<'a> core::marker::Copy for spark_core::pipeline::instrument::HandlerSpanParams<'a>",
  "impl<'a> core::marker::Freeze for spark_core::pipeline::instrument::HandlerSpanParams<'a>",
  "impl<'a> core::marker::Send for spark_core::pipeline::instrument::HandlerSpanParams<'a>",
  "impl<'a> core::marker::Sync for spark_core::pipeline::instrument::HandlerSpanParams<'a>",
  "impl<'a> core::marker::Unpin for spark_core::pipeline::instrument::HandlerSpanParams<'a>",
  "impl<'a> core::panic::unwind_safe::RefUnwindSafe for spark_core::pipeline::instrument::HandlerSpanParams<'a>",
  "impl<'a> core::panic::unwind_safe::UnwindSafe for spark_core::pipeline::instrument::HandlerSpanParams<'a>",
  "pub struct spark_core::pipeline::instrument::InstrumentedLogger",
  "impl spark_core::pipeline::instrument::InstrumentedLogger",
  "pub fn spark_core::pipeline::instrument::InstrumentedLogger::new(inner: alloc::sync::Arc<dyn spark_core::observability::logging::Logger>, trace_context: spark_core::observability::trace::TraceContext) -> Self",
  "pub fn spark_core::pipeline::instrument::InstrumentedLogger::trace_context(&self) -> &spark_core::observability::trace::TraceContext",
  "impl core::fmt::Debug for spark_core::pipeline::instrument::InstrumentedLogger",
  "pub fn spark_core::pipeline::instrument::InstrumentedLogger::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl spark_core::observability::logging::Logger for spark_core::pipeline::instrument::InstrumentedLogger",
  "pub fn spark_core::pipeline::instrument::InstrumentedLogger::log(&self, record: &spark_core::observability::logging::LogRecord<'_>)",
  "impl core::marker::Freeze for spark_core::pipeline::instrument::InstrumentedLogger",
  "impl core::marker::Send for spark_core::pipeline::instrument::InstrumentedLogger",
  "impl core::marker::Sync for spark_core::pipeline::instrument::InstrumentedLogger",
  "impl core::marker::Unpin for spark_core::pipeline::instrument::InstrumentedLogger",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::pipeline::instrument::InstrumentedLogger",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::pipeline::instrument::InstrumentedLogger",
  "pub trait spark_core::pipeline::instrument::HandlerSpanGuard: core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::pipeline::instrument::HandlerSpanGuard::finish(self: alloc::boxed::Box<Self>)",
  "pub trait spark_core::pipeline::instrument::HandlerSpanTracer: core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::pipeline::instrument::HandlerSpanTracer::start_span(&self, params: &spark_core::pipeline::instrument::HandlerSpanParams<'_>, parent: &spark_core::observability::trace::TraceContext) -> spark_core::pipeline::instrument::HandlerSpan",
  "pub fn spark_core::pipeline::instrument::install_handler_tracer(tracer: alloc::sync::Arc<dyn spark_core::pipeline::instrument::HandlerSpanTracer>) -> core::result::Result<(), spark_core::pipeline::instrument::HandlerTracerError>",
  "pub fn spark_core::pipeline::instrument::uninstall_handler_tracer()",
  "pub mod spark_core::pipeline::middleware",
  "pub struct spark_core::pipeline::middleware::MiddlewareDescriptor",
  "impl spark_core::pipeline::middleware::MiddlewareDescriptor",
  "pub fn spark_core::pipeline::middleware::MiddlewareDescriptor::anonymous(stage: impl core::convert::Into<alloc::borrow::Cow<'static, str>>) -> Self",
  "pub fn spark_core::pipeline::middleware::MiddlewareDescriptor::category(&self) -> &str",
  "pub fn spark_core::pipeline::middleware::MiddlewareDescriptor::name(&self) -> &str",
  "pub fn spark_core::pipeline::middleware::MiddlewareDescriptor::new(name: impl core::convert::Into<alloc::borrow::Cow<'static, str>>, category: impl core::convert::Into<alloc::borrow::Cow<'static, str>>, summary: impl core::convert::Into<alloc::borrow::Cow<'static, str>>) -> Self",
  "pub fn spark_core::pipeline::middleware::MiddlewareDescriptor::summary(&self) -> &str",
  "impl core::clone::Clone for spark_core::pipeline::middleware::MiddlewareDescriptor",
  "pub fn spark_core::pipeline::middleware::MiddlewareDescriptor::clone(&self) -> spark_core::pipeline::middleware::MiddlewareDescriptor",
  "impl core::cmp::Eq for spark_core::pipeline::middleware::MiddlewareDescriptor",
  "impl core::cmp::PartialEq for spark_core::pipeline::middleware::MiddlewareDescriptor",
  "pub fn spark_core::pipeline::middleware::MiddlewareDescriptor::eq(&self, other: &spark_core::pipeline::middleware::MiddlewareDescriptor) -> bool",
  "impl core::fmt::Debug for spark_core::pipeline::middleware::MiddlewareDescriptor",
  "pub fn spark_core::pipeline::middleware::MiddlewareDescriptor::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::pipeline::middleware::MiddlewareDescriptor",
  "impl core::marker::Freeze for spark_core::pipeline::middleware::MiddlewareDescriptor",
  "impl core::marker::Send for spark_core::pipeline::middleware::MiddlewareDescriptor",
  "impl core::marker::Sync for spark_core::pipeline::middleware::MiddlewareDescriptor",
  "impl core::marker::Unpin for spark_core::pipeline::middleware::MiddlewareDescriptor",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::pipeline::middleware::MiddlewareDescriptor",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::pipeline::middleware::MiddlewareDescriptor",
  "pub trait spark_core::pipeline::middleware::ChainBuilder: Sealed",
  "pub fn spark_core::pipeline::middleware::ChainBuilder::register_inbound(&mut self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::InboundHandler>)",
  "pub fn spark_core::pipeline::middleware::ChainBuilder::register_inbound_static(&mut self, label: &str, handler: &'static dyn spark_core::pipeline::handler::InboundHandler)",
  "pub fn spark_core::pipeline::middleware::ChainBuilder::register_outbound(&mut self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::OutboundHandler>)",
  "pub fn spark_core::pipeline::middleware::ChainBuilder::register_outbound_static(&mut self, label: &str, handler: &'static dyn spark_core::pipeline::handler::OutboundHandler)",
  "impl spark_core::pipeline::middleware::ChainBuilder for dyn spark_core::pipeline::controller::Controller<HandleId = spark_core::pipeline::controller::ControllerHandleId>",
  "pub fn dyn spark_core::pipeline::controller::Controller<HandleId = spark_core::pipeline::controller::ControllerHandleId>::register_inbound(&mut self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::InboundHandler>)",
  "pub fn dyn spark_core::pipeline::controller::Controller<HandleId = spark_core::pipeline::controller::ControllerHandleId>::register_inbound_static(&mut self, label: &str, handler: &'static dyn spark_core::pipeline::handler::InboundHandler)",
  "pub fn dyn spark_core::pipeline::controller::Controller<HandleId = spark_core::pipeline::controller::ControllerHandleId>::register_outbound(&mut self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::OutboundHandler>)",
  "pub fn dyn spark_core::pipeline::controller::Controller<HandleId = spark_core::pipeline::controller::ControllerHandleId>::register_outbound_static(&mut self, label: &str, handler: &'static dyn spark_core::pipeline::handler::OutboundHandler)",
  "pub trait spark_core::pipeline::middleware::Middleware: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::pipeline::middleware::Middleware::configure(&self, chain: &mut dyn spark_core::pipeline::middleware::ChainBuilder, services: &spark_core::CoreServices) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::pipeline::middleware::Middleware::descriptor(&self) -> spark_core::pipeline::middleware::MiddlewareDescriptor",
  "pub mod spark_core::pipeline::traits",
  "pub mod spark_core::pipeline::traits::generic",
  "pub trait spark_core::pipeline::traits::generic::ControllerFactory: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub type spark_core::pipeline::traits::generic::ControllerFactory::Controller: spark_core::pipeline::controller::Controller<HandleId = spark_core::pipeline::controller::ControllerHandleId>",
  "pub fn spark_core::pipeline::traits::generic::ControllerFactory::build(&self, core_services: &spark_core::CoreServices) -> core::result::Result<Self::Controller, spark_core::error::CoreError>",
  "impl spark_core::pipeline::traits::generic::ControllerFactory for spark_core::pipeline::traits::object::DynControllerFactoryAdapter",
  "pub type spark_core::pipeline::traits::object::DynControllerFactoryAdapter::Controller = spark_core::pipeline::traits::object::ControllerHandle",
  "pub fn spark_core::pipeline::traits::object::DynControllerFactoryAdapter::build(&self, core_services: &spark_core::CoreServices) -> core::result::Result<Self::Controller, spark_core::error::CoreError>",
  "pub mod spark_core::pipeline::traits::object",
  "pub struct spark_core::pipeline::traits::object::ControllerFactoryObject<F> where F: spark_core::pipeline::traits::generic::ControllerFactory",
  "impl<F> spark_core::pipeline::traits::object::ControllerFactoryObject<F> where F: spark_core::pipeline::traits::generic::ControllerFactory",
  "pub fn spark_core::pipeline::traits::object::ControllerFactoryObject<F>::into_inner(self) -> F",
  "pub fn spark_core::pipeline::traits::object::ControllerFactoryObject<F>::new(inner: F) -> Self",
  "impl<F> spark_core::pipeline::traits::object::DynControllerFactory for spark_core::pipeline::traits::object::ControllerFactoryObject<F> where F: spark_core::pipeline::traits::generic::ControllerFactory",
  "pub fn spark_core::pipeline::traits::object::ControllerFactoryObject<F>::build_dyn(&self, core_services: &spark_core::CoreServices) -> core::result::Result<spark_core::pipeline::traits::object::ControllerHandle, spark_core::error::CoreError>",
  "impl<F> core::marker::Freeze for spark_core::pipeline::traits::object::ControllerFactoryObject<F> where F: core::marker::Freeze",
  "impl<F> core::marker::Send for spark_core::pipeline::traits::object::ControllerFactoryObject<F>",
  "impl<F> core::marker::Sync for spark_core::pipeline::traits::object::ControllerFactoryObject<F>",
  "impl<F> core::marker::Unpin for spark_core::pipeline::traits::object::ControllerFactoryObject<F> where F: core::marker::Unpin",
  "impl<F> core::panic::unwind_safe::RefUnwindSafe for spark_core::pipeline::traits::object::ControllerFactoryObject<F> where F: core::panic::unwind_safe::RefUnwindSafe",
  "impl<F> core::panic::unwind_safe::UnwindSafe for spark_core::pipeline::traits::object::ControllerFactoryObject<F> where F: core::panic::unwind_safe::UnwindSafe",
  "pub struct spark_core::pipeline::traits::object::ControllerHandle",
  "impl spark_core::pipeline::traits::object::ControllerHandle",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::as_dyn(&self) -> &dyn spark_core::pipeline::controller::Controller<HandleId = spark_core::pipeline::controller::ControllerHandleId>",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::from_controller<C>(controller: C) -> Self where C: spark_core::pipeline::controller::Controller<HandleId = spark_core::pipeline::controller::ControllerHandleId>",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::new(inner: alloc::sync::Arc<dyn spark_core::pipeline::controller::Controller<HandleId = spark_core::pipeline::controller::ControllerHandleId>>) -> Self",
  "impl core::clone::Clone for spark_core::pipeline::traits::object::ControllerHandle",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::clone(&self) -> spark_core::pipeline::traits::object::ControllerHandle",
  "impl spark_core::pipeline::controller::Controller for spark_core::pipeline::traits::object::ControllerHandle",
  "pub type spark_core::pipeline::traits::object::ControllerHandle::HandleId = spark_core::pipeline::controller::ControllerHandleId",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::add_handler_after(&self, anchor: Self::HandleId, label: &str, handler: alloc::sync::Arc<dyn spark_core::pipeline::controller::Handler>) -> Self::HandleId",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_channel_activated(&self)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_channel_deactivated(&self)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_exception(&self, error: spark_core::error::CoreError)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_read(&self, msg: spark_core::buffer::message::PipelineMessage)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_read_completed(&self)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_user_event(&self, event: spark_core::observability::events::CoreUserEvent)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_writability_changed(&self, is_writable: bool)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::epoch(&self) -> u64",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::install_middleware(&self, middleware: &dyn spark_core::pipeline::middleware::Middleware, services: &spark_core::CoreServices) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::register_inbound_handler(&self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::InboundHandler>)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::register_inbound_handler_static(&self, label: &str, handler: &'static dyn spark_core::pipeline::handler::InboundHandler)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::register_outbound_handler(&self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::OutboundHandler>)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::register_outbound_handler_static(&self, label: &str, handler: &'static dyn spark_core::pipeline::handler::OutboundHandler)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::registry(&self) -> &dyn spark_core::pipeline::controller::HandlerRegistry",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::remove_handler(&self, handle: Self::HandleId) -> bool",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::replace_handler(&self, handle: Self::HandleId, handler: alloc::sync::Arc<dyn spark_core::pipeline::controller::Handler>) -> bool",
  "impl core::marker::Freeze for spark_core::pipeline::traits::object::ControllerHandle",
  "impl core::marker::Send for spark_core::pipeline::traits::object::ControllerHandle",
  "impl core::marker::Sync for spark_core::pipeline::traits::object::ControllerHandle",
  "impl core::marker::Unpin for spark_core::pipeline::traits::object::ControllerHandle",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::pipeline::traits::object::ControllerHandle",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::pipeline::traits::object::ControllerHandle",
  "pub struct spark_core::pipeline::traits::object::DynControllerFactoryAdapter",
  "impl spark_core::pipeline::traits::object::DynControllerFactoryAdapter",
  "pub fn spark_core::pipeline::traits::object::DynControllerFactoryAdapter::new(inner: alloc::sync::Arc<dyn spark_core::pipeline::traits::object::DynControllerFactory>) -> Self",
  "impl spark_core::pipeline::traits::generic::ControllerFactory for spark_core::pipeline::traits::object::DynControllerFactoryAdapter",
  "pub type spark_core::pipeline::traits::object::DynControllerFactoryAdapter::Controller = spark_core::pipeline::traits::object::ControllerHandle",
  "pub fn spark_core::pipeline::traits::object::DynControllerFactoryAdapter::build(&self, core_services: &spark_core::CoreServices) -> core::result::Result<Self::Controller, spark_core::error::CoreError>",
  "impl core::marker::Freeze for spark_core::pipeline::traits::object::DynControllerFactoryAdapter",
  "impl core::marker::Send for spark_core::pipeline::traits::object::DynControllerFactoryAdapter",
  "impl core::marker::Sync for spark_core::pipeline::traits::object::DynControllerFactoryAdapter",
  "impl core::marker::Unpin for spark_core::pipeline::traits::object::DynControllerFactoryAdapter",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::pipeline::traits::object::DynControllerFactoryAdapter",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::pipeline::traits::object::DynControllerFactoryAdapter",
  "pub trait spark_core::pipeline::traits::object::DynControllerFactory: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::pipeline::traits::object::DynControllerFactory::build_dyn(&self, core_services: &spark_core::CoreServices) -> core::result::Result<spark_core::pipeline::traits::object::ControllerHandle, spark_core::error::CoreError>",
  "impl<F> spark_core::pipeline::traits::object::DynControllerFactory for spark_core::pipeline::traits::object::ControllerFactoryObject<F> where F: spark_core::pipeline::traits::generic::ControllerFactory",
  "pub fn spark_core::pipeline::traits::object::ControllerFactoryObject<F>::build_dyn(&self, core_services: &spark_core::CoreServices) -> core::result::Result<spark_core::pipeline::traits::object::ControllerHandle, spark_core::error::CoreError>",
  "pub struct spark_core::pipeline::traits::ControllerFactoryObject<F> where F: spark_core::pipeline::traits::generic::ControllerFactory",
  "impl<F> spark_core::pipeline::traits::object::ControllerFactoryObject<F> where F: spark_core::pipeline::traits::generic::ControllerFactory",
  "pub fn spark_core::pipeline::traits::object::ControllerFactoryObject<F>::into_inner(self) -> F",
  "pub fn spark_core::pipeline::traits::object::ControllerFactoryObject<F>::new(inner: F) -> Self",
  "impl<F> spark_core::pipeline::traits::object::DynControllerFactory for spark_core::pipeline::traits::object::ControllerFactoryObject<F> where F: spark_core::pipeline::traits::generic::ControllerFactory",
  "pub fn spark_core::pipeline::traits::object::ControllerFactoryObject<F>::build_dyn(&self, core_services: &spark_core::CoreServices) -> core::result::Result<spark_core::pipeline::traits::object::ControllerHandle, spark_core::error::CoreError>",
  "impl<F> core::marker::Freeze for spark_core::pipeline::traits::object::ControllerFactoryObject<F> where F: core::marker::Freeze",
  "impl<F> core::marker::Send for spark_core::pipeline::traits::object::ControllerFactoryObject<F>",
  "impl<F> core::marker::Sync for spark_core::pipeline::traits::object::ControllerFactoryObject<F>",
  "impl<F> core::marker::Unpin for spark_core::pipeline::traits::object::ControllerFactoryObject<F> where F: core::marker::Unpin",
  "impl<F> core::panic::unwind_safe::RefUnwindSafe for spark_core::pipeline::traits::object::ControllerFactoryObject<F> where F: core::panic::unwind_safe::RefUnwindSafe",
  "impl<F> core::panic::unwind_safe::UnwindSafe for spark_core::pipeline::traits::object::ControllerFactoryObject<F> where F: core::panic::unwind_safe::UnwindSafe",
  "pub struct spark_core::pipeline::traits::ControllerHandle",
  "impl spark_core::pipeline::traits::object::ControllerHandle",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::as_dyn(&self) -> &dyn spark_core::pipeline::controller::Controller<HandleId = spark_core::pipeline::controller::ControllerHandleId>",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::from_controller<C>(controller: C) -> Self where C: spark_core::pipeline::controller::Controller<HandleId = spark_core::pipeline::controller::ControllerHandleId>",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::new(inner: alloc::sync::Arc<dyn spark_core::pipeline::controller::Controller<HandleId = spark_core::pipeline::controller::ControllerHandleId>>) -> Self",
  "impl core::clone::Clone for spark_core::pipeline::traits::object::ControllerHandle",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::clone(&self) -> spark_core::pipeline::traits::object::ControllerHandle",
  "impl spark_core::pipeline::controller::Controller for spark_core::pipeline::traits::object::ControllerHandle",
  "pub type spark_core::pipeline::traits::object::ControllerHandle::HandleId = spark_core::pipeline::controller::ControllerHandleId",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::add_handler_after(&self, anchor: Self::HandleId, label: &str, handler: alloc::sync::Arc<dyn spark_core::pipeline::controller::Handler>) -> Self::HandleId",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_channel_activated(&self)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_channel_deactivated(&self)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_exception(&self, error: spark_core::error::CoreError)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_read(&self, msg: spark_core::buffer::message::PipelineMessage)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_read_completed(&self)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_user_event(&self, event: spark_core::observability::events::CoreUserEvent)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_writability_changed(&self, is_writable: bool)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::epoch(&self) -> u64",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::install_middleware(&self, middleware: &dyn spark_core::pipeline::middleware::Middleware, services: &spark_core::CoreServices) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::register_inbound_handler(&self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::InboundHandler>)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::register_inbound_handler_static(&self, label: &str, handler: &'static dyn spark_core::pipeline::handler::InboundHandler)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::register_outbound_handler(&self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::OutboundHandler>)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::register_outbound_handler_static(&self, label: &str, handler: &'static dyn spark_core::pipeline::handler::OutboundHandler)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::registry(&self) -> &dyn spark_core::pipeline::controller::HandlerRegistry",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::remove_handler(&self, handle: Self::HandleId) -> bool",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::replace_handler(&self, handle: Self::HandleId, handler: alloc::sync::Arc<dyn spark_core::pipeline::controller::Handler>) -> bool",
  "impl core::marker::Freeze for spark_core::pipeline::traits::object::ControllerHandle",
  "impl core::marker::Send for spark_core::pipeline::traits::object::ControllerHandle",
  "impl core::marker::Sync for spark_core::pipeline::traits::object::ControllerHandle",
  "impl core::marker::Unpin for spark_core::pipeline::traits::object::ControllerHandle",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::pipeline::traits::object::ControllerHandle",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::pipeline::traits::object::ControllerHandle",
  "pub struct spark_core::pipeline::traits::DynControllerFactoryAdapter",
  "impl spark_core::pipeline::traits::object::DynControllerFactoryAdapter",
  "pub fn spark_core::pipeline::traits::object::DynControllerFactoryAdapter::new(inner: alloc::sync::Arc<dyn spark_core::pipeline::traits::object::DynControllerFactory>) -> Self",
  "impl spark_core::pipeline::traits::generic::ControllerFactory for spark_core::pipeline::traits::object::DynControllerFactoryAdapter",
  "pub type spark_core::pipeline::traits::object::DynControllerFactoryAdapter::Controller = spark_core::pipeline::traits::object::ControllerHandle",
  "pub fn spark_core::pipeline::traits::object::DynControllerFactoryAdapter::build(&self, core_services: &spark_core::CoreServices) -> core::result::Result<Self::Controller, spark_core::error::CoreError>",
  "impl core::marker::Freeze for spark_core::pipeline::traits::object::DynControllerFactoryAdapter",
  "impl core::marker::Send for spark_core::pipeline::traits::object::DynControllerFactoryAdapter",
  "impl core::marker::Sync for spark_core::pipeline::traits::object::DynControllerFactoryAdapter",
  "impl core::marker::Unpin for spark_core::pipeline::traits::object::DynControllerFactoryAdapter",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::pipeline::traits::object::DynControllerFactoryAdapter",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::pipeline::traits::object::DynControllerFactoryAdapter",
  "pub trait spark_core::pipeline::traits::ControllerFactory: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub type spark_core::pipeline::traits::ControllerFactory::Controller: spark_core::pipeline::controller::Controller<HandleId = spark_core::pipeline::controller::ControllerHandleId>",
  "pub fn spark_core::pipeline::traits::ControllerFactory::build(&self, core_services: &spark_core::CoreServices) -> core::result::Result<Self::Controller, spark_core::error::CoreError>",
  "impl spark_core::pipeline::traits::generic::ControllerFactory for spark_core::pipeline::traits::object::DynControllerFactoryAdapter",
  "pub type spark_core::pipeline::traits::object::DynControllerFactoryAdapter::Controller = spark_core::pipeline::traits::object::ControllerHandle",
  "pub fn spark_core::pipeline::traits::object::DynControllerFactoryAdapter::build(&self, core_services: &spark_core::CoreServices) -> core::result::Result<Self::Controller, spark_core::error::CoreError>",
  "pub trait spark_core::pipeline::traits::DynControllerFactory: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::pipeline::traits::DynControllerFactory::build_dyn(&self, core_services: &spark_core::CoreServices) -> core::result::Result<spark_core::pipeline::traits::object::ControllerHandle, spark_core::error::CoreError>",
  "impl<F> spark_core::pipeline::traits::object::DynControllerFactory for spark_core::pipeline::traits::object::ControllerFactoryObject<F> where F: spark_core::pipeline::traits::generic::ControllerFactory",
  "pub fn spark_core::pipeline::traits::object::ControllerFactoryObject<F>::build_dyn(&self, core_services: &spark_core::CoreServices) -> core::result::Result<spark_core::pipeline::traits::object::ControllerHandle, spark_core::error::CoreError>",
  "#[non_exhaustive] pub enum spark_core::pipeline::ChannelState",
  "pub spark_core::pipeline::ChannelState::Active",
  "pub spark_core::pipeline::ChannelState::Closed",
  "pub spark_core::pipeline::ChannelState::Draining",
  "pub spark_core::pipeline::ChannelState::Initialized",
  "impl core::clone::Clone for spark_core::pipeline::channel::ChannelState",
  "pub fn spark_core::pipeline::channel::ChannelState::clone(&self) -> spark_core::pipeline::channel::ChannelState",
  "impl core::cmp::Eq for spark_core::pipeline::channel::ChannelState",
  "impl core::cmp::Ord for spark_core::pipeline::channel::ChannelState",
  "pub fn spark_core::pipeline::channel::ChannelState::cmp(&self, other: &spark_core::pipeline::channel::ChannelState) -> core::cmp::Ordering",
  "impl core::cmp::PartialEq for spark_core::pipeline::channel::ChannelState",
  "pub fn spark_core::pipeline::channel::ChannelState::eq(&self, other: &spark_core::pipeline::channel::ChannelState) -> bool",
  "impl core::cmp::PartialOrd for spark_core::pipeline::channel::ChannelState",
  "pub fn spark_core::pipeline::channel::ChannelState::partial_cmp(&self, other: &spark_core::pipeline::channel::ChannelState) -> core::option::Option<core::cmp::Ordering>",
  "impl core::fmt::Debug for spark_core::pipeline::channel::ChannelState",
  "pub fn spark_core::pipeline::channel::ChannelState::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::pipeline::channel::ChannelState",
  "impl core::marker::StructuralPartialEq for spark_core::pipeline::channel::ChannelState",
  "impl core::marker::Freeze for spark_core::pipeline::channel::ChannelState",
  "impl core::marker::Send for spark_core::pipeline::channel::ChannelState",
  "impl core::marker::Sync for spark_core::pipeline::channel::ChannelState",
  "impl core::marker::Unpin for spark_core::pipeline::channel::ChannelState",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::pipeline::channel::ChannelState",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::pipeline::channel::ChannelState",
  "#[non_exhaustive] pub enum spark_core::pipeline::ControllerEventKind",
  "pub spark_core::pipeline::ControllerEventKind::ChannelActivated",
  "pub spark_core::pipeline::ControllerEventKind::ChannelDeactivated",
  "pub spark_core::pipeline::ControllerEventKind::ExceptionRaised",
  "pub spark_core::pipeline::ControllerEventKind::ReadCompleted",
  "pub spark_core::pipeline::ControllerEventKind::ReadDispatched",
  "pub spark_core::pipeline::ControllerEventKind::UserEventDispatched",
  "pub spark_core::pipeline::ControllerEventKind::WritabilityChanged",
  "impl core::clone::Clone for spark_core::pipeline::controller::ControllerEventKind",
  "pub fn spark_core::pipeline::controller::ControllerEventKind::clone(&self) -> spark_core::pipeline::controller::ControllerEventKind",
  "impl core::cmp::Eq for spark_core::pipeline::controller::ControllerEventKind",
  "impl core::cmp::PartialEq for spark_core::pipeline::controller::ControllerEventKind",
  "pub fn spark_core::pipeline::controller::ControllerEventKind::eq(&self, other: &spark_core::pipeline::controller::ControllerEventKind) -> bool",
  "impl core::fmt::Debug for spark_core::pipeline::controller::ControllerEventKind",
  "pub fn spark_core::pipeline::controller::ControllerEventKind::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::pipeline::controller::ControllerEventKind",
  "impl core::marker::StructuralPartialEq for spark_core::pipeline::controller::ControllerEventKind",
  "impl core::marker::Freeze for spark_core::pipeline::controller::ControllerEventKind",
  "impl core::marker::Send for spark_core::pipeline::controller::ControllerEventKind",
  "impl core::marker::Sync for spark_core::pipeline::controller::ControllerEventKind",
  "impl core::marker::Unpin for spark_core::pipeline::controller::ControllerEventKind",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::pipeline::controller::ControllerEventKind",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::pipeline::controller::ControllerEventKind",
  "#[non_exhaustive] pub enum spark_core::pipeline::WriteSignal",
  "pub spark_core::pipeline::WriteSignal::Accepted",
  "pub spark_core::pipeline::WriteSignal::AcceptedAndFlushed",
  "pub spark_core::pipeline::WriteSignal::FlowControlApplied",
  "impl core::clone::Clone for spark_core::pipeline::channel::WriteSignal",
  "pub fn spark_core::pipeline::channel::WriteSignal::clone(&self) -> spark_core::pipeline::channel::WriteSignal",
  "impl core::cmp::Eq for spark_core::pipeline::channel::WriteSignal",
  "impl core::cmp::PartialEq for spark_core::pipeline::channel::WriteSignal",
  "pub fn spark_core::pipeline::channel::WriteSignal::eq(&self, other: &spark_core::pipeline::channel::WriteSignal) -> bool",
  "impl core::fmt::Debug for spark_core::pipeline::channel::WriteSignal",
  "pub fn spark_core::pipeline::channel::WriteSignal::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::pipeline::channel::WriteSignal",
  "impl core::marker::StructuralPartialEq for spark_core::pipeline::channel::WriteSignal",
  "impl core::marker::Freeze for spark_core::pipeline::channel::WriteSignal",
  "impl core::marker::Send for spark_core::pipeline::channel::WriteSignal",
  "impl core::marker::Sync for spark_core::pipeline::channel::WriteSignal",
  "impl core::marker::Unpin for spark_core::pipeline::channel::WriteSignal",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::pipeline::channel::WriteSignal",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::pipeline::channel::WriteSignal",
  "pub struct spark_core::pipeline::ControllerEvent",
  "impl spark_core::pipeline::controller::ControllerEvent",
  "pub fn spark_core::pipeline::controller::ControllerEvent::kind(&self) -> spark_core::pipeline::controller::ControllerEventKind",
  "pub fn spark_core::pipeline::controller::ControllerEvent::new(kind: spark_core::pipeline::controller::ControllerEventKind, source: impl core::convert::Into<alloc::borrow::Cow<'static, str>>, note: core::option::Option<impl core::convert::Into<alloc::borrow::Cow<'static, str>>>) -> Self",
  "pub fn spark_core::pipeline::controller::ControllerEvent::note(&self) -> core::option::Option<&str>",
  "pub fn spark_core::pipeline::controller::ControllerEvent::source(&self) -> &str",
  "impl core::clone::Clone for spark_core::pipeline::controller::ControllerEvent",
  "pub fn spark_core::pipeline::controller::ControllerEvent::clone(&self) -> spark_core::pipeline::controller::ControllerEvent",
  "impl core::cmp::Eq for spark_core::pipeline::controller::ControllerEvent",
  "impl core::cmp::PartialEq for spark_core::pipeline::controller::ControllerEvent",
  "pub fn spark_core::pipeline::controller::ControllerEvent::eq(&self, other: &spark_core::pipeline::controller::ControllerEvent) -> bool",
  "impl core::fmt::Debug for spark_core::pipeline::controller::ControllerEvent",
  "pub fn spark_core::pipeline::controller::ControllerEvent::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::pipeline::controller::ControllerEvent",
  "impl core::marker::Freeze for spark_core::pipeline::controller::ControllerEvent",
  "impl core::marker::Send for spark_core::pipeline::controller::ControllerEvent",
  "impl core::marker::Sync for spark_core::pipeline::controller::ControllerEvent",
  "impl core::marker::Unpin for spark_core::pipeline::controller::ControllerEvent",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::pipeline::controller::ControllerEvent",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::pipeline::controller::ControllerEvent",
  "pub struct spark_core::pipeline::ControllerFactoryObject<F> where F: spark_core::pipeline::traits::generic::ControllerFactory",
  "impl<F> spark_core::pipeline::traits::object::ControllerFactoryObject<F> where F: spark_core::pipeline::traits::generic::ControllerFactory",
  "pub fn spark_core::pipeline::traits::object::ControllerFactoryObject<F>::into_inner(self) -> F",
  "pub fn spark_core::pipeline::traits::object::ControllerFactoryObject<F>::new(inner: F) -> Self",
  "impl<F> spark_core::pipeline::traits::object::DynControllerFactory for spark_core::pipeline::traits::object::ControllerFactoryObject<F> where F: spark_core::pipeline::traits::generic::ControllerFactory",
  "pub fn spark_core::pipeline::traits::object::ControllerFactoryObject<F>::build_dyn(&self, core_services: &spark_core::CoreServices) -> core::result::Result<spark_core::pipeline::traits::object::ControllerHandle, spark_core::error::CoreError>",
  "impl<F> core::marker::Freeze for spark_core::pipeline::traits::object::ControllerFactoryObject<F> where F: core::marker::Freeze",
  "impl<F> core::marker::Send for spark_core::pipeline::traits::object::ControllerFactoryObject<F>",
  "impl<F> core::marker::Sync for spark_core::pipeline::traits::object::ControllerFactoryObject<F>",
  "impl<F> core::marker::Unpin for spark_core::pipeline::traits::object::ControllerFactoryObject<F> where F: core::marker::Unpin",
  "impl<F> core::panic::unwind_safe::RefUnwindSafe for spark_core::pipeline::traits::object::ControllerFactoryObject<F> where F: core::panic::unwind_safe::RefUnwindSafe",
  "impl<F> core::panic::unwind_safe::UnwindSafe for spark_core::pipeline::traits::object::ControllerFactoryObject<F> where F: core::panic::unwind_safe::UnwindSafe",
  "pub struct spark_core::pipeline::ControllerHandle",
  "impl spark_core::pipeline::traits::object::ControllerHandle",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::as_dyn(&self) -> &dyn spark_core::pipeline::controller::Controller<HandleId = spark_core::pipeline::controller::ControllerHandleId>",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::from_controller<C>(controller: C) -> Self where C: spark_core::pipeline::controller::Controller<HandleId = spark_core::pipeline::controller::ControllerHandleId>",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::new(inner: alloc::sync::Arc<dyn spark_core::pipeline::controller::Controller<HandleId = spark_core::pipeline::controller::ControllerHandleId>>) -> Self",
  "impl core::clone::Clone for spark_core::pipeline::traits::object::ControllerHandle",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::clone(&self) -> spark_core::pipeline::traits::object::ControllerHandle",
  "impl spark_core::pipeline::controller::Controller for spark_core::pipeline::traits::object::ControllerHandle",
  "pub type spark_core::pipeline::traits::object::ControllerHandle::HandleId = spark_core::pipeline::controller::ControllerHandleId",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::add_handler_after(&self, anchor: Self::HandleId, label: &str, handler: alloc::sync::Arc<dyn spark_core::pipeline::controller::Handler>) -> Self::HandleId",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_channel_activated(&self)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_channel_deactivated(&self)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_exception(&self, error: spark_core::error::CoreError)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_read(&self, msg: spark_core::buffer::message::PipelineMessage)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_read_completed(&self)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_user_event(&self, event: spark_core::observability::events::CoreUserEvent)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_writability_changed(&self, is_writable: bool)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::epoch(&self) -> u64",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::install_middleware(&self, middleware: &dyn spark_core::pipeline::middleware::Middleware, services: &spark_core::CoreServices) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::register_inbound_handler(&self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::InboundHandler>)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::register_inbound_handler_static(&self, label: &str, handler: &'static dyn spark_core::pipeline::handler::InboundHandler)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::register_outbound_handler(&self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::OutboundHandler>)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::register_outbound_handler_static(&self, label: &str, handler: &'static dyn spark_core::pipeline::handler::OutboundHandler)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::registry(&self) -> &dyn spark_core::pipeline::controller::HandlerRegistry",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::remove_handler(&self, handle: Self::HandleId) -> bool",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::replace_handler(&self, handle: Self::HandleId, handler: alloc::sync::Arc<dyn spark_core::pipeline::controller::Handler>) -> bool",
  "impl core::marker::Freeze for spark_core::pipeline::traits::object::ControllerHandle",
  "impl core::marker::Send for spark_core::pipeline::traits::object::ControllerHandle",
  "impl core::marker::Sync for spark_core::pipeline::traits::object::ControllerHandle",
  "impl core::marker::Unpin for spark_core::pipeline::traits::object::ControllerHandle",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::pipeline::traits::object::ControllerHandle",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::pipeline::traits::object::ControllerHandle",
  "pub struct spark_core::pipeline::DynControllerFactoryAdapter",
  "impl spark_core::pipeline::traits::object::DynControllerFactoryAdapter",
  "pub fn spark_core::pipeline::traits::object::DynControllerFactoryAdapter::new(inner: alloc::sync::Arc<dyn spark_core::pipeline::traits::object::DynControllerFactory>) -> Self",
  "impl spark_core::pipeline::traits::generic::ControllerFactory for spark_core::pipeline::traits::object::DynControllerFactoryAdapter",
  "pub type spark_core::pipeline::traits::object::DynControllerFactoryAdapter::Controller = spark_core::pipeline::traits::object::ControllerHandle",
  "pub fn spark_core::pipeline::traits::object::DynControllerFactoryAdapter::build(&self, core_services: &spark_core::CoreServices) -> core::result::Result<Self::Controller, spark_core::error::CoreError>",
  "impl core::marker::Freeze for spark_core::pipeline::traits::object::DynControllerFactoryAdapter",
  "impl core::marker::Send for spark_core::pipeline::traits::object::DynControllerFactoryAdapter",
  "impl core::marker::Sync for spark_core::pipeline::traits::object::DynControllerFactoryAdapter",
  "impl core::marker::Unpin for spark_core::pipeline::traits::object::DynControllerFactoryAdapter",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::pipeline::traits::object::DynControllerFactoryAdapter",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::pipeline::traits::object::DynControllerFactoryAdapter",
  "pub struct spark_core::pipeline::ExceptionAutoResponder",
  "impl spark_core::pipeline::default_handlers::ExceptionAutoResponder",
  "pub const fn spark_core::pipeline::default_handlers::ExceptionAutoResponder::new() -> Self",
  "impl core::default::Default for spark_core::pipeline::default_handlers::ExceptionAutoResponder",
  "pub fn spark_core::pipeline::default_handlers::ExceptionAutoResponder::default() -> spark_core::pipeline::default_handlers::ExceptionAutoResponder",
  "impl core::fmt::Debug for spark_core::pipeline::default_handlers::ExceptionAutoResponder",
  "pub fn spark_core::pipeline::default_handlers::ExceptionAutoResponder::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl spark_core::pipeline::handler::InboundHandler for spark_core::pipeline::default_handlers::ExceptionAutoResponder",
  "pub fn spark_core::pipeline::default_handlers::ExceptionAutoResponder::on_channel_active(&self, _ctx: &dyn spark_core::pipeline::context::Context)",
  "pub fn spark_core::pipeline::default_handlers::ExceptionAutoResponder::on_channel_inactive(&self, _ctx: &dyn spark_core::pipeline::context::Context)",
  "pub fn spark_core::pipeline::default_handlers::ExceptionAutoResponder::on_exception_caught(&self, ctx: &dyn spark_core::pipeline::context::Context, error: spark_core::error::CoreError)",
  "pub fn spark_core::pipeline::default_handlers::ExceptionAutoResponder::on_read(&self, _ctx: &dyn spark_core::pipeline::context::Context, _msg: spark_core::buffer::message::PipelineMessage)",
  "pub fn spark_core::pipeline::default_handlers::ExceptionAutoResponder::on_read_complete(&self, _ctx: &dyn spark_core::pipeline::context::Context)",
  "pub fn spark_core::pipeline::default_handlers::ExceptionAutoResponder::on_user_event(&self, _ctx: &dyn spark_core::pipeline::context::Context, _event: spark_core::observability::events::CoreUserEvent)",
  "pub fn spark_core::pipeline::default_handlers::ExceptionAutoResponder::on_writability_changed(&self, _ctx: &dyn spark_core::pipeline::context::Context, _is_writable: bool)",
  "impl core::marker::Freeze for spark_core::pipeline::default_handlers::ExceptionAutoResponder",
  "impl core::marker::Send for spark_core::pipeline::default_handlers::ExceptionAutoResponder",
  "impl core::marker::Sync for spark_core::pipeline::default_handlers::ExceptionAutoResponder",
  "impl core::marker::Unpin for spark_core::pipeline::default_handlers::ExceptionAutoResponder",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::pipeline::default_handlers::ExceptionAutoResponder",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::pipeline::default_handlers::ExceptionAutoResponder",
  "pub struct spark_core::pipeline::MiddlewareDescriptor",
  "impl spark_core::pipeline::middleware::MiddlewareDescriptor",
  "pub fn spark_core::pipeline::middleware::MiddlewareDescriptor::anonymous(stage: impl core::convert::Into<alloc::borrow::Cow<'static, str>>) -> Self",
  "pub fn spark_core::pipeline::middleware::MiddlewareDescriptor::category(&self) -> &str",
  "pub fn spark_core::pipeline::middleware::MiddlewareDescriptor::name(&self) -> &str",
  "pub fn spark_core::pipeline::middleware::MiddlewareDescriptor::new(name: impl core::convert::Into<alloc::borrow::Cow<'static, str>>, category: impl core::convert::Into<alloc::borrow::Cow<'static, str>>, summary: impl core::convert::Into<alloc::borrow::Cow<'static, str>>) -> Self",
  "pub fn spark_core::pipeline::middleware::MiddlewareDescriptor::summary(&self) -> &str",
  "impl core::clone::Clone for spark_core::pipeline::middleware::MiddlewareDescriptor",
  "pub fn spark_core::pipeline::middleware::MiddlewareDescriptor::clone(&self) -> spark_core::pipeline::middleware::MiddlewareDescriptor",
  "impl core::cmp::Eq for spark_core::pipeline::middleware::MiddlewareDescriptor",
  "impl core::cmp::PartialEq for spark_core::pipeline::middleware::MiddlewareDescriptor",
  "pub fn spark_core::pipeline::middleware::MiddlewareDescriptor::eq(&self, other: &spark_core::pipeline::middleware::MiddlewareDescriptor) -> bool",
  "impl core::fmt::Debug for spark_core::pipeline::middleware::MiddlewareDescriptor",
  "pub fn spark_core::pipeline::middleware::MiddlewareDescriptor::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::pipeline::middleware::MiddlewareDescriptor",
  "impl core::marker::Freeze for spark_core::pipeline::middleware::MiddlewareDescriptor",
  "impl core::marker::Send for spark_core::pipeline::middleware::MiddlewareDescriptor",
  "impl core::marker::Sync for spark_core::pipeline::middleware::MiddlewareDescriptor",
  "impl core::marker::Unpin for spark_core::pipeline::middleware::MiddlewareDescriptor",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::pipeline::middleware::MiddlewareDescriptor",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::pipeline::middleware::MiddlewareDescriptor",
  "pub struct spark_core::pipeline::ReadyStateEvent",
  "impl spark_core::pipeline::default_handlers::ReadyStateEvent",
  "pub fn spark_core::pipeline::default_handlers::ReadyStateEvent::new(state: spark_core::status::ready::ReadyState) -> Self",
  "pub fn spark_core::pipeline::default_handlers::ReadyStateEvent::state(&self) -> &spark_core::status::ready::ReadyState",
  "impl core::clone::Clone for spark_core::pipeline::default_handlers::ReadyStateEvent",
  "pub fn spark_core::pipeline::default_handlers::ReadyStateEvent::clone(&self) -> spark_core::pipeline::default_handlers::ReadyStateEvent",
  "impl core::fmt::Debug for spark_core::pipeline::default_handlers::ReadyStateEvent",
  "pub fn spark_core::pipeline::default_handlers::ReadyStateEvent::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::pipeline::default_handlers::ReadyStateEvent",
  "impl core::marker::Send for spark_core::pipeline::default_handlers::ReadyStateEvent",
  "impl core::marker::Sync for spark_core::pipeline::default_handlers::ReadyStateEvent",
  "impl core::marker::Unpin for spark_core::pipeline::default_handlers::ReadyStateEvent",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::pipeline::default_handlers::ReadyStateEvent",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::pipeline::default_handlers::ReadyStateEvent",
  "pub trait spark_core::pipeline::ChainBuilder: Sealed",
  "pub fn spark_core::pipeline::ChainBuilder::register_inbound(&mut self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::InboundHandler>)",
  "pub fn spark_core::pipeline::ChainBuilder::register_inbound_static(&mut self, label: &str, handler: &'static dyn spark_core::pipeline::handler::InboundHandler)",
  "pub fn spark_core::pipeline::ChainBuilder::register_outbound(&mut self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::OutboundHandler>)",
  "pub fn spark_core::pipeline::ChainBuilder::register_outbound_static(&mut self, label: &str, handler: &'static dyn spark_core::pipeline::handler::OutboundHandler)",
  "impl spark_core::pipeline::middleware::ChainBuilder for dyn spark_core::pipeline::controller::Controller<HandleId = spark_core::pipeline::controller::ControllerHandleId>",
  "pub fn dyn spark_core::pipeline::controller::Controller<HandleId = spark_core::pipeline::controller::ControllerHandleId>::register_inbound(&mut self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::InboundHandler>)",
  "pub fn dyn spark_core::pipeline::controller::Controller<HandleId = spark_core::pipeline::controller::ControllerHandleId>::register_inbound_static(&mut self, label: &str, handler: &'static dyn spark_core::pipeline::handler::InboundHandler)",
  "pub fn dyn spark_core::pipeline::controller::Controller<HandleId = spark_core::pipeline::controller::ControllerHandleId>::register_outbound(&mut self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::OutboundHandler>)",
  "pub fn dyn spark_core::pipeline::controller::Controller<HandleId = spark_core::pipeline::controller::ControllerHandleId>::register_outbound_static(&mut self, label: &str, handler: &'static dyn spark_core::pipeline::handler::OutboundHandler)",
  "pub trait spark_core::pipeline::Channel: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::pipeline::Channel::close(&self)",
  "pub fn spark_core::pipeline::Channel::close_graceful(&self, reason: spark_core::contract::CloseReason, deadline: core::option::Option<spark_core::contract::Deadline>)",
  "pub fn spark_core::pipeline::Channel::closed(&self) -> spark_core::future::BoxFuture<'static, core::result::Result<(), spark_core::error::SparkError>>",
  "pub fn spark_core::pipeline::Channel::controller(&self) -> &dyn spark_core::pipeline::controller::Controller<HandleId = spark_core::pipeline::controller::ControllerHandleId>",
  "pub fn spark_core::pipeline::Channel::extensions(&self) -> &dyn spark_core::pipeline::extensions::ExtensionsMap",
  "pub fn spark_core::pipeline::Channel::flush(&self)",
  "pub fn spark_core::pipeline::Channel::id(&self) -> &str",
  "pub fn spark_core::pipeline::Channel::is_writable(&self) -> bool",
  "pub fn spark_core::pipeline::Channel::local_addr(&self) -> core::option::Option<spark_core::transport::address::TransportSocketAddr>",
  "pub fn spark_core::pipeline::Channel::peer_addr(&self) -> core::option::Option<spark_core::transport::address::TransportSocketAddr>",
  "pub fn spark_core::pipeline::Channel::state(&self) -> spark_core::pipeline::channel::ChannelState",
  "pub fn spark_core::pipeline::Channel::write(&self, msg: spark_core::buffer::message::PipelineMessage) -> core::result::Result<spark_core::pipeline::channel::WriteSignal, spark_core::error::CoreError>",
  "pub trait spark_core::pipeline::Context: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::pipeline::Context::buffer_pool(&self) -> &dyn spark_core::buffer::pool::BufferPool",
  "pub fn spark_core::pipeline::Context::call_context(&self) -> &spark_core::contract::CallContext",
  "pub fn spark_core::pipeline::Context::channel(&self) -> &dyn spark_core::pipeline::channel::Channel",
  "pub fn spark_core::pipeline::Context::close_graceful(&self, reason: spark_core::contract::CloseReason, deadline: core::option::Option<spark_core::contract::Deadline>)",
  "pub fn spark_core::pipeline::Context::closed(&self) -> spark_core::future::BoxFuture<'static, core::result::Result<(), spark_core::error::SparkError>>",
  "pub fn spark_core::pipeline::Context::controller(&self) -> &dyn spark_core::pipeline::controller::Controller<HandleId = spark_core::pipeline::controller::ControllerHandleId>",
  "pub fn spark_core::pipeline::Context::discovery(&self) -> core::option::Option<&dyn spark_core::cluster::discovery::ServiceDiscovery>",
  "pub fn spark_core::pipeline::Context::execution_context(&self) -> spark_core::context::ExecutionContext<'_>",
  "pub fn spark_core::pipeline::Context::executor(&self) -> &dyn spark_core::TaskExecutor",
  "pub fn spark_core::pipeline::Context::flush(&self)",
  "pub fn spark_core::pipeline::Context::forward_read(&self, msg: spark_core::buffer::message::PipelineMessage)",
  "pub fn spark_core::pipeline::Context::logger(&self) -> &dyn spark_core::observability::logging::Logger",
  "pub fn spark_core::pipeline::Context::membership(&self) -> core::option::Option<&dyn spark_core::cluster::membership::ClusterMembership>",
  "pub fn spark_core::pipeline::Context::metrics(&self) -> &dyn spark_core::observability::metrics::MetricsProvider",
  "pub fn spark_core::pipeline::Context::timer(&self) -> &dyn spark_core::TimeDriver",
  "pub fn spark_core::pipeline::Context::trace_context(&self) -> &spark_core::observability::trace::TraceContext",
  "pub fn spark_core::pipeline::Context::write(&self, msg: spark_core::buffer::message::PipelineMessage) -> core::result::Result<spark_core::pipeline::channel::WriteSignal, spark_core::error::CoreError>",
  "pub trait spark_core::pipeline::Controller: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub type spark_core::pipeline::Controller::HandleId: core::marker::Copy + core::cmp::Eq + core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::pipeline::Controller::add_handler_after(&self, anchor: Self::HandleId, label: &str, handler: alloc::sync::Arc<dyn spark_core::pipeline::controller::Handler>) -> Self::HandleId",
  "pub fn spark_core::pipeline::Controller::emit_channel_activated(&self)",
  "pub fn spark_core::pipeline::Controller::emit_channel_deactivated(&self)",
  "pub fn spark_core::pipeline::Controller::emit_exception(&self, error: spark_core::error::CoreError)",
  "pub fn spark_core::pipeline::Controller::emit_read(&self, msg: spark_core::buffer::message::PipelineMessage)",
  "pub fn spark_core::pipeline::Controller::emit_read_completed(&self)",
  "pub fn spark_core::pipeline::Controller::emit_user_event(&self, event: spark_core::observability::events::CoreUserEvent)",
  "pub fn spark_core::pipeline::Controller::emit_writability_changed(&self, is_writable: bool)",
  "pub fn spark_core::pipeline::Controller::epoch(&self) -> u64",
  "pub fn spark_core::pipeline::Controller::install_middleware(&self, middleware: &dyn spark_core::pipeline::middleware::Middleware, services: &spark_core::CoreServices) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::pipeline::Controller::register_inbound_handler(&self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::InboundHandler>)",
  "pub fn spark_core::pipeline::Controller::register_inbound_handler_static(&self, label: &str, handler: &'static dyn spark_core::pipeline::handler::InboundHandler)",
  "pub fn spark_core::pipeline::Controller::register_outbound_handler(&self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::OutboundHandler>)",
  "pub fn spark_core::pipeline::Controller::register_outbound_handler_static(&self, label: &str, handler: &'static dyn spark_core::pipeline::handler::OutboundHandler)",
  "pub fn spark_core::pipeline::Controller::registry(&self) -> &dyn spark_core::pipeline::controller::HandlerRegistry",
  "pub fn spark_core::pipeline::Controller::remove_handler(&self, handle: Self::HandleId) -> bool",
  "pub fn spark_core::pipeline::Controller::replace_handler(&self, handle: Self::HandleId, handler: alloc::sync::Arc<dyn spark_core::pipeline::controller::Handler>) -> bool",
  "impl spark_core::pipeline::controller::Controller for spark_core::pipeline::controller::HotSwapController",
  "pub type spark_core::pipeline::controller::HotSwapController::HandleId = spark_core::pipeline::controller::ControllerHandleId",
  "pub fn spark_core::pipeline::controller::HotSwapController::add_handler_after(&self, anchor: Self::HandleId, label: &str, handler: alloc::sync::Arc<dyn spark_core::pipeline::controller::Handler>) -> Self::HandleId",
  "pub fn spark_core::pipeline::controller::HotSwapController::emit_channel_activated(&self)",
  "pub fn spark_core::pipeline::controller::HotSwapController::emit_channel_deactivated(&self)",
  "pub fn spark_core::pipeline::controller::HotSwapController::emit_exception(&self, error: spark_core::error::CoreError)",
  "pub fn spark_core::pipeline::controller::HotSwapController::emit_read(&self, msg: spark_core::buffer::message::PipelineMessage)",
  "pub fn spark_core::pipeline::controller::HotSwapController::emit_read_completed(&self)",
  "pub fn spark_core::pipeline::controller::HotSwapController::emit_user_event(&self, event: spark_core::observability::events::CoreUserEvent)",
  "pub fn spark_core::pipeline::controller::HotSwapController::emit_writability_changed(&self, is_writable: bool)",
  "pub fn spark_core::pipeline::controller::HotSwapController::epoch(&self) -> u64",
  "pub fn spark_core::pipeline::controller::HotSwapController::install_middleware(&self, _middleware: &dyn spark_core::pipeline::middleware::Middleware, _services: &spark_core::CoreServices) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::pipeline::controller::HotSwapController::register_inbound_handler(&self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::InboundHandler>)",
  "pub fn spark_core::pipeline::controller::HotSwapController::register_outbound_handler(&self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::OutboundHandler>)",
  "pub fn spark_core::pipeline::controller::HotSwapController::registry(&self) -> &dyn spark_core::pipeline::controller::HandlerRegistry",
  "pub fn spark_core::pipeline::controller::HotSwapController::remove_handler(&self, handle: Self::HandleId) -> bool",
  "pub fn spark_core::pipeline::controller::HotSwapController::replace_handler(&self, handle: Self::HandleId, handler: alloc::sync::Arc<dyn spark_core::pipeline::controller::Handler>) -> bool",
  "impl spark_core::pipeline::controller::Controller for spark_core::pipeline::traits::object::ControllerHandle",
  "pub type spark_core::pipeline::traits::object::ControllerHandle::HandleId = spark_core::pipeline::controller::ControllerHandleId",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::add_handler_after(&self, anchor: Self::HandleId, label: &str, handler: alloc::sync::Arc<dyn spark_core::pipeline::controller::Handler>) -> Self::HandleId",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_channel_activated(&self)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_channel_deactivated(&self)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_exception(&self, error: spark_core::error::CoreError)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_read(&self, msg: spark_core::buffer::message::PipelineMessage)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_read_completed(&self)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_user_event(&self, event: spark_core::observability::events::CoreUserEvent)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_writability_changed(&self, is_writable: bool)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::epoch(&self) -> u64",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::install_middleware(&self, middleware: &dyn spark_core::pipeline::middleware::Middleware, services: &spark_core::CoreServices) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::register_inbound_handler(&self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::InboundHandler>)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::register_inbound_handler_static(&self, label: &str, handler: &'static dyn spark_core::pipeline::handler::InboundHandler)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::register_outbound_handler(&self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::OutboundHandler>)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::register_outbound_handler_static(&self, label: &str, handler: &'static dyn spark_core::pipeline::handler::OutboundHandler)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::registry(&self) -> &dyn spark_core::pipeline::controller::HandlerRegistry",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::remove_handler(&self, handle: Self::HandleId) -> bool",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::replace_handler(&self, handle: Self::HandleId, handler: alloc::sync::Arc<dyn spark_core::pipeline::controller::Handler>) -> bool",
  "pub trait spark_core::pipeline::ControllerFactory: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub type spark_core::pipeline::ControllerFactory::Controller: spark_core::pipeline::controller::Controller<HandleId = spark_core::pipeline::controller::ControllerHandleId>",
  "pub fn spark_core::pipeline::ControllerFactory::build(&self, core_services: &spark_core::CoreServices) -> core::result::Result<Self::Controller, spark_core::error::CoreError>",
  "impl spark_core::pipeline::traits::generic::ControllerFactory for spark_core::pipeline::traits::object::DynControllerFactoryAdapter",
  "pub type spark_core::pipeline::traits::object::DynControllerFactoryAdapter::Controller = spark_core::pipeline::traits::object::ControllerHandle",
  "pub fn spark_core::pipeline::traits::object::DynControllerFactoryAdapter::build(&self, core_services: &spark_core::CoreServices) -> core::result::Result<Self::Controller, spark_core::error::CoreError>",
  "pub trait spark_core::pipeline::DuplexHandler: spark_core::pipeline::handler::InboundHandler + spark_core::pipeline::handler::OutboundHandler + Sealed",
  "impl<T> spark_core::pipeline::handler::DuplexHandler for T where T: spark_core::pipeline::handler::InboundHandler + spark_core::pipeline::handler::OutboundHandler",
  "pub trait spark_core::pipeline::DynControllerFactory: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::pipeline::DynControllerFactory::build_dyn(&self, core_services: &spark_core::CoreServices) -> core::result::Result<spark_core::pipeline::traits::object::ControllerHandle, spark_core::error::CoreError>",
  "impl<F> spark_core::pipeline::traits::object::DynControllerFactory for spark_core::pipeline::traits::object::ControllerFactoryObject<F> where F: spark_core::pipeline::traits::generic::ControllerFactory",
  "pub fn spark_core::pipeline::traits::object::ControllerFactoryObject<F>::build_dyn(&self, core_services: &spark_core::CoreServices) -> core::result::Result<spark_core::pipeline::traits::object::ControllerHandle, spark_core::error::CoreError>",
  "pub trait spark_core::pipeline::ExtensionsMap: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::pipeline::ExtensionsMap::clear(&self)",
  "pub fn spark_core::pipeline::ExtensionsMap::contains_key(&self, key: &core::any::TypeId) -> bool",
  "pub fn spark_core::pipeline::ExtensionsMap::get<'a>(&'a self, key: &core::any::TypeId) -> core::option::Option<&'a (dyn core::any::Any + core::marker::Send + core::marker::Sync + 'static)>",
  "pub fn spark_core::pipeline::ExtensionsMap::insert(&self, key: core::any::TypeId, value: alloc::boxed::Box<(dyn core::any::Any + core::marker::Send + core::marker::Sync)>)",
  "pub fn spark_core::pipeline::ExtensionsMap::remove(&self, key: &core::any::TypeId) -> core::option::Option<alloc::boxed::Box<(dyn core::any::Any + core::marker::Send + core::marker::Sync)>>",
  "pub trait spark_core::pipeline::HandlerRegistry: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::pipeline::HandlerRegistry::snapshot(&self) -> alloc::vec::Vec<spark_core::pipeline::controller::HandlerRegistration>",
  "pub trait spark_core::pipeline::InboundHandler: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::pipeline::InboundHandler::describe(&self) -> spark_core::pipeline::middleware::MiddlewareDescriptor",
  "pub fn spark_core::pipeline::InboundHandler::on_channel_active(&self, ctx: &dyn spark_core::pipeline::context::Context)",
  "pub fn spark_core::pipeline::InboundHandler::on_channel_inactive(&self, ctx: &dyn spark_core::pipeline::context::Context)",
  "pub fn spark_core::pipeline::InboundHandler::on_exception_caught(&self, ctx: &dyn spark_core::pipeline::context::Context, error: spark_core::error::CoreError)",
  "pub fn spark_core::pipeline::InboundHandler::on_read(&self, ctx: &dyn spark_core::pipeline::context::Context, msg: spark_core::buffer::message::PipelineMessage)",
  "pub fn spark_core::pipeline::InboundHandler::on_read_complete(&self, ctx: &dyn spark_core::pipeline::context::Context)",
  "pub fn spark_core::pipeline::InboundHandler::on_user_event(&self, ctx: &dyn spark_core::pipeline::context::Context, event: spark_core::observability::events::CoreUserEvent)",
  "pub fn spark_core::pipeline::InboundHandler::on_writability_changed(&self, ctx: &dyn spark_core::pipeline::context::Context, is_writable: bool)",
  "impl spark_core::pipeline::handler::InboundHandler for spark_core::pipeline::default_handlers::ExceptionAutoResponder",
  "pub fn spark_core::pipeline::default_handlers::ExceptionAutoResponder::on_channel_active(&self, _ctx: &dyn spark_core::pipeline::context::Context)",
  "pub fn spark_core::pipeline::default_handlers::ExceptionAutoResponder::on_channel_inactive(&self, _ctx: &dyn spark_core::pipeline::context::Context)",
  "pub fn spark_core::pipeline::default_handlers::ExceptionAutoResponder::on_exception_caught(&self, ctx: &dyn spark_core::pipeline::context::Context, error: spark_core::error::CoreError)",
  "pub fn spark_core::pipeline::default_handlers::ExceptionAutoResponder::on_read(&self, _ctx: &dyn spark_core::pipeline::context::Context, _msg: spark_core::buffer::message::PipelineMessage)",
  "pub fn spark_core::pipeline::default_handlers::ExceptionAutoResponder::on_read_complete(&self, _ctx: &dyn spark_core::pipeline::context::Context)",
  "pub fn spark_core::pipeline::default_handlers::ExceptionAutoResponder::on_user_event(&self, _ctx: &dyn spark_core::pipeline::context::Context, _event: spark_core::observability::events::CoreUserEvent)",
  "pub fn spark_core::pipeline::default_handlers::ExceptionAutoResponder::on_writability_changed(&self, _ctx: &dyn spark_core::pipeline::context::Context, _is_writable: bool)",
  "pub trait spark_core::pipeline::Middleware: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::pipeline::Middleware::configure(&self, chain: &mut dyn spark_core::pipeline::middleware::ChainBuilder, services: &spark_core::CoreServices) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::pipeline::Middleware::descriptor(&self) -> spark_core::pipeline::middleware::MiddlewareDescriptor",
  "pub trait spark_core::pipeline::OutboundHandler: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::pipeline::OutboundHandler::describe(&self) -> spark_core::pipeline::middleware::MiddlewareDescriptor",
  "pub fn spark_core::pipeline::OutboundHandler::on_close_graceful(&self, ctx: &dyn spark_core::pipeline::context::Context, deadline: core::option::Option<core::time::Duration>) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::pipeline::OutboundHandler::on_flush(&self, ctx: &dyn spark_core::pipeline::context::Context) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::pipeline::OutboundHandler::on_write(&self, ctx: &dyn spark_core::pipeline::context::Context, msg: spark_core::buffer::message::PipelineMessage) -> core::result::Result<spark_core::pipeline::channel::WriteSignal, spark_core::error::CoreError>",
  "pub trait spark_core::pipeline::Pipeline: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub type spark_core::pipeline::Pipeline::HandleId: core::marker::Copy + core::cmp::Eq + core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::pipeline::Pipeline::add_handler_after(&self, anchor: Self::HandleId, label: &str, handler: alloc::sync::Arc<dyn spark_core::pipeline::controller::Handler>) -> Self::HandleId",
  "pub fn spark_core::pipeline::Pipeline::emit_channel_activated(&self)",
  "pub fn spark_core::pipeline::Pipeline::emit_channel_deactivated(&self)",
  "pub fn spark_core::pipeline::Pipeline::emit_exception(&self, error: spark_core::error::CoreError)",
  "pub fn spark_core::pipeline::Pipeline::emit_read(&self, msg: spark_core::buffer::message::PipelineMessage)",
  "pub fn spark_core::pipeline::Pipeline::emit_read_completed(&self)",
  "pub fn spark_core::pipeline::Pipeline::emit_user_event(&self, event: spark_core::observability::events::CoreUserEvent)",
  "pub fn spark_core::pipeline::Pipeline::emit_writability_changed(&self, is_writable: bool)",
  "pub fn spark_core::pipeline::Pipeline::epoch(&self) -> u64",
  "pub fn spark_core::pipeline::Pipeline::install_middleware(&self, middleware: &dyn spark_core::pipeline::middleware::Middleware, services: &spark_core::CoreServices) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::pipeline::Pipeline::register_inbound_handler(&self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::InboundHandler>)",
  "pub fn spark_core::pipeline::Pipeline::register_inbound_handler_static(&self, label: &str, handler: &'static dyn spark_core::pipeline::handler::InboundHandler)",
  "pub fn spark_core::pipeline::Pipeline::register_outbound_handler(&self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::OutboundHandler>)",
  "pub fn spark_core::pipeline::Pipeline::register_outbound_handler_static(&self, label: &str, handler: &'static dyn spark_core::pipeline::handler::OutboundHandler)",
  "pub fn spark_core::pipeline::Pipeline::registry(&self) -> &dyn spark_core::pipeline::controller::HandlerRegistry",
  "pub fn spark_core::pipeline::Pipeline::remove_handler(&self, handle: Self::HandleId) -> bool",
  "pub fn spark_core::pipeline::Pipeline::replace_handler(&self, handle: Self::HandleId, handler: alloc::sync::Arc<dyn spark_core::pipeline::controller::Handler>) -> bool",
  "impl spark_core::pipeline::controller::Controller for spark_core::pipeline::controller::HotSwapController",
  "pub type spark_core::pipeline::controller::HotSwapController::HandleId = spark_core::pipeline::controller::ControllerHandleId",
  "pub fn spark_core::pipeline::controller::HotSwapController::add_handler_after(&self, anchor: Self::HandleId, label: &str, handler: alloc::sync::Arc<dyn spark_core::pipeline::controller::Handler>) -> Self::HandleId",
  "pub fn spark_core::pipeline::controller::HotSwapController::emit_channel_activated(&self)",
  "pub fn spark_core::pipeline::controller::HotSwapController::emit_channel_deactivated(&self)",
  "pub fn spark_core::pipeline::controller::HotSwapController::emit_exception(&self, error: spark_core::error::CoreError)",
  "pub fn spark_core::pipeline::controller::HotSwapController::emit_read(&self, msg: spark_core::buffer::message::PipelineMessage)",
  "pub fn spark_core::pipeline::controller::HotSwapController::emit_read_completed(&self)",
  "pub fn spark_core::pipeline::controller::HotSwapController::emit_user_event(&self, event: spark_core::observability::events::CoreUserEvent)",
  "pub fn spark_core::pipeline::controller::HotSwapController::emit_writability_changed(&self, is_writable: bool)",
  "pub fn spark_core::pipeline::controller::HotSwapController::epoch(&self) -> u64",
  "pub fn spark_core::pipeline::controller::HotSwapController::install_middleware(&self, _middleware: &dyn spark_core::pipeline::middleware::Middleware, _services: &spark_core::CoreServices) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::pipeline::controller::HotSwapController::register_inbound_handler(&self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::InboundHandler>)",
  "pub fn spark_core::pipeline::controller::HotSwapController::register_outbound_handler(&self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::OutboundHandler>)",
  "pub fn spark_core::pipeline::controller::HotSwapController::registry(&self) -> &dyn spark_core::pipeline::controller::HandlerRegistry",
  "pub fn spark_core::pipeline::controller::HotSwapController::remove_handler(&self, handle: Self::HandleId) -> bool",
  "pub fn spark_core::pipeline::controller::HotSwapController::replace_handler(&self, handle: Self::HandleId, handler: alloc::sync::Arc<dyn spark_core::pipeline::controller::Handler>) -> bool",
  "impl spark_core::pipeline::controller::Controller for spark_core::pipeline::traits::object::ControllerHandle",
  "pub type spark_core::pipeline::traits::object::ControllerHandle::HandleId = spark_core::pipeline::controller::ControllerHandleId",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::add_handler_after(&self, anchor: Self::HandleId, label: &str, handler: alloc::sync::Arc<dyn spark_core::pipeline::controller::Handler>) -> Self::HandleId",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_channel_activated(&self)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_channel_deactivated(&self)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_exception(&self, error: spark_core::error::CoreError)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_read(&self, msg: spark_core::buffer::message::PipelineMessage)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_read_completed(&self)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_user_event(&self, event: spark_core::observability::events::CoreUserEvent)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_writability_changed(&self, is_writable: bool)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::epoch(&self) -> u64",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::install_middleware(&self, middleware: &dyn spark_core::pipeline::middleware::Middleware, services: &spark_core::CoreServices) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::register_inbound_handler(&self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::InboundHandler>)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::register_inbound_handler_static(&self, label: &str, handler: &'static dyn spark_core::pipeline::handler::InboundHandler)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::register_outbound_handler(&self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::OutboundHandler>)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::register_outbound_handler_static(&self, label: &str, handler: &'static dyn spark_core::pipeline::handler::OutboundHandler)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::registry(&self) -> &dyn spark_core::pipeline::controller::HandlerRegistry",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::remove_handler(&self, handle: Self::HandleId) -> bool",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::replace_handler(&self, handle: Self::HandleId, handler: alloc::sync::Arc<dyn spark_core::pipeline::controller::Handler>) -> bool",
  "pub trait spark_core::pipeline::PipelineFactory: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub type spark_core::pipeline::PipelineFactory::Controller: spark_core::pipeline::controller::Controller<HandleId = spark_core::pipeline::controller::ControllerHandleId>",
  "pub fn spark_core::pipeline::PipelineFactory::build(&self, core_services: &spark_core::CoreServices) -> core::result::Result<Self::Controller, spark_core::error::CoreError>",
  "impl spark_core::pipeline::traits::generic::ControllerFactory for spark_core::pipeline::traits::object::DynControllerFactoryAdapter",
  "pub type spark_core::pipeline::traits::object::DynControllerFactoryAdapter::Controller = spark_core::pipeline::traits::object::ControllerHandle",
  "pub fn spark_core::pipeline::traits::object::DynControllerFactoryAdapter::build(&self, core_services: &spark_core::CoreServices) -> core::result::Result<Self::Controller, spark_core::error::CoreError>",
  "pub mod spark_core::retry",
  "pub mod spark_core::retry::adaptive",
  "pub fn spark_core::retry::adaptive::compute(backlog: f32, rtt: core::time::Duration, base: core::time::Duration) -> core::time::Duration",
  "pub mod spark_core::router",
  "pub mod spark_core::router::binding",
  "pub struct spark_core::router::binding::RouteBinding<S, Request> where S: spark_core::service::traits::generic::Service<Request>",
  "impl<S, Request> spark_core::router::binding::RouteBinding<S, Request> where S: spark_core::service::traits::generic::Service<Request>",
  "pub fn spark_core::router::binding::RouteBinding<S, Request>::effective_qos(&self) -> core::option::Option<spark_core::transport::intent::QualityOfService>",
  "pub fn spark_core::router::binding::RouteBinding<S, Request>::effective_security(&self) -> core::option::Option<&spark_core::transport::intent::SecurityMode>",
  "pub fn spark_core::router::binding::RouteBinding<S, Request>::id(&self) -> &spark_core::router::route::RouteId",
  "pub fn spark_core::router::binding::RouteBinding<S, Request>::metadata(&self) -> &spark_core::router::metadata::RouteMetadata",
  "pub fn spark_core::router::binding::RouteBinding<S, Request>::new(id: spark_core::router::route::RouteId, service: S, metadata: spark_core::router::metadata::RouteMetadata, effective_qos: core::option::Option<spark_core::transport::intent::QualityOfService>, effective_security: core::option::Option<spark_core::transport::intent::SecurityMode>) -> Self",
  "pub fn spark_core::router::binding::RouteBinding<S, Request>::service(&self) -> &S",
  "pub fn spark_core::router::binding::RouteBinding<S, Request>::service_mut(&mut self) -> &mut S",
  "impl<S, Request> core::fmt::Debug for spark_core::router::binding::RouteBinding<S, Request> where S: spark_core::service::traits::generic::Service<Request>",
  "pub fn spark_core::router::binding::RouteBinding<S, Request>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<S, Request> core::marker::Freeze for spark_core::router::binding::RouteBinding<S, Request> where S: core::marker::Freeze",
  "impl<S, Request> core::marker::Send for spark_core::router::binding::RouteBinding<S, Request> where Request: core::marker::Send",
  "impl<S, Request> core::marker::Sync for spark_core::router::binding::RouteBinding<S, Request> where Request: core::marker::Sync",
  "impl<S, Request> core::marker::Unpin for spark_core::router::binding::RouteBinding<S, Request> where S: core::marker::Unpin, Request: core::marker::Unpin",
  "impl<S, Request> core::panic::unwind_safe::RefUnwindSafe for spark_core::router::binding::RouteBinding<S, Request> where S: core::panic::unwind_safe::RefUnwindSafe, Request: core::panic::unwind_safe::RefUnwindSafe",
  "impl<S, Request> core::panic::unwind_safe::UnwindSafe for spark_core::router::binding::RouteBinding<S, Request> where S: core::panic::unwind_safe::UnwindSafe, Request: core::panic::unwind_safe::UnwindSafe",
  "pub struct spark_core::router::binding::RouteDecision<S, Request> where S: spark_core::service::traits::generic::Service<Request>",
  "impl<S, Request> spark_core::router::binding::RouteDecision<S, Request> where S: spark_core::service::traits::generic::Service<Request>",
  "pub fn spark_core::router::binding::RouteDecision<S, Request>::binding(&self) -> &spark_core::router::binding::RouteBinding<S, Request>",
  "pub fn spark_core::router::binding::RouteDecision<S, Request>::binding_mut(&mut self) -> &mut spark_core::router::binding::RouteBinding<S, Request>",
  "pub fn spark_core::router::binding::RouteDecision<S, Request>::into_parts(self) -> (spark_core::router::binding::RouteBinding<S, Request>, alloc::vec::Vec<alloc::borrow::Cow<'static, str>>)",
  "pub fn spark_core::router::binding::RouteDecision<S, Request>::new(binding: spark_core::router::binding::RouteBinding<S, Request>, warnings: alloc::vec::Vec<alloc::borrow::Cow<'static, str>>) -> Self",
  "pub fn spark_core::router::binding::RouteDecision<S, Request>::warnings(&self) -> &[alloc::borrow::Cow<'static, str>]",
  "impl<S, Request> core::fmt::Debug for spark_core::router::binding::RouteDecision<S, Request> where S: spark_core::service::traits::generic::Service<Request>",
  "pub fn spark_core::router::binding::RouteDecision<S, Request>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<S, Request> core::marker::Freeze for spark_core::router::binding::RouteDecision<S, Request> where S: core::marker::Freeze",
  "impl<S, Request> core::marker::Send for spark_core::router::binding::RouteDecision<S, Request> where Request: core::marker::Send",
  "impl<S, Request> core::marker::Sync for spark_core::router::binding::RouteDecision<S, Request> where Request: core::marker::Sync",
  "impl<S, Request> core::marker::Unpin for spark_core::router::binding::RouteDecision<S, Request> where S: core::marker::Unpin, Request: core::marker::Unpin",
  "impl<S, Request> core::panic::unwind_safe::RefUnwindSafe for spark_core::router::binding::RouteDecision<S, Request> where S: core::panic::unwind_safe::RefUnwindSafe, Request: core::panic::unwind_safe::RefUnwindSafe",
  "impl<S, Request> core::panic::unwind_safe::UnwindSafe for spark_core::router::binding::RouteDecision<S, Request> where S: core::panic::unwind_safe::UnwindSafe, Request: core::panic::unwind_safe::UnwindSafe",
  "pub struct spark_core::router::binding::RouteValidation",
  "impl spark_core::router::binding::RouteValidation",
  "pub fn spark_core::router::binding::RouteValidation::errors(&self) -> &[alloc::borrow::Cow<'static, str>]",
  "pub fn spark_core::router::binding::RouteValidation::is_valid(&self) -> bool",
  "pub fn spark_core::router::binding::RouteValidation::new() -> Self",
  "pub fn spark_core::router::binding::RouteValidation::push_error(&mut self, message: alloc::borrow::Cow<'static, str>)",
  "pub fn spark_core::router::binding::RouteValidation::push_warning(&mut self, message: alloc::borrow::Cow<'static, str>)",
  "pub fn spark_core::router::binding::RouteValidation::warnings(&self) -> &[alloc::borrow::Cow<'static, str>]",
  "impl core::default::Default for spark_core::router::binding::RouteValidation",
  "pub fn spark_core::router::binding::RouteValidation::default() -> spark_core::router::binding::RouteValidation",
  "impl core::fmt::Debug for spark_core::router::binding::RouteValidation",
  "pub fn spark_core::router::binding::RouteValidation::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::router::binding::RouteValidation",
  "impl core::marker::Send for spark_core::router::binding::RouteValidation",
  "impl core::marker::Sync for spark_core::router::binding::RouteValidation",
  "impl core::marker::Unpin for spark_core::router::binding::RouteValidation",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::router::binding::RouteValidation",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::router::binding::RouteValidation",
  "pub mod spark_core::router::catalog",
  "pub struct spark_core::router::catalog::RouteCatalog",
  "impl spark_core::router::catalog::RouteCatalog",
  "pub fn spark_core::router::catalog::RouteCatalog::iter(&self) -> impl core::iter::traits::iterator::Iterator<Item = &spark_core::router::catalog::RouteDescriptor>",
  "pub fn spark_core::router::catalog::RouteCatalog::new() -> Self",
  "pub fn spark_core::router::catalog::RouteCatalog::push(&mut self, descriptor: spark_core::router::catalog::RouteDescriptor)",
  "impl core::clone::Clone for spark_core::router::catalog::RouteCatalog",
  "pub fn spark_core::router::catalog::RouteCatalog::clone(&self) -> spark_core::router::catalog::RouteCatalog",
  "impl core::default::Default for spark_core::router::catalog::RouteCatalog",
  "pub fn spark_core::router::catalog::RouteCatalog::default() -> spark_core::router::catalog::RouteCatalog",
  "impl core::fmt::Debug for spark_core::router::catalog::RouteCatalog",
  "pub fn spark_core::router::catalog::RouteCatalog::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::router::catalog::RouteCatalog",
  "impl core::marker::Send for spark_core::router::catalog::RouteCatalog",
  "impl core::marker::Sync for spark_core::router::catalog::RouteCatalog",
  "impl core::marker::Unpin for spark_core::router::catalog::RouteCatalog",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::router::catalog::RouteCatalog",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::router::catalog::RouteCatalog",
  "pub struct spark_core::router::catalog::RouteDescriptor",
  "impl spark_core::router::catalog::RouteDescriptor",
  "pub fn spark_core::router::catalog::RouteDescriptor::id(&self) -> core::option::Option<&spark_core::router::route::RouteId>",
  "pub fn spark_core::router::catalog::RouteDescriptor::metadata(&self) -> &spark_core::router::metadata::RouteMetadata",
  "pub fn spark_core::router::catalog::RouteDescriptor::new(pattern: spark_core::router::route::RoutePattern) -> Self",
  "pub fn spark_core::router::catalog::RouteDescriptor::pattern(&self) -> &spark_core::router::route::RoutePattern",
  "pub fn spark_core::router::catalog::RouteDescriptor::summary(&self) -> core::option::Option<&alloc::borrow::Cow<'static, str>>",
  "pub fn spark_core::router::catalog::RouteDescriptor::with_id(self, id: spark_core::router::route::RouteId) -> Self",
  "pub fn spark_core::router::catalog::RouteDescriptor::with_metadata(self, metadata: spark_core::router::metadata::RouteMetadata) -> Self",
  "pub fn spark_core::router::catalog::RouteDescriptor::with_summary(self, summary: alloc::borrow::Cow<'static, str>) -> Self",
  "impl core::clone::Clone for spark_core::router::catalog::RouteDescriptor",
  "pub fn spark_core::router::catalog::RouteDescriptor::clone(&self) -> spark_core::router::catalog::RouteDescriptor",
  "impl core::fmt::Debug for spark_core::router::catalog::RouteDescriptor",
  "pub fn spark_core::router::catalog::RouteDescriptor::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::router::catalog::RouteDescriptor",
  "impl core::marker::Send for spark_core::router::catalog::RouteDescriptor",
  "impl core::marker::Sync for spark_core::router::catalog::RouteDescriptor",
  "impl core::marker::Unpin for spark_core::router::catalog::RouteDescriptor",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::router::catalog::RouteDescriptor",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::router::catalog::RouteDescriptor",
  "pub mod spark_core::router::context",
  "pub struct spark_core::router::context::RoutingContext<'a, Request>",
  "impl<'a, Request> spark_core::router::context::RoutingContext<'a, Request>",
  "pub fn spark_core::router::context::RoutingContext<'a, Request>::connection(&self) -> core::option::Option<&'a spark_core::transport::intent::ConnectionIntent>",
  "pub fn spark_core::router::context::RoutingContext<'a, Request>::dynamic_metadata(&self) -> &'a spark_core::router::metadata::RouteMetadata",
  "pub fn spark_core::router::context::RoutingContext<'a, Request>::intent(&self) -> &'a spark_core::router::context::RoutingIntent",
  "pub fn spark_core::router::context::RoutingContext<'a, Request>::new(request: &'a Request, intent: &'a spark_core::router::context::RoutingIntent, connection: core::option::Option<&'a spark_core::transport::intent::ConnectionIntent>, trace: core::option::Option<&'a spark_core::observability::trace::TraceContext>, dynamic_metadata: &'a spark_core::router::metadata::RouteMetadata, snapshot: spark_core::router::context::RoutingSnapshot<'a>) -> Self",
  "pub fn spark_core::router::context::RoutingContext<'a, Request>::request(&self) -> &'a Request",
  "pub fn spark_core::router::context::RoutingContext<'a, Request>::snapshot(&self) -> spark_core::router::context::RoutingSnapshot<'a>",
  "pub fn spark_core::router::context::RoutingContext<'a, Request>::trace(&self) -> core::option::Option<&'a spark_core::observability::trace::TraceContext>",
  "impl<'a, Request: core::fmt::Debug> core::fmt::Debug for spark_core::router::context::RoutingContext<'a, Request>",
  "pub fn spark_core::router::context::RoutingContext<'a, Request>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<'a, Request> core::marker::Freeze for spark_core::router::context::RoutingContext<'a, Request>",
  "impl<'a, Request> core::marker::Send for spark_core::router::context::RoutingContext<'a, Request> where Request: core::marker::Sync",
  "impl<'a, Request> core::marker::Sync for spark_core::router::context::RoutingContext<'a, Request> where Request: core::marker::Sync",
  "impl<'a, Request> core::marker::Unpin for spark_core::router::context::RoutingContext<'a, Request>",
  "impl<'a, Request> core::panic::unwind_safe::RefUnwindSafe for spark_core::router::context::RoutingContext<'a, Request> where Request: core::panic::unwind_safe::RefUnwindSafe",
  "impl<'a, Request> core::panic::unwind_safe::UnwindSafe for spark_core::router::context::RoutingContext<'a, Request> where Request: core::panic::unwind_safe::RefUnwindSafe",
  "pub struct spark_core::router::context::RoutingIntent",
  "impl spark_core::router::context::RoutingIntent",
  "pub fn spark_core::router::context::RoutingIntent::expected_qos(&self) -> core::option::Option<spark_core::transport::intent::QualityOfService>",
  "pub fn spark_core::router::context::RoutingIntent::new(target: spark_core::router::route::RoutePattern) -> Self",
  "pub fn spark_core::router::context::RoutingIntent::preferred_metadata(&self) -> &spark_core::router::metadata::RouteMetadata",
  "pub fn spark_core::router::context::RoutingIntent::security_preference(&self) -> core::option::Option<&spark_core::transport::intent::SecurityMode>",
  "pub fn spark_core::router::context::RoutingIntent::target(&self) -> &spark_core::router::route::RoutePattern",
  "pub fn spark_core::router::context::RoutingIntent::with_expected_qos(self, qos: spark_core::transport::intent::QualityOfService) -> Self",
  "pub fn spark_core::router::context::RoutingIntent::with_metadata(self, metadata: spark_core::router::metadata::RouteMetadata) -> Self",
  "pub fn spark_core::router::context::RoutingIntent::with_security_preference(self, security: spark_core::transport::intent::SecurityMode) -> Self",
  "impl spark_core::router::context::RoutingIntent",
  "pub fn spark_core::router::context::RoutingIntent::route_kind(&self) -> &spark_core::router::route::RouteKind",
  "impl core::clone::Clone for spark_core::router::context::RoutingIntent",
  "pub fn spark_core::router::context::RoutingIntent::clone(&self) -> spark_core::router::context::RoutingIntent",
  "impl core::fmt::Debug for spark_core::router::context::RoutingIntent",
  "pub fn spark_core::router::context::RoutingIntent::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::router::context::RoutingIntent",
  "impl core::marker::Send for spark_core::router::context::RoutingIntent",
  "impl core::marker::Sync for spark_core::router::context::RoutingIntent",
  "impl core::marker::Unpin for spark_core::router::context::RoutingIntent",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::router::context::RoutingIntent",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::router::context::RoutingIntent",
  "pub struct spark_core::router::context::RoutingSnapshot<'a>",
  "impl<'a> spark_core::router::context::RoutingSnapshot<'a>",
  "pub fn spark_core::router::context::RoutingSnapshot<'a>::catalog(&self) -> &'a spark_core::router::catalog::RouteCatalog",
  "pub fn spark_core::router::context::RoutingSnapshot<'a>::new(catalog: &'a spark_core::router::catalog::RouteCatalog, revision: u64) -> Self",
  "pub fn spark_core::router::context::RoutingSnapshot<'a>::revision(&self) -> u64",
  "impl<'a> core::clone::Clone for spark_core::router::context::RoutingSnapshot<'a>",
  "pub fn spark_core::router::context::RoutingSnapshot<'a>::clone(&self) -> spark_core::router::context::RoutingSnapshot<'a>",
  "impl<'a> core::fmt::Debug for spark_core::router::context::RoutingSnapshot<'a>",
  "pub fn spark_core::router::context::RoutingSnapshot<'a>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<'a> core::marker::Copy for spark_core::router::context::RoutingSnapshot<'a>",
  "impl<'a> core::marker::Freeze for spark_core::router::context::RoutingSnapshot<'a>",
  "impl<'a> core::marker::Send for spark_core::router::context::RoutingSnapshot<'a>",
  "impl<'a> core::marker::Sync for spark_core::router::context::RoutingSnapshot<'a>",
  "impl<'a> core::marker::Unpin for spark_core::router::context::RoutingSnapshot<'a>",
  "impl<'a> core::panic::unwind_safe::RefUnwindSafe for spark_core::router::context::RoutingSnapshot<'a>",
  "impl<'a> core::panic::unwind_safe::UnwindSafe for spark_core::router::context::RoutingSnapshot<'a>",
  "pub mod spark_core::router::metadata",
  "#[non_exhaustive] pub enum spark_core::router::metadata::MetadataValue",
  "pub spark_core::router::metadata::MetadataValue::Boolean(bool)",
  "pub spark_core::router::metadata::MetadataValue::Float(f64)",
  "pub spark_core::router::metadata::MetadataValue::Integer(i64)",
  "pub spark_core::router::metadata::MetadataValue::List(alloc::vec::Vec<spark_core::router::metadata::MetadataValue>)",
  "pub spark_core::router::metadata::MetadataValue::Text(alloc::borrow::Cow<'static, str>)",
  "impl core::clone::Clone for spark_core::router::metadata::MetadataValue",
  "pub fn spark_core::router::metadata::MetadataValue::clone(&self) -> spark_core::router::metadata::MetadataValue",
  "impl core::cmp::PartialEq for spark_core::router::metadata::MetadataValue",
  "pub fn spark_core::router::metadata::MetadataValue::eq(&self, other: &spark_core::router::metadata::MetadataValue) -> bool",
  "impl core::fmt::Debug for spark_core::router::metadata::MetadataValue",
  "pub fn spark_core::router::metadata::MetadataValue::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::router::metadata::MetadataValue",
  "impl core::marker::Freeze for spark_core::router::metadata::MetadataValue",
  "impl core::marker::Send for spark_core::router::metadata::MetadataValue",
  "impl core::marker::Sync for spark_core::router::metadata::MetadataValue",
  "impl core::marker::Unpin for spark_core::router::metadata::MetadataValue",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::router::metadata::MetadataValue",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::router::metadata::MetadataValue",
  "pub struct spark_core::router::metadata::MetadataKey(_)",
  "impl spark_core::router::metadata::MetadataKey",
  "pub fn spark_core::router::metadata::MetadataKey::as_str(&self) -> &str",
  "pub fn spark_core::router::metadata::MetadataKey::new(key: alloc::borrow::Cow<'static, str>) -> Self",
  "impl core::clone::Clone for spark_core::router::metadata::MetadataKey",
  "pub fn spark_core::router::metadata::MetadataKey::clone(&self) -> spark_core::router::metadata::MetadataKey",
  "impl core::cmp::Eq for spark_core::router::metadata::MetadataKey",
  "impl core::cmp::Ord for spark_core::router::metadata::MetadataKey",
  "pub fn spark_core::router::metadata::MetadataKey::cmp(&self, other: &spark_core::router::metadata::MetadataKey) -> core::cmp::Ordering",
  "impl core::cmp::PartialEq for spark_core::router::metadata::MetadataKey",
  "pub fn spark_core::router::metadata::MetadataKey::eq(&self, other: &spark_core::router::metadata::MetadataKey) -> bool",
  "impl core::cmp::PartialOrd for spark_core::router::metadata::MetadataKey",
  "pub fn spark_core::router::metadata::MetadataKey::partial_cmp(&self, other: &spark_core::router::metadata::MetadataKey) -> core::option::Option<core::cmp::Ordering>",
  "impl core::fmt::Debug for spark_core::router::metadata::MetadataKey",
  "pub fn spark_core::router::metadata::MetadataKey::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::router::metadata::MetadataKey",
  "pub fn spark_core::router::metadata::MetadataKey::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::StructuralPartialEq for spark_core::router::metadata::MetadataKey",
  "impl core::marker::Freeze for spark_core::router::metadata::MetadataKey",
  "impl core::marker::Send for spark_core::router::metadata::MetadataKey",
  "impl core::marker::Sync for spark_core::router::metadata::MetadataKey",
  "impl core::marker::Unpin for spark_core::router::metadata::MetadataKey",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::router::metadata::MetadataKey",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::router::metadata::MetadataKey",
  "pub struct spark_core::router::metadata::RouteMetadata",
  "impl spark_core::router::metadata::RouteMetadata",
  "pub fn spark_core::router::metadata::RouteMetadata::get(&self, key: &spark_core::router::metadata::MetadataKey) -> core::option::Option<&spark_core::router::metadata::MetadataValue>",
  "pub fn spark_core::router::metadata::RouteMetadata::insert(&mut self, key: spark_core::router::metadata::MetadataKey, value: spark_core::router::metadata::MetadataValue)",
  "pub fn spark_core::router::metadata::RouteMetadata::iter(&self) -> impl core::iter::traits::iterator::Iterator<Item = (&spark_core::router::metadata::MetadataKey, &spark_core::router::metadata::MetadataValue)>",
  "pub fn spark_core::router::metadata::RouteMetadata::new() -> Self",
  "impl core::clone::Clone for spark_core::router::metadata::RouteMetadata",
  "pub fn spark_core::router::metadata::RouteMetadata::clone(&self) -> spark_core::router::metadata::RouteMetadata",
  "impl core::cmp::PartialEq for spark_core::router::metadata::RouteMetadata",
  "pub fn spark_core::router::metadata::RouteMetadata::eq(&self, other: &spark_core::router::metadata::RouteMetadata) -> bool",
  "impl core::default::Default for spark_core::router::metadata::RouteMetadata",
  "pub fn spark_core::router::metadata::RouteMetadata::default() -> spark_core::router::metadata::RouteMetadata",
  "impl core::fmt::Debug for spark_core::router::metadata::RouteMetadata",
  "pub fn spark_core::router::metadata::RouteMetadata::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::router::metadata::RouteMetadata",
  "impl core::marker::Freeze for spark_core::router::metadata::RouteMetadata",
  "impl core::marker::Send for spark_core::router::metadata::RouteMetadata",
  "impl core::marker::Sync for spark_core::router::metadata::RouteMetadata",
  "impl core::marker::Unpin for spark_core::router::metadata::RouteMetadata",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::router::metadata::RouteMetadata",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::router::metadata::RouteMetadata",
  "pub mod spark_core::router::route",
  "#[non_exhaustive] pub enum spark_core::router::route::RouteKind",
  "pub spark_core::router::route::RouteKind::Control",
  "pub spark_core::router::route::RouteKind::Custom(alloc::borrow::Cow<'static, str>)",
  "pub spark_core::router::route::RouteKind::Message",
  "pub spark_core::router::route::RouteKind::Rpc",
  "pub spark_core::router::route::RouteKind::Stream",
  "impl core::clone::Clone for spark_core::router::route::RouteKind",
  "pub fn spark_core::router::route::RouteKind::clone(&self) -> spark_core::router::route::RouteKind",
  "impl core::cmp::Eq for spark_core::router::route::RouteKind",
  "impl core::cmp::Ord for spark_core::router::route::RouteKind",
  "pub fn spark_core::router::route::RouteKind::cmp(&self, other: &spark_core::router::route::RouteKind) -> core::cmp::Ordering",
  "impl core::cmp::PartialEq for spark_core::router::route::RouteKind",
  "pub fn spark_core::router::route::RouteKind::eq(&self, other: &spark_core::router::route::RouteKind) -> bool",
  "impl core::cmp::PartialOrd for spark_core::router::route::RouteKind",
  "pub fn spark_core::router::route::RouteKind::partial_cmp(&self, other: &spark_core::router::route::RouteKind) -> core::option::Option<core::cmp::Ordering>",
  "impl core::fmt::Debug for spark_core::router::route::RouteKind",
  "pub fn spark_core::router::route::RouteKind::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::router::route::RouteKind",
  "pub fn spark_core::router::route::RouteKind::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::StructuralPartialEq for spark_core::router::route::RouteKind",
  "impl core::marker::Freeze for spark_core::router::route::RouteKind",
  "impl core::marker::Send for spark_core::router::route::RouteKind",
  "impl core::marker::Sync for spark_core::router::route::RouteKind",
  "impl core::marker::Unpin for spark_core::router::route::RouteKind",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::router::route::RouteKind",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::router::route::RouteKind",
  "#[non_exhaustive] pub enum spark_core::router::route::RouteSegment",
  "pub spark_core::router::route::RouteSegment::Literal(alloc::borrow::Cow<'static, str>)",
  "pub spark_core::router::route::RouteSegment::Parameter(alloc::borrow::Cow<'static, str>)",
  "pub spark_core::router::route::RouteSegment::Wildcard",
  "impl core::clone::Clone for spark_core::router::route::RouteSegment",
  "pub fn spark_core::router::route::RouteSegment::clone(&self) -> spark_core::router::route::RouteSegment",
  "impl core::cmp::Eq for spark_core::router::route::RouteSegment",
  "impl core::cmp::Ord for spark_core::router::route::RouteSegment",
  "pub fn spark_core::router::route::RouteSegment::cmp(&self, other: &spark_core::router::route::RouteSegment) -> core::cmp::Ordering",
  "impl core::cmp::PartialEq for spark_core::router::route::RouteSegment",
  "pub fn spark_core::router::route::RouteSegment::eq(&self, other: &spark_core::router::route::RouteSegment) -> bool",
  "impl core::cmp::PartialOrd for spark_core::router::route::RouteSegment",
  "pub fn spark_core::router::route::RouteSegment::partial_cmp(&self, other: &spark_core::router::route::RouteSegment) -> core::option::Option<core::cmp::Ordering>",
  "impl core::fmt::Debug for spark_core::router::route::RouteSegment",
  "pub fn spark_core::router::route::RouteSegment::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::router::route::RouteSegment",
  "pub fn spark_core::router::route::RouteSegment::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::StructuralPartialEq for spark_core::router::route::RouteSegment",
  "impl core::marker::Freeze for spark_core::router::route::RouteSegment",
  "impl core::marker::Send for spark_core::router::route::RouteSegment",
  "impl core::marker::Sync for spark_core::router::route::RouteSegment",
  "impl core::marker::Unpin for spark_core::router::route::RouteSegment",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::router::route::RouteSegment",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::router::route::RouteSegment",
  "pub struct spark_core::router::route::RouteId",
  "impl spark_core::router::route::RouteId",
  "pub fn spark_core::router::route::RouteId::kind(&self) -> &spark_core::router::route::RouteKind",
  "pub fn spark_core::router::route::RouteId::new(kind: spark_core::router::route::RouteKind, segments: alloc::vec::Vec<alloc::borrow::Cow<'static, str>>) -> Self",
  "pub fn spark_core::router::route::RouteId::segments(&self) -> impl core::iter::traits::iterator::Iterator<Item = &alloc::borrow::Cow<'static, str>>",
  "impl core::clone::Clone for spark_core::router::route::RouteId",
  "pub fn spark_core::router::route::RouteId::clone(&self) -> spark_core::router::route::RouteId",
  "impl core::cmp::Eq for spark_core::router::route::RouteId",
  "impl core::cmp::Ord for spark_core::router::route::RouteId",
  "pub fn spark_core::router::route::RouteId::cmp(&self, other: &spark_core::router::route::RouteId) -> core::cmp::Ordering",
  "impl core::cmp::PartialEq for spark_core::router::route::RouteId",
  "pub fn spark_core::router::route::RouteId::eq(&self, other: &spark_core::router::route::RouteId) -> bool",
  "impl core::cmp::PartialOrd for spark_core::router::route::RouteId",
  "pub fn spark_core::router::route::RouteId::partial_cmp(&self, other: &spark_core::router::route::RouteId) -> core::option::Option<core::cmp::Ordering>",
  "impl core::fmt::Debug for spark_core::router::route::RouteId",
  "pub fn spark_core::router::route::RouteId::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::router::route::RouteId",
  "pub fn spark_core::router::route::RouteId::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::StructuralPartialEq for spark_core::router::route::RouteId",
  "impl core::marker::Freeze for spark_core::router::route::RouteId",
  "impl core::marker::Send for spark_core::router::route::RouteId",
  "impl core::marker::Sync for spark_core::router::route::RouteId",
  "impl core::marker::Unpin for spark_core::router::route::RouteId",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::router::route::RouteId",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::router::route::RouteId",
  "pub struct spark_core::router::route::RoutePattern",
  "impl spark_core::router::route::RoutePattern",
  "pub fn spark_core::router::route::RoutePattern::kind(&self) -> &spark_core::router::route::RouteKind",
  "pub fn spark_core::router::route::RoutePattern::new(kind: spark_core::router::route::RouteKind, segments: alloc::vec::Vec<spark_core::router::route::RouteSegment>) -> Self",
  "pub fn spark_core::router::route::RoutePattern::segments(&self) -> impl core::iter::traits::iterator::Iterator<Item = &spark_core::router::route::RouteSegment>",
  "impl core::clone::Clone for spark_core::router::route::RoutePattern",
  "pub fn spark_core::router::route::RoutePattern::clone(&self) -> spark_core::router::route::RoutePattern",
  "impl core::cmp::Eq for spark_core::router::route::RoutePattern",
  "impl core::cmp::PartialEq for spark_core::router::route::RoutePattern",
  "pub fn spark_core::router::route::RoutePattern::eq(&self, other: &spark_core::router::route::RoutePattern) -> bool",
  "impl core::fmt::Debug for spark_core::router::route::RoutePattern",
  "pub fn spark_core::router::route::RoutePattern::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::router::route::RoutePattern",
  "impl core::marker::Freeze for spark_core::router::route::RoutePattern",
  "impl core::marker::Send for spark_core::router::route::RoutePattern",
  "impl core::marker::Sync for spark_core::router::route::RoutePattern",
  "impl core::marker::Unpin for spark_core::router::route::RoutePattern",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::router::route::RoutePattern",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::router::route::RoutePattern",
  "pub mod spark_core::router::traits",
  "pub mod spark_core::router::traits::generic",
  "#[non_exhaustive] pub enum spark_core::router::traits::generic::RouteError<E> where E: spark_core::Error",
  "pub spark_core::router::traits::generic::RouteError::Internal(E)",
  "pub spark_core::router::traits::generic::RouteError::NotFound",
  "pub spark_core::router::traits::generic::RouteError::NotFound::metadata: spark_core::router::metadata::RouteMetadata",
  "pub spark_core::router::traits::generic::RouteError::NotFound::pattern: spark_core::router::route::RoutePattern",
  "pub spark_core::router::traits::generic::RouteError::PolicyDenied",
  "pub spark_core::router::traits::generic::RouteError::PolicyDenied::reason: alloc::borrow::Cow<'static, str>",
  "pub spark_core::router::traits::generic::RouteError::ServiceUnavailable",
  "pub spark_core::router::traits::generic::RouteError::ServiceUnavailable::id: spark_core::router::route::RouteId",
  "pub spark_core::router::traits::generic::RouteError::ServiceUnavailable::source: E",
  "impl<E> core::fmt::Debug for spark_core::router::traits::generic::RouteError<E> where E: spark_core::Error + core::fmt::Debug",
  "pub fn spark_core::router::traits::generic::RouteError<E>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<E> core::marker::Freeze for spark_core::router::traits::generic::RouteError<E> where E: core::marker::Freeze",
  "impl<E> core::marker::Send for spark_core::router::traits::generic::RouteError<E> where E: core::marker::Send",
  "impl<E> core::marker::Sync for spark_core::router::traits::generic::RouteError<E> where E: core::marker::Sync",
  "impl<E> core::marker::Unpin for spark_core::router::traits::generic::RouteError<E> where E: core::marker::Unpin",
  "impl<E> core::panic::unwind_safe::RefUnwindSafe for spark_core::router::traits::generic::RouteError<E> where E: core::panic::unwind_safe::RefUnwindSafe",
  "impl<E> core::panic::unwind_safe::UnwindSafe for spark_core::router::traits::generic::RouteError<E> where E: core::panic::unwind_safe::UnwindSafe",
  "pub trait spark_core::router::traits::generic::Router<Request>: Sealed",
  "pub type spark_core::router::traits::generic::Router::Error: spark_core::Error",
  "pub type spark_core::router::traits::generic::Router::Service: spark_core::service::traits::generic::Service<Request>",
  "pub fn spark_core::router::traits::generic::Router::route(&self, context: spark_core::router::context::RoutingContext<'_, Request>) -> core::result::Result<spark_core::router::binding::RouteDecision<Self::Service, Request>, spark_core::router::traits::generic::RouteError<Self::Error>>",
  "pub fn spark_core::router::traits::generic::Router::snapshot(&self) -> spark_core::router::context::RoutingSnapshot<'_>",
  "pub fn spark_core::router::traits::generic::Router::validate(&self, descriptor: &spark_core::router::catalog::RouteDescriptor) -> spark_core::router::binding::RouteValidation",
  "pub mod spark_core::router::traits::object",
  "pub struct spark_core::router::traits::object::RouteBindingObject",
  "impl spark_core::router::traits::object::RouteBindingObject",
  "pub fn spark_core::router::traits::object::RouteBindingObject::effective_qos(&self) -> core::option::Option<spark_core::transport::intent::QualityOfService>",
  "pub fn spark_core::router::traits::object::RouteBindingObject::effective_security(&self) -> core::option::Option<&spark_core::transport::intent::SecurityMode>",
  "pub fn spark_core::router::traits::object::RouteBindingObject::id(&self) -> &spark_core::router::route::RouteId",
  "pub fn spark_core::router::traits::object::RouteBindingObject::metadata(&self) -> &spark_core::router::metadata::RouteMetadata",
  "pub fn spark_core::router::traits::object::RouteBindingObject::new(id: spark_core::router::route::RouteId, service: spark_core::service::traits::object::BoxService, metadata: spark_core::router::metadata::RouteMetadata, effective_qos: core::option::Option<spark_core::transport::intent::QualityOfService>, effective_security: core::option::Option<spark_core::transport::intent::SecurityMode>) -> Self",
  "pub fn spark_core::router::traits::object::RouteBindingObject::service(&self) -> &spark_core::service::traits::object::BoxService",
  "impl core::clone::Clone for spark_core::router::traits::object::RouteBindingObject",
  "pub fn spark_core::router::traits::object::RouteBindingObject::clone(&self) -> spark_core::router::traits::object::RouteBindingObject",
  "impl core::fmt::Debug for spark_core::router::traits::object::RouteBindingObject",
  "pub fn spark_core::router::traits::object::RouteBindingObject::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::router::traits::object::RouteBindingObject",
  "impl core::marker::Send for spark_core::router::traits::object::RouteBindingObject",
  "impl core::marker::Sync for spark_core::router::traits::object::RouteBindingObject",
  "impl core::marker::Unpin for spark_core::router::traits::object::RouteBindingObject",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::router::traits::object::RouteBindingObject",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::router::traits::object::RouteBindingObject",
  "pub struct spark_core::router::traits::object::RouteDecisionObject",
  "impl spark_core::router::traits::object::RouteDecisionObject",
  "pub fn spark_core::router::traits::object::RouteDecisionObject::binding(&self) -> &spark_core::router::traits::object::RouteBindingObject",
  "pub fn spark_core::router::traits::object::RouteDecisionObject::new(binding: spark_core::router::traits::object::RouteBindingObject, warnings: alloc::vec::Vec<alloc::borrow::Cow<'static, str>>) -> Self",
  "pub fn spark_core::router::traits::object::RouteDecisionObject::warnings(&self) -> &[alloc::borrow::Cow<'static, str>]",
  "impl core::clone::Clone for spark_core::router::traits::object::RouteDecisionObject",
  "pub fn spark_core::router::traits::object::RouteDecisionObject::clone(&self) -> spark_core::router::traits::object::RouteDecisionObject",
  "impl core::fmt::Debug for spark_core::router::traits::object::RouteDecisionObject",
  "pub fn spark_core::router::traits::object::RouteDecisionObject::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::router::traits::object::RouteDecisionObject",
  "impl core::marker::Send for spark_core::router::traits::object::RouteDecisionObject",
  "impl core::marker::Sync for spark_core::router::traits::object::RouteDecisionObject",
  "impl core::marker::Unpin for spark_core::router::traits::object::RouteDecisionObject",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::router::traits::object::RouteDecisionObject",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::router::traits::object::RouteDecisionObject",
  "pub struct spark_core::router::traits::object::RouterObject<R, Adapter> where R: spark_core::router::traits::generic::Router<spark_core::buffer::message::PipelineMessage, Error = spark_core::error::SparkError> + core::marker::Send + core::marker::Sync, Adapter: core::ops::function::Fn(spark_core::router::binding::RouteBinding<<R as spark_core::router::traits::generic::Router>::Service, spark_core::buffer::message::PipelineMessage>) -> core::result::Result<spark_core::router::traits::object::RouteBindingObject, spark_core::error::SparkError> + core::marker::Send + core::marker::Sync + 'static",
  "impl<R, Adapter> spark_core::router::traits::object::RouterObject<R, Adapter> where R: spark_core::router::traits::generic::Router<spark_core::buffer::message::PipelineMessage, Error = spark_core::error::SparkError> + core::marker::Send + core::marker::Sync, Adapter: core::ops::function::Fn(spark_core::router::binding::RouteBinding<<R as spark_core::router::traits::generic::Router>::Service, spark_core::buffer::message::PipelineMessage>) -> core::result::Result<spark_core::router::traits::object::RouteBindingObject, spark_core::error::SparkError> + core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::router::traits::object::RouterObject<R, Adapter>::new(inner: R, service_adapter: Adapter) -> Self",
  "impl<R, Adapter> spark_core::router::traits::object::DynRouter for spark_core::router::traits::object::RouterObject<R, Adapter> where R: spark_core::router::traits::generic::Router<spark_core::buffer::message::PipelineMessage, Error = spark_core::error::SparkError> + core::marker::Send + core::marker::Sync, Adapter: core::ops::function::Fn(spark_core::router::binding::RouteBinding<<R as spark_core::router::traits::generic::Router>::Service, spark_core::buffer::message::PipelineMessage>) -> core::result::Result<spark_core::router::traits::object::RouteBindingObject, spark_core::error::SparkError> + core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::router::traits::object::RouterObject<R, Adapter>::route_dyn(&self, context: spark_core::router::context::RoutingContext<'_, spark_core::buffer::message::PipelineMessage>) -> core::result::Result<spark_core::router::traits::object::RouteDecisionObject, spark_core::router::traits::generic::RouteError<spark_core::error::SparkError>>",
  "pub fn spark_core::router::traits::object::RouterObject<R, Adapter>::snapshot(&self) -> spark_core::router::context::RoutingSnapshot<'_>",
  "pub fn spark_core::router::traits::object::RouterObject<R, Adapter>::validate(&self, descriptor: &spark_core::router::catalog::RouteDescriptor) -> spark_core::router::binding::RouteValidation",
  "impl<R, Adapter> core::marker::Freeze for spark_core::router::traits::object::RouterObject<R, Adapter> where R: core::marker::Freeze",
  "impl<R, Adapter> core::marker::Send for spark_core::router::traits::object::RouterObject<R, Adapter>",
  "impl<R, Adapter> core::marker::Sync for spark_core::router::traits::object::RouterObject<R, Adapter>",
  "impl<R, Adapter> core::marker::Unpin for spark_core::router::traits::object::RouterObject<R, Adapter> where R: core::marker::Unpin",
  "impl<R, Adapter> core::panic::unwind_safe::RefUnwindSafe for spark_core::router::traits::object::RouterObject<R, Adapter> where R: core::panic::unwind_safe::RefUnwindSafe, Adapter: core::panic::unwind_safe::RefUnwindSafe",
  "impl<R, Adapter> core::panic::unwind_safe::UnwindSafe for spark_core::router::traits::object::RouterObject<R, Adapter> where R: core::panic::unwind_safe::UnwindSafe, Adapter: core::panic::unwind_safe::RefUnwindSafe",
  "pub trait spark_core::router::traits::object::DynRouter: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::router::traits::object::DynRouter::route_dyn(&self, context: spark_core::router::context::RoutingContext<'_, spark_core::buffer::message::PipelineMessage>) -> core::result::Result<spark_core::router::traits::object::RouteDecisionObject, spark_core::router::traits::generic::RouteError<spark_core::error::SparkError>>",
  "pub fn spark_core::router::traits::object::DynRouter::snapshot(&self) -> spark_core::router::context::RoutingSnapshot<'_>",
  "pub fn spark_core::router::traits::object::DynRouter::validate(&self, descriptor: &spark_core::router::catalog::RouteDescriptor) -> spark_core::router::binding::RouteValidation",
  "impl<R, Adapter> spark_core::router::traits::object::DynRouter for spark_core::router::traits::object::RouterObject<R, Adapter> where R: spark_core::router::traits::generic::Router<spark_core::buffer::message::PipelineMessage, Error = spark_core::error::SparkError> + core::marker::Send + core::marker::Sync, Adapter: core::ops::function::Fn(spark_core::router::binding::RouteBinding<<R as spark_core::router::traits::generic::Router>::Service, spark_core::buffer::message::PipelineMessage>) -> core::result::Result<spark_core::router::traits::object::RouteBindingObject, spark_core::error::SparkError> + core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::router::traits::object::RouterObject<R, Adapter>::route_dyn(&self, context: spark_core::router::context::RoutingContext<'_, spark_core::buffer::message::PipelineMessage>) -> core::result::Result<spark_core::router::traits::object::RouteDecisionObject, spark_core::router::traits::generic::RouteError<spark_core::error::SparkError>>",
  "pub fn spark_core::router::traits::object::RouterObject<R, Adapter>::snapshot(&self) -> spark_core::router::context::RoutingSnapshot<'_>",
  "pub fn spark_core::router::traits::object::RouterObject<R, Adapter>::validate(&self, descriptor: &spark_core::router::catalog::RouteDescriptor) -> spark_core::router::binding::RouteValidation",
  "#[non_exhaustive] pub enum spark_core::router::traits::RouteError<E> where E: spark_core::Error",
  "pub spark_core::router::traits::RouteError::Internal(E)",
  "pub spark_core::router::traits::RouteError::NotFound",
  "pub spark_core::router::traits::RouteError::NotFound::metadata: spark_core::router::metadata::RouteMetadata",
  "pub spark_core::router::traits::RouteError::NotFound::pattern: spark_core::router::route::RoutePattern",
  "pub spark_core::router::traits::RouteError::PolicyDenied",
  "pub spark_core::router::traits::RouteError::PolicyDenied::reason: alloc::borrow::Cow<'static, str>",
  "pub spark_core::router::traits::RouteError::ServiceUnavailable",
  "pub spark_core::router::traits::RouteError::ServiceUnavailable::id: spark_core::router::route::RouteId",
  "pub spark_core::router::traits::RouteError::ServiceUnavailable::source: E",
  "impl<E> core::fmt::Debug for spark_core::router::traits::generic::RouteError<E> where E: spark_core::Error + core::fmt::Debug",
  "pub fn spark_core::router::traits::generic::RouteError<E>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<E> core::marker::Freeze for spark_core::router::traits::generic::RouteError<E> where E: core::marker::Freeze",
  "impl<E> core::marker::Send for spark_core::router::traits::generic::RouteError<E> where E: core::marker::Send",
  "impl<E> core::marker::Sync for spark_core::router::traits::generic::RouteError<E> where E: core::marker::Sync",
  "impl<E> core::marker::Unpin for spark_core::router::traits::generic::RouteError<E> where E: core::marker::Unpin",
  "impl<E> core::panic::unwind_safe::RefUnwindSafe for spark_core::router::traits::generic::RouteError<E> where E: core::panic::unwind_safe::RefUnwindSafe",
  "impl<E> core::panic::unwind_safe::UnwindSafe for spark_core::router::traits::generic::RouteError<E> where E: core::panic::unwind_safe::UnwindSafe",
  "pub struct spark_core::router::traits::RouteBindingObject",
  "impl spark_core::router::traits::object::RouteBindingObject",
  "pub fn spark_core::router::traits::object::RouteBindingObject::effective_qos(&self) -> core::option::Option<spark_core::transport::intent::QualityOfService>",
  "pub fn spark_core::router::traits::object::RouteBindingObject::effective_security(&self) -> core::option::Option<&spark_core::transport::intent::SecurityMode>",
  "pub fn spark_core::router::traits::object::RouteBindingObject::id(&self) -> &spark_core::router::route::RouteId",
  "pub fn spark_core::router::traits::object::RouteBindingObject::metadata(&self) -> &spark_core::router::metadata::RouteMetadata",
  "pub fn spark_core::router::traits::object::RouteBindingObject::new(id: spark_core::router::route::RouteId, service: spark_core::service::traits::object::BoxService, metadata: spark_core::router::metadata::RouteMetadata, effective_qos: core::option::Option<spark_core::transport::intent::QualityOfService>, effective_security: core::option::Option<spark_core::transport::intent::SecurityMode>) -> Self",
  "pub fn spark_core::router::traits::object::RouteBindingObject::service(&self) -> &spark_core::service::traits::object::BoxService",
  "impl core::clone::Clone for spark_core::router::traits::object::RouteBindingObject",
  "pub fn spark_core::router::traits::object::RouteBindingObject::clone(&self) -> spark_core::router::traits::object::RouteBindingObject",
  "impl core::fmt::Debug for spark_core::router::traits::object::RouteBindingObject",
  "pub fn spark_core::router::traits::object::RouteBindingObject::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::router::traits::object::RouteBindingObject",
  "impl core::marker::Send for spark_core::router::traits::object::RouteBindingObject",
  "impl core::marker::Sync for spark_core::router::traits::object::RouteBindingObject",
  "impl core::marker::Unpin for spark_core::router::traits::object::RouteBindingObject",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::router::traits::object::RouteBindingObject",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::router::traits::object::RouteBindingObject",
  "pub struct spark_core::router::traits::RouteDecisionObject",
  "impl spark_core::router::traits::object::RouteDecisionObject",
  "pub fn spark_core::router::traits::object::RouteDecisionObject::binding(&self) -> &spark_core::router::traits::object::RouteBindingObject",
  "pub fn spark_core::router::traits::object::RouteDecisionObject::new(binding: spark_core::router::traits::object::RouteBindingObject, warnings: alloc::vec::Vec<alloc::borrow::Cow<'static, str>>) -> Self",
  "pub fn spark_core::router::traits::object::RouteDecisionObject::warnings(&self) -> &[alloc::borrow::Cow<'static, str>]",
  "impl core::clone::Clone for spark_core::router::traits::object::RouteDecisionObject",
  "pub fn spark_core::router::traits::object::RouteDecisionObject::clone(&self) -> spark_core::router::traits::object::RouteDecisionObject",
  "impl core::fmt::Debug for spark_core::router::traits::object::RouteDecisionObject",
  "pub fn spark_core::router::traits::object::RouteDecisionObject::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::router::traits::object::RouteDecisionObject",
  "impl core::marker::Send for spark_core::router::traits::object::RouteDecisionObject",
  "impl core::marker::Sync for spark_core::router::traits::object::RouteDecisionObject",
  "impl core::marker::Unpin for spark_core::router::traits::object::RouteDecisionObject",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::router::traits::object::RouteDecisionObject",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::router::traits::object::RouteDecisionObject",
  "pub struct spark_core::router::traits::RouterObject<R, Adapter> where R: spark_core::router::traits::generic::Router<spark_core::buffer::message::PipelineMessage, Error = spark_core::error::SparkError> + core::marker::Send + core::marker::Sync, Adapter: core::ops::function::Fn(spark_core::router::binding::RouteBinding<<R as spark_core::router::traits::generic::Router>::Service, spark_core::buffer::message::PipelineMessage>) -> core::result::Result<spark_core::router::traits::object::RouteBindingObject, spark_core::error::SparkError> + core::marker::Send + core::marker::Sync + 'static",
  "impl<R, Adapter> spark_core::router::traits::object::RouterObject<R, Adapter> where R: spark_core::router::traits::generic::Router<spark_core::buffer::message::PipelineMessage, Error = spark_core::error::SparkError> + core::marker::Send + core::marker::Sync, Adapter: core::ops::function::Fn(spark_core::router::binding::RouteBinding<<R as spark_core::router::traits::generic::Router>::Service, spark_core::buffer::message::PipelineMessage>) -> core::result::Result<spark_core::router::traits::object::RouteBindingObject, spark_core::error::SparkError> + core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::router::traits::object::RouterObject<R, Adapter>::new(inner: R, service_adapter: Adapter) -> Self",
  "impl<R, Adapter> spark_core::router::traits::object::DynRouter for spark_core::router::traits::object::RouterObject<R, Adapter> where R: spark_core::router::traits::generic::Router<spark_core::buffer::message::PipelineMessage, Error = spark_core::error::SparkError> + core::marker::Send + core::marker::Sync, Adapter: core::ops::function::Fn(spark_core::router::binding::RouteBinding<<R as spark_core::router::traits::generic::Router>::Service, spark_core::buffer::message::PipelineMessage>) -> core::result::Result<spark_core::router::traits::object::RouteBindingObject, spark_core::error::SparkError> + core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::router::traits::object::RouterObject<R, Adapter>::route_dyn(&self, context: spark_core::router::context::RoutingContext<'_, spark_core::buffer::message::PipelineMessage>) -> core::result::Result<spark_core::router::traits::object::RouteDecisionObject, spark_core::router::traits::generic::RouteError<spark_core::error::SparkError>>",
  "pub fn spark_core::router::traits::object::RouterObject<R, Adapter>::snapshot(&self) -> spark_core::router::context::RoutingSnapshot<'_>",
  "pub fn spark_core::router::traits::object::RouterObject<R, Adapter>::validate(&self, descriptor: &spark_core::router::catalog::RouteDescriptor) -> spark_core::router::binding::RouteValidation",
  "impl<R, Adapter> core::marker::Freeze for spark_core::router::traits::object::RouterObject<R, Adapter> where R: core::marker::Freeze",
  "impl<R, Adapter> core::marker::Send for spark_core::router::traits::object::RouterObject<R, Adapter>",
  "impl<R, Adapter> core::marker::Sync for spark_core::router::traits::object::RouterObject<R, Adapter>",
  "impl<R, Adapter> core::marker::Unpin for spark_core::router::traits::object::RouterObject<R, Adapter> where R: core::marker::Unpin",
  "impl<R, Adapter> core::panic::unwind_safe::RefUnwindSafe for spark_core::router::traits::object::RouterObject<R, Adapter> where R: core::panic::unwind_safe::RefUnwindSafe, Adapter: core::panic::unwind_safe::RefUnwindSafe",
  "impl<R, Adapter> core::panic::unwind_safe::UnwindSafe for spark_core::router::traits::object::RouterObject<R, Adapter> where R: core::panic::unwind_safe::UnwindSafe, Adapter: core::panic::unwind_safe::RefUnwindSafe",
  "pub trait spark_core::router::traits::DynRouter: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::router::traits::DynRouter::route_dyn(&self, context: spark_core::router::context::RoutingContext<'_, spark_core::buffer::message::PipelineMessage>) -> core::result::Result<spark_core::router::traits::object::RouteDecisionObject, spark_core::router::traits::generic::RouteError<spark_core::error::SparkError>>",
  "pub fn spark_core::router::traits::DynRouter::snapshot(&self) -> spark_core::router::context::RoutingSnapshot<'_>",
  "pub fn spark_core::router::traits::DynRouter::validate(&self, descriptor: &spark_core::router::catalog::RouteDescriptor) -> spark_core::router::binding::RouteValidation",
  "impl<R, Adapter> spark_core::router::traits::object::DynRouter for spark_core::router::traits::object::RouterObject<R, Adapter> where R: spark_core::router::traits::generic::Router<spark_core::buffer::message::PipelineMessage, Error = spark_core::error::SparkError> + core::marker::Send + core::marker::Sync, Adapter: core::ops::function::Fn(spark_core::router::binding::RouteBinding<<R as spark_core::router::traits::generic::Router>::Service, spark_core::buffer::message::PipelineMessage>) -> core::result::Result<spark_core::router::traits::object::RouteBindingObject, spark_core::error::SparkError> + core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::router::traits::object::RouterObject<R, Adapter>::route_dyn(&self, context: spark_core::router::context::RoutingContext<'_, spark_core::buffer::message::PipelineMessage>) -> core::result::Result<spark_core::router::traits::object::RouteDecisionObject, spark_core::router::traits::generic::RouteError<spark_core::error::SparkError>>",
  "pub fn spark_core::router::traits::object::RouterObject<R, Adapter>::snapshot(&self) -> spark_core::router::context::RoutingSnapshot<'_>",
  "pub fn spark_core::router::traits::object::RouterObject<R, Adapter>::validate(&self, descriptor: &spark_core::router::catalog::RouteDescriptor) -> spark_core::router::binding::RouteValidation",
  "pub trait spark_core::router::traits::Router<Request>: Sealed",
  "pub type spark_core::router::traits::Router::Error: spark_core::Error",
  "pub type spark_core::router::traits::Router::Service: spark_core::service::traits::generic::Service<Request>",
  "pub fn spark_core::router::traits::Router::route(&self, context: spark_core::router::context::RoutingContext<'_, Request>) -> core::result::Result<spark_core::router::binding::RouteDecision<Self::Service, Request>, spark_core::router::traits::generic::RouteError<Self::Error>>",
  "pub fn spark_core::router::traits::Router::snapshot(&self) -> spark_core::router::context::RoutingSnapshot<'_>",
  "pub fn spark_core::router::traits::Router::validate(&self, descriptor: &spark_core::router::catalog::RouteDescriptor) -> spark_core::router::binding::RouteValidation",
  "#[non_exhaustive] pub enum spark_core::router::MetadataValue",
  "pub spark_core::router::MetadataValue::Boolean(bool)",
  "pub spark_core::router::MetadataValue::Float(f64)",
  "pub spark_core::router::MetadataValue::Integer(i64)",
  "pub spark_core::router::MetadataValue::List(alloc::vec::Vec<spark_core::router::metadata::MetadataValue>)",
  "pub spark_core::router::MetadataValue::Text(alloc::borrow::Cow<'static, str>)",
  "impl core::clone::Clone for spark_core::router::metadata::MetadataValue",
  "pub fn spark_core::router::metadata::MetadataValue::clone(&self) -> spark_core::router::metadata::MetadataValue",
  "impl core::cmp::PartialEq for spark_core::router::metadata::MetadataValue",
  "pub fn spark_core::router::metadata::MetadataValue::eq(&self, other: &spark_core::router::metadata::MetadataValue) -> bool",
  "impl core::fmt::Debug for spark_core::router::metadata::MetadataValue",
  "pub fn spark_core::router::metadata::MetadataValue::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::router::metadata::MetadataValue",
  "impl core::marker::Freeze for spark_core::router::metadata::MetadataValue",
  "impl core::marker::Send for spark_core::router::metadata::MetadataValue",
  "impl core::marker::Sync for spark_core::router::metadata::MetadataValue",
  "impl core::marker::Unpin for spark_core::router::metadata::MetadataValue",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::router::metadata::MetadataValue",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::router::metadata::MetadataValue",
  "#[non_exhaustive] pub enum spark_core::router::RouteError<E> where E: spark_core::Error",
  "pub spark_core::router::RouteError::Internal(E)",
  "pub spark_core::router::RouteError::NotFound",
  "pub spark_core::router::RouteError::NotFound::metadata: spark_core::router::metadata::RouteMetadata",
  "pub spark_core::router::RouteError::NotFound::pattern: spark_core::router::route::RoutePattern",
  "pub spark_core::router::RouteError::PolicyDenied",
  "pub spark_core::router::RouteError::PolicyDenied::reason: alloc::borrow::Cow<'static, str>",
  "pub spark_core::router::RouteError::ServiceUnavailable",
  "pub spark_core::router::RouteError::ServiceUnavailable::id: spark_core::router::route::RouteId",
  "pub spark_core::router::RouteError::ServiceUnavailable::source: E",
  "impl<E> core::fmt::Debug for spark_core::router::traits::generic::RouteError<E> where E: spark_core::Error + core::fmt::Debug",
  "pub fn spark_core::router::traits::generic::RouteError<E>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<E> core::marker::Freeze for spark_core::router::traits::generic::RouteError<E> where E: core::marker::Freeze",
  "impl<E> core::marker::Send for spark_core::router::traits::generic::RouteError<E> where E: core::marker::Send",
  "impl<E> core::marker::Sync for spark_core::router::traits::generic::RouteError<E> where E: core::marker::Sync",
  "impl<E> core::marker::Unpin for spark_core::router::traits::generic::RouteError<E> where E: core::marker::Unpin",
  "impl<E> core::panic::unwind_safe::RefUnwindSafe for spark_core::router::traits::generic::RouteError<E> where E: core::panic::unwind_safe::RefUnwindSafe",
  "impl<E> core::panic::unwind_safe::UnwindSafe for spark_core::router::traits::generic::RouteError<E> where E: core::panic::unwind_safe::UnwindSafe",
  "#[non_exhaustive] pub enum spark_core::router::RouteKind",
  "pub spark_core::router::RouteKind::Control",
  "pub spark_core::router::RouteKind::Custom(alloc::borrow::Cow<'static, str>)",
  "pub spark_core::router::RouteKind::Message",
  "pub spark_core::router::RouteKind::Rpc",
  "pub spark_core::router::RouteKind::Stream",
  "impl core::clone::Clone for spark_core::router::route::RouteKind",
  "pub fn spark_core::router::route::RouteKind::clone(&self) -> spark_core::router::route::RouteKind",
  "impl core::cmp::Eq for spark_core::router::route::RouteKind",
  "impl core::cmp::Ord for spark_core::router::route::RouteKind",
  "pub fn spark_core::router::route::RouteKind::cmp(&self, other: &spark_core::router::route::RouteKind) -> core::cmp::Ordering",
  "impl core::cmp::PartialEq for spark_core::router::route::RouteKind",
  "pub fn spark_core::router::route::RouteKind::eq(&self, other: &spark_core::router::route::RouteKind) -> bool",
  "impl core::cmp::PartialOrd for spark_core::router::route::RouteKind",
  "pub fn spark_core::router::route::RouteKind::partial_cmp(&self, other: &spark_core::router::route::RouteKind) -> core::option::Option<core::cmp::Ordering>",
  "impl core::fmt::Debug for spark_core::router::route::RouteKind",
  "pub fn spark_core::router::route::RouteKind::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::router::route::RouteKind",
  "pub fn spark_core::router::route::RouteKind::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::StructuralPartialEq for spark_core::router::route::RouteKind",
  "impl core::marker::Freeze for spark_core::router::route::RouteKind",
  "impl core::marker::Send for spark_core::router::route::RouteKind",
  "impl core::marker::Sync for spark_core::router::route::RouteKind",
  "impl core::marker::Unpin for spark_core::router::route::RouteKind",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::router::route::RouteKind",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::router::route::RouteKind",
  "#[non_exhaustive] pub enum spark_core::router::RouteSegment",
  "pub spark_core::router::RouteSegment::Literal(alloc::borrow::Cow<'static, str>)",
  "pub spark_core::router::RouteSegment::Parameter(alloc::borrow::Cow<'static, str>)",
  "pub spark_core::router::RouteSegment::Wildcard",
  "impl core::clone::Clone for spark_core::router::route::RouteSegment",
  "pub fn spark_core::router::route::RouteSegment::clone(&self) -> spark_core::router::route::RouteSegment",
  "impl core::cmp::Eq for spark_core::router::route::RouteSegment",
  "impl core::cmp::Ord for spark_core::router::route::RouteSegment",
  "pub fn spark_core::router::route::RouteSegment::cmp(&self, other: &spark_core::router::route::RouteSegment) -> core::cmp::Ordering",
  "impl core::cmp::PartialEq for spark_core::router::route::RouteSegment",
  "pub fn spark_core::router::route::RouteSegment::eq(&self, other: &spark_core::router::route::RouteSegment) -> bool",
  "impl core::cmp::PartialOrd for spark_core::router::route::RouteSegment",
  "pub fn spark_core::router::route::RouteSegment::partial_cmp(&self, other: &spark_core::router::route::RouteSegment) -> core::option::Option<core::cmp::Ordering>",
  "impl core::fmt::Debug for spark_core::router::route::RouteSegment",
  "pub fn spark_core::router::route::RouteSegment::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::router::route::RouteSegment",
  "pub fn spark_core::router::route::RouteSegment::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::StructuralPartialEq for spark_core::router::route::RouteSegment",
  "impl core::marker::Freeze for spark_core::router::route::RouteSegment",
  "impl core::marker::Send for spark_core::router::route::RouteSegment",
  "impl core::marker::Sync for spark_core::router::route::RouteSegment",
  "impl core::marker::Unpin for spark_core::router::route::RouteSegment",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::router::route::RouteSegment",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::router::route::RouteSegment",
  "pub struct spark_core::router::MetadataKey(_)",
  "impl spark_core::router::metadata::MetadataKey",
  "pub fn spark_core::router::metadata::MetadataKey::as_str(&self) -> &str",
  "pub fn spark_core::router::metadata::MetadataKey::new(key: alloc::borrow::Cow<'static, str>) -> Self",
  "impl core::clone::Clone for spark_core::router::metadata::MetadataKey",
  "pub fn spark_core::router::metadata::MetadataKey::clone(&self) -> spark_core::router::metadata::MetadataKey",
  "impl core::cmp::Eq for spark_core::router::metadata::MetadataKey",
  "impl core::cmp::Ord for spark_core::router::metadata::MetadataKey",
  "pub fn spark_core::router::metadata::MetadataKey::cmp(&self, other: &spark_core::router::metadata::MetadataKey) -> core::cmp::Ordering",
  "impl core::cmp::PartialEq for spark_core::router::metadata::MetadataKey",
  "pub fn spark_core::router::metadata::MetadataKey::eq(&self, other: &spark_core::router::metadata::MetadataKey) -> bool",
  "impl core::cmp::PartialOrd for spark_core::router::metadata::MetadataKey",
  "pub fn spark_core::router::metadata::MetadataKey::partial_cmp(&self, other: &spark_core::router::metadata::MetadataKey) -> core::option::Option<core::cmp::Ordering>",
  "impl core::fmt::Debug for spark_core::router::metadata::MetadataKey",
  "pub fn spark_core::router::metadata::MetadataKey::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::router::metadata::MetadataKey",
  "pub fn spark_core::router::metadata::MetadataKey::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::StructuralPartialEq for spark_core::router::metadata::MetadataKey",
  "impl core::marker::Freeze for spark_core::router::metadata::MetadataKey",
  "impl core::marker::Send for spark_core::router::metadata::MetadataKey",
  "impl core::marker::Sync for spark_core::router::metadata::MetadataKey",
  "impl core::marker::Unpin for spark_core::router::metadata::MetadataKey",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::router::metadata::MetadataKey",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::router::metadata::MetadataKey",
  "pub struct spark_core::router::RouteBinding<S, Request> where S: spark_core::service::traits::generic::Service<Request>",
  "impl<S, Request> spark_core::router::binding::RouteBinding<S, Request> where S: spark_core::service::traits::generic::Service<Request>",
  "pub fn spark_core::router::binding::RouteBinding<S, Request>::effective_qos(&self) -> core::option::Option<spark_core::transport::intent::QualityOfService>",
  "pub fn spark_core::router::binding::RouteBinding<S, Request>::effective_security(&self) -> core::option::Option<&spark_core::transport::intent::SecurityMode>",
  "pub fn spark_core::router::binding::RouteBinding<S, Request>::id(&self) -> &spark_core::router::route::RouteId",
  "pub fn spark_core::router::binding::RouteBinding<S, Request>::metadata(&self) -> &spark_core::router::metadata::RouteMetadata",
  "pub fn spark_core::router::binding::RouteBinding<S, Request>::new(id: spark_core::router::route::RouteId, service: S, metadata: spark_core::router::metadata::RouteMetadata, effective_qos: core::option::Option<spark_core::transport::intent::QualityOfService>, effective_security: core::option::Option<spark_core::transport::intent::SecurityMode>) -> Self",
  "pub fn spark_core::router::binding::RouteBinding<S, Request>::service(&self) -> &S",
  "pub fn spark_core::router::binding::RouteBinding<S, Request>::service_mut(&mut self) -> &mut S",
  "impl<S, Request> core::fmt::Debug for spark_core::router::binding::RouteBinding<S, Request> where S: spark_core::service::traits::generic::Service<Request>",
  "pub fn spark_core::router::binding::RouteBinding<S, Request>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<S, Request> core::marker::Freeze for spark_core::router::binding::RouteBinding<S, Request> where S: core::marker::Freeze",
  "impl<S, Request> core::marker::Send for spark_core::router::binding::RouteBinding<S, Request> where Request: core::marker::Send",
  "impl<S, Request> core::marker::Sync for spark_core::router::binding::RouteBinding<S, Request> where Request: core::marker::Sync",
  "impl<S, Request> core::marker::Unpin for spark_core::router::binding::RouteBinding<S, Request> where S: core::marker::Unpin, Request: core::marker::Unpin",
  "impl<S, Request> core::panic::unwind_safe::RefUnwindSafe for spark_core::router::binding::RouteBinding<S, Request> where S: core::panic::unwind_safe::RefUnwindSafe, Request: core::panic::unwind_safe::RefUnwindSafe",
  "impl<S, Request> core::panic::unwind_safe::UnwindSafe for spark_core::router::binding::RouteBinding<S, Request> where S: core::panic::unwind_safe::UnwindSafe, Request: core::panic::unwind_safe::UnwindSafe",
  "pub struct spark_core::router::RouteBindingObject",
  "impl spark_core::router::traits::object::RouteBindingObject",
  "pub fn spark_core::router::traits::object::RouteBindingObject::effective_qos(&self) -> core::option::Option<spark_core::transport::intent::QualityOfService>",
  "pub fn spark_core::router::traits::object::RouteBindingObject::effective_security(&self) -> core::option::Option<&spark_core::transport::intent::SecurityMode>",
  "pub fn spark_core::router::traits::object::RouteBindingObject::id(&self) -> &spark_core::router::route::RouteId",
  "pub fn spark_core::router::traits::object::RouteBindingObject::metadata(&self) -> &spark_core::router::metadata::RouteMetadata",
  "pub fn spark_core::router::traits::object::RouteBindingObject::new(id: spark_core::router::route::RouteId, service: spark_core::service::traits::object::BoxService, metadata: spark_core::router::metadata::RouteMetadata, effective_qos: core::option::Option<spark_core::transport::intent::QualityOfService>, effective_security: core::option::Option<spark_core::transport::intent::SecurityMode>) -> Self",
  "pub fn spark_core::router::traits::object::RouteBindingObject::service(&self) -> &spark_core::service::traits::object::BoxService",
  "impl core::clone::Clone for spark_core::router::traits::object::RouteBindingObject",
  "pub fn spark_core::router::traits::object::RouteBindingObject::clone(&self) -> spark_core::router::traits::object::RouteBindingObject",
  "impl core::fmt::Debug for spark_core::router::traits::object::RouteBindingObject",
  "pub fn spark_core::router::traits::object::RouteBindingObject::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::router::traits::object::RouteBindingObject",
  "impl core::marker::Send for spark_core::router::traits::object::RouteBindingObject",
  "impl core::marker::Sync for spark_core::router::traits::object::RouteBindingObject",
  "impl core::marker::Unpin for spark_core::router::traits::object::RouteBindingObject",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::router::traits::object::RouteBindingObject",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::router::traits::object::RouteBindingObject",
  "pub struct spark_core::router::RouteCatalog",
  "impl spark_core::router::catalog::RouteCatalog",
  "pub fn spark_core::router::catalog::RouteCatalog::iter(&self) -> impl core::iter::traits::iterator::Iterator<Item = &spark_core::router::catalog::RouteDescriptor>",
  "pub fn spark_core::router::catalog::RouteCatalog::new() -> Self",
  "pub fn spark_core::router::catalog::RouteCatalog::push(&mut self, descriptor: spark_core::router::catalog::RouteDescriptor)",
  "impl core::clone::Clone for spark_core::router::catalog::RouteCatalog",
  "pub fn spark_core::router::catalog::RouteCatalog::clone(&self) -> spark_core::router::catalog::RouteCatalog",
  "impl core::default::Default for spark_core::router::catalog::RouteCatalog",
  "pub fn spark_core::router::catalog::RouteCatalog::default() -> spark_core::router::catalog::RouteCatalog",
  "impl core::fmt::Debug for spark_core::router::catalog::RouteCatalog",
  "pub fn spark_core::router::catalog::RouteCatalog::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::router::catalog::RouteCatalog",
  "impl core::marker::Send for spark_core::router::catalog::RouteCatalog",
  "impl core::marker::Sync for spark_core::router::catalog::RouteCatalog",
  "impl core::marker::Unpin for spark_core::router::catalog::RouteCatalog",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::router::catalog::RouteCatalog",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::router::catalog::RouteCatalog",
  "pub struct spark_core::router::RouteDecision<S, Request> where S: spark_core::service::traits::generic::Service<Request>",
  "impl<S, Request> spark_core::router::binding::RouteDecision<S, Request> where S: spark_core::service::traits::generic::Service<Request>",
  "pub fn spark_core::router::binding::RouteDecision<S, Request>::binding(&self) -> &spark_core::router::binding::RouteBinding<S, Request>",
  "pub fn spark_core::router::binding::RouteDecision<S, Request>::binding_mut(&mut self) -> &mut spark_core::router::binding::RouteBinding<S, Request>",
  "pub fn spark_core::router::binding::RouteDecision<S, Request>::into_parts(self) -> (spark_core::router::binding::RouteBinding<S, Request>, alloc::vec::Vec<alloc::borrow::Cow<'static, str>>)",
  "pub fn spark_core::router::binding::RouteDecision<S, Request>::new(binding: spark_core::router::binding::RouteBinding<S, Request>, warnings: alloc::vec::Vec<alloc::borrow::Cow<'static, str>>) -> Self",
  "pub fn spark_core::router::binding::RouteDecision<S, Request>::warnings(&self) -> &[alloc::borrow::Cow<'static, str>]",
  "impl<S, Request> core::fmt::Debug for spark_core::router::binding::RouteDecision<S, Request> where S: spark_core::service::traits::generic::Service<Request>",
  "pub fn spark_core::router::binding::RouteDecision<S, Request>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<S, Request> core::marker::Freeze for spark_core::router::binding::RouteDecision<S, Request> where S: core::marker::Freeze",
  "impl<S, Request> core::marker::Send for spark_core::router::binding::RouteDecision<S, Request> where Request: core::marker::Send",
  "impl<S, Request> core::marker::Sync for spark_core::router::binding::RouteDecision<S, Request> where Request: core::marker::Sync",
  "impl<S, Request> core::marker::Unpin for spark_core::router::binding::RouteDecision<S, Request> where S: core::marker::Unpin, Request: core::marker::Unpin",
  "impl<S, Request> core::panic::unwind_safe::RefUnwindSafe for spark_core::router::binding::RouteDecision<S, Request> where S: core::panic::unwind_safe::RefUnwindSafe, Request: core::panic::unwind_safe::RefUnwindSafe",
  "impl<S, Request> core::panic::unwind_safe::UnwindSafe for spark_core::router::binding::RouteDecision<S, Request> where S: core::panic::unwind_safe::UnwindSafe, Request: core::panic::unwind_safe::UnwindSafe",
  "pub struct spark_core::router::RouteDecisionObject",
  "impl spark_core::router::traits::object::RouteDecisionObject",
  "pub fn spark_core::router::traits::object::RouteDecisionObject::binding(&self) -> &spark_core::router::traits::object::RouteBindingObject",
  "pub fn spark_core::router::traits::object::RouteDecisionObject::new(binding: spark_core::router::traits::object::RouteBindingObject, warnings: alloc::vec::Vec<alloc::borrow::Cow<'static, str>>) -> Self",
  "pub fn spark_core::router::traits::object::RouteDecisionObject::warnings(&self) -> &[alloc::borrow::Cow<'static, str>]",
  "impl core::clone::Clone for spark_core::router::traits::object::RouteDecisionObject",
  "pub fn spark_core::router::traits::object::RouteDecisionObject::clone(&self) -> spark_core::router::traits::object::RouteDecisionObject",
  "impl core::fmt::Debug for spark_core::router::traits::object::RouteDecisionObject",
  "pub fn spark_core::router::traits::object::RouteDecisionObject::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::router::traits::object::RouteDecisionObject",
  "impl core::marker::Send for spark_core::router::traits::object::RouteDecisionObject",
  "impl core::marker::Sync for spark_core::router::traits::object::RouteDecisionObject",
  "impl core::marker::Unpin for spark_core::router::traits::object::RouteDecisionObject",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::router::traits::object::RouteDecisionObject",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::router::traits::object::RouteDecisionObject",
  "pub struct spark_core::router::RouteDescriptor",
  "impl spark_core::router::catalog::RouteDescriptor",
  "pub fn spark_core::router::catalog::RouteDescriptor::id(&self) -> core::option::Option<&spark_core::router::route::RouteId>",
  "pub fn spark_core::router::catalog::RouteDescriptor::metadata(&self) -> &spark_core::router::metadata::RouteMetadata",
  "pub fn spark_core::router::catalog::RouteDescriptor::new(pattern: spark_core::router::route::RoutePattern) -> Self",
  "pub fn spark_core::router::catalog::RouteDescriptor::pattern(&self) -> &spark_core::router::route::RoutePattern",
  "pub fn spark_core::router::catalog::RouteDescriptor::summary(&self) -> core::option::Option<&alloc::borrow::Cow<'static, str>>",
  "pub fn spark_core::router::catalog::RouteDescriptor::with_id(self, id: spark_core::router::route::RouteId) -> Self",
  "pub fn spark_core::router::catalog::RouteDescriptor::with_metadata(self, metadata: spark_core::router::metadata::RouteMetadata) -> Self",
  "pub fn spark_core::router::catalog::RouteDescriptor::with_summary(self, summary: alloc::borrow::Cow<'static, str>) -> Self",
  "impl core::clone::Clone for spark_core::router::catalog::RouteDescriptor",
  "pub fn spark_core::router::catalog::RouteDescriptor::clone(&self) -> spark_core::router::catalog::RouteDescriptor",
  "impl core::fmt::Debug for spark_core::router::catalog::RouteDescriptor",
  "pub fn spark_core::router::catalog::RouteDescriptor::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::router::catalog::RouteDescriptor",
  "impl core::marker::Send for spark_core::router::catalog::RouteDescriptor",
  "impl core::marker::Sync for spark_core::router::catalog::RouteDescriptor",
  "impl core::marker::Unpin for spark_core::router::catalog::RouteDescriptor",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::router::catalog::RouteDescriptor",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::router::catalog::RouteDescriptor",
  "pub struct spark_core::router::RouteId",
  "impl spark_core::router::route::RouteId",
  "pub fn spark_core::router::route::RouteId::kind(&self) -> &spark_core::router::route::RouteKind",
  "pub fn spark_core::router::route::RouteId::new(kind: spark_core::router::route::RouteKind, segments: alloc::vec::Vec<alloc::borrow::Cow<'static, str>>) -> Self",
  "pub fn spark_core::router::route::RouteId::segments(&self) -> impl core::iter::traits::iterator::Iterator<Item = &alloc::borrow::Cow<'static, str>>",
  "impl core::clone::Clone for spark_core::router::route::RouteId",
  "pub fn spark_core::router::route::RouteId::clone(&self) -> spark_core::router::route::RouteId",
  "impl core::cmp::Eq for spark_core::router::route::RouteId",
  "impl core::cmp::Ord for spark_core::router::route::RouteId",
  "pub fn spark_core::router::route::RouteId::cmp(&self, other: &spark_core::router::route::RouteId) -> core::cmp::Ordering",
  "impl core::cmp::PartialEq for spark_core::router::route::RouteId",
  "pub fn spark_core::router::route::RouteId::eq(&self, other: &spark_core::router::route::RouteId) -> bool",
  "impl core::cmp::PartialOrd for spark_core::router::route::RouteId",
  "pub fn spark_core::router::route::RouteId::partial_cmp(&self, other: &spark_core::router::route::RouteId) -> core::option::Option<core::cmp::Ordering>",
  "impl core::fmt::Debug for spark_core::router::route::RouteId",
  "pub fn spark_core::router::route::RouteId::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::router::route::RouteId",
  "pub fn spark_core::router::route::RouteId::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::StructuralPartialEq for spark_core::router::route::RouteId",
  "impl core::marker::Freeze for spark_core::router::route::RouteId",
  "impl core::marker::Send for spark_core::router::route::RouteId",
  "impl core::marker::Sync for spark_core::router::route::RouteId",
  "impl core::marker::Unpin for spark_core::router::route::RouteId",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::router::route::RouteId",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::router::route::RouteId",
  "pub struct spark_core::router::RouteMetadata",
  "impl spark_core::router::metadata::RouteMetadata",
  "pub fn spark_core::router::metadata::RouteMetadata::get(&self, key: &spark_core::router::metadata::MetadataKey) -> core::option::Option<&spark_core::router::metadata::MetadataValue>",
  "pub fn spark_core::router::metadata::RouteMetadata::insert(&mut self, key: spark_core::router::metadata::MetadataKey, value: spark_core::router::metadata::MetadataValue)",
  "pub fn spark_core::router::metadata::RouteMetadata::iter(&self) -> impl core::iter::traits::iterator::Iterator<Item = (&spark_core::router::metadata::MetadataKey, &spark_core::router::metadata::MetadataValue)>",
  "pub fn spark_core::router::metadata::RouteMetadata::new() -> Self",
  "impl core::clone::Clone for spark_core::router::metadata::RouteMetadata",
  "pub fn spark_core::router::metadata::RouteMetadata::clone(&self) -> spark_core::router::metadata::RouteMetadata",
  "impl core::cmp::PartialEq for spark_core::router::metadata::RouteMetadata",
  "pub fn spark_core::router::metadata::RouteMetadata::eq(&self, other: &spark_core::router::metadata::RouteMetadata) -> bool",
  "impl core::default::Default for spark_core::router::metadata::RouteMetadata",
  "pub fn spark_core::router::metadata::RouteMetadata::default() -> spark_core::router::metadata::RouteMetadata",
  "impl core::fmt::Debug for spark_core::router::metadata::RouteMetadata",
  "pub fn spark_core::router::metadata::RouteMetadata::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::router::metadata::RouteMetadata",
  "impl core::marker::Freeze for spark_core::router::metadata::RouteMetadata",
  "impl core::marker::Send for spark_core::router::metadata::RouteMetadata",
  "impl core::marker::Sync for spark_core::router::metadata::RouteMetadata",
  "impl core::marker::Unpin for spark_core::router::metadata::RouteMetadata",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::router::metadata::RouteMetadata",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::router::metadata::RouteMetadata",
  "pub struct spark_core::router::RoutePattern",
  "impl spark_core::router::route::RoutePattern",
  "pub fn spark_core::router::route::RoutePattern::kind(&self) -> &spark_core::router::route::RouteKind",
  "pub fn spark_core::router::route::RoutePattern::new(kind: spark_core::router::route::RouteKind, segments: alloc::vec::Vec<spark_core::router::route::RouteSegment>) -> Self",
  "pub fn spark_core::router::route::RoutePattern::segments(&self) -> impl core::iter::traits::iterator::Iterator<Item = &spark_core::router::route::RouteSegment>",
  "impl core::clone::Clone for spark_core::router::route::RoutePattern",
  "pub fn spark_core::router::route::RoutePattern::clone(&self) -> spark_core::router::route::RoutePattern",
  "impl core::cmp::Eq for spark_core::router::route::RoutePattern",
  "impl core::cmp::PartialEq for spark_core::router::route::RoutePattern",
  "pub fn spark_core::router::route::RoutePattern::eq(&self, other: &spark_core::router::route::RoutePattern) -> bool",
  "impl core::fmt::Debug for spark_core::router::route::RoutePattern",
  "pub fn spark_core::router::route::RoutePattern::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::router::route::RoutePattern",
  "impl core::marker::Freeze for spark_core::router::route::RoutePattern",
  "impl core::marker::Send for spark_core::router::route::RoutePattern",
  "impl core::marker::Sync for spark_core::router::route::RoutePattern",
  "impl core::marker::Unpin for spark_core::router::route::RoutePattern",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::router::route::RoutePattern",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::router::route::RoutePattern",
  "pub struct spark_core::router::RouteValidation",
  "impl spark_core::router::binding::RouteValidation",
  "pub fn spark_core::router::binding::RouteValidation::errors(&self) -> &[alloc::borrow::Cow<'static, str>]",
  "pub fn spark_core::router::binding::RouteValidation::is_valid(&self) -> bool",
  "pub fn spark_core::router::binding::RouteValidation::new() -> Self",
  "pub fn spark_core::router::binding::RouteValidation::push_error(&mut self, message: alloc::borrow::Cow<'static, str>)",
  "pub fn spark_core::router::binding::RouteValidation::push_warning(&mut self, message: alloc::borrow::Cow<'static, str>)",
  "pub fn spark_core::router::binding::RouteValidation::warnings(&self) -> &[alloc::borrow::Cow<'static, str>]",
  "impl core::default::Default for spark_core::router::binding::RouteValidation",
  "pub fn spark_core::router::binding::RouteValidation::default() -> spark_core::router::binding::RouteValidation",
  "impl core::fmt::Debug for spark_core::router::binding::RouteValidation",
  "pub fn spark_core::router::binding::RouteValidation::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::router::binding::RouteValidation",
  "impl core::marker::Send for spark_core::router::binding::RouteValidation",
  "impl core::marker::Sync for spark_core::router::binding::RouteValidation",
  "impl core::marker::Unpin for spark_core::router::binding::RouteValidation",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::router::binding::RouteValidation",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::router::binding::RouteValidation",
  "pub struct spark_core::router::RouterObject<R, Adapter> where R: spark_core::router::traits::generic::Router<spark_core::buffer::message::PipelineMessage, Error = spark_core::error::SparkError> + core::marker::Send + core::marker::Sync, Adapter: core::ops::function::Fn(spark_core::router::binding::RouteBinding<<R as spark_core::router::traits::generic::Router>::Service, spark_core::buffer::message::PipelineMessage>) -> core::result::Result<spark_core::router::traits::object::RouteBindingObject, spark_core::error::SparkError> + core::marker::Send + core::marker::Sync + 'static",
  "impl<R, Adapter> spark_core::router::traits::object::RouterObject<R, Adapter> where R: spark_core::router::traits::generic::Router<spark_core::buffer::message::PipelineMessage, Error = spark_core::error::SparkError> + core::marker::Send + core::marker::Sync, Adapter: core::ops::function::Fn(spark_core::router::binding::RouteBinding<<R as spark_core::router::traits::generic::Router>::Service, spark_core::buffer::message::PipelineMessage>) -> core::result::Result<spark_core::router::traits::object::RouteBindingObject, spark_core::error::SparkError> + core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::router::traits::object::RouterObject<R, Adapter>::new(inner: R, service_adapter: Adapter) -> Self",
  "impl<R, Adapter> spark_core::router::traits::object::DynRouter for spark_core::router::traits::object::RouterObject<R, Adapter> where R: spark_core::router::traits::generic::Router<spark_core::buffer::message::PipelineMessage, Error = spark_core::error::SparkError> + core::marker::Send + core::marker::Sync, Adapter: core::ops::function::Fn(spark_core::router::binding::RouteBinding<<R as spark_core::router::traits::generic::Router>::Service, spark_core::buffer::message::PipelineMessage>) -> core::result::Result<spark_core::router::traits::object::RouteBindingObject, spark_core::error::SparkError> + core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::router::traits::object::RouterObject<R, Adapter>::route_dyn(&self, context: spark_core::router::context::RoutingContext<'_, spark_core::buffer::message::PipelineMessage>) -> core::result::Result<spark_core::router::traits::object::RouteDecisionObject, spark_core::router::traits::generic::RouteError<spark_core::error::SparkError>>",
  "pub fn spark_core::router::traits::object::RouterObject<R, Adapter>::snapshot(&self) -> spark_core::router::context::RoutingSnapshot<'_>",
  "pub fn spark_core::router::traits::object::RouterObject<R, Adapter>::validate(&self, descriptor: &spark_core::router::catalog::RouteDescriptor) -> spark_core::router::binding::RouteValidation",
  "impl<R, Adapter> core::marker::Freeze for spark_core::router::traits::object::RouterObject<R, Adapter> where R: core::marker::Freeze",
  "impl<R, Adapter> core::marker::Send for spark_core::router::traits::object::RouterObject<R, Adapter>",
  "impl<R, Adapter> core::marker::Sync for spark_core::router::traits::object::RouterObject<R, Adapter>",
  "impl<R, Adapter> core::marker::Unpin for spark_core::router::traits::object::RouterObject<R, Adapter> where R: core::marker::Unpin",
  "impl<R, Adapter> core::panic::unwind_safe::RefUnwindSafe for spark_core::router::traits::object::RouterObject<R, Adapter> where R: core::panic::unwind_safe::RefUnwindSafe, Adapter: core::panic::unwind_safe::RefUnwindSafe",
  "impl<R, Adapter> core::panic::unwind_safe::UnwindSafe for spark_core::router::traits::object::RouterObject<R, Adapter> where R: core::panic::unwind_safe::UnwindSafe, Adapter: core::panic::unwind_safe::RefUnwindSafe",
  "pub struct spark_core::router::RoutingContext<'a, Request>",
  "impl<'a, Request> spark_core::router::context::RoutingContext<'a, Request>",
  "pub fn spark_core::router::context::RoutingContext<'a, Request>::connection(&self) -> core::option::Option<&'a spark_core::transport::intent::ConnectionIntent>",
  "pub fn spark_core::router::context::RoutingContext<'a, Request>::dynamic_metadata(&self) -> &'a spark_core::router::metadata::RouteMetadata",
  "pub fn spark_core::router::context::RoutingContext<'a, Request>::intent(&self) -> &'a spark_core::router::context::RoutingIntent",
  "pub fn spark_core::router::context::RoutingContext<'a, Request>::new(request: &'a Request, intent: &'a spark_core::router::context::RoutingIntent, connection: core::option::Option<&'a spark_core::transport::intent::ConnectionIntent>, trace: core::option::Option<&'a spark_core::observability::trace::TraceContext>, dynamic_metadata: &'a spark_core::router::metadata::RouteMetadata, snapshot: spark_core::router::context::RoutingSnapshot<'a>) -> Self",
  "pub fn spark_core::router::context::RoutingContext<'a, Request>::request(&self) -> &'a Request",
  "pub fn spark_core::router::context::RoutingContext<'a, Request>::snapshot(&self) -> spark_core::router::context::RoutingSnapshot<'a>",
  "pub fn spark_core::router::context::RoutingContext<'a, Request>::trace(&self) -> core::option::Option<&'a spark_core::observability::trace::TraceContext>",
  "impl<'a, Request: core::fmt::Debug> core::fmt::Debug for spark_core::router::context::RoutingContext<'a, Request>",
  "pub fn spark_core::router::context::RoutingContext<'a, Request>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<'a, Request> core::marker::Freeze for spark_core::router::context::RoutingContext<'a, Request>",
  "impl<'a, Request> core::marker::Send for spark_core::router::context::RoutingContext<'a, Request> where Request: core::marker::Sync",
  "impl<'a, Request> core::marker::Sync for spark_core::router::context::RoutingContext<'a, Request> where Request: core::marker::Sync",
  "impl<'a, Request> core::marker::Unpin for spark_core::router::context::RoutingContext<'a, Request>",
  "impl<'a, Request> core::panic::unwind_safe::RefUnwindSafe for spark_core::router::context::RoutingContext<'a, Request> where Request: core::panic::unwind_safe::RefUnwindSafe",
  "impl<'a, Request> core::panic::unwind_safe::UnwindSafe for spark_core::router::context::RoutingContext<'a, Request> where Request: core::panic::unwind_safe::RefUnwindSafe",
  "pub struct spark_core::router::RoutingIntent",
  "impl spark_core::router::context::RoutingIntent",
  "pub fn spark_core::router::context::RoutingIntent::expected_qos(&self) -> core::option::Option<spark_core::transport::intent::QualityOfService>",
  "pub fn spark_core::router::context::RoutingIntent::new(target: spark_core::router::route::RoutePattern) -> Self",
  "pub fn spark_core::router::context::RoutingIntent::preferred_metadata(&self) -> &spark_core::router::metadata::RouteMetadata",
  "pub fn spark_core::router::context::RoutingIntent::security_preference(&self) -> core::option::Option<&spark_core::transport::intent::SecurityMode>",
  "pub fn spark_core::router::context::RoutingIntent::target(&self) -> &spark_core::router::route::RoutePattern",
  "pub fn spark_core::router::context::RoutingIntent::with_expected_qos(self, qos: spark_core::transport::intent::QualityOfService) -> Self",
  "pub fn spark_core::router::context::RoutingIntent::with_metadata(self, metadata: spark_core::router::metadata::RouteMetadata) -> Self",
  "pub fn spark_core::router::context::RoutingIntent::with_security_preference(self, security: spark_core::transport::intent::SecurityMode) -> Self",
  "impl spark_core::router::context::RoutingIntent",
  "pub fn spark_core::router::context::RoutingIntent::route_kind(&self) -> &spark_core::router::route::RouteKind",
  "impl core::clone::Clone for spark_core::router::context::RoutingIntent",
  "pub fn spark_core::router::context::RoutingIntent::clone(&self) -> spark_core::router::context::RoutingIntent",
  "impl core::fmt::Debug for spark_core::router::context::RoutingIntent",
  "pub fn spark_core::router::context::RoutingIntent::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::router::context::RoutingIntent",
  "impl core::marker::Send for spark_core::router::context::RoutingIntent",
  "impl core::marker::Sync for spark_core::router::context::RoutingIntent",
  "impl core::marker::Unpin for spark_core::router::context::RoutingIntent",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::router::context::RoutingIntent",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::router::context::RoutingIntent",
  "pub struct spark_core::router::RoutingSnapshot<'a>",
  "impl<'a> spark_core::router::context::RoutingSnapshot<'a>",
  "pub fn spark_core::router::context::RoutingSnapshot<'a>::catalog(&self) -> &'a spark_core::router::catalog::RouteCatalog",
  "pub fn spark_core::router::context::RoutingSnapshot<'a>::new(catalog: &'a spark_core::router::catalog::RouteCatalog, revision: u64) -> Self",
  "pub fn spark_core::router::context::RoutingSnapshot<'a>::revision(&self) -> u64",
  "impl<'a> core::clone::Clone for spark_core::router::context::RoutingSnapshot<'a>",
  "pub fn spark_core::router::context::RoutingSnapshot<'a>::clone(&self) -> spark_core::router::context::RoutingSnapshot<'a>",
  "impl<'a> core::fmt::Debug for spark_core::router::context::RoutingSnapshot<'a>",
  "pub fn spark_core::router::context::RoutingSnapshot<'a>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<'a> core::marker::Copy for spark_core::router::context::RoutingSnapshot<'a>",
  "impl<'a> core::marker::Freeze for spark_core::router::context::RoutingSnapshot<'a>",
  "impl<'a> core::marker::Send for spark_core::router::context::RoutingSnapshot<'a>",
  "impl<'a> core::marker::Sync for spark_core::router::context::RoutingSnapshot<'a>",
  "impl<'a> core::marker::Unpin for spark_core::router::context::RoutingSnapshot<'a>",
  "impl<'a> core::panic::unwind_safe::RefUnwindSafe for spark_core::router::context::RoutingSnapshot<'a>",
  "impl<'a> core::panic::unwind_safe::UnwindSafe for spark_core::router::context::RoutingSnapshot<'a>",
  "pub trait spark_core::router::DynRouter: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::router::DynRouter::route_dyn(&self, context: spark_core::router::context::RoutingContext<'_, spark_core::buffer::message::PipelineMessage>) -> core::result::Result<spark_core::router::traits::object::RouteDecisionObject, spark_core::router::traits::generic::RouteError<spark_core::error::SparkError>>",
  "pub fn spark_core::router::DynRouter::snapshot(&self) -> spark_core::router::context::RoutingSnapshot<'_>",
  "pub fn spark_core::router::DynRouter::validate(&self, descriptor: &spark_core::router::catalog::RouteDescriptor) -> spark_core::router::binding::RouteValidation",
  "impl<R, Adapter> spark_core::router::traits::object::DynRouter for spark_core::router::traits::object::RouterObject<R, Adapter> where R: spark_core::router::traits::generic::Router<spark_core::buffer::message::PipelineMessage, Error = spark_core::error::SparkError> + core::marker::Send + core::marker::Sync, Adapter: core::ops::function::Fn(spark_core::router::binding::RouteBinding<<R as spark_core::router::traits::generic::Router>::Service, spark_core::buffer::message::PipelineMessage>) -> core::result::Result<spark_core::router::traits::object::RouteBindingObject, spark_core::error::SparkError> + core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::router::traits::object::RouterObject<R, Adapter>::route_dyn(&self, context: spark_core::router::context::RoutingContext<'_, spark_core::buffer::message::PipelineMessage>) -> core::result::Result<spark_core::router::traits::object::RouteDecisionObject, spark_core::router::traits::generic::RouteError<spark_core::error::SparkError>>",
  "pub fn spark_core::router::traits::object::RouterObject<R, Adapter>::snapshot(&self) -> spark_core::router::context::RoutingSnapshot<'_>",
  "pub fn spark_core::router::traits::object::RouterObject<R, Adapter>::validate(&self, descriptor: &spark_core::router::catalog::RouteDescriptor) -> spark_core::router::binding::RouteValidation",
  "pub trait spark_core::router::Router<Request>: Sealed",
  "pub type spark_core::router::Router::Error: spark_core::Error",
  "pub type spark_core::router::Router::Service: spark_core::service::traits::generic::Service<Request>",
  "pub fn spark_core::router::Router::route(&self, context: spark_core::router::context::RoutingContext<'_, Request>) -> core::result::Result<spark_core::router::binding::RouteDecision<Self::Service, Request>, spark_core::router::traits::generic::RouteError<Self::Error>>",
  "pub fn spark_core::router::Router::snapshot(&self) -> spark_core::router::context::RoutingSnapshot<'_>",
  "pub fn spark_core::router::Router::validate(&self, descriptor: &spark_core::router::catalog::RouteDescriptor) -> spark_core::router::binding::RouteValidation",
  "pub mod spark_core::rt",
  "pub mod spark_core::rt::sugar",
  "pub struct spark_core::rt::sugar::BorrowedRuntimeCaps<'a, R: spark_core::rt::sugar::RuntimeCaps + ?core::marker::Sized>",
  "impl<'a, R: spark_core::rt::sugar::RuntimeCaps + ?core::marker::Sized> spark_core::rt::sugar::BorrowedRuntimeCaps<'a, R>",
  "pub fn spark_core::rt::sugar::BorrowedRuntimeCaps<'a, R>::inner(&self) -> &'a R",
  "pub fn spark_core::rt::sugar::BorrowedRuntimeCaps<'a, R>::new(inner: &'a R) -> Self",
  "impl<'a, R: core::clone::Clone + spark_core::rt::sugar::RuntimeCaps + ?core::marker::Sized> core::clone::Clone for spark_core::rt::sugar::BorrowedRuntimeCaps<'a, R>",
  "pub fn spark_core::rt::sugar::BorrowedRuntimeCaps<'a, R>::clone(&self) -> spark_core::rt::sugar::BorrowedRuntimeCaps<'a, R>",
  "impl<'a, R: core::marker::Copy + spark_core::rt::sugar::RuntimeCaps + ?core::marker::Sized> core::marker::Copy for spark_core::rt::sugar::BorrowedRuntimeCaps<'a, R>",
  "impl<'a, R: spark_core::rt::sugar::RuntimeCaps + ?core::marker::Sized> spark_core::rt::sugar::RuntimeCaps for spark_core::rt::sugar::BorrowedRuntimeCaps<'a, R>",
  "pub type spark_core::rt::sugar::BorrowedRuntimeCaps<'a, R>::Join<T: core::marker::Send + 'static> = <R as spark_core::rt::sugar::RuntimeCaps>::Join",
  "pub fn spark_core::rt::sugar::BorrowedRuntimeCaps<'a, R>::spawn_with<F>(&self, ctx: &spark_core::contract::CallContext, fut: F) -> Self::Join where F: core::future::future::Future + core::marker::Send + 'static, <F as core::future::future::Future>::Output: core::marker::Send + 'static",
  "impl<'a, R> core::marker::Freeze for spark_core::rt::sugar::BorrowedRuntimeCaps<'a, R> where R: ?core::marker::Sized",
  "impl<'a, R> core::marker::Send for spark_core::rt::sugar::BorrowedRuntimeCaps<'a, R> where R: core::marker::Sync + ?core::marker::Sized",
  "impl<'a, R> core::marker::Sync for spark_core::rt::sugar::BorrowedRuntimeCaps<'a, R> where R: core::marker::Sync + ?core::marker::Sized",
  "impl<'a, R> core::marker::Unpin for spark_core::rt::sugar::BorrowedRuntimeCaps<'a, R> where R: ?core::marker::Sized",
  "impl<'a, R> core::panic::unwind_safe::RefUnwindSafe for spark_core::rt::sugar::BorrowedRuntimeCaps<'a, R> where R: core::panic::unwind_safe::RefUnwindSafe + ?core::marker::Sized",
  "impl<'a, R> core::panic::unwind_safe::UnwindSafe for spark_core::rt::sugar::BorrowedRuntimeCaps<'a, R> where R: core::panic::unwind_safe::RefUnwindSafe + ?core::marker::Sized",
  "pub struct spark_core::rt::sugar::CallContext<'a, R: spark_core::rt::sugar::RuntimeCaps>",
  "impl<'a, R: spark_core::rt::sugar::RuntimeCaps> spark_core::rt::sugar::CallContext<'a, R>",
  "pub fn spark_core::rt::sugar::CallContext<'a, R>::borrowed<RC>(call: &'a spark_core::contract::CallContext, runtime_caps: &'a RC) -> spark_core::rt::sugar::CallContext<'a, spark_core::rt::sugar::BorrowedRuntimeCaps<'a, RC>> where RC: spark_core::rt::sugar::RuntimeCaps + ?core::marker::Sized",
  "pub fn spark_core::rt::sugar::CallContext<'a, R>::call(&self) -> &'a spark_core::contract::CallContext",
  "pub fn spark_core::rt::sugar::CallContext<'a, R>::clone_call(&self) -> spark_core::contract::CallContext",
  "pub fn spark_core::rt::sugar::CallContext<'a, R>::into_parts(self) -> (&'a spark_core::contract::CallContext, R)",
  "pub fn spark_core::rt::sugar::CallContext<'a, R>::new(call: &'a spark_core::contract::CallContext, runtime_caps: R) -> Self",
  "pub fn spark_core::rt::sugar::CallContext<'a, R>::runtime_caps(&self) -> &R",
  "impl<'a, R> core::marker::Freeze for spark_core::rt::sugar::CallContext<'a, R> where R: core::marker::Freeze",
  "impl<'a, R> core::marker::Send for spark_core::rt::sugar::CallContext<'a, R> where R: core::marker::Send",
  "impl<'a, R> core::marker::Sync for spark_core::rt::sugar::CallContext<'a, R> where R: core::marker::Sync",
  "impl<'a, R> core::marker::Unpin for spark_core::rt::sugar::CallContext<'a, R> where R: core::marker::Unpin",
  "impl<'a, R> core::panic::unwind_safe::RefUnwindSafe for spark_core::rt::sugar::CallContext<'a, R> where R: core::panic::unwind_safe::RefUnwindSafe",
  "impl<'a, R> core::panic::unwind_safe::UnwindSafe for spark_core::rt::sugar::CallContext<'a, R> where R: core::panic::unwind_safe::UnwindSafe",
  "pub struct spark_core::rt::sugar::ContextCaps<'a, C: spark_core::pipeline::context::Context + ?core::marker::Sized>",
  "impl<'a, C: spark_core::pipeline::context::Context + ?core::marker::Sized> spark_core::rt::sugar::ContextCaps<'a, C>",
  "pub fn spark_core::rt::sugar::ContextCaps<'a, C>::context(&self) -> &'a C",
  "pub fn spark_core::rt::sugar::ContextCaps<'a, C>::new(context: &'a C) -> Self",
  "impl<'a, C: core::clone::Clone + spark_core::pipeline::context::Context + ?core::marker::Sized> core::clone::Clone for spark_core::rt::sugar::ContextCaps<'a, C>",
  "pub fn spark_core::rt::sugar::ContextCaps<'a, C>::clone(&self) -> spark_core::rt::sugar::ContextCaps<'a, C>",
  "impl<'a, C: core::marker::Copy + spark_core::pipeline::context::Context + ?core::marker::Sized> core::marker::Copy for spark_core::rt::sugar::ContextCaps<'a, C>",
  "impl<'a, C> spark_core::rt::sugar::RuntimeCaps for spark_core::rt::sugar::ContextCaps<'a, C> where C: spark_core::pipeline::context::Context + ?core::marker::Sized",
  "pub type spark_core::rt::sugar::ContextCaps<'a, C>::Join<T: core::marker::Send + 'static> = spark_core::JoinHandle<T>",
  "pub fn spark_core::rt::sugar::ContextCaps<'a, C>::spawn_with<F>(&self, ctx: &spark_core::contract::CallContext, fut: F) -> Self::Join where F: core::future::future::Future + core::marker::Send + 'static, <F as core::future::future::Future>::Output: core::marker::Send + 'static",
  "impl<'a, C> core::marker::Freeze for spark_core::rt::sugar::ContextCaps<'a, C> where C: ?core::marker::Sized",
  "impl<'a, C> core::marker::Send for spark_core::rt::sugar::ContextCaps<'a, C> where C: ?core::marker::Sized",
  "impl<'a, C> core::marker::Sync for spark_core::rt::sugar::ContextCaps<'a, C> where C: ?core::marker::Sized",
  "impl<'a, C> core::marker::Unpin for spark_core::rt::sugar::ContextCaps<'a, C> where C: ?core::marker::Sized",
  "impl<'a, C> core::panic::unwind_safe::RefUnwindSafe for spark_core::rt::sugar::ContextCaps<'a, C> where C: core::panic::unwind_safe::RefUnwindSafe + ?core::marker::Sized",
  "impl<'a, C> core::panic::unwind_safe::UnwindSafe for spark_core::rt::sugar::ContextCaps<'a, C> where C: core::panic::unwind_safe::RefUnwindSafe + ?core::marker::Sized",
  "pub trait spark_core::rt::sugar::RuntimeCaps",
  "pub type spark_core::rt::sugar::RuntimeCaps::Join<T: core::marker::Send + 'static>: core::marker::Send + 'static",
  "pub fn spark_core::rt::sugar::RuntimeCaps::spawn_with<F>(&self, ctx: &spark_core::contract::CallContext, fut: F) -> Self::Join where F: core::future::future::Future + core::marker::Send + 'static, <F as core::future::future::Future>::Output: core::marker::Send + 'static",
  "impl spark_core::rt::sugar::RuntimeCaps for spark_core::CoreServices",
  "pub type spark_core::CoreServices::Join<T: core::marker::Send + 'static> = spark_core::JoinHandle<T>",
  "pub fn spark_core::CoreServices::spawn_with<F>(&self, ctx: &spark_core::contract::CallContext, fut: F) -> Self::Join where F: core::future::future::Future + core::marker::Send + 'static, <F as core::future::future::Future>::Output: core::marker::Send + 'static",
  "impl<'a, C> spark_core::rt::sugar::RuntimeCaps for spark_core::rt::sugar::ContextCaps<'a, C> where C: spark_core::pipeline::context::Context + ?core::marker::Sized",
  "pub type spark_core::rt::sugar::ContextCaps<'a, C>::Join<T: core::marker::Send + 'static> = spark_core::JoinHandle<T>",
  "pub fn spark_core::rt::sugar::ContextCaps<'a, C>::spawn_with<F>(&self, ctx: &spark_core::contract::CallContext, fut: F) -> Self::Join where F: core::future::future::Future + core::marker::Send + 'static, <F as core::future::future::Future>::Output: core::marker::Send + 'static",
  "impl<'a, R: spark_core::rt::sugar::RuntimeCaps + ?core::marker::Sized> spark_core::rt::sugar::RuntimeCaps for spark_core::rt::sugar::BorrowedRuntimeCaps<'a, R>",
  "pub type spark_core::rt::sugar::BorrowedRuntimeCaps<'a, R>::Join<T: core::marker::Send + 'static> = <R as spark_core::rt::sugar::RuntimeCaps>::Join",
  "pub fn spark_core::rt::sugar::BorrowedRuntimeCaps<'a, R>::spawn_with<F>(&self, ctx: &spark_core::contract::CallContext, fut: F) -> Self::Join where F: core::future::future::Future + core::marker::Send + 'static, <F as core::future::future::Future>::Output: core::marker::Send + 'static",
  "impl<T> spark_core::rt::sugar::RuntimeCaps for T where T: spark_core::TaskExecutor",
  "pub type T::Join<U: core::marker::Send + 'static> = spark_core::JoinHandle<U>",
  "pub fn T::spawn_with<F>(&self, ctx: &spark_core::contract::CallContext, fut: F) -> Self::Join where F: core::future::future::Future + core::marker::Send + 'static, <F as core::future::future::Future>::Output: core::marker::Send + 'static",
  "pub fn spark_core::rt::sugar::spawn_in<'a, R, F>(ctx: &spark_core::rt::sugar::CallContext<'a, R>, fut: F) -> <R as spark_core::rt::sugar::RuntimeCaps>::Join where R: spark_core::rt::sugar::RuntimeCaps, F: core::future::future::Future + core::marker::Send + 'static, <F as core::future::future::Future>::Output: core::marker::Send + 'static",
  "pub struct spark_core::rt::CallContext<'a, R: spark_core::rt::sugar::RuntimeCaps>",
  "impl<'a, R: spark_core::rt::sugar::RuntimeCaps> spark_core::rt::sugar::CallContext<'a, R>",
  "pub fn spark_core::rt::sugar::CallContext<'a, R>::borrowed<RC>(call: &'a spark_core::contract::CallContext, runtime_caps: &'a RC) -> spark_core::rt::sugar::CallContext<'a, spark_core::rt::sugar::BorrowedRuntimeCaps<'a, RC>> where RC: spark_core::rt::sugar::RuntimeCaps + ?core::marker::Sized",
  "pub fn spark_core::rt::sugar::CallContext<'a, R>::call(&self) -> &'a spark_core::contract::CallContext",
  "pub fn spark_core::rt::sugar::CallContext<'a, R>::clone_call(&self) -> spark_core::contract::CallContext",
  "pub fn spark_core::rt::sugar::CallContext<'a, R>::into_parts(self) -> (&'a spark_core::contract::CallContext, R)",
  "pub fn spark_core::rt::sugar::CallContext<'a, R>::new(call: &'a spark_core::contract::CallContext, runtime_caps: R) -> Self",
  "pub fn spark_core::rt::sugar::CallContext<'a, R>::runtime_caps(&self) -> &R",
  "impl<'a, R> core::marker::Freeze for spark_core::rt::sugar::CallContext<'a, R> where R: core::marker::Freeze",
  "impl<'a, R> core::marker::Send for spark_core::rt::sugar::CallContext<'a, R> where R: core::marker::Send",
  "impl<'a, R> core::marker::Sync for spark_core::rt::sugar::CallContext<'a, R> where R: core::marker::Sync",
  "impl<'a, R> core::marker::Unpin for spark_core::rt::sugar::CallContext<'a, R> where R: core::marker::Unpin",
  "impl<'a, R> core::panic::unwind_safe::RefUnwindSafe for spark_core::rt::sugar::CallContext<'a, R> where R: core::panic::unwind_safe::RefUnwindSafe",
  "impl<'a, R> core::panic::unwind_safe::UnwindSafe for spark_core::rt::sugar::CallContext<'a, R> where R: core::panic::unwind_safe::UnwindSafe",
  "pub struct spark_core::rt::ContextCaps<'a, C: spark_core::pipeline::context::Context + ?core::marker::Sized>",
  "impl<'a, C: spark_core::pipeline::context::Context + ?core::marker::Sized> spark_core::rt::sugar::ContextCaps<'a, C>",
  "pub fn spark_core::rt::sugar::ContextCaps<'a, C>::context(&self) -> &'a C",
  "pub fn spark_core::rt::sugar::ContextCaps<'a, C>::new(context: &'a C) -> Self",
  "impl<'a, C: core::clone::Clone + spark_core::pipeline::context::Context + ?core::marker::Sized> core::clone::Clone for spark_core::rt::sugar::ContextCaps<'a, C>",
  "pub fn spark_core::rt::sugar::ContextCaps<'a, C>::clone(&self) -> spark_core::rt::sugar::ContextCaps<'a, C>",
  "impl<'a, C: core::marker::Copy + spark_core::pipeline::context::Context + ?core::marker::Sized> core::marker::Copy for spark_core::rt::sugar::ContextCaps<'a, C>",
  "impl<'a, C> spark_core::rt::sugar::RuntimeCaps for spark_core::rt::sugar::ContextCaps<'a, C> where C: spark_core::pipeline::context::Context + ?core::marker::Sized",
  "pub type spark_core::rt::sugar::ContextCaps<'a, C>::Join<T: core::marker::Send + 'static> = spark_core::JoinHandle<T>",
  "pub fn spark_core::rt::sugar::ContextCaps<'a, C>::spawn_with<F>(&self, ctx: &spark_core::contract::CallContext, fut: F) -> Self::Join where F: core::future::future::Future + core::marker::Send + 'static, <F as core::future::future::Future>::Output: core::marker::Send + 'static",
  "impl<'a, C> core::marker::Freeze for spark_core::rt::sugar::ContextCaps<'a, C> where C: ?core::marker::Sized",
  "impl<'a, C> core::marker::Send for spark_core::rt::sugar::ContextCaps<'a, C> where C: ?core::marker::Sized",
  "impl<'a, C> core::marker::Sync for spark_core::rt::sugar::ContextCaps<'a, C> where C: ?core::marker::Sized",
  "impl<'a, C> core::marker::Unpin for spark_core::rt::sugar::ContextCaps<'a, C> where C: ?core::marker::Sized",
  "impl<'a, C> core::panic::unwind_safe::RefUnwindSafe for spark_core::rt::sugar::ContextCaps<'a, C> where C: core::panic::unwind_safe::RefUnwindSafe + ?core::marker::Sized",
  "impl<'a, C> core::panic::unwind_safe::UnwindSafe for spark_core::rt::sugar::ContextCaps<'a, C> where C: core::panic::unwind_safe::RefUnwindSafe + ?core::marker::Sized",
  "pub trait spark_core::rt::RuntimeCaps",
  "pub type spark_core::rt::RuntimeCaps::Join<T: core::marker::Send + 'static>: core::marker::Send + 'static",
  "pub fn spark_core::rt::RuntimeCaps::spawn_with<F>(&self, ctx: &spark_core::contract::CallContext, fut: F) -> Self::Join where F: core::future::future::Future + core::marker::Send + 'static, <F as core::future::future::Future>::Output: core::marker::Send + 'static",
  "impl spark_core::rt::sugar::RuntimeCaps for spark_core::CoreServices",
  "pub type spark_core::CoreServices::Join<T: core::marker::Send + 'static> = spark_core::JoinHandle<T>",
  "pub fn spark_core::CoreServices::spawn_with<F>(&self, ctx: &spark_core::contract::CallContext, fut: F) -> Self::Join where F: core::future::future::Future + core::marker::Send + 'static, <F as core::future::future::Future>::Output: core::marker::Send + 'static",
  "impl<'a, C> spark_core::rt::sugar::RuntimeCaps for spark_core::rt::sugar::ContextCaps<'a, C> where C: spark_core::pipeline::context::Context + ?core::marker::Sized",
  "pub type spark_core::rt::sugar::ContextCaps<'a, C>::Join<T: core::marker::Send + 'static> = spark_core::JoinHandle<T>",
  "pub fn spark_core::rt::sugar::ContextCaps<'a, C>::spawn_with<F>(&self, ctx: &spark_core::contract::CallContext, fut: F) -> Self::Join where F: core::future::future::Future + core::marker::Send + 'static, <F as core::future::future::Future>::Output: core::marker::Send + 'static",
  "impl<'a, R: spark_core::rt::sugar::RuntimeCaps + ?core::marker::Sized> spark_core::rt::sugar::RuntimeCaps for spark_core::rt::sugar::BorrowedRuntimeCaps<'a, R>",
  "pub type spark_core::rt::sugar::BorrowedRuntimeCaps<'a, R>::Join<T: core::marker::Send + 'static> = <R as spark_core::rt::sugar::RuntimeCaps>::Join",
  "pub fn spark_core::rt::sugar::BorrowedRuntimeCaps<'a, R>::spawn_with<F>(&self, ctx: &spark_core::contract::CallContext, fut: F) -> Self::Join where F: core::future::future::Future + core::marker::Send + 'static, <F as core::future::future::Future>::Output: core::marker::Send + 'static",
  "impl<T> spark_core::rt::sugar::RuntimeCaps for T where T: spark_core::TaskExecutor",
  "pub type T::Join<U: core::marker::Send + 'static> = spark_core::JoinHandle<U>",
  "pub fn T::spawn_with<F>(&self, ctx: &spark_core::contract::CallContext, fut: F) -> Self::Join where F: core::future::future::Future + core::marker::Send + 'static, <F as core::future::future::Future>::Output: core::marker::Send + 'static",
  "pub fn spark_core::rt::spawn_in<'a, R, F>(ctx: &spark_core::rt::sugar::CallContext<'a, R>, fut: F) -> <R as spark_core::rt::sugar::RuntimeCaps>::Join where R: spark_core::rt::sugar::RuntimeCaps, F: core::future::future::Future + core::marker::Send + 'static, <F as core::future::future::Future>::Output: core::marker::Send + 'static",
  "pub mod spark_core::runtime",
  "pub enum spark_core::runtime::SloPolicyAction",
  "pub spark_core::runtime::SloPolicyAction::CircuitBreak",
  "pub spark_core::runtime::SloPolicyAction::CircuitBreak::open_for: core::time::Duration",
  "pub spark_core::runtime::SloPolicyAction::Degrade",
  "pub spark_core::runtime::SloPolicyAction::Degrade::feature: alloc::sync::Arc<str>",
  "pub spark_core::runtime::SloPolicyAction::RateLimit",
  "pub spark_core::runtime::SloPolicyAction::RateLimit::limit_percent: u8",
  "pub spark_core::runtime::SloPolicyAction::Retry",
  "pub spark_core::runtime::SloPolicyAction::Retry::backoff: core::time::Duration",
  "pub spark_core::runtime::SloPolicyAction::Retry::max_attempts: u8",
  "impl core::clone::Clone for spark_core::SloPolicyAction",
  "pub fn spark_core::SloPolicyAction::clone(&self) -> spark_core::SloPolicyAction",
  "impl core::cmp::Eq for spark_core::SloPolicyAction",
  "impl core::cmp::PartialEq for spark_core::SloPolicyAction",
  "pub fn spark_core::SloPolicyAction::eq(&self, other: &spark_core::SloPolicyAction) -> bool",
  "impl core::fmt::Debug for spark_core::SloPolicyAction",
  "pub fn spark_core::SloPolicyAction::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::SloPolicyAction",
  "impl core::marker::Freeze for spark_core::SloPolicyAction",
  "impl core::marker::Send for spark_core::SloPolicyAction",
  "impl core::marker::Sync for spark_core::SloPolicyAction",
  "impl core::marker::Unpin for spark_core::SloPolicyAction",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::SloPolicyAction",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::SloPolicyAction",
  "#[non_exhaustive] pub enum spark_core::runtime::TaskCancellationStrategy",
  "pub spark_core::runtime::TaskCancellationStrategy::Cooperative",
  "pub spark_core::runtime::TaskCancellationStrategy::Forceful",
  "impl core::clone::Clone for spark_core::TaskCancellationStrategy",
  "pub fn spark_core::TaskCancellationStrategy::clone(&self) -> spark_core::TaskCancellationStrategy",
  "impl core::cmp::Eq for spark_core::TaskCancellationStrategy",
  "impl core::cmp::PartialEq for spark_core::TaskCancellationStrategy",
  "pub fn spark_core::TaskCancellationStrategy::eq(&self, other: &spark_core::TaskCancellationStrategy) -> bool",
  "impl core::default::Default for spark_core::TaskCancellationStrategy",
  "pub fn spark_core::TaskCancellationStrategy::default() -> spark_core::TaskCancellationStrategy",
  "impl core::fmt::Debug for spark_core::TaskCancellationStrategy",
  "pub fn spark_core::TaskCancellationStrategy::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::TaskCancellationStrategy",
  "impl core::marker::StructuralPartialEq for spark_core::TaskCancellationStrategy",
  "impl core::marker::Freeze for spark_core::TaskCancellationStrategy",
  "impl core::marker::Send for spark_core::TaskCancellationStrategy",
  "impl core::marker::Sync for spark_core::TaskCancellationStrategy",
  "impl core::marker::Unpin for spark_core::TaskCancellationStrategy",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::TaskCancellationStrategy",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::TaskCancellationStrategy",
  "#[non_exhaustive] pub enum spark_core::runtime::TaskError",
  "pub spark_core::runtime::TaskError::Cancelled",
  "pub spark_core::runtime::TaskError::ExecutorTerminated",
  "pub spark_core::runtime::TaskError::Failed(alloc::borrow::Cow<'static, str>)",
  "pub spark_core::runtime::TaskError::Panicked",
  "impl core::clone::Clone for spark_core::TaskError",
  "pub fn spark_core::TaskError::clone(&self) -> spark_core::TaskError",
  "impl core::fmt::Debug for spark_core::TaskError",
  "pub fn spark_core::TaskError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::TaskError",
  "pub fn spark_core::TaskError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::TaskError",
  "impl core::marker::Send for spark_core::TaskError",
  "impl core::marker::Sync for spark_core::TaskError",
  "impl core::marker::Unpin for spark_core::TaskError",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::TaskError",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::TaskError",
  "#[non_exhaustive] pub enum spark_core::runtime::TaskPriority",
  "pub spark_core::runtime::TaskPriority::Critical",
  "pub spark_core::runtime::TaskPriority::High",
  "pub spark_core::runtime::TaskPriority::Idle",
  "pub spark_core::runtime::TaskPriority::Low",
  "pub spark_core::runtime::TaskPriority::Normal",
  "impl core::clone::Clone for spark_core::TaskPriority",
  "pub fn spark_core::TaskPriority::clone(&self) -> spark_core::TaskPriority",
  "impl core::cmp::Eq for spark_core::TaskPriority",
  "impl core::cmp::PartialEq for spark_core::TaskPriority",
  "pub fn spark_core::TaskPriority::eq(&self, other: &spark_core::TaskPriority) -> bool",
  "impl core::default::Default for spark_core::TaskPriority",
  "pub fn spark_core::TaskPriority::default() -> spark_core::TaskPriority",
  "impl core::fmt::Debug for spark_core::TaskPriority",
  "pub fn spark_core::TaskPriority::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::TaskPriority",
  "impl core::marker::StructuralPartialEq for spark_core::TaskPriority",
  "impl core::marker::Freeze for spark_core::TaskPriority",
  "impl core::marker::Send for spark_core::TaskPriority",
  "impl core::marker::Sync for spark_core::TaskPriority",
  "impl core::marker::Unpin for spark_core::TaskPriority",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::TaskPriority",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::TaskPriority",
  "pub enum spark_core::runtime::TimeoutConfigError",
  "pub spark_core::runtime::TimeoutConfigError::InvalidValueType",
  "pub spark_core::runtime::TimeoutConfigError::InvalidValueType::expected: &'static str",
  "pub spark_core::runtime::TimeoutConfigError::InvalidValueType::field: spark_core::runtime::timeouts::TimeoutField",
  "pub spark_core::runtime::TimeoutConfigError::NonPositiveDuration",
  "pub spark_core::runtime::TimeoutConfigError::NonPositiveDuration::field: spark_core::runtime::timeouts::TimeoutField",
  "pub spark_core::runtime::TimeoutConfigError::NonPositiveDuration::provided: i64",
  "impl core::clone::Clone for spark_core::TimeoutConfigError",
  "pub fn spark_core::TimeoutConfigError::clone(&self) -> spark_core::TimeoutConfigError",
  "impl core::cmp::Eq for spark_core::TimeoutConfigError",
  "impl core::cmp::PartialEq for spark_core::TimeoutConfigError",
  "pub fn spark_core::TimeoutConfigError::eq(&self, other: &spark_core::TimeoutConfigError) -> bool",
  "impl core::fmt::Debug for spark_core::TimeoutConfigError",
  "pub fn spark_core::TimeoutConfigError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::TimeoutConfigError",
  "pub fn spark_core::TimeoutConfigError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::TimeoutConfigError",
  "impl spark_core::Error for spark_core::TimeoutConfigError",
  "pub fn spark_core::TimeoutConfigError::source(&self) -> core::option::Option<&(dyn spark_core::Error + 'static)>",
  "impl core::marker::Freeze for spark_core::TimeoutConfigError",
  "impl core::marker::Send for spark_core::TimeoutConfigError",
  "impl core::marker::Sync for spark_core::TimeoutConfigError",
  "impl core::marker::Unpin for spark_core::TimeoutConfigError",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::TimeoutConfigError",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::TimeoutConfigError",
  "pub struct spark_core::runtime::BlockingTaskSubmission(pub spark_core::ManagedBlockingTask)",
  "impl core::convert::From<spark_core::ManagedBlockingTask> for spark_core::BlockingTaskSubmission",
  "pub fn spark_core::BlockingTaskSubmission::from(value: spark_core::ManagedBlockingTask) -> Self",
  "impl core::marker::Freeze for spark_core::BlockingTaskSubmission",
  "impl core::marker::Send for spark_core::BlockingTaskSubmission",
  "impl !core::marker::Sync for spark_core::BlockingTaskSubmission",
  "impl core::marker::Unpin for spark_core::BlockingTaskSubmission",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::BlockingTaskSubmission",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::BlockingTaskSubmission",
  "pub struct spark_core::runtime::CoreServices",
  "pub spark_core::runtime::CoreServices::buffer_pool: alloc::sync::Arc<dyn spark_core::buffer::pool::BufferPool>",
  "pub spark_core::runtime::CoreServices::discovery: core::option::Option<alloc::sync::Arc<dyn spark_core::cluster::discovery::ServiceDiscovery>>",
  "pub spark_core::runtime::CoreServices::health_checks: spark_core::observability::health::HealthChecks",
  "pub spark_core::runtime::CoreServices::logger: alloc::sync::Arc<dyn spark_core::observability::logging::Logger>",
  "pub spark_core::runtime::CoreServices::membership: core::option::Option<alloc::sync::Arc<dyn spark_core::cluster::membership::ClusterMembership>>",
  "pub spark_core::runtime::CoreServices::metrics: alloc::sync::Arc<dyn spark_core::observability::metrics::MetricsProvider>",
  "pub spark_core::runtime::CoreServices::ops_bus: alloc::sync::Arc<dyn spark_core::observability::events::OpsEventBus>",
  "pub spark_core::runtime::CoreServices::runtime: alloc::sync::Arc<dyn spark_core::runtime::AsyncRuntime>",
  "impl spark_core::CoreServices",
  "pub fn spark_core::CoreServices::observability_facade(&self) -> spark_core::observability::facade::DefaultObservabilityFacade",
  "pub fn spark_core::CoreServices::runtime(&self) -> &dyn spark_core::runtime::AsyncRuntime",
  "pub fn spark_core::CoreServices::time_driver(&self) -> &dyn spark_core::TimeDriver",
  "impl core::clone::Clone for spark_core::CoreServices",
  "pub fn spark_core::CoreServices::clone(&self) -> spark_core::CoreServices",
  "impl spark_core::rt::sugar::RuntimeCaps for spark_core::CoreServices",
  "pub type spark_core::CoreServices::Join<T: core::marker::Send + 'static> = spark_core::JoinHandle<T>",
  "pub fn spark_core::CoreServices::spawn_with<F>(&self, ctx: &spark_core::contract::CallContext, fut: F) -> Self::Join where F: core::future::future::Future + core::marker::Send + 'static, <F as core::future::future::Future>::Output: core::marker::Send + 'static",
  "impl core::marker::Freeze for spark_core::CoreServices",
  "impl core::marker::Send for spark_core::CoreServices",
  "impl core::marker::Sync for spark_core::CoreServices",
  "impl core::marker::Unpin for spark_core::CoreServices",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::CoreServices",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::CoreServices",
  "pub struct spark_core::runtime::HotReloadApplyTimer",
  "impl spark_core::runtime::HotReloadApplyTimer",
  "pub fn spark_core::runtime::HotReloadApplyTimer::elapsed(&self) -> core::option::Option<core::time::Duration>",
  "pub fn spark_core::runtime::HotReloadApplyTimer::start() -> Self",
  "impl core::clone::Clone for spark_core::runtime::HotReloadApplyTimer",
  "pub fn spark_core::runtime::HotReloadApplyTimer::clone(&self) -> spark_core::runtime::HotReloadApplyTimer",
  "impl core::fmt::Debug for spark_core::runtime::HotReloadApplyTimer",
  "pub fn spark_core::runtime::HotReloadApplyTimer::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::runtime::HotReloadApplyTimer",
  "impl core::marker::Freeze for spark_core::runtime::HotReloadApplyTimer",
  "impl core::marker::Send for spark_core::runtime::HotReloadApplyTimer",
  "impl core::marker::Sync for spark_core::runtime::HotReloadApplyTimer",
  "impl core::marker::Unpin for spark_core::runtime::HotReloadApplyTimer",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::runtime::HotReloadApplyTimer",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::runtime::HotReloadApplyTimer",
  "pub struct spark_core::runtime::HotReloadFence",
  "impl spark_core::runtime::HotReloadFence",
  "pub fn spark_core::runtime::HotReloadFence::new() -> Self",
  "pub fn spark_core::runtime::HotReloadFence::read(&self) -> spark_core::runtime::HotReloadReadGuard<'_>",
  "pub fn spark_core::runtime::HotReloadFence::write(&self) -> spark_core::runtime::HotReloadWriteGuard<'_>",
  "impl core::clone::Clone for spark_core::runtime::HotReloadFence",
  "pub fn spark_core::runtime::HotReloadFence::clone(&self) -> spark_core::runtime::HotReloadFence",
  "impl core::default::Default for spark_core::runtime::HotReloadFence",
  "pub fn spark_core::runtime::HotReloadFence::default() -> spark_core::runtime::HotReloadFence",
  "impl core::fmt::Debug for spark_core::runtime::HotReloadFence",
  "pub fn spark_core::runtime::HotReloadFence::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::runtime::HotReloadFence",
  "impl core::marker::Send for spark_core::runtime::HotReloadFence",
  "impl core::marker::Sync for spark_core::runtime::HotReloadFence",
  "impl core::marker::Unpin for spark_core::runtime::HotReloadFence",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::runtime::HotReloadFence",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::runtime::HotReloadFence",
  "pub struct spark_core::runtime::HotReloadReadGuard<'a>",
  "impl core::fmt::Debug for spark_core::runtime::HotReloadReadGuard<'_>",
  "pub fn spark_core::runtime::HotReloadReadGuard<'_>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<'a> core::marker::Freeze for spark_core::runtime::HotReloadReadGuard<'a>",
  "impl<'a> core::marker::Send for spark_core::runtime::HotReloadReadGuard<'a>",
  "impl<'a> core::marker::Sync for spark_core::runtime::HotReloadReadGuard<'a>",
  "impl<'a> core::marker::Unpin for spark_core::runtime::HotReloadReadGuard<'a>",
  "impl<'a> core::panic::unwind_safe::RefUnwindSafe for spark_core::runtime::HotReloadReadGuard<'a>",
  "impl<'a> core::panic::unwind_safe::UnwindSafe for spark_core::runtime::HotReloadReadGuard<'a>",
  "pub struct spark_core::runtime::HotReloadWriteGuard<'a>",
  "impl core::fmt::Debug for spark_core::runtime::HotReloadWriteGuard<'_>",
  "pub fn spark_core::runtime::HotReloadWriteGuard<'_>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<'a> core::marker::Freeze for spark_core::runtime::HotReloadWriteGuard<'a>",
  "impl<'a> core::marker::Send for spark_core::runtime::HotReloadWriteGuard<'a>",
  "impl<'a> core::marker::Sync for spark_core::runtime::HotReloadWriteGuard<'a>",
  "impl<'a> core::marker::Unpin for spark_core::runtime::HotReloadWriteGuard<'a>",
  "impl<'a> !core::panic::unwind_safe::RefUnwindSafe for spark_core::runtime::HotReloadWriteGuard<'a>",
  "impl<'a> !core::panic::unwind_safe::UnwindSafe for spark_core::runtime::HotReloadWriteGuard<'a>",
  "pub struct spark_core::runtime::JoinHandle<T>",
  "impl<T: core::marker::Send + 'static> spark_core::JoinHandle<T>",
  "pub fn spark_core::JoinHandle<T>::cancel(&self, strategy: spark_core::TaskCancellationStrategy)",
  "pub fn spark_core::JoinHandle<T>::detach(self)",
  "pub fn spark_core::JoinHandle<T>::from_task_handle(handle: alloc::boxed::Box<dyn spark_core::TaskHandle<Output = T>>) -> Self",
  "pub fn spark_core::JoinHandle<T>::id(&self) -> core::option::Option<&str>",
  "pub fn spark_core::JoinHandle<T>::is_cancelled(&self) -> bool",
  "pub fn spark_core::JoinHandle<T>::is_finished(&self) -> bool",
  "pub async fn spark_core::JoinHandle<T>::join(self) -> spark_core::TaskResult<T>",
  "pub fn spark_core::JoinHandle<T>::map<U, F>(self, mapper: F) -> spark_core::JoinHandle<U> where T: core::marker::Send + 'static, U: core::marker::Send + 'static, F: core::ops::function::FnOnce(spark_core::TaskResult<T>) -> spark_core::TaskResult<U> + core::marker::Send + core::marker::Sync + 'static",
  "impl<T> core::marker::Freeze for spark_core::JoinHandle<T>",
  "impl<T> core::marker::Send for spark_core::JoinHandle<T>",
  "impl<T> core::marker::Sync for spark_core::JoinHandle<T>",
  "impl<T> core::marker::Unpin for spark_core::JoinHandle<T>",
  "impl<T> !core::panic::unwind_safe::RefUnwindSafe for spark_core::JoinHandle<T>",
  "impl<T> !core::panic::unwind_safe::UnwindSafe for spark_core::JoinHandle<T>",
  "pub struct spark_core::runtime::LocalTaskSubmission(pub spark_core::ManagedLocalTask)",
  "impl core::convert::From<spark_core::ManagedLocalTask> for spark_core::LocalTaskSubmission",
  "pub fn spark_core::LocalTaskSubmission::from(value: spark_core::ManagedLocalTask) -> Self",
  "impl core::marker::Freeze for spark_core::LocalTaskSubmission",
  "impl !core::marker::Send for spark_core::LocalTaskSubmission",
  "impl !core::marker::Sync for spark_core::LocalTaskSubmission",
  "impl core::marker::Unpin for spark_core::LocalTaskSubmission",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::LocalTaskSubmission",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::LocalTaskSubmission",
  "pub struct spark_core::runtime::ManagedBlockingTask",
  "pub spark_core::runtime::ManagedBlockingTask::operation: alloc::boxed::Box<(dyn core::ops::function::FnOnce() -> spark_core::TaskResult + core::marker::Send + 'static)>",
  "pub spark_core::runtime::ManagedBlockingTask::options: spark_core::TaskLaunchOptions",
  "impl core::convert::From<spark_core::ManagedBlockingTask> for spark_core::BlockingTaskSubmission",
  "pub fn spark_core::BlockingTaskSubmission::from(value: spark_core::ManagedBlockingTask) -> Self",
  "impl core::marker::Freeze for spark_core::ManagedBlockingTask",
  "impl core::marker::Send for spark_core::ManagedBlockingTask",
  "impl !core::marker::Sync for spark_core::ManagedBlockingTask",
  "impl core::marker::Unpin for spark_core::ManagedBlockingTask",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::ManagedBlockingTask",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::ManagedBlockingTask",
  "pub struct spark_core::runtime::ManagedLocalTask",
  "pub spark_core::runtime::ManagedLocalTask::future: spark_core::future::LocalBoxFuture<'static, spark_core::TaskResult>",
  "pub spark_core::runtime::ManagedLocalTask::options: spark_core::TaskLaunchOptions",
  "impl core::convert::From<spark_core::ManagedLocalTask> for spark_core::LocalTaskSubmission",
  "pub fn spark_core::LocalTaskSubmission::from(value: spark_core::ManagedLocalTask) -> Self",
  "impl core::marker::Freeze for spark_core::ManagedLocalTask",
  "impl !core::marker::Send for spark_core::ManagedLocalTask",
  "impl !core::marker::Sync for spark_core::ManagedLocalTask",
  "impl core::marker::Unpin for spark_core::ManagedLocalTask",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::ManagedLocalTask",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::ManagedLocalTask",
  "pub struct spark_core::runtime::ManagedSendTask",
  "pub spark_core::runtime::ManagedSendTask::future: spark_core::future::BoxFuture<'static, spark_core::TaskResult>",
  "pub spark_core::runtime::ManagedSendTask::options: spark_core::TaskLaunchOptions",
  "impl core::convert::From<spark_core::ManagedSendTask> for spark_core::SendTaskSubmission",
  "pub fn spark_core::SendTaskSubmission::from(value: spark_core::ManagedSendTask) -> Self",
  "impl core::marker::Freeze for spark_core::ManagedSendTask",
  "impl core::marker::Send for spark_core::ManagedSendTask",
  "impl !core::marker::Sync for spark_core::ManagedSendTask",
  "impl core::marker::Unpin for spark_core::ManagedSendTask",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::ManagedSendTask",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::ManagedSendTask",
  "pub struct spark_core::runtime::MonotonicTimePoint(_)",
  "impl spark_core::MonotonicTimePoint",
  "pub fn spark_core::MonotonicTimePoint::as_duration(&self) -> core::time::Duration",
  "pub fn spark_core::MonotonicTimePoint::from_offset(offset: core::time::Duration) -> Self",
  "pub fn spark_core::MonotonicTimePoint::saturating_add(&self, delta: core::time::Duration) -> spark_core::MonotonicTimePoint",
  "pub fn spark_core::MonotonicTimePoint::saturating_duration_since(&self, earlier: spark_core::MonotonicTimePoint) -> core::time::Duration",
  "impl core::clone::Clone for spark_core::MonotonicTimePoint",
  "pub fn spark_core::MonotonicTimePoint::clone(&self) -> spark_core::MonotonicTimePoint",
  "impl core::cmp::Eq for spark_core::MonotonicTimePoint",
  "impl core::cmp::Ord for spark_core::MonotonicTimePoint",
  "pub fn spark_core::MonotonicTimePoint::cmp(&self, other: &spark_core::MonotonicTimePoint) -> core::cmp::Ordering",
  "impl core::cmp::PartialEq for spark_core::MonotonicTimePoint",
  "pub fn spark_core::MonotonicTimePoint::eq(&self, other: &spark_core::MonotonicTimePoint) -> bool",
  "impl core::cmp::PartialOrd for spark_core::MonotonicTimePoint",
  "pub fn spark_core::MonotonicTimePoint::partial_cmp(&self, other: &spark_core::MonotonicTimePoint) -> core::option::Option<core::cmp::Ordering>",
  "impl core::fmt::Debug for spark_core::MonotonicTimePoint",
  "pub fn spark_core::MonotonicTimePoint::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::MonotonicTimePoint",
  "impl core::marker::StructuralPartialEq for spark_core::MonotonicTimePoint",
  "impl core::marker::Freeze for spark_core::MonotonicTimePoint",
  "impl core::marker::Send for spark_core::MonotonicTimePoint",
  "impl core::marker::Sync for spark_core::MonotonicTimePoint",
  "impl core::marker::Unpin for spark_core::MonotonicTimePoint",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::MonotonicTimePoint",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::MonotonicTimePoint",
  "pub struct spark_core::runtime::SendTaskSubmission(pub spark_core::ManagedSendTask)",
  "impl core::convert::From<spark_core::ManagedSendTask> for spark_core::SendTaskSubmission",
  "pub fn spark_core::SendTaskSubmission::from(value: spark_core::ManagedSendTask) -> Self",
  "impl core::marker::Freeze for spark_core::SendTaskSubmission",
  "impl core::marker::Send for spark_core::SendTaskSubmission",
  "impl !core::marker::Sync for spark_core::SendTaskSubmission",
  "impl core::marker::Unpin for spark_core::SendTaskSubmission",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::SendTaskSubmission",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::SendTaskSubmission",
  "pub struct spark_core::runtime::SloPolicyConfigError",
  "impl spark_core::SloPolicyConfigError",
  "pub fn spark_core::SloPolicyConfigError::message(&self) -> &str",
  "pub fn spark_core::SloPolicyConfigError::path(&self) -> &str",
  "impl core::clone::Clone for spark_core::SloPolicyConfigError",
  "pub fn spark_core::SloPolicyConfigError::clone(&self) -> spark_core::SloPolicyConfigError",
  "impl core::cmp::Eq for spark_core::SloPolicyConfigError",
  "impl core::cmp::PartialEq for spark_core::SloPolicyConfigError",
  "pub fn spark_core::SloPolicyConfigError::eq(&self, other: &spark_core::SloPolicyConfigError) -> bool",
  "impl core::fmt::Debug for spark_core::SloPolicyConfigError",
  "pub fn spark_core::SloPolicyConfigError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::SloPolicyConfigError",
  "pub fn spark_core::SloPolicyConfigError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::SloPolicyConfigError",
  "impl spark_core::Error for spark_core::SloPolicyConfigError",
  "pub fn spark_core::SloPolicyConfigError::source(&self) -> core::option::Option<&(dyn spark_core::Error + 'static)>",
  "impl core::marker::Freeze for spark_core::SloPolicyConfigError",
  "impl core::marker::Send for spark_core::SloPolicyConfigError",
  "impl core::marker::Sync for spark_core::SloPolicyConfigError",
  "impl core::marker::Unpin for spark_core::SloPolicyConfigError",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::SloPolicyConfigError",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::SloPolicyConfigError",
  "pub struct spark_core::runtime::SloPolicyDirective",
  "impl spark_core::SloPolicyDirective",
  "pub fn spark_core::SloPolicyDirective::action(&self) -> &spark_core::SloPolicyAction",
  "pub fn spark_core::SloPolicyDirective::is_engaged(&self) -> bool",
  "pub fn spark_core::SloPolicyDirective::rule_id(&self) -> &alloc::sync::Arc<str>",
  "pub fn spark_core::SloPolicyDirective::summary(&self) -> core::option::Option<&alloc::sync::Arc<str>>",
  "impl core::clone::Clone for spark_core::SloPolicyDirective",
  "pub fn spark_core::SloPolicyDirective::clone(&self) -> spark_core::SloPolicyDirective",
  "impl core::cmp::Eq for spark_core::SloPolicyDirective",
  "impl core::cmp::PartialEq for spark_core::SloPolicyDirective",
  "pub fn spark_core::SloPolicyDirective::eq(&self, other: &spark_core::SloPolicyDirective) -> bool",
  "impl core::fmt::Debug for spark_core::SloPolicyDirective",
  "pub fn spark_core::SloPolicyDirective::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::SloPolicyDirective",
  "impl core::marker::Freeze for spark_core::SloPolicyDirective",
  "impl core::marker::Send for spark_core::SloPolicyDirective",
  "impl core::marker::Sync for spark_core::SloPolicyDirective",
  "impl core::marker::Unpin for spark_core::SloPolicyDirective",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::SloPolicyDirective",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::SloPolicyDirective",
  "pub struct spark_core::runtime::SloPolicyManager",
  "impl spark_core::SloPolicyManager",
  "pub fn spark_core::SloPolicyManager::apply_config(&self, value: &spark_core::ConfigValue) -> core::result::Result<spark_core::SloPolicyReloadReport, spark_core::SloPolicyConfigError>",
  "pub fn spark_core::SloPolicyManager::evaluate_snapshot(&self, snapshot: &spark_core::contract::BudgetSnapshot) -> alloc::vec::Vec<spark_core::SloPolicyDirective>",
  "pub fn spark_core::SloPolicyManager::new() -> Self",
  "pub fn spark_core::SloPolicyManager::update_rules(&self, rules: alloc::vec::Vec<spark_core::SloPolicyRule>) -> spark_core::SloPolicyReloadReport",
  "pub fn spark_core::SloPolicyManager::with_rules(rules: alloc::vec::Vec<spark_core::SloPolicyRule>) -> Self",
  "impl core::default::Default for spark_core::SloPolicyManager",
  "pub fn spark_core::SloPolicyManager::default() -> Self",
  "impl !core::marker::Freeze for spark_core::SloPolicyManager",
  "impl core::marker::Send for spark_core::SloPolicyManager",
  "impl core::marker::Sync for spark_core::SloPolicyManager",
  "impl core::marker::Unpin for spark_core::SloPolicyManager",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::SloPolicyManager",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::SloPolicyManager",
  "pub struct spark_core::runtime::SloPolicyReloadReport",
  "pub spark_core::runtime::SloPolicyReloadReport::added: alloc::vec::Vec<alloc::sync::Arc<str>>",
  "pub spark_core::runtime::SloPolicyReloadReport::removed: alloc::vec::Vec<alloc::sync::Arc<str>>",
  "pub spark_core::runtime::SloPolicyReloadReport::retained: alloc::vec::Vec<alloc::sync::Arc<str>>",
  "impl core::clone::Clone for spark_core::SloPolicyReloadReport",
  "pub fn spark_core::SloPolicyReloadReport::clone(&self) -> spark_core::SloPolicyReloadReport",
  "impl core::cmp::Eq for spark_core::SloPolicyReloadReport",
  "impl core::cmp::PartialEq for spark_core::SloPolicyReloadReport",
  "pub fn spark_core::SloPolicyReloadReport::eq(&self, other: &spark_core::SloPolicyReloadReport) -> bool",
  "impl core::fmt::Debug for spark_core::SloPolicyReloadReport",
  "pub fn spark_core::SloPolicyReloadReport::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::SloPolicyReloadReport",
  "impl core::marker::Freeze for spark_core::SloPolicyReloadReport",
  "impl core::marker::Send for spark_core::SloPolicyReloadReport",
  "impl core::marker::Sync for spark_core::SloPolicyReloadReport",
  "impl core::marker::Unpin for spark_core::SloPolicyReloadReport",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::SloPolicyReloadReport",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::SloPolicyReloadReport",
  "pub struct spark_core::runtime::SloPolicyRule",
  "impl spark_core::SloPolicyRule",
  "pub fn spark_core::SloPolicyRule::action(&self) -> &spark_core::SloPolicyAction",
  "pub fn spark_core::SloPolicyRule::budget_kind(&self) -> &spark_core::contract::BudgetKind",
  "pub fn spark_core::SloPolicyRule::new(rule_id: alloc::sync::Arc<str>, budget_kind: spark_core::contract::BudgetKind, trigger: spark_core::SloPolicyTrigger, action: spark_core::SloPolicyAction, summary: core::option::Option<alloc::sync::Arc<str>>) -> Self",
  "pub fn spark_core::SloPolicyRule::rule_id(&self) -> &alloc::sync::Arc<str>",
  "pub fn spark_core::SloPolicyRule::summary(&self) -> core::option::Option<&alloc::sync::Arc<str>>",
  "pub fn spark_core::SloPolicyRule::trigger(&self) -> &spark_core::SloPolicyTrigger",
  "impl core::clone::Clone for spark_core::SloPolicyRule",
  "pub fn spark_core::SloPolicyRule::clone(&self) -> spark_core::SloPolicyRule",
  "impl core::cmp::Eq for spark_core::SloPolicyRule",
  "impl core::cmp::PartialEq for spark_core::SloPolicyRule",
  "pub fn spark_core::SloPolicyRule::eq(&self, other: &spark_core::SloPolicyRule) -> bool",
  "impl core::fmt::Debug for spark_core::SloPolicyRule",
  "pub fn spark_core::SloPolicyRule::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::SloPolicyRule",
  "impl core::marker::Freeze for spark_core::SloPolicyRule",
  "impl core::marker::Send for spark_core::SloPolicyRule",
  "impl core::marker::Sync for spark_core::SloPolicyRule",
  "impl core::marker::Unpin for spark_core::SloPolicyRule",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::SloPolicyRule",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::SloPolicyRule",
  "pub struct spark_core::runtime::SloPolicyTrigger",
  "impl spark_core::SloPolicyTrigger",
  "pub fn spark_core::SloPolicyTrigger::evaluate(&self, remaining_permille: u16, currently_active: bool) -> core::option::Option<bool>",
  "pub fn spark_core::SloPolicyTrigger::new(activate_below_or_equal: u16, deactivate_above_or_equal: u16) -> Self",
  "impl core::clone::Clone for spark_core::SloPolicyTrigger",
  "pub fn spark_core::SloPolicyTrigger::clone(&self) -> spark_core::SloPolicyTrigger",
  "impl core::cmp::Eq for spark_core::SloPolicyTrigger",
  "impl core::cmp::PartialEq for spark_core::SloPolicyTrigger",
  "pub fn spark_core::SloPolicyTrigger::eq(&self, other: &spark_core::SloPolicyTrigger) -> bool",
  "impl core::fmt::Debug for spark_core::SloPolicyTrigger",
  "pub fn spark_core::SloPolicyTrigger::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::SloPolicyTrigger",
  "impl core::marker::Freeze for spark_core::SloPolicyTrigger",
  "impl core::marker::Send for spark_core::SloPolicyTrigger",
  "impl core::marker::Sync for spark_core::SloPolicyTrigger",
  "impl core::marker::Unpin for spark_core::SloPolicyTrigger",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::SloPolicyTrigger",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::SloPolicyTrigger",
  "pub struct spark_core::runtime::TaskLaunchOptions",
  "pub spark_core::runtime::TaskLaunchOptions::cancellation: spark_core::TaskCancellationStrategy",
  "pub spark_core::runtime::TaskLaunchOptions::name: core::option::Option<alloc::borrow::Cow<'static, str>>",
  "pub spark_core::runtime::TaskLaunchOptions::priority: spark_core::TaskPriority",
  "pub spark_core::runtime::TaskLaunchOptions::tracing_labels: core::option::Option<alloc::string::String>",
  "impl spark_core::TaskLaunchOptions",
  "pub fn spark_core::TaskLaunchOptions::named(name: impl core::convert::Into<alloc::borrow::Cow<'static, str>>) -> Self",
  "impl core::clone::Clone for spark_core::TaskLaunchOptions",
  "pub fn spark_core::TaskLaunchOptions::clone(&self) -> spark_core::TaskLaunchOptions",
  "impl core::default::Default for spark_core::TaskLaunchOptions",
  "pub fn spark_core::TaskLaunchOptions::default() -> spark_core::TaskLaunchOptions",
  "impl core::fmt::Debug for spark_core::TaskLaunchOptions",
  "pub fn spark_core::TaskLaunchOptions::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::TaskLaunchOptions",
  "impl core::marker::Send for spark_core::TaskLaunchOptions",
  "impl core::marker::Sync for spark_core::TaskLaunchOptions",
  "impl core::marker::Unpin for spark_core::TaskLaunchOptions",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::TaskLaunchOptions",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::TaskLaunchOptions",
  "pub struct spark_core::runtime::TimeoutRuntimeConfig",
  "impl spark_core::TimeoutRuntimeConfig",
  "pub fn spark_core::TimeoutRuntimeConfig::config_epoch(&self) -> u64",
  "pub fn spark_core::TimeoutRuntimeConfig::fence(&self) -> spark_core::runtime::HotReloadFence",
  "pub fn spark_core::TimeoutRuntimeConfig::new(initial: spark_core::TimeoutSettings) -> Self",
  "pub fn spark_core::TimeoutRuntimeConfig::replace(&self, settings: spark_core::TimeoutSettings)",
  "pub fn spark_core::TimeoutRuntimeConfig::replace_with_fence(&self, guard: &spark_core::runtime::HotReloadWriteGuard<'_>, settings: spark_core::TimeoutSettings, timer: spark_core::runtime::HotReloadApplyTimer)",
  "pub fn spark_core::TimeoutRuntimeConfig::snapshot(&self) -> alloc::sync::Arc<spark_core::TimeoutSettings>",
  "pub fn spark_core::TimeoutRuntimeConfig::snapshot_with_fence(&self, _guard: &spark_core::runtime::HotReloadReadGuard<'_>) -> alloc::sync::Arc<spark_core::TimeoutSettings>",
  "pub fn spark_core::TimeoutRuntimeConfig::update_from_configuration(&self, config: &spark_core::ResolvedConfiguration) -> core::result::Result<(), spark_core::TimeoutConfigError>",
  "pub fn spark_core::TimeoutRuntimeConfig::update_from_configuration_with_fence(&self, guard: &spark_core::runtime::HotReloadWriteGuard<'_>, config: &spark_core::ResolvedConfiguration, timer: spark_core::runtime::HotReloadApplyTimer) -> core::result::Result<(), spark_core::TimeoutConfigError>",
  "pub fn spark_core::TimeoutRuntimeConfig::with_observability(initial: spark_core::TimeoutSettings, fence: spark_core::runtime::HotReloadFence, metrics: alloc::sync::Arc<dyn spark_core::observability::metrics::MetricsProvider>, component: impl core::convert::Into<alloc::borrow::Cow<'static, str>>) -> Self",
  "pub fn spark_core::TimeoutRuntimeConfig::with_shared_fence(initial: spark_core::TimeoutSettings, fence: spark_core::runtime::HotReloadFence) -> Self",
  "impl core::default::Default for spark_core::TimeoutRuntimeConfig",
  "pub fn spark_core::TimeoutRuntimeConfig::default() -> Self",
  "impl !core::marker::Freeze for spark_core::TimeoutRuntimeConfig",
  "impl core::marker::Send for spark_core::TimeoutRuntimeConfig",
  "impl core::marker::Sync for spark_core::TimeoutRuntimeConfig",
  "impl core::marker::Unpin for spark_core::TimeoutRuntimeConfig",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::TimeoutRuntimeConfig",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::TimeoutRuntimeConfig",
  "pub struct spark_core::runtime::TimeoutSettings",
  "impl spark_core::TimeoutSettings",
  "pub fn spark_core::TimeoutSettings::from_configuration(config: &spark_core::ResolvedConfiguration) -> core::result::Result<Self, spark_core::TimeoutConfigError>",
  "pub const fn spark_core::TimeoutSettings::idle_timeout(&self) -> core::time::Duration",
  "pub const fn spark_core::TimeoutSettings::new(request_timeout: core::time::Duration, idle_timeout: core::time::Duration) -> Self",
  "pub const fn spark_core::TimeoutSettings::request_timeout(&self) -> core::time::Duration",
  "impl core::clone::Clone for spark_core::TimeoutSettings",
  "pub fn spark_core::TimeoutSettings::clone(&self) -> spark_core::TimeoutSettings",
  "impl core::cmp::Eq for spark_core::TimeoutSettings",
  "impl core::cmp::PartialEq for spark_core::TimeoutSettings",
  "pub fn spark_core::TimeoutSettings::eq(&self, other: &spark_core::TimeoutSettings) -> bool",
  "impl core::default::Default for spark_core::TimeoutSettings",
  "pub fn spark_core::TimeoutSettings::default() -> Self",
  "impl core::fmt::Debug for spark_core::TimeoutSettings",
  "pub fn spark_core::TimeoutSettings::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::TimeoutSettings",
  "impl core::marker::Freeze for spark_core::TimeoutSettings",
  "impl core::marker::Send for spark_core::TimeoutSettings",
  "impl core::marker::Sync for spark_core::TimeoutSettings",
  "impl core::marker::Unpin for spark_core::TimeoutSettings",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::TimeoutSettings",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::TimeoutSettings",
  "pub trait spark_core::runtime::AsyncRuntime: spark_core::TaskExecutor + spark_core::TimeDriver + core::marker::Send + core::marker::Sync + 'static + crate::sealed::Sealed",
  "impl<T> spark_core::runtime::AsyncRuntime for T where T: spark_core::TaskExecutor + spark_core::TimeDriver + core::marker::Send + core::marker::Sync + 'static",
  "pub trait spark_core::runtime::TaskExecutor: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::runtime::TaskExecutor::spawn<F>(&self, ctx: &spark_core::contract::CallContext, fut: F) -> spark_core::JoinHandle<<F as core::future::future::Future>::Output> where Self: core::marker::Sized, F: core::future::future::Future + core::marker::Send + 'static, <F as core::future::future::Future>::Output: core::marker::Send + 'static",
  "pub fn spark_core::runtime::TaskExecutor::spawn_dyn(&self, ctx: &spark_core::contract::CallContext, fut: spark_core::future::BoxFuture<'static, spark_core::TaskResult<alloc::boxed::Box<(dyn core::any::Any + core::marker::Send)>>>) -> spark_core::JoinHandle<alloc::boxed::Box<(dyn core::any::Any + core::marker::Send)>>",
  "pub trait spark_core::runtime::TaskHandle: core::marker::Send + core::marker::Sync + Sealed",
  "pub type spark_core::runtime::TaskHandle::Output: core::marker::Send + 'static",
  "pub fn spark_core::runtime::TaskHandle::cancel(&self, strategy: spark_core::TaskCancellationStrategy)",
  "pub fn spark_core::runtime::TaskHandle::detach(self: alloc::boxed::Box<Self>)",
  "pub fn spark_core::runtime::TaskHandle::id(&self) -> core::option::Option<&str>",
  "pub fn spark_core::runtime::TaskHandle::is_cancelled(&self) -> bool",
  "pub fn spark_core::runtime::TaskHandle::is_finished(&self) -> bool",
  "pub fn spark_core::runtime::TaskHandle::join<'async_trait>(self: alloc::boxed::Box<Self>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = spark_core::TaskResult<Self::Output>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait",
  "pub trait spark_core::runtime::TimeDriver: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::runtime::TimeDriver::now(&self) -> spark_core::MonotonicTimePoint",
  "pub fn spark_core::runtime::TimeDriver::sleep<'life0, 'async_trait>(&'life0 self, duration: core::time::Duration) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = ()> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait",
  "pub fn spark_core::runtime::TimeDriver::sleep_until<'life0, 'async_trait>(&'life0 self, deadline: spark_core::MonotonicTimePoint) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = ()> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait",
  "pub fn spark_core::runtime::slo_policy_table_key() -> spark_core::ConfigKey",
  "pub type spark_core::runtime::TaskResult<T> = core::result::Result<T, spark_core::TaskError>",
  "pub mod spark_core::security",
  "pub mod spark_core::security::class",
  "#[non_exhaustive] pub enum spark_core::security::class::SecurityClass",
  "pub spark_core::security::class::SecurityClass::Audit",
  "pub spark_core::security::class::SecurityClass::Authentication",
  "pub spark_core::security::class::SecurityClass::Authorization",
  "pub spark_core::security::class::SecurityClass::Confidentiality",
  "pub spark_core::security::class::SecurityClass::Integrity",
  "pub spark_core::security::class::SecurityClass::Unknown",
  "impl spark_core::security::class::SecurityClass",
  "pub const fn spark_core::security::class::SecurityClass::code(self) -> &'static str",
  "pub const fn spark_core::security::class::SecurityClass::summary(self) -> &'static str",
  "impl core::clone::Clone for spark_core::security::class::SecurityClass",
  "pub fn spark_core::security::class::SecurityClass::clone(&self) -> spark_core::security::class::SecurityClass",
  "impl core::cmp::Eq for spark_core::security::class::SecurityClass",
  "impl core::cmp::PartialEq for spark_core::security::class::SecurityClass",
  "pub fn spark_core::security::class::SecurityClass::eq(&self, other: &spark_core::security::class::SecurityClass) -> bool",
  "impl core::fmt::Debug for spark_core::security::class::SecurityClass",
  "pub fn spark_core::security::class::SecurityClass::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::security::class::SecurityClass",
  "pub fn spark_core::security::class::SecurityClass::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::Copy for spark_core::security::class::SecurityClass",
  "impl core::marker::StructuralPartialEq for spark_core::security::class::SecurityClass",
  "impl core::marker::Freeze for spark_core::security::class::SecurityClass",
  "impl core::marker::Send for spark_core::security::class::SecurityClass",
  "impl core::marker::Sync for spark_core::security::class::SecurityClass",
  "impl core::marker::Unpin for spark_core::security::class::SecurityClass",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::class::SecurityClass",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::class::SecurityClass",
  "pub mod spark_core::security::credential",
  "#[non_exhaustive] pub enum spark_core::security::credential::CredentialMaterial",
  "pub spark_core::security::credential::CredentialMaterial::CertificateChain(alloc::vec::Vec<u8>)",
  "pub spark_core::security::credential::CredentialMaterial::Custom",
  "pub spark_core::security::credential::CredentialMaterial::Custom::format: alloc::string::String",
  "pub spark_core::security::credential::CredentialMaterial::Custom::payload: alloc::vec::Vec<u8>",
  "pub spark_core::security::credential::CredentialMaterial::PublicKey(alloc::vec::Vec<u8>)",
  "pub spark_core::security::credential::CredentialMaterial::SignedToken(alloc::vec::Vec<u8>)",
  "pub spark_core::security::credential::CredentialMaterial::SymmetricKey(alloc::vec::Vec<u8>)",
  "impl core::clone::Clone for spark_core::security::credential::CredentialMaterial",
  "pub fn spark_core::security::credential::CredentialMaterial::clone(&self) -> spark_core::security::credential::CredentialMaterial",
  "impl core::cmp::Eq for spark_core::security::credential::CredentialMaterial",
  "impl core::cmp::PartialEq for spark_core::security::credential::CredentialMaterial",
  "pub fn spark_core::security::credential::CredentialMaterial::eq(&self, other: &spark_core::security::credential::CredentialMaterial) -> bool",
  "impl core::fmt::Debug for spark_core::security::credential::CredentialMaterial",
  "pub fn spark_core::security::credential::CredentialMaterial::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::credential::CredentialMaterial",
  "impl core::marker::Freeze for spark_core::security::credential::CredentialMaterial",
  "impl core::marker::Send for spark_core::security::credential::CredentialMaterial",
  "impl core::marker::Sync for spark_core::security::credential::CredentialMaterial",
  "impl core::marker::Unpin for spark_core::security::credential::CredentialMaterial",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::credential::CredentialMaterial",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::credential::CredentialMaterial",
  "#[non_exhaustive] pub enum spark_core::security::credential::CredentialScope",
  "pub spark_core::security::credential::CredentialScope::Connection",
  "pub spark_core::security::credential::CredentialScope::Message",
  "pub spark_core::security::credential::CredentialScope::Session",
  "impl core::clone::Clone for spark_core::security::credential::CredentialScope",
  "pub fn spark_core::security::credential::CredentialScope::clone(&self) -> spark_core::security::credential::CredentialScope",
  "impl core::cmp::Eq for spark_core::security::credential::CredentialScope",
  "impl core::cmp::PartialEq for spark_core::security::credential::CredentialScope",
  "pub fn spark_core::security::credential::CredentialScope::eq(&self, other: &spark_core::security::credential::CredentialScope) -> bool",
  "impl core::fmt::Debug for spark_core::security::credential::CredentialScope",
  "pub fn spark_core::security::credential::CredentialScope::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::security::credential::CredentialScope",
  "impl core::marker::StructuralPartialEq for spark_core::security::credential::CredentialScope",
  "impl core::marker::Freeze for spark_core::security::credential::CredentialScope",
  "impl core::marker::Send for spark_core::security::credential::CredentialScope",
  "impl core::marker::Sync for spark_core::security::credential::CredentialScope",
  "impl core::marker::Unpin for spark_core::security::credential::CredentialScope",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::credential::CredentialScope",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::credential::CredentialScope",
  "#[non_exhaustive] pub enum spark_core::security::credential::CredentialState",
  "pub spark_core::security::credential::CredentialState::Active",
  "pub spark_core::security::credential::CredentialState::Expired",
  "pub spark_core::security::credential::CredentialState::Revoked",
  "impl core::clone::Clone for spark_core::security::credential::CredentialState",
  "pub fn spark_core::security::credential::CredentialState::clone(&self) -> spark_core::security::credential::CredentialState",
  "impl core::cmp::Eq for spark_core::security::credential::CredentialState",
  "impl core::cmp::PartialEq for spark_core::security::credential::CredentialState",
  "pub fn spark_core::security::credential::CredentialState::eq(&self, other: &spark_core::security::credential::CredentialState) -> bool",
  "impl core::fmt::Debug for spark_core::security::credential::CredentialState",
  "pub fn spark_core::security::credential::CredentialState::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::security::credential::CredentialState",
  "impl core::marker::StructuralPartialEq for spark_core::security::credential::CredentialState",
  "impl core::marker::Freeze for spark_core::security::credential::CredentialState",
  "impl core::marker::Send for spark_core::security::credential::CredentialState",
  "impl core::marker::Sync for spark_core::security::credential::CredentialState",
  "impl core::marker::Unpin for spark_core::security::credential::CredentialState",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::credential::CredentialState",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::credential::CredentialState",
  "pub struct spark_core::security::credential::Credential",
  "impl spark_core::security::credential::Credential",
  "pub fn spark_core::security::credential::Credential::descriptor(&self) -> &spark_core::security::credential::CredentialDescriptor",
  "pub fn spark_core::security::credential::Credential::material(&self) -> &spark_core::security::credential::CredentialMaterial",
  "pub fn spark_core::security::credential::Credential::new(descriptor: spark_core::security::credential::CredentialDescriptor, material: spark_core::security::credential::CredentialMaterial) -> Self",
  "pub fn spark_core::security::credential::Credential::state(&self, age: core::option::Option<core::time::Duration>, revoked: bool) -> spark_core::security::credential::CredentialState",
  "pub fn spark_core::security::credential::Credential::version_hint(&self) -> core::option::Option<&alloc::string::String>",
  "pub fn spark_core::security::credential::Credential::with_version_hint(self, version_hint: alloc::string::String) -> Self",
  "impl core::clone::Clone for spark_core::security::credential::Credential",
  "pub fn spark_core::security::credential::Credential::clone(&self) -> spark_core::security::credential::Credential",
  "impl core::cmp::Eq for spark_core::security::credential::Credential",
  "impl core::cmp::PartialEq for spark_core::security::credential::Credential",
  "pub fn spark_core::security::credential::Credential::eq(&self, other: &spark_core::security::credential::Credential) -> bool",
  "impl core::fmt::Debug for spark_core::security::credential::Credential",
  "pub fn spark_core::security::credential::Credential::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::credential::Credential",
  "impl core::marker::Freeze for spark_core::security::credential::Credential",
  "impl core::marker::Send for spark_core::security::credential::Credential",
  "impl core::marker::Sync for spark_core::security::credential::Credential",
  "impl core::marker::Unpin for spark_core::security::credential::Credential",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::credential::Credential",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::credential::Credential",
  "pub struct spark_core::security::credential::CredentialDescriptor",
  "impl spark_core::security::credential::CredentialDescriptor",
  "pub fn spark_core::security::credential::CredentialDescriptor::identity(&self) -> &spark_core::security::identity::IdentityDescriptor",
  "pub fn spark_core::security::credential::CredentialDescriptor::new(identity: spark_core::security::identity::IdentityDescriptor, scope: spark_core::security::credential::CredentialScope) -> Self",
  "pub fn spark_core::security::credential::CredentialDescriptor::non_renewable(self) -> Self",
  "pub fn spark_core::security::credential::CredentialDescriptor::proof(&self) -> core::option::Option<&spark_core::security::identity::IdentityProof>",
  "pub fn spark_core::security::credential::CredentialDescriptor::renewable(&self) -> bool",
  "pub fn spark_core::security::credential::CredentialDescriptor::scope(&self) -> spark_core::security::credential::CredentialScope",
  "pub fn spark_core::security::credential::CredentialDescriptor::valid_for(&self) -> core::option::Option<core::time::Duration>",
  "pub fn spark_core::security::credential::CredentialDescriptor::with_proof(self, proof: spark_core::security::identity::IdentityProof) -> Self",
  "pub fn spark_core::security::credential::CredentialDescriptor::with_valid_for(self, duration: core::time::Duration) -> Self",
  "impl core::clone::Clone for spark_core::security::credential::CredentialDescriptor",
  "pub fn spark_core::security::credential::CredentialDescriptor::clone(&self) -> spark_core::security::credential::CredentialDescriptor",
  "impl core::cmp::Eq for spark_core::security::credential::CredentialDescriptor",
  "impl core::cmp::PartialEq for spark_core::security::credential::CredentialDescriptor",
  "pub fn spark_core::security::credential::CredentialDescriptor::eq(&self, other: &spark_core::security::credential::CredentialDescriptor) -> bool",
  "impl core::fmt::Debug for spark_core::security::credential::CredentialDescriptor",
  "pub fn spark_core::security::credential::CredentialDescriptor::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::credential::CredentialDescriptor",
  "impl core::marker::Freeze for spark_core::security::credential::CredentialDescriptor",
  "impl core::marker::Send for spark_core::security::credential::CredentialDescriptor",
  "impl core::marker::Sync for spark_core::security::credential::CredentialDescriptor",
  "impl core::marker::Unpin for spark_core::security::credential::CredentialDescriptor",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::credential::CredentialDescriptor",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::credential::CredentialDescriptor",
  "pub mod spark_core::security::identity",
  "#[non_exhaustive] pub enum spark_core::security::identity::IdentityKind",
  "pub spark_core::security::identity::IdentityKind::Custom(alloc::string::String)",
  "pub spark_core::security::identity::IdentityKind::Machine",
  "pub spark_core::security::identity::IdentityKind::Service",
  "pub spark_core::security::identity::IdentityKind::User",
  "pub spark_core::security::identity::IdentityKind::Workload",
  "impl core::clone::Clone for spark_core::security::identity::IdentityKind",
  "pub fn spark_core::security::identity::IdentityKind::clone(&self) -> spark_core::security::identity::IdentityKind",
  "impl core::cmp::Eq for spark_core::security::identity::IdentityKind",
  "impl core::cmp::PartialEq for spark_core::security::identity::IdentityKind",
  "pub fn spark_core::security::identity::IdentityKind::eq(&self, other: &spark_core::security::identity::IdentityKind) -> bool",
  "impl core::fmt::Debug for spark_core::security::identity::IdentityKind",
  "pub fn spark_core::security::identity::IdentityKind::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::identity::IdentityKind",
  "impl core::marker::Freeze for spark_core::security::identity::IdentityKind",
  "impl core::marker::Send for spark_core::security::identity::IdentityKind",
  "impl core::marker::Sync for spark_core::security::identity::IdentityKind",
  "impl core::marker::Unpin for spark_core::security::identity::IdentityKind",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::identity::IdentityKind",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::identity::IdentityKind",
  "#[non_exhaustive] pub enum spark_core::security::identity::IdentityProof",
  "pub spark_core::security::identity::IdentityProof::Custom",
  "pub spark_core::security::identity::IdentityProof::Custom::format: alloc::string::String",
  "pub spark_core::security::identity::IdentityProof::Custom::payload: alloc::vec::Vec<u8>",
  "pub spark_core::security::identity::IdentityProof::JsonWebToken(alloc::string::String)",
  "pub spark_core::security::identity::IdentityProof::PublicKey(alloc::vec::Vec<u8>)",
  "pub spark_core::security::identity::IdentityProof::Spiffe(alloc::string::String)",
  "pub spark_core::security::identity::IdentityProof::X509Chain(alloc::vec::Vec<u8>)",
  "impl core::clone::Clone for spark_core::security::identity::IdentityProof",
  "pub fn spark_core::security::identity::IdentityProof::clone(&self) -> spark_core::security::identity::IdentityProof",
  "impl core::cmp::Eq for spark_core::security::identity::IdentityProof",
  "impl core::cmp::PartialEq for spark_core::security::identity::IdentityProof",
  "pub fn spark_core::security::identity::IdentityProof::eq(&self, other: &spark_core::security::identity::IdentityProof) -> bool",
  "impl core::fmt::Debug for spark_core::security::identity::IdentityProof",
  "pub fn spark_core::security::identity::IdentityProof::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::identity::IdentityProof",
  "impl core::marker::Freeze for spark_core::security::identity::IdentityProof",
  "impl core::marker::Send for spark_core::security::identity::IdentityProof",
  "impl core::marker::Sync for spark_core::security::identity::IdentityProof",
  "impl core::marker::Unpin for spark_core::security::identity::IdentityProof",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::identity::IdentityProof",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::identity::IdentityProof",
  "pub struct spark_core::security::identity::IdentityDescriptor",
  "impl spark_core::security::identity::IdentityDescriptor",
  "pub fn spark_core::security::identity::IdentityDescriptor::authority(&self) -> &str",
  "pub fn spark_core::security::identity::IdentityDescriptor::kind(&self) -> &spark_core::security::identity::IdentityKind",
  "pub fn spark_core::security::identity::IdentityDescriptor::name(&self) -> &str",
  "pub fn spark_core::security::identity::IdentityDescriptor::new(authority: alloc::string::String, name: alloc::string::String, kind: spark_core::security::identity::IdentityKind) -> Self",
  "pub fn spark_core::security::identity::IdentityDescriptor::version(&self) -> core::option::Option<&alloc::string::String>",
  "pub fn spark_core::security::identity::IdentityDescriptor::with_version(self, version: alloc::string::String) -> Self",
  "impl core::clone::Clone for spark_core::security::identity::IdentityDescriptor",
  "pub fn spark_core::security::identity::IdentityDescriptor::clone(&self) -> spark_core::security::identity::IdentityDescriptor",
  "impl core::cmp::Eq for spark_core::security::identity::IdentityDescriptor",
  "impl core::cmp::PartialEq for spark_core::security::identity::IdentityDescriptor",
  "pub fn spark_core::security::identity::IdentityDescriptor::eq(&self, other: &spark_core::security::identity::IdentityDescriptor) -> bool",
  "impl core::fmt::Debug for spark_core::security::identity::IdentityDescriptor",
  "pub fn spark_core::security::identity::IdentityDescriptor::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::identity::IdentityDescriptor",
  "impl core::marker::Freeze for spark_core::security::identity::IdentityDescriptor",
  "impl core::marker::Send for spark_core::security::identity::IdentityDescriptor",
  "impl core::marker::Sync for spark_core::security::identity::IdentityDescriptor",
  "impl core::marker::Unpin for spark_core::security::identity::IdentityDescriptor",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::identity::IdentityDescriptor",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::identity::IdentityDescriptor",
  "pub mod spark_core::security::keystore",
  "#[non_exhaustive] pub enum spark_core::security::keystore::KeyPurpose",
  "pub spark_core::security::keystore::KeyPurpose::Custom(alloc::string::String)",
  "pub spark_core::security::keystore::KeyPurpose::DataEncryption",
  "pub spark_core::security::keystore::KeyPurpose::MessageIntegrity",
  "pub spark_core::security::keystore::KeyPurpose::RemoteAttestation",
  "pub spark_core::security::keystore::KeyPurpose::TransportHandshake",
  "impl core::clone::Clone for spark_core::security::keystore::KeyPurpose",
  "pub fn spark_core::security::keystore::KeyPurpose::clone(&self) -> spark_core::security::keystore::KeyPurpose",
  "impl core::cmp::Eq for spark_core::security::keystore::KeyPurpose",
  "impl core::cmp::PartialEq for spark_core::security::keystore::KeyPurpose",
  "pub fn spark_core::security::keystore::KeyPurpose::eq(&self, other: &spark_core::security::keystore::KeyPurpose) -> bool",
  "impl core::fmt::Debug for spark_core::security::keystore::KeyPurpose",
  "pub fn spark_core::security::keystore::KeyPurpose::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::keystore::KeyPurpose",
  "impl core::marker::Freeze for spark_core::security::keystore::KeyPurpose",
  "impl core::marker::Send for spark_core::security::keystore::KeyPurpose",
  "impl core::marker::Sync for spark_core::security::keystore::KeyPurpose",
  "impl core::marker::Unpin for spark_core::security::keystore::KeyPurpose",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::keystore::KeyPurpose",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::keystore::KeyPurpose",
  "#[non_exhaustive] pub enum spark_core::security::keystore::KeyRetrievalError",
  "pub spark_core::security::keystore::KeyRetrievalError::InvalidRequest(alloc::string::String)",
  "pub spark_core::security::keystore::KeyRetrievalError::NotFound",
  "pub spark_core::security::keystore::KeyRetrievalError::Other(alloc::string::String)",
  "pub spark_core::security::keystore::KeyRetrievalError::Unauthorized",
  "pub spark_core::security::keystore::KeyRetrievalError::Unavailable",
  "impl core::fmt::Debug for spark_core::security::keystore::KeyRetrievalError",
  "pub fn spark_core::security::keystore::KeyRetrievalError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::security::keystore::KeyRetrievalError",
  "pub fn spark_core::security::keystore::KeyRetrievalError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl spark_core::Error for spark_core::security::keystore::KeyRetrievalError",
  "pub fn spark_core::security::keystore::KeyRetrievalError::source(&self) -> core::option::Option<&(dyn spark_core::Error + 'static)>",
  "impl core::marker::Freeze for spark_core::security::keystore::KeyRetrievalError",
  "impl core::marker::Send for spark_core::security::keystore::KeyRetrievalError",
  "impl core::marker::Sync for spark_core::security::keystore::KeyRetrievalError",
  "impl core::marker::Unpin for spark_core::security::keystore::KeyRetrievalError",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::keystore::KeyRetrievalError",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::keystore::KeyRetrievalError",
  "pub struct spark_core::security::keystore::KeyMaterial",
  "impl spark_core::security::keystore::KeyMaterial",
  "pub fn spark_core::security::keystore::KeyMaterial::expires_in(&self) -> core::option::Option<core::time::Duration>",
  "pub fn spark_core::security::keystore::KeyMaterial::format(&self) -> &str",
  "pub fn spark_core::security::keystore::KeyMaterial::new(format: alloc::string::String, payload: alloc::vec::Vec<u8>) -> Self",
  "pub fn spark_core::security::keystore::KeyMaterial::non_renewable(self) -> Self",
  "pub fn spark_core::security::keystore::KeyMaterial::payload(&self) -> &alloc::vec::Vec<u8>",
  "pub fn spark_core::security::keystore::KeyMaterial::renewable(&self) -> bool",
  "pub fn spark_core::security::keystore::KeyMaterial::with_expires_in(self, duration: core::time::Duration) -> Self",
  "impl core::clone::Clone for spark_core::security::keystore::KeyMaterial",
  "pub fn spark_core::security::keystore::KeyMaterial::clone(&self) -> spark_core::security::keystore::KeyMaterial",
  "impl core::cmp::Eq for spark_core::security::keystore::KeyMaterial",
  "impl core::cmp::PartialEq for spark_core::security::keystore::KeyMaterial",
  "pub fn spark_core::security::keystore::KeyMaterial::eq(&self, other: &spark_core::security::keystore::KeyMaterial) -> bool",
  "impl core::fmt::Debug for spark_core::security::keystore::KeyMaterial",
  "pub fn spark_core::security::keystore::KeyMaterial::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::keystore::KeyMaterial",
  "impl core::marker::Freeze for spark_core::security::keystore::KeyMaterial",
  "impl core::marker::Send for spark_core::security::keystore::KeyMaterial",
  "impl core::marker::Sync for spark_core::security::keystore::KeyMaterial",
  "impl core::marker::Unpin for spark_core::security::keystore::KeyMaterial",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::keystore::KeyMaterial",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::keystore::KeyMaterial",
  "pub struct spark_core::security::keystore::KeyRequest",
  "impl spark_core::security::keystore::KeyRequest",
  "pub fn spark_core::security::keystore::KeyRequest::audience(&self) -> core::option::Option<&alloc::string::String>",
  "pub fn spark_core::security::keystore::KeyRequest::identity(&self) -> &spark_core::security::identity::IdentityDescriptor",
  "pub fn spark_core::security::keystore::KeyRequest::new(identity: spark_core::security::identity::IdentityDescriptor, purpose: spark_core::security::keystore::KeyPurpose, scope: spark_core::security::credential::CredentialScope) -> Self",
  "pub fn spark_core::security::keystore::KeyRequest::prefer_cached(&self) -> bool",
  "pub fn spark_core::security::keystore::KeyRequest::prefer_fresh(self) -> Self",
  "pub fn spark_core::security::keystore::KeyRequest::purpose(&self) -> &spark_core::security::keystore::KeyPurpose",
  "pub fn spark_core::security::keystore::KeyRequest::scope(&self) -> spark_core::security::credential::CredentialScope",
  "pub fn spark_core::security::keystore::KeyRequest::version_hint(&self) -> core::option::Option<&alloc::string::String>",
  "pub fn spark_core::security::keystore::KeyRequest::with_audience(self, audience: alloc::string::String) -> Self",
  "pub fn spark_core::security::keystore::KeyRequest::with_version_hint(self, version_hint: alloc::string::String) -> Self",
  "impl core::clone::Clone for spark_core::security::keystore::KeyRequest",
  "pub fn spark_core::security::keystore::KeyRequest::clone(&self) -> spark_core::security::keystore::KeyRequest",
  "impl core::cmp::Eq for spark_core::security::keystore::KeyRequest",
  "impl core::cmp::PartialEq for spark_core::security::keystore::KeyRequest",
  "pub fn spark_core::security::keystore::KeyRequest::eq(&self, other: &spark_core::security::keystore::KeyRequest) -> bool",
  "impl core::fmt::Debug for spark_core::security::keystore::KeyRequest",
  "pub fn spark_core::security::keystore::KeyRequest::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::keystore::KeyRequest",
  "impl core::marker::Freeze for spark_core::security::keystore::KeyRequest",
  "impl core::marker::Send for spark_core::security::keystore::KeyRequest",
  "impl core::marker::Sync for spark_core::security::keystore::KeyRequest",
  "impl core::marker::Unpin for spark_core::security::keystore::KeyRequest",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::keystore::KeyRequest",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::keystore::KeyRequest",
  "pub struct spark_core::security::keystore::KeyResponse",
  "impl spark_core::security::keystore::KeyResponse",
  "pub fn spark_core::security::keystore::KeyResponse::credential(&self) -> core::option::Option<&spark_core::security::credential::Credential>",
  "pub fn spark_core::security::keystore::KeyResponse::materials(&self) -> &alloc::vec::Vec<spark_core::security::keystore::KeyMaterial>",
  "pub fn spark_core::security::keystore::KeyResponse::new(materials: alloc::vec::Vec<spark_core::security::keystore::KeyMaterial>) -> Self",
  "pub fn spark_core::security::keystore::KeyResponse::with_credential(self, credential: spark_core::security::credential::Credential) -> Self",
  "impl core::clone::Clone for spark_core::security::keystore::KeyResponse",
  "pub fn spark_core::security::keystore::KeyResponse::clone(&self) -> spark_core::security::keystore::KeyResponse",
  "impl core::cmp::Eq for spark_core::security::keystore::KeyResponse",
  "impl core::cmp::PartialEq for spark_core::security::keystore::KeyResponse",
  "pub fn spark_core::security::keystore::KeyResponse::eq(&self, other: &spark_core::security::keystore::KeyResponse) -> bool",
  "impl core::fmt::Debug for spark_core::security::keystore::KeyResponse",
  "pub fn spark_core::security::keystore::KeyResponse::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::keystore::KeyResponse",
  "impl core::marker::Freeze for spark_core::security::keystore::KeyResponse",
  "impl core::marker::Send for spark_core::security::keystore::KeyResponse",
  "impl core::marker::Sync for spark_core::security::keystore::KeyResponse",
  "impl core::marker::Unpin for spark_core::security::keystore::KeyResponse",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::keystore::KeyResponse",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::keystore::KeyResponse",
  "pub trait spark_core::security::keystore::KeySource: Sealed",
  "pub fn spark_core::security::keystore::KeySource::fetch(&self, request: &spark_core::security::keystore::KeyRequest) -> core::result::Result<spark_core::security::keystore::KeyResponse, spark_core::security::keystore::KeyRetrievalError>",
  "pub mod spark_core::security::negotiation",
  "#[non_exhaustive] pub enum spark_core::security::negotiation::NegotiationError",
  "pub spark_core::security::negotiation::NegotiationError::CredentialInvalid(alloc::string::String)",
  "pub spark_core::security::negotiation::NegotiationError::NoCommonProtocol",
  "pub spark_core::security::negotiation::NegotiationError::Other(alloc::string::String)",
  "pub spark_core::security::negotiation::NegotiationError::ProtocolRejected",
  "pub spark_core::security::negotiation::NegotiationError::Timeout",
  "impl core::clone::Clone for spark_core::security::negotiation::NegotiationError",
  "pub fn spark_core::security::negotiation::NegotiationError::clone(&self) -> spark_core::security::negotiation::NegotiationError",
  "impl core::cmp::Eq for spark_core::security::negotiation::NegotiationError",
  "impl core::cmp::PartialEq for spark_core::security::negotiation::NegotiationError",
  "pub fn spark_core::security::negotiation::NegotiationError::eq(&self, other: &spark_core::security::negotiation::NegotiationError) -> bool",
  "impl core::fmt::Debug for spark_core::security::negotiation::NegotiationError",
  "pub fn spark_core::security::negotiation::NegotiationError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::negotiation::NegotiationError",
  "impl core::marker::Freeze for spark_core::security::negotiation::NegotiationError",
  "impl core::marker::Send for spark_core::security::negotiation::NegotiationError",
  "impl core::marker::Sync for spark_core::security::negotiation::NegotiationError",
  "impl core::marker::Unpin for spark_core::security::negotiation::NegotiationError",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::negotiation::NegotiationError",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::negotiation::NegotiationError",
  "#[non_exhaustive] pub enum spark_core::security::negotiation::SecurityProtocol",
  "pub spark_core::security::negotiation::SecurityProtocol::Custom",
  "pub spark_core::security::negotiation::SecurityProtocol::Custom::name: alloc::string::String",
  "pub spark_core::security::negotiation::SecurityProtocol::Custom::parameters: alloc::vec::Vec<(alloc::string::String, alloc::string::String)>",
  "pub spark_core::security::negotiation::SecurityProtocol::MutualTls",
  "pub spark_core::security::negotiation::SecurityProtocol::NoiseHandshake",
  "pub spark_core::security::negotiation::SecurityProtocol::PostQuantum",
  "pub spark_core::security::negotiation::SecurityProtocol::RemoteAttestation",
  "pub spark_core::security::negotiation::SecurityProtocol::TokenBinding",
  "impl core::clone::Clone for spark_core::security::negotiation::SecurityProtocol",
  "pub fn spark_core::security::negotiation::SecurityProtocol::clone(&self) -> spark_core::security::negotiation::SecurityProtocol",
  "impl core::cmp::Eq for spark_core::security::negotiation::SecurityProtocol",
  "impl core::cmp::PartialEq for spark_core::security::negotiation::SecurityProtocol",
  "pub fn spark_core::security::negotiation::SecurityProtocol::eq(&self, other: &spark_core::security::negotiation::SecurityProtocol) -> bool",
  "impl core::fmt::Debug for spark_core::security::negotiation::SecurityProtocol",
  "pub fn spark_core::security::negotiation::SecurityProtocol::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::negotiation::SecurityProtocol",
  "impl core::marker::Freeze for spark_core::security::negotiation::SecurityProtocol",
  "impl core::marker::Send for spark_core::security::negotiation::SecurityProtocol",
  "impl core::marker::Sync for spark_core::security::negotiation::SecurityProtocol",
  "impl core::marker::Unpin for spark_core::security::negotiation::SecurityProtocol",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::negotiation::SecurityProtocol",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::negotiation::SecurityProtocol",
  "pub struct spark_core::security::negotiation::NegotiationContext",
  "impl spark_core::security::negotiation::NegotiationContext",
  "pub fn spark_core::security::negotiation::NegotiationContext::add_metadata(self, key: alloc::string::String, value: alloc::string::String) -> Self",
  "pub fn spark_core::security::negotiation::NegotiationContext::local_identity(&self) -> &spark_core::security::identity::IdentityDescriptor",
  "pub fn spark_core::security::negotiation::NegotiationContext::new(local_identity: spark_core::security::identity::IdentityDescriptor) -> Self",
  "pub fn spark_core::security::negotiation::NegotiationContext::remote_hint(&self) -> core::option::Option<&spark_core::security::identity::IdentityDescriptor>",
  "pub fn spark_core::security::negotiation::NegotiationContext::require_protocol(self, protocol: spark_core::security::negotiation::SecurityProtocol) -> Self",
  "pub fn spark_core::security::negotiation::NegotiationContext::required_protocols(&self) -> &alloc::vec::Vec<spark_core::security::negotiation::SecurityProtocol>",
  "pub fn spark_core::security::negotiation::NegotiationContext::session_metadata(&self) -> &alloc::vec::Vec<(alloc::string::String, alloc::string::String)>",
  "pub fn spark_core::security::negotiation::NegotiationContext::with_remote_hint(self, remote: spark_core::security::identity::IdentityDescriptor) -> Self",
  "impl core::clone::Clone for spark_core::security::negotiation::NegotiationContext",
  "pub fn spark_core::security::negotiation::NegotiationContext::clone(&self) -> spark_core::security::negotiation::NegotiationContext",
  "impl core::cmp::Eq for spark_core::security::negotiation::NegotiationContext",
  "impl core::cmp::PartialEq for spark_core::security::negotiation::NegotiationContext",
  "pub fn spark_core::security::negotiation::NegotiationContext::eq(&self, other: &spark_core::security::negotiation::NegotiationContext) -> bool",
  "impl core::fmt::Debug for spark_core::security::negotiation::NegotiationContext",
  "pub fn spark_core::security::negotiation::NegotiationContext::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::negotiation::NegotiationContext",
  "impl core::marker::Freeze for spark_core::security::negotiation::NegotiationContext",
  "impl core::marker::Send for spark_core::security::negotiation::NegotiationContext",
  "impl core::marker::Sync for spark_core::security::negotiation::NegotiationContext",
  "impl core::marker::Unpin for spark_core::security::negotiation::NegotiationContext",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::negotiation::NegotiationContext",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::negotiation::NegotiationContext",
  "pub struct spark_core::security::negotiation::NegotiationOutcome",
  "impl spark_core::security::negotiation::NegotiationOutcome",
  "pub fn spark_core::security::negotiation::NegotiationOutcome::credential(&self) -> core::option::Option<&spark_core::security::credential::Credential>",
  "pub fn spark_core::security::negotiation::NegotiationOutcome::metadata(&self) -> &alloc::vec::Vec<(alloc::string::String, alloc::string::String)>",
  "pub fn spark_core::security::negotiation::NegotiationOutcome::new(protocol: spark_core::security::negotiation::SecurityProtocol) -> Self",
  "pub fn spark_core::security::negotiation::NegotiationOutcome::peer_identity(&self) -> core::option::Option<&spark_core::security::identity::IdentityDescriptor>",
  "pub fn spark_core::security::negotiation::NegotiationOutcome::protocol(&self) -> &spark_core::security::negotiation::SecurityProtocol",
  "pub fn spark_core::security::negotiation::NegotiationOutcome::with_credential(self, credential: spark_core::security::credential::Credential) -> Self",
  "pub fn spark_core::security::negotiation::NegotiationOutcome::with_metadata(self, metadata: alloc::vec::Vec<(alloc::string::String, alloc::string::String)>) -> Self",
  "pub fn spark_core::security::negotiation::NegotiationOutcome::with_peer_identity(self, identity: spark_core::security::identity::IdentityDescriptor) -> Self",
  "impl core::clone::Clone for spark_core::security::negotiation::NegotiationOutcome",
  "pub fn spark_core::security::negotiation::NegotiationOutcome::clone(&self) -> spark_core::security::negotiation::NegotiationOutcome",
  "impl core::cmp::Eq for spark_core::security::negotiation::NegotiationOutcome",
  "impl core::cmp::PartialEq for spark_core::security::negotiation::NegotiationOutcome",
  "pub fn spark_core::security::negotiation::NegotiationOutcome::eq(&self, other: &spark_core::security::negotiation::NegotiationOutcome) -> bool",
  "impl core::fmt::Debug for spark_core::security::negotiation::NegotiationOutcome",
  "pub fn spark_core::security::negotiation::NegotiationOutcome::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::negotiation::NegotiationOutcome",
  "impl core::marker::Freeze for spark_core::security::negotiation::NegotiationOutcome",
  "impl core::marker::Send for spark_core::security::negotiation::NegotiationOutcome",
  "impl core::marker::Sync for spark_core::security::negotiation::NegotiationOutcome",
  "impl core::marker::Unpin for spark_core::security::negotiation::NegotiationOutcome",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::negotiation::NegotiationOutcome",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::negotiation::NegotiationOutcome",
  "pub struct spark_core::security::negotiation::SecurityNegotiationPlan",
  "impl spark_core::security::negotiation::SecurityNegotiationPlan",
  "pub fn spark_core::security::negotiation::SecurityNegotiationPlan::allow_plaintext(self) -> Self",
  "pub fn spark_core::security::negotiation::SecurityNegotiationPlan::fall_back_to_plaintext(&self) -> bool",
  "pub fn spark_core::security::negotiation::SecurityNegotiationPlan::new(offers: alloc::vec::Vec<spark_core::security::negotiation::SecurityProtocolOffer>) -> Self",
  "pub fn spark_core::security::negotiation::SecurityNegotiationPlan::offers(&self) -> &alloc::vec::Vec<spark_core::security::negotiation::SecurityProtocolOffer>",
  "impl core::clone::Clone for spark_core::security::negotiation::SecurityNegotiationPlan",
  "pub fn spark_core::security::negotiation::SecurityNegotiationPlan::clone(&self) -> spark_core::security::negotiation::SecurityNegotiationPlan",
  "impl core::cmp::Eq for spark_core::security::negotiation::SecurityNegotiationPlan",
  "impl core::cmp::PartialEq for spark_core::security::negotiation::SecurityNegotiationPlan",
  "pub fn spark_core::security::negotiation::SecurityNegotiationPlan::eq(&self, other: &spark_core::security::negotiation::SecurityNegotiationPlan) -> bool",
  "impl core::fmt::Debug for spark_core::security::negotiation::SecurityNegotiationPlan",
  "pub fn spark_core::security::negotiation::SecurityNegotiationPlan::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::negotiation::SecurityNegotiationPlan",
  "impl core::marker::Freeze for spark_core::security::negotiation::SecurityNegotiationPlan",
  "impl core::marker::Send for spark_core::security::negotiation::SecurityNegotiationPlan",
  "impl core::marker::Sync for spark_core::security::negotiation::SecurityNegotiationPlan",
  "impl core::marker::Unpin for spark_core::security::negotiation::SecurityNegotiationPlan",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::negotiation::SecurityNegotiationPlan",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::negotiation::SecurityNegotiationPlan",
  "pub struct spark_core::security::negotiation::SecurityProtocolOffer",
  "impl spark_core::security::negotiation::SecurityProtocolOffer",
  "pub fn spark_core::security::negotiation::SecurityProtocolOffer::credential(&self) -> core::option::Option<&spark_core::security::credential::Credential>",
  "pub fn spark_core::security::negotiation::SecurityProtocolOffer::mandatory(&self) -> bool",
  "pub fn spark_core::security::negotiation::SecurityProtocolOffer::new(protocol: spark_core::security::negotiation::SecurityProtocol) -> Self",
  "pub fn spark_core::security::negotiation::SecurityProtocolOffer::protocol(&self) -> &spark_core::security::negotiation::SecurityProtocol",
  "pub fn spark_core::security::negotiation::SecurityProtocolOffer::require(self) -> Self",
  "pub fn spark_core::security::negotiation::SecurityProtocolOffer::with_credential(self, credential: spark_core::security::credential::Credential) -> Self",
  "impl core::clone::Clone for spark_core::security::negotiation::SecurityProtocolOffer",
  "pub fn spark_core::security::negotiation::SecurityProtocolOffer::clone(&self) -> spark_core::security::negotiation::SecurityProtocolOffer",
  "impl core::cmp::Eq for spark_core::security::negotiation::SecurityProtocolOffer",
  "impl core::cmp::PartialEq for spark_core::security::negotiation::SecurityProtocolOffer",
  "pub fn spark_core::security::negotiation::SecurityProtocolOffer::eq(&self, other: &spark_core::security::negotiation::SecurityProtocolOffer) -> bool",
  "impl core::fmt::Debug for spark_core::security::negotiation::SecurityProtocolOffer",
  "pub fn spark_core::security::negotiation::SecurityProtocolOffer::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::negotiation::SecurityProtocolOffer",
  "impl core::marker::Freeze for spark_core::security::negotiation::SecurityProtocolOffer",
  "impl core::marker::Send for spark_core::security::negotiation::SecurityProtocolOffer",
  "impl core::marker::Sync for spark_core::security::negotiation::SecurityProtocolOffer",
  "impl core::marker::Unpin for spark_core::security::negotiation::SecurityProtocolOffer",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::negotiation::SecurityProtocolOffer",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::negotiation::SecurityProtocolOffer",
  "pub trait spark_core::security::negotiation::SecurityNegotiator: Sealed",
  "pub fn spark_core::security::negotiation::SecurityNegotiator::negotiate(&self, plan: &spark_core::security::negotiation::SecurityNegotiationPlan, context: &spark_core::security::negotiation::NegotiationContext) -> spark_core::security::negotiation::NegotiationResult",
  "pub type spark_core::security::negotiation::NegotiationResult = core::result::Result<spark_core::security::negotiation::NegotiationOutcome, spark_core::security::negotiation::NegotiationError>",
  "pub mod spark_core::security::policy",
  "#[non_exhaustive] pub enum spark_core::security::policy::PolicyEffect",
  "pub spark_core::security::policy::PolicyEffect::Allow",
  "pub spark_core::security::policy::PolicyEffect::Challenge",
  "pub spark_core::security::policy::PolicyEffect::Deny",
  "impl core::clone::Clone for spark_core::security::policy::PolicyEffect",
  "pub fn spark_core::security::policy::PolicyEffect::clone(&self) -> spark_core::security::policy::PolicyEffect",
  "impl core::cmp::Eq for spark_core::security::policy::PolicyEffect",
  "impl core::cmp::PartialEq for spark_core::security::policy::PolicyEffect",
  "pub fn spark_core::security::policy::PolicyEffect::eq(&self, other: &spark_core::security::policy::PolicyEffect) -> bool",
  "impl core::fmt::Debug for spark_core::security::policy::PolicyEffect",
  "pub fn spark_core::security::policy::PolicyEffect::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::security::policy::PolicyEffect",
  "impl core::marker::StructuralPartialEq for spark_core::security::policy::PolicyEffect",
  "impl core::marker::Freeze for spark_core::security::policy::PolicyEffect",
  "impl core::marker::Send for spark_core::security::policy::PolicyEffect",
  "impl core::marker::Sync for spark_core::security::policy::PolicyEffect",
  "impl core::marker::Unpin for spark_core::security::policy::PolicyEffect",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::policy::PolicyEffect",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::policy::PolicyEffect",
  "#[non_exhaustive] pub enum spark_core::security::policy::SubjectMatcher",
  "pub spark_core::security::policy::SubjectMatcher::Any",
  "pub spark_core::security::policy::SubjectMatcher::Identity(spark_core::security::identity::IdentityDescriptor)",
  "pub spark_core::security::policy::SubjectMatcher::IdentityPrefix",
  "pub spark_core::security::policy::SubjectMatcher::IdentityPrefix::authority: alloc::string::String",
  "pub spark_core::security::policy::SubjectMatcher::IdentityPrefix::name_prefix: alloc::string::String",
  "pub spark_core::security::policy::SubjectMatcher::Labels(alloc::vec::Vec<(alloc::string::String, alloc::string::String)>)",
  "impl core::clone::Clone for spark_core::security::policy::SubjectMatcher",
  "pub fn spark_core::security::policy::SubjectMatcher::clone(&self) -> spark_core::security::policy::SubjectMatcher",
  "impl core::cmp::Eq for spark_core::security::policy::SubjectMatcher",
  "impl core::cmp::PartialEq for spark_core::security::policy::SubjectMatcher",
  "pub fn spark_core::security::policy::SubjectMatcher::eq(&self, other: &spark_core::security::policy::SubjectMatcher) -> bool",
  "impl core::fmt::Debug for spark_core::security::policy::SubjectMatcher",
  "pub fn spark_core::security::policy::SubjectMatcher::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::policy::SubjectMatcher",
  "impl core::marker::Freeze for spark_core::security::policy::SubjectMatcher",
  "impl core::marker::Send for spark_core::security::policy::SubjectMatcher",
  "impl core::marker::Sync for spark_core::security::policy::SubjectMatcher",
  "impl core::marker::Unpin for spark_core::security::policy::SubjectMatcher",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::policy::SubjectMatcher",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::policy::SubjectMatcher",
  "pub struct spark_core::security::policy::PolicyAttachment",
  "impl spark_core::security::policy::PolicyAttachment",
  "pub fn spark_core::security::policy::PolicyAttachment::new(policy: spark_core::security::policy::SecurityPolicy, scope: alloc::string::String, priority: i32) -> Self",
  "pub fn spark_core::security::policy::PolicyAttachment::policy(&self) -> &spark_core::security::policy::SecurityPolicy",
  "pub fn spark_core::security::policy::PolicyAttachment::priority(&self) -> i32",
  "pub fn spark_core::security::policy::PolicyAttachment::scope(&self) -> &str",
  "impl core::clone::Clone for spark_core::security::policy::PolicyAttachment",
  "pub fn spark_core::security::policy::PolicyAttachment::clone(&self) -> spark_core::security::policy::PolicyAttachment",
  "impl core::cmp::Eq for spark_core::security::policy::PolicyAttachment",
  "impl core::cmp::PartialEq for spark_core::security::policy::PolicyAttachment",
  "pub fn spark_core::security::policy::PolicyAttachment::eq(&self, other: &spark_core::security::policy::PolicyAttachment) -> bool",
  "impl core::fmt::Debug for spark_core::security::policy::PolicyAttachment",
  "pub fn spark_core::security::policy::PolicyAttachment::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::policy::PolicyAttachment",
  "impl core::marker::Freeze for spark_core::security::policy::PolicyAttachment",
  "impl core::marker::Send for spark_core::security::policy::PolicyAttachment",
  "impl core::marker::Sync for spark_core::security::policy::PolicyAttachment",
  "impl core::marker::Unpin for spark_core::security::policy::PolicyAttachment",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::policy::PolicyAttachment",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::policy::PolicyAttachment",
  "pub struct spark_core::security::policy::PolicyRule",
  "impl spark_core::security::policy::PolicyRule",
  "pub fn spark_core::security::policy::PolicyRule::add_condition(self, key: alloc::string::String, value: alloc::string::String) -> Self",
  "pub fn spark_core::security::policy::PolicyRule::conditions(&self) -> &alloc::vec::Vec<(alloc::string::String, alloc::string::String)>",
  "pub fn spark_core::security::policy::PolicyRule::effect(&self) -> spark_core::security::policy::PolicyEffect",
  "pub fn spark_core::security::policy::PolicyRule::new(subjects: alloc::vec::Vec<spark_core::security::policy::SubjectMatcher>, resources: alloc::vec::Vec<spark_core::security::policy::ResourcePattern>, effect: spark_core::security::policy::PolicyEffect) -> Self",
  "pub fn spark_core::security::policy::PolicyRule::resources(&self) -> &alloc::vec::Vec<spark_core::security::policy::ResourcePattern>",
  "pub fn spark_core::security::policy::PolicyRule::subjects(&self) -> &alloc::vec::Vec<spark_core::security::policy::SubjectMatcher>",
  "impl core::clone::Clone for spark_core::security::policy::PolicyRule",
  "pub fn spark_core::security::policy::PolicyRule::clone(&self) -> spark_core::security::policy::PolicyRule",
  "impl core::cmp::Eq for spark_core::security::policy::PolicyRule",
  "impl core::cmp::PartialEq for spark_core::security::policy::PolicyRule",
  "pub fn spark_core::security::policy::PolicyRule::eq(&self, other: &spark_core::security::policy::PolicyRule) -> bool",
  "impl core::fmt::Debug for spark_core::security::policy::PolicyRule",
  "pub fn spark_core::security::policy::PolicyRule::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::policy::PolicyRule",
  "impl core::marker::Freeze for spark_core::security::policy::PolicyRule",
  "impl core::marker::Send for spark_core::security::policy::PolicyRule",
  "impl core::marker::Sync for spark_core::security::policy::PolicyRule",
  "impl core::marker::Unpin for spark_core::security::policy::PolicyRule",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::policy::PolicyRule",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::policy::PolicyRule",
  "pub struct spark_core::security::policy::ResourcePattern",
  "impl spark_core::security::policy::ResourcePattern",
  "pub fn spark_core::security::policy::ResourcePattern::actions(&self) -> &alloc::vec::Vec<alloc::string::String>",
  "pub fn spark_core::security::policy::ResourcePattern::add_action(self, action: alloc::string::String) -> Self",
  "pub fn spark_core::security::policy::ResourcePattern::add_label(self, key: alloc::string::String, value: alloc::string::String) -> Self",
  "pub fn spark_core::security::policy::ResourcePattern::labels(&self) -> &alloc::vec::Vec<(alloc::string::String, alloc::string::String)>",
  "pub fn spark_core::security::policy::ResourcePattern::name(&self) -> core::option::Option<&alloc::string::String>",
  "pub fn spark_core::security::policy::ResourcePattern::namespace(&self) -> &str",
  "pub fn spark_core::security::policy::ResourcePattern::new(namespace: alloc::string::String) -> Self",
  "pub fn spark_core::security::policy::ResourcePattern::with_name(self, name: alloc::string::String) -> Self",
  "impl core::clone::Clone for spark_core::security::policy::ResourcePattern",
  "pub fn spark_core::security::policy::ResourcePattern::clone(&self) -> spark_core::security::policy::ResourcePattern",
  "impl core::cmp::Eq for spark_core::security::policy::ResourcePattern",
  "impl core::cmp::PartialEq for spark_core::security::policy::ResourcePattern",
  "pub fn spark_core::security::policy::ResourcePattern::eq(&self, other: &spark_core::security::policy::ResourcePattern) -> bool",
  "impl core::fmt::Debug for spark_core::security::policy::ResourcePattern",
  "pub fn spark_core::security::policy::ResourcePattern::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::policy::ResourcePattern",
  "impl core::marker::Freeze for spark_core::security::policy::ResourcePattern",
  "impl core::marker::Send for spark_core::security::policy::ResourcePattern",
  "impl core::marker::Sync for spark_core::security::policy::ResourcePattern",
  "impl core::marker::Unpin for spark_core::security::policy::ResourcePattern",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::policy::ResourcePattern",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::policy::ResourcePattern",
  "pub struct spark_core::security::policy::SecurityPolicy",
  "impl spark_core::security::policy::SecurityPolicy",
  "pub fn spark_core::security::policy::SecurityPolicy::description(&self) -> core::option::Option<&alloc::string::String>",
  "pub fn spark_core::security::policy::SecurityPolicy::id(&self) -> &str",
  "pub fn spark_core::security::policy::SecurityPolicy::new(id: alloc::string::String, rules: alloc::vec::Vec<spark_core::security::policy::PolicyRule>) -> Self",
  "pub fn spark_core::security::policy::SecurityPolicy::rules(&self) -> &alloc::vec::Vec<spark_core::security::policy::PolicyRule>",
  "pub fn spark_core::security::policy::SecurityPolicy::version(&self) -> core::option::Option<&alloc::string::String>",
  "pub fn spark_core::security::policy::SecurityPolicy::with_description(self, description: alloc::string::String) -> Self",
  "pub fn spark_core::security::policy::SecurityPolicy::with_version(self, version: alloc::string::String) -> Self",
  "impl core::clone::Clone for spark_core::security::policy::SecurityPolicy",
  "pub fn spark_core::security::policy::SecurityPolicy::clone(&self) -> spark_core::security::policy::SecurityPolicy",
  "impl core::cmp::Eq for spark_core::security::policy::SecurityPolicy",
  "impl core::cmp::PartialEq for spark_core::security::policy::SecurityPolicy",
  "pub fn spark_core::security::policy::SecurityPolicy::eq(&self, other: &spark_core::security::policy::SecurityPolicy) -> bool",
  "impl core::fmt::Debug for spark_core::security::policy::SecurityPolicy",
  "pub fn spark_core::security::policy::SecurityPolicy::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::policy::SecurityPolicy",
  "impl core::marker::Freeze for spark_core::security::policy::SecurityPolicy",
  "impl core::marker::Send for spark_core::security::policy::SecurityPolicy",
  "impl core::marker::Sync for spark_core::security::policy::SecurityPolicy",
  "impl core::marker::Unpin for spark_core::security::policy::SecurityPolicy",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::policy::SecurityPolicy",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::policy::SecurityPolicy",
  "#[non_exhaustive] pub enum spark_core::security::CredentialMaterial",
  "pub spark_core::security::CredentialMaterial::CertificateChain(alloc::vec::Vec<u8>)",
  "pub spark_core::security::CredentialMaterial::Custom",
  "pub spark_core::security::CredentialMaterial::Custom::format: alloc::string::String",
  "pub spark_core::security::CredentialMaterial::Custom::payload: alloc::vec::Vec<u8>",
  "pub spark_core::security::CredentialMaterial::PublicKey(alloc::vec::Vec<u8>)",
  "pub spark_core::security::CredentialMaterial::SignedToken(alloc::vec::Vec<u8>)",
  "pub spark_core::security::CredentialMaterial::SymmetricKey(alloc::vec::Vec<u8>)",
  "impl core::clone::Clone for spark_core::security::credential::CredentialMaterial",
  "pub fn spark_core::security::credential::CredentialMaterial::clone(&self) -> spark_core::security::credential::CredentialMaterial",
  "impl core::cmp::Eq for spark_core::security::credential::CredentialMaterial",
  "impl core::cmp::PartialEq for spark_core::security::credential::CredentialMaterial",
  "pub fn spark_core::security::credential::CredentialMaterial::eq(&self, other: &spark_core::security::credential::CredentialMaterial) -> bool",
  "impl core::fmt::Debug for spark_core::security::credential::CredentialMaterial",
  "pub fn spark_core::security::credential::CredentialMaterial::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::credential::CredentialMaterial",
  "impl core::marker::Freeze for spark_core::security::credential::CredentialMaterial",
  "impl core::marker::Send for spark_core::security::credential::CredentialMaterial",
  "impl core::marker::Sync for spark_core::security::credential::CredentialMaterial",
  "impl core::marker::Unpin for spark_core::security::credential::CredentialMaterial",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::credential::CredentialMaterial",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::credential::CredentialMaterial",
  "#[non_exhaustive] pub enum spark_core::security::CredentialScope",
  "pub spark_core::security::CredentialScope::Connection",
  "pub spark_core::security::CredentialScope::Message",
  "pub spark_core::security::CredentialScope::Session",
  "impl core::clone::Clone for spark_core::security::credential::CredentialScope",
  "pub fn spark_core::security::credential::CredentialScope::clone(&self) -> spark_core::security::credential::CredentialScope",
  "impl core::cmp::Eq for spark_core::security::credential::CredentialScope",
  "impl core::cmp::PartialEq for spark_core::security::credential::CredentialScope",
  "pub fn spark_core::security::credential::CredentialScope::eq(&self, other: &spark_core::security::credential::CredentialScope) -> bool",
  "impl core::fmt::Debug for spark_core::security::credential::CredentialScope",
  "pub fn spark_core::security::credential::CredentialScope::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::security::credential::CredentialScope",
  "impl core::marker::StructuralPartialEq for spark_core::security::credential::CredentialScope",
  "impl core::marker::Freeze for spark_core::security::credential::CredentialScope",
  "impl core::marker::Send for spark_core::security::credential::CredentialScope",
  "impl core::marker::Sync for spark_core::security::credential::CredentialScope",
  "impl core::marker::Unpin for spark_core::security::credential::CredentialScope",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::credential::CredentialScope",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::credential::CredentialScope",
  "#[non_exhaustive] pub enum spark_core::security::CredentialState",
  "pub spark_core::security::CredentialState::Active",
  "pub spark_core::security::CredentialState::Expired",
  "pub spark_core::security::CredentialState::Revoked",
  "impl core::clone::Clone for spark_core::security::credential::CredentialState",
  "pub fn spark_core::security::credential::CredentialState::clone(&self) -> spark_core::security::credential::CredentialState",
  "impl core::cmp::Eq for spark_core::security::credential::CredentialState",
  "impl core::cmp::PartialEq for spark_core::security::credential::CredentialState",
  "pub fn spark_core::security::credential::CredentialState::eq(&self, other: &spark_core::security::credential::CredentialState) -> bool",
  "impl core::fmt::Debug for spark_core::security::credential::CredentialState",
  "pub fn spark_core::security::credential::CredentialState::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::security::credential::CredentialState",
  "impl core::marker::StructuralPartialEq for spark_core::security::credential::CredentialState",
  "impl core::marker::Freeze for spark_core::security::credential::CredentialState",
  "impl core::marker::Send for spark_core::security::credential::CredentialState",
  "impl core::marker::Sync for spark_core::security::credential::CredentialState",
  "impl core::marker::Unpin for spark_core::security::credential::CredentialState",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::credential::CredentialState",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::credential::CredentialState",
  "#[non_exhaustive] pub enum spark_core::security::IdentityKind",
  "pub spark_core::security::IdentityKind::Custom(alloc::string::String)",
  "pub spark_core::security::IdentityKind::Machine",
  "pub spark_core::security::IdentityKind::Service",
  "pub spark_core::security::IdentityKind::User",
  "pub spark_core::security::IdentityKind::Workload",
  "impl core::clone::Clone for spark_core::security::identity::IdentityKind",
  "pub fn spark_core::security::identity::IdentityKind::clone(&self) -> spark_core::security::identity::IdentityKind",
  "impl core::cmp::Eq for spark_core::security::identity::IdentityKind",
  "impl core::cmp::PartialEq for spark_core::security::identity::IdentityKind",
  "pub fn spark_core::security::identity::IdentityKind::eq(&self, other: &spark_core::security::identity::IdentityKind) -> bool",
  "impl core::fmt::Debug for spark_core::security::identity::IdentityKind",
  "pub fn spark_core::security::identity::IdentityKind::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::identity::IdentityKind",
  "impl core::marker::Freeze for spark_core::security::identity::IdentityKind",
  "impl core::marker::Send for spark_core::security::identity::IdentityKind",
  "impl core::marker::Sync for spark_core::security::identity::IdentityKind",
  "impl core::marker::Unpin for spark_core::security::identity::IdentityKind",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::identity::IdentityKind",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::identity::IdentityKind",
  "#[non_exhaustive] pub enum spark_core::security::IdentityProof",
  "pub spark_core::security::IdentityProof::Custom",
  "pub spark_core::security::IdentityProof::Custom::format: alloc::string::String",
  "pub spark_core::security::IdentityProof::Custom::payload: alloc::vec::Vec<u8>",
  "pub spark_core::security::IdentityProof::JsonWebToken(alloc::string::String)",
  "pub spark_core::security::IdentityProof::PublicKey(alloc::vec::Vec<u8>)",
  "pub spark_core::security::IdentityProof::Spiffe(alloc::string::String)",
  "pub spark_core::security::IdentityProof::X509Chain(alloc::vec::Vec<u8>)",
  "impl core::clone::Clone for spark_core::security::identity::IdentityProof",
  "pub fn spark_core::security::identity::IdentityProof::clone(&self) -> spark_core::security::identity::IdentityProof",
  "impl core::cmp::Eq for spark_core::security::identity::IdentityProof",
  "impl core::cmp::PartialEq for spark_core::security::identity::IdentityProof",
  "pub fn spark_core::security::identity::IdentityProof::eq(&self, other: &spark_core::security::identity::IdentityProof) -> bool",
  "impl core::fmt::Debug for spark_core::security::identity::IdentityProof",
  "pub fn spark_core::security::identity::IdentityProof::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::identity::IdentityProof",
  "impl core::marker::Freeze for spark_core::security::identity::IdentityProof",
  "impl core::marker::Send for spark_core::security::identity::IdentityProof",
  "impl core::marker::Sync for spark_core::security::identity::IdentityProof",
  "impl core::marker::Unpin for spark_core::security::identity::IdentityProof",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::identity::IdentityProof",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::identity::IdentityProof",
  "#[non_exhaustive] pub enum spark_core::security::KeyPurpose",
  "pub spark_core::security::KeyPurpose::Custom(alloc::string::String)",
  "pub spark_core::security::KeyPurpose::DataEncryption",
  "pub spark_core::security::KeyPurpose::MessageIntegrity",
  "pub spark_core::security::KeyPurpose::RemoteAttestation",
  "pub spark_core::security::KeyPurpose::TransportHandshake",
  "impl core::clone::Clone for spark_core::security::keystore::KeyPurpose",
  "pub fn spark_core::security::keystore::KeyPurpose::clone(&self) -> spark_core::security::keystore::KeyPurpose",
  "impl core::cmp::Eq for spark_core::security::keystore::KeyPurpose",
  "impl core::cmp::PartialEq for spark_core::security::keystore::KeyPurpose",
  "pub fn spark_core::security::keystore::KeyPurpose::eq(&self, other: &spark_core::security::keystore::KeyPurpose) -> bool",
  "impl core::fmt::Debug for spark_core::security::keystore::KeyPurpose",
  "pub fn spark_core::security::keystore::KeyPurpose::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::keystore::KeyPurpose",
  "impl core::marker::Freeze for spark_core::security::keystore::KeyPurpose",
  "impl core::marker::Send for spark_core::security::keystore::KeyPurpose",
  "impl core::marker::Sync for spark_core::security::keystore::KeyPurpose",
  "impl core::marker::Unpin for spark_core::security::keystore::KeyPurpose",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::keystore::KeyPurpose",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::keystore::KeyPurpose",
  "#[non_exhaustive] pub enum spark_core::security::KeyRetrievalError",
  "pub spark_core::security::KeyRetrievalError::InvalidRequest(alloc::string::String)",
  "pub spark_core::security::KeyRetrievalError::NotFound",
  "pub spark_core::security::KeyRetrievalError::Other(alloc::string::String)",
  "pub spark_core::security::KeyRetrievalError::Unauthorized",
  "pub spark_core::security::KeyRetrievalError::Unavailable",
  "impl core::fmt::Debug for spark_core::security::keystore::KeyRetrievalError",
  "pub fn spark_core::security::keystore::KeyRetrievalError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::security::keystore::KeyRetrievalError",
  "pub fn spark_core::security::keystore::KeyRetrievalError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl spark_core::Error for spark_core::security::keystore::KeyRetrievalError",
  "pub fn spark_core::security::keystore::KeyRetrievalError::source(&self) -> core::option::Option<&(dyn spark_core::Error + 'static)>",
  "impl core::marker::Freeze for spark_core::security::keystore::KeyRetrievalError",
  "impl core::marker::Send for spark_core::security::keystore::KeyRetrievalError",
  "impl core::marker::Sync for spark_core::security::keystore::KeyRetrievalError",
  "impl core::marker::Unpin for spark_core::security::keystore::KeyRetrievalError",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::keystore::KeyRetrievalError",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::keystore::KeyRetrievalError",
  "#[non_exhaustive] pub enum spark_core::security::NegotiationError",
  "pub spark_core::security::NegotiationError::CredentialInvalid(alloc::string::String)",
  "pub spark_core::security::NegotiationError::NoCommonProtocol",
  "pub spark_core::security::NegotiationError::Other(alloc::string::String)",
  "pub spark_core::security::NegotiationError::ProtocolRejected",
  "pub spark_core::security::NegotiationError::Timeout",
  "impl core::clone::Clone for spark_core::security::negotiation::NegotiationError",
  "pub fn spark_core::security::negotiation::NegotiationError::clone(&self) -> spark_core::security::negotiation::NegotiationError",
  "impl core::cmp::Eq for spark_core::security::negotiation::NegotiationError",
  "impl core::cmp::PartialEq for spark_core::security::negotiation::NegotiationError",
  "pub fn spark_core::security::negotiation::NegotiationError::eq(&self, other: &spark_core::security::negotiation::NegotiationError) -> bool",
  "impl core::fmt::Debug for spark_core::security::negotiation::NegotiationError",
  "pub fn spark_core::security::negotiation::NegotiationError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::negotiation::NegotiationError",
  "impl core::marker::Freeze for spark_core::security::negotiation::NegotiationError",
  "impl core::marker::Send for spark_core::security::negotiation::NegotiationError",
  "impl core::marker::Sync for spark_core::security::negotiation::NegotiationError",
  "impl core::marker::Unpin for spark_core::security::negotiation::NegotiationError",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::negotiation::NegotiationError",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::negotiation::NegotiationError",
  "#[non_exhaustive] pub enum spark_core::security::PolicyEffect",
  "pub spark_core::security::PolicyEffect::Allow",
  "pub spark_core::security::PolicyEffect::Challenge",
  "pub spark_core::security::PolicyEffect::Deny",
  "impl core::clone::Clone for spark_core::security::policy::PolicyEffect",
  "pub fn spark_core::security::policy::PolicyEffect::clone(&self) -> spark_core::security::policy::PolicyEffect",
  "impl core::cmp::Eq for spark_core::security::policy::PolicyEffect",
  "impl core::cmp::PartialEq for spark_core::security::policy::PolicyEffect",
  "pub fn spark_core::security::policy::PolicyEffect::eq(&self, other: &spark_core::security::policy::PolicyEffect) -> bool",
  "impl core::fmt::Debug for spark_core::security::policy::PolicyEffect",
  "pub fn spark_core::security::policy::PolicyEffect::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::security::policy::PolicyEffect",
  "impl core::marker::StructuralPartialEq for spark_core::security::policy::PolicyEffect",
  "impl core::marker::Freeze for spark_core::security::policy::PolicyEffect",
  "impl core::marker::Send for spark_core::security::policy::PolicyEffect",
  "impl core::marker::Sync for spark_core::security::policy::PolicyEffect",
  "impl core::marker::Unpin for spark_core::security::policy::PolicyEffect",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::policy::PolicyEffect",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::policy::PolicyEffect",
  "#[non_exhaustive] pub enum spark_core::security::SecurityClass",
  "pub spark_core::security::SecurityClass::Audit",
  "pub spark_core::security::SecurityClass::Authentication",
  "pub spark_core::security::SecurityClass::Authorization",
  "pub spark_core::security::SecurityClass::Confidentiality",
  "pub spark_core::security::SecurityClass::Integrity",
  "pub spark_core::security::SecurityClass::Unknown",
  "impl spark_core::security::class::SecurityClass",
  "pub const fn spark_core::security::class::SecurityClass::code(self) -> &'static str",
  "pub const fn spark_core::security::class::SecurityClass::summary(self) -> &'static str",
  "impl core::clone::Clone for spark_core::security::class::SecurityClass",
  "pub fn spark_core::security::class::SecurityClass::clone(&self) -> spark_core::security::class::SecurityClass",
  "impl core::cmp::Eq for spark_core::security::class::SecurityClass",
  "impl core::cmp::PartialEq for spark_core::security::class::SecurityClass",
  "pub fn spark_core::security::class::SecurityClass::eq(&self, other: &spark_core::security::class::SecurityClass) -> bool",
  "impl core::fmt::Debug for spark_core::security::class::SecurityClass",
  "pub fn spark_core::security::class::SecurityClass::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::security::class::SecurityClass",
  "pub fn spark_core::security::class::SecurityClass::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::Copy for spark_core::security::class::SecurityClass",
  "impl core::marker::StructuralPartialEq for spark_core::security::class::SecurityClass",
  "impl core::marker::Freeze for spark_core::security::class::SecurityClass",
  "impl core::marker::Send for spark_core::security::class::SecurityClass",
  "impl core::marker::Sync for spark_core::security::class::SecurityClass",
  "impl core::marker::Unpin for spark_core::security::class::SecurityClass",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::class::SecurityClass",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::class::SecurityClass",
  "#[non_exhaustive] pub enum spark_core::security::SecurityProtocol",
  "pub spark_core::security::SecurityProtocol::Custom",
  "pub spark_core::security::SecurityProtocol::Custom::name: alloc::string::String",
  "pub spark_core::security::SecurityProtocol::Custom::parameters: alloc::vec::Vec<(alloc::string::String, alloc::string::String)>",
  "pub spark_core::security::SecurityProtocol::MutualTls",
  "pub spark_core::security::SecurityProtocol::NoiseHandshake",
  "pub spark_core::security::SecurityProtocol::PostQuantum",
  "pub spark_core::security::SecurityProtocol::RemoteAttestation",
  "pub spark_core::security::SecurityProtocol::TokenBinding",
  "impl core::clone::Clone for spark_core::security::negotiation::SecurityProtocol",
  "pub fn spark_core::security::negotiation::SecurityProtocol::clone(&self) -> spark_core::security::negotiation::SecurityProtocol",
  "impl core::cmp::Eq for spark_core::security::negotiation::SecurityProtocol",
  "impl core::cmp::PartialEq for spark_core::security::negotiation::SecurityProtocol",
  "pub fn spark_core::security::negotiation::SecurityProtocol::eq(&self, other: &spark_core::security::negotiation::SecurityProtocol) -> bool",
  "impl core::fmt::Debug for spark_core::security::negotiation::SecurityProtocol",
  "pub fn spark_core::security::negotiation::SecurityProtocol::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::negotiation::SecurityProtocol",
  "impl core::marker::Freeze for spark_core::security::negotiation::SecurityProtocol",
  "impl core::marker::Send for spark_core::security::negotiation::SecurityProtocol",
  "impl core::marker::Sync for spark_core::security::negotiation::SecurityProtocol",
  "impl core::marker::Unpin for spark_core::security::negotiation::SecurityProtocol",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::negotiation::SecurityProtocol",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::negotiation::SecurityProtocol",
  "#[non_exhaustive] pub enum spark_core::security::SubjectMatcher",
  "pub spark_core::security::SubjectMatcher::Any",
  "pub spark_core::security::SubjectMatcher::Identity(spark_core::security::identity::IdentityDescriptor)",
  "pub spark_core::security::SubjectMatcher::IdentityPrefix",
  "pub spark_core::security::SubjectMatcher::IdentityPrefix::authority: alloc::string::String",
  "pub spark_core::security::SubjectMatcher::IdentityPrefix::name_prefix: alloc::string::String",
  "pub spark_core::security::SubjectMatcher::Labels(alloc::vec::Vec<(alloc::string::String, alloc::string::String)>)",
  "impl core::clone::Clone for spark_core::security::policy::SubjectMatcher",
  "pub fn spark_core::security::policy::SubjectMatcher::clone(&self) -> spark_core::security::policy::SubjectMatcher",
  "impl core::cmp::Eq for spark_core::security::policy::SubjectMatcher",
  "impl core::cmp::PartialEq for spark_core::security::policy::SubjectMatcher",
  "pub fn spark_core::security::policy::SubjectMatcher::eq(&self, other: &spark_core::security::policy::SubjectMatcher) -> bool",
  "impl core::fmt::Debug for spark_core::security::policy::SubjectMatcher",
  "pub fn spark_core::security::policy::SubjectMatcher::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::policy::SubjectMatcher",
  "impl core::marker::Freeze for spark_core::security::policy::SubjectMatcher",
  "impl core::marker::Send for spark_core::security::policy::SubjectMatcher",
  "impl core::marker::Sync for spark_core::security::policy::SubjectMatcher",
  "impl core::marker::Unpin for spark_core::security::policy::SubjectMatcher",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::policy::SubjectMatcher",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::policy::SubjectMatcher",
  "pub struct spark_core::security::Credential",
  "impl spark_core::security::credential::Credential",
  "pub fn spark_core::security::credential::Credential::descriptor(&self) -> &spark_core::security::credential::CredentialDescriptor",
  "pub fn spark_core::security::credential::Credential::material(&self) -> &spark_core::security::credential::CredentialMaterial",
  "pub fn spark_core::security::credential::Credential::new(descriptor: spark_core::security::credential::CredentialDescriptor, material: spark_core::security::credential::CredentialMaterial) -> Self",
  "pub fn spark_core::security::credential::Credential::state(&self, age: core::option::Option<core::time::Duration>, revoked: bool) -> spark_core::security::credential::CredentialState",
  "pub fn spark_core::security::credential::Credential::version_hint(&self) -> core::option::Option<&alloc::string::String>",
  "pub fn spark_core::security::credential::Credential::with_version_hint(self, version_hint: alloc::string::String) -> Self",
  "impl core::clone::Clone for spark_core::security::credential::Credential",
  "pub fn spark_core::security::credential::Credential::clone(&self) -> spark_core::security::credential::Credential",
  "impl core::cmp::Eq for spark_core::security::credential::Credential",
  "impl core::cmp::PartialEq for spark_core::security::credential::Credential",
  "pub fn spark_core::security::credential::Credential::eq(&self, other: &spark_core::security::credential::Credential) -> bool",
  "impl core::fmt::Debug for spark_core::security::credential::Credential",
  "pub fn spark_core::security::credential::Credential::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::credential::Credential",
  "impl core::marker::Freeze for spark_core::security::credential::Credential",
  "impl core::marker::Send for spark_core::security::credential::Credential",
  "impl core::marker::Sync for spark_core::security::credential::Credential",
  "impl core::marker::Unpin for spark_core::security::credential::Credential",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::credential::Credential",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::credential::Credential",
  "pub struct spark_core::security::CredentialDescriptor",
  "impl spark_core::security::credential::CredentialDescriptor",
  "pub fn spark_core::security::credential::CredentialDescriptor::identity(&self) -> &spark_core::security::identity::IdentityDescriptor",
  "pub fn spark_core::security::credential::CredentialDescriptor::new(identity: spark_core::security::identity::IdentityDescriptor, scope: spark_core::security::credential::CredentialScope) -> Self",
  "pub fn spark_core::security::credential::CredentialDescriptor::non_renewable(self) -> Self",
  "pub fn spark_core::security::credential::CredentialDescriptor::proof(&self) -> core::option::Option<&spark_core::security::identity::IdentityProof>",
  "pub fn spark_core::security::credential::CredentialDescriptor::renewable(&self) -> bool",
  "pub fn spark_core::security::credential::CredentialDescriptor::scope(&self) -> spark_core::security::credential::CredentialScope",
  "pub fn spark_core::security::credential::CredentialDescriptor::valid_for(&self) -> core::option::Option<core::time::Duration>",
  "pub fn spark_core::security::credential::CredentialDescriptor::with_proof(self, proof: spark_core::security::identity::IdentityProof) -> Self",
  "pub fn spark_core::security::credential::CredentialDescriptor::with_valid_for(self, duration: core::time::Duration) -> Self",
  "impl core::clone::Clone for spark_core::security::credential::CredentialDescriptor",
  "pub fn spark_core::security::credential::CredentialDescriptor::clone(&self) -> spark_core::security::credential::CredentialDescriptor",
  "impl core::cmp::Eq for spark_core::security::credential::CredentialDescriptor",
  "impl core::cmp::PartialEq for spark_core::security::credential::CredentialDescriptor",
  "pub fn spark_core::security::credential::CredentialDescriptor::eq(&self, other: &spark_core::security::credential::CredentialDescriptor) -> bool",
  "impl core::fmt::Debug for spark_core::security::credential::CredentialDescriptor",
  "pub fn spark_core::security::credential::CredentialDescriptor::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::credential::CredentialDescriptor",
  "impl core::marker::Freeze for spark_core::security::credential::CredentialDescriptor",
  "impl core::marker::Send for spark_core::security::credential::CredentialDescriptor",
  "impl core::marker::Sync for spark_core::security::credential::CredentialDescriptor",
  "impl core::marker::Unpin for spark_core::security::credential::CredentialDescriptor",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::credential::CredentialDescriptor",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::credential::CredentialDescriptor",
  "pub struct spark_core::security::IdentityDescriptor",
  "impl spark_core::security::identity::IdentityDescriptor",
  "pub fn spark_core::security::identity::IdentityDescriptor::authority(&self) -> &str",
  "pub fn spark_core::security::identity::IdentityDescriptor::kind(&self) -> &spark_core::security::identity::IdentityKind",
  "pub fn spark_core::security::identity::IdentityDescriptor::name(&self) -> &str",
  "pub fn spark_core::security::identity::IdentityDescriptor::new(authority: alloc::string::String, name: alloc::string::String, kind: spark_core::security::identity::IdentityKind) -> Self",
  "pub fn spark_core::security::identity::IdentityDescriptor::version(&self) -> core::option::Option<&alloc::string::String>",
  "pub fn spark_core::security::identity::IdentityDescriptor::with_version(self, version: alloc::string::String) -> Self",
  "impl core::clone::Clone for spark_core::security::identity::IdentityDescriptor",
  "pub fn spark_core::security::identity::IdentityDescriptor::clone(&self) -> spark_core::security::identity::IdentityDescriptor",
  "impl core::cmp::Eq for spark_core::security::identity::IdentityDescriptor",
  "impl core::cmp::PartialEq for spark_core::security::identity::IdentityDescriptor",
  "pub fn spark_core::security::identity::IdentityDescriptor::eq(&self, other: &spark_core::security::identity::IdentityDescriptor) -> bool",
  "impl core::fmt::Debug for spark_core::security::identity::IdentityDescriptor",
  "pub fn spark_core::security::identity::IdentityDescriptor::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::identity::IdentityDescriptor",
  "impl core::marker::Freeze for spark_core::security::identity::IdentityDescriptor",
  "impl core::marker::Send for spark_core::security::identity::IdentityDescriptor",
  "impl core::marker::Sync for spark_core::security::identity::IdentityDescriptor",
  "impl core::marker::Unpin for spark_core::security::identity::IdentityDescriptor",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::identity::IdentityDescriptor",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::identity::IdentityDescriptor",
  "pub struct spark_core::security::KeyMaterial",
  "impl spark_core::security::keystore::KeyMaterial",
  "pub fn spark_core::security::keystore::KeyMaterial::expires_in(&self) -> core::option::Option<core::time::Duration>",
  "pub fn spark_core::security::keystore::KeyMaterial::format(&self) -> &str",
  "pub fn spark_core::security::keystore::KeyMaterial::new(format: alloc::string::String, payload: alloc::vec::Vec<u8>) -> Self",
  "pub fn spark_core::security::keystore::KeyMaterial::non_renewable(self) -> Self",
  "pub fn spark_core::security::keystore::KeyMaterial::payload(&self) -> &alloc::vec::Vec<u8>",
  "pub fn spark_core::security::keystore::KeyMaterial::renewable(&self) -> bool",
  "pub fn spark_core::security::keystore::KeyMaterial::with_expires_in(self, duration: core::time::Duration) -> Self",
  "impl core::clone::Clone for spark_core::security::keystore::KeyMaterial",
  "pub fn spark_core::security::keystore::KeyMaterial::clone(&self) -> spark_core::security::keystore::KeyMaterial",
  "impl core::cmp::Eq for spark_core::security::keystore::KeyMaterial",
  "impl core::cmp::PartialEq for spark_core::security::keystore::KeyMaterial",
  "pub fn spark_core::security::keystore::KeyMaterial::eq(&self, other: &spark_core::security::keystore::KeyMaterial) -> bool",
  "impl core::fmt::Debug for spark_core::security::keystore::KeyMaterial",
  "pub fn spark_core::security::keystore::KeyMaterial::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::keystore::KeyMaterial",
  "impl core::marker::Freeze for spark_core::security::keystore::KeyMaterial",
  "impl core::marker::Send for spark_core::security::keystore::KeyMaterial",
  "impl core::marker::Sync for spark_core::security::keystore::KeyMaterial",
  "impl core::marker::Unpin for spark_core::security::keystore::KeyMaterial",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::keystore::KeyMaterial",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::keystore::KeyMaterial",
  "pub struct spark_core::security::KeyRequest",
  "impl spark_core::security::keystore::KeyRequest",
  "pub fn spark_core::security::keystore::KeyRequest::audience(&self) -> core::option::Option<&alloc::string::String>",
  "pub fn spark_core::security::keystore::KeyRequest::identity(&self) -> &spark_core::security::identity::IdentityDescriptor",
  "pub fn spark_core::security::keystore::KeyRequest::new(identity: spark_core::security::identity::IdentityDescriptor, purpose: spark_core::security::keystore::KeyPurpose, scope: spark_core::security::credential::CredentialScope) -> Self",
  "pub fn spark_core::security::keystore::KeyRequest::prefer_cached(&self) -> bool",
  "pub fn spark_core::security::keystore::KeyRequest::prefer_fresh(self) -> Self",
  "pub fn spark_core::security::keystore::KeyRequest::purpose(&self) -> &spark_core::security::keystore::KeyPurpose",
  "pub fn spark_core::security::keystore::KeyRequest::scope(&self) -> spark_core::security::credential::CredentialScope",
  "pub fn spark_core::security::keystore::KeyRequest::version_hint(&self) -> core::option::Option<&alloc::string::String>",
  "pub fn spark_core::security::keystore::KeyRequest::with_audience(self, audience: alloc::string::String) -> Self",
  "pub fn spark_core::security::keystore::KeyRequest::with_version_hint(self, version_hint: alloc::string::String) -> Self",
  "impl core::clone::Clone for spark_core::security::keystore::KeyRequest",
  "pub fn spark_core::security::keystore::KeyRequest::clone(&self) -> spark_core::security::keystore::KeyRequest",
  "impl core::cmp::Eq for spark_core::security::keystore::KeyRequest",
  "impl core::cmp::PartialEq for spark_core::security::keystore::KeyRequest",
  "pub fn spark_core::security::keystore::KeyRequest::eq(&self, other: &spark_core::security::keystore::KeyRequest) -> bool",
  "impl core::fmt::Debug for spark_core::security::keystore::KeyRequest",
  "pub fn spark_core::security::keystore::KeyRequest::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::keystore::KeyRequest",
  "impl core::marker::Freeze for spark_core::security::keystore::KeyRequest",
  "impl core::marker::Send for spark_core::security::keystore::KeyRequest",
  "impl core::marker::Sync for spark_core::security::keystore::KeyRequest",
  "impl core::marker::Unpin for spark_core::security::keystore::KeyRequest",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::keystore::KeyRequest",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::keystore::KeyRequest",
  "pub struct spark_core::security::KeyResponse",
  "impl spark_core::security::keystore::KeyResponse",
  "pub fn spark_core::security::keystore::KeyResponse::credential(&self) -> core::option::Option<&spark_core::security::credential::Credential>",
  "pub fn spark_core::security::keystore::KeyResponse::materials(&self) -> &alloc::vec::Vec<spark_core::security::keystore::KeyMaterial>",
  "pub fn spark_core::security::keystore::KeyResponse::new(materials: alloc::vec::Vec<spark_core::security::keystore::KeyMaterial>) -> Self",
  "pub fn spark_core::security::keystore::KeyResponse::with_credential(self, credential: spark_core::security::credential::Credential) -> Self",
  "impl core::clone::Clone for spark_core::security::keystore::KeyResponse",
  "pub fn spark_core::security::keystore::KeyResponse::clone(&self) -> spark_core::security::keystore::KeyResponse",
  "impl core::cmp::Eq for spark_core::security::keystore::KeyResponse",
  "impl core::cmp::PartialEq for spark_core::security::keystore::KeyResponse",
  "pub fn spark_core::security::keystore::KeyResponse::eq(&self, other: &spark_core::security::keystore::KeyResponse) -> bool",
  "impl core::fmt::Debug for spark_core::security::keystore::KeyResponse",
  "pub fn spark_core::security::keystore::KeyResponse::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::keystore::KeyResponse",
  "impl core::marker::Freeze for spark_core::security::keystore::KeyResponse",
  "impl core::marker::Send for spark_core::security::keystore::KeyResponse",
  "impl core::marker::Sync for spark_core::security::keystore::KeyResponse",
  "impl core::marker::Unpin for spark_core::security::keystore::KeyResponse",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::keystore::KeyResponse",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::keystore::KeyResponse",
  "pub struct spark_core::security::NegotiationContext",
  "impl spark_core::security::negotiation::NegotiationContext",
  "pub fn spark_core::security::negotiation::NegotiationContext::add_metadata(self, key: alloc::string::String, value: alloc::string::String) -> Self",
  "pub fn spark_core::security::negotiation::NegotiationContext::local_identity(&self) -> &spark_core::security::identity::IdentityDescriptor",
  "pub fn spark_core::security::negotiation::NegotiationContext::new(local_identity: spark_core::security::identity::IdentityDescriptor) -> Self",
  "pub fn spark_core::security::negotiation::NegotiationContext::remote_hint(&self) -> core::option::Option<&spark_core::security::identity::IdentityDescriptor>",
  "pub fn spark_core::security::negotiation::NegotiationContext::require_protocol(self, protocol: spark_core::security::negotiation::SecurityProtocol) -> Self",
  "pub fn spark_core::security::negotiation::NegotiationContext::required_protocols(&self) -> &alloc::vec::Vec<spark_core::security::negotiation::SecurityProtocol>",
  "pub fn spark_core::security::negotiation::NegotiationContext::session_metadata(&self) -> &alloc::vec::Vec<(alloc::string::String, alloc::string::String)>",
  "pub fn spark_core::security::negotiation::NegotiationContext::with_remote_hint(self, remote: spark_core::security::identity::IdentityDescriptor) -> Self",
  "impl core::clone::Clone for spark_core::security::negotiation::NegotiationContext",
  "pub fn spark_core::security::negotiation::NegotiationContext::clone(&self) -> spark_core::security::negotiation::NegotiationContext",
  "impl core::cmp::Eq for spark_core::security::negotiation::NegotiationContext",
  "impl core::cmp::PartialEq for spark_core::security::negotiation::NegotiationContext",
  "pub fn spark_core::security::negotiation::NegotiationContext::eq(&self, other: &spark_core::security::negotiation::NegotiationContext) -> bool",
  "impl core::fmt::Debug for spark_core::security::negotiation::NegotiationContext",
  "pub fn spark_core::security::negotiation::NegotiationContext::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::negotiation::NegotiationContext",
  "impl core::marker::Freeze for spark_core::security::negotiation::NegotiationContext",
  "impl core::marker::Send for spark_core::security::negotiation::NegotiationContext",
  "impl core::marker::Sync for spark_core::security::negotiation::NegotiationContext",
  "impl core::marker::Unpin for spark_core::security::negotiation::NegotiationContext",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::negotiation::NegotiationContext",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::negotiation::NegotiationContext",
  "pub struct spark_core::security::NegotiationOutcome",
  "impl spark_core::security::negotiation::NegotiationOutcome",
  "pub fn spark_core::security::negotiation::NegotiationOutcome::credential(&self) -> core::option::Option<&spark_core::security::credential::Credential>",
  "pub fn spark_core::security::negotiation::NegotiationOutcome::metadata(&self) -> &alloc::vec::Vec<(alloc::string::String, alloc::string::String)>",
  "pub fn spark_core::security::negotiation::NegotiationOutcome::new(protocol: spark_core::security::negotiation::SecurityProtocol) -> Self",
  "pub fn spark_core::security::negotiation::NegotiationOutcome::peer_identity(&self) -> core::option::Option<&spark_core::security::identity::IdentityDescriptor>",
  "pub fn spark_core::security::negotiation::NegotiationOutcome::protocol(&self) -> &spark_core::security::negotiation::SecurityProtocol",
  "pub fn spark_core::security::negotiation::NegotiationOutcome::with_credential(self, credential: spark_core::security::credential::Credential) -> Self",
  "pub fn spark_core::security::negotiation::NegotiationOutcome::with_metadata(self, metadata: alloc::vec::Vec<(alloc::string::String, alloc::string::String)>) -> Self",
  "pub fn spark_core::security::negotiation::NegotiationOutcome::with_peer_identity(self, identity: spark_core::security::identity::IdentityDescriptor) -> Self",
  "impl core::clone::Clone for spark_core::security::negotiation::NegotiationOutcome",
  "pub fn spark_core::security::negotiation::NegotiationOutcome::clone(&self) -> spark_core::security::negotiation::NegotiationOutcome",
  "impl core::cmp::Eq for spark_core::security::negotiation::NegotiationOutcome",
  "impl core::cmp::PartialEq for spark_core::security::negotiation::NegotiationOutcome",
  "pub fn spark_core::security::negotiation::NegotiationOutcome::eq(&self, other: &spark_core::security::negotiation::NegotiationOutcome) -> bool",
  "impl core::fmt::Debug for spark_core::security::negotiation::NegotiationOutcome",
  "pub fn spark_core::security::negotiation::NegotiationOutcome::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::negotiation::NegotiationOutcome",
  "impl core::marker::Freeze for spark_core::security::negotiation::NegotiationOutcome",
  "impl core::marker::Send for spark_core::security::negotiation::NegotiationOutcome",
  "impl core::marker::Sync for spark_core::security::negotiation::NegotiationOutcome",
  "impl core::marker::Unpin for spark_core::security::negotiation::NegotiationOutcome",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::negotiation::NegotiationOutcome",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::negotiation::NegotiationOutcome",
  "pub struct spark_core::security::PolicyAttachment",
  "impl spark_core::security::policy::PolicyAttachment",
  "pub fn spark_core::security::policy::PolicyAttachment::new(policy: spark_core::security::policy::SecurityPolicy, scope: alloc::string::String, priority: i32) -> Self",
  "pub fn spark_core::security::policy::PolicyAttachment::policy(&self) -> &spark_core::security::policy::SecurityPolicy",
  "pub fn spark_core::security::policy::PolicyAttachment::priority(&self) -> i32",
  "pub fn spark_core::security::policy::PolicyAttachment::scope(&self) -> &str",
  "impl core::clone::Clone for spark_core::security::policy::PolicyAttachment",
  "pub fn spark_core::security::policy::PolicyAttachment::clone(&self) -> spark_core::security::policy::PolicyAttachment",
  "impl core::cmp::Eq for spark_core::security::policy::PolicyAttachment",
  "impl core::cmp::PartialEq for spark_core::security::policy::PolicyAttachment",
  "pub fn spark_core::security::policy::PolicyAttachment::eq(&self, other: &spark_core::security::policy::PolicyAttachment) -> bool",
  "impl core::fmt::Debug for spark_core::security::policy::PolicyAttachment",
  "pub fn spark_core::security::policy::PolicyAttachment::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::policy::PolicyAttachment",
  "impl core::marker::Freeze for spark_core::security::policy::PolicyAttachment",
  "impl core::marker::Send for spark_core::security::policy::PolicyAttachment",
  "impl core::marker::Sync for spark_core::security::policy::PolicyAttachment",
  "impl core::marker::Unpin for spark_core::security::policy::PolicyAttachment",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::policy::PolicyAttachment",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::policy::PolicyAttachment",
  "pub struct spark_core::security::PolicyRule",
  "impl spark_core::security::policy::PolicyRule",
  "pub fn spark_core::security::policy::PolicyRule::add_condition(self, key: alloc::string::String, value: alloc::string::String) -> Self",
  "pub fn spark_core::security::policy::PolicyRule::conditions(&self) -> &alloc::vec::Vec<(alloc::string::String, alloc::string::String)>",
  "pub fn spark_core::security::policy::PolicyRule::effect(&self) -> spark_core::security::policy::PolicyEffect",
  "pub fn spark_core::security::policy::PolicyRule::new(subjects: alloc::vec::Vec<spark_core::security::policy::SubjectMatcher>, resources: alloc::vec::Vec<spark_core::security::policy::ResourcePattern>, effect: spark_core::security::policy::PolicyEffect) -> Self",
  "pub fn spark_core::security::policy::PolicyRule::resources(&self) -> &alloc::vec::Vec<spark_core::security::policy::ResourcePattern>",
  "pub fn spark_core::security::policy::PolicyRule::subjects(&self) -> &alloc::vec::Vec<spark_core::security::policy::SubjectMatcher>",
  "impl core::clone::Clone for spark_core::security::policy::PolicyRule",
  "pub fn spark_core::security::policy::PolicyRule::clone(&self) -> spark_core::security::policy::PolicyRule",
  "impl core::cmp::Eq for spark_core::security::policy::PolicyRule",
  "impl core::cmp::PartialEq for spark_core::security::policy::PolicyRule",
  "pub fn spark_core::security::policy::PolicyRule::eq(&self, other: &spark_core::security::policy::PolicyRule) -> bool",
  "impl core::fmt::Debug for spark_core::security::policy::PolicyRule",
  "pub fn spark_core::security::policy::PolicyRule::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::policy::PolicyRule",
  "impl core::marker::Freeze for spark_core::security::policy::PolicyRule",
  "impl core::marker::Send for spark_core::security::policy::PolicyRule",
  "impl core::marker::Sync for spark_core::security::policy::PolicyRule",
  "impl core::marker::Unpin for spark_core::security::policy::PolicyRule",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::policy::PolicyRule",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::policy::PolicyRule",
  "pub struct spark_core::security::ResourcePattern",
  "impl spark_core::security::policy::ResourcePattern",
  "pub fn spark_core::security::policy::ResourcePattern::actions(&self) -> &alloc::vec::Vec<alloc::string::String>",
  "pub fn spark_core::security::policy::ResourcePattern::add_action(self, action: alloc::string::String) -> Self",
  "pub fn spark_core::security::policy::ResourcePattern::add_label(self, key: alloc::string::String, value: alloc::string::String) -> Self",
  "pub fn spark_core::security::policy::ResourcePattern::labels(&self) -> &alloc::vec::Vec<(alloc::string::String, alloc::string::String)>",
  "pub fn spark_core::security::policy::ResourcePattern::name(&self) -> core::option::Option<&alloc::string::String>",
  "pub fn spark_core::security::policy::ResourcePattern::namespace(&self) -> &str",
  "pub fn spark_core::security::policy::ResourcePattern::new(namespace: alloc::string::String) -> Self",
  "pub fn spark_core::security::policy::ResourcePattern::with_name(self, name: alloc::string::String) -> Self",
  "impl core::clone::Clone for spark_core::security::policy::ResourcePattern",
  "pub fn spark_core::security::policy::ResourcePattern::clone(&self) -> spark_core::security::policy::ResourcePattern",
  "impl core::cmp::Eq for spark_core::security::policy::ResourcePattern",
  "impl core::cmp::PartialEq for spark_core::security::policy::ResourcePattern",
  "pub fn spark_core::security::policy::ResourcePattern::eq(&self, other: &spark_core::security::policy::ResourcePattern) -> bool",
  "impl core::fmt::Debug for spark_core::security::policy::ResourcePattern",
  "pub fn spark_core::security::policy::ResourcePattern::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::policy::ResourcePattern",
  "impl core::marker::Freeze for spark_core::security::policy::ResourcePattern",
  "impl core::marker::Send for spark_core::security::policy::ResourcePattern",
  "impl core::marker::Sync for spark_core::security::policy::ResourcePattern",
  "impl core::marker::Unpin for spark_core::security::policy::ResourcePattern",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::policy::ResourcePattern",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::policy::ResourcePattern",
  "pub struct spark_core::security::SecurityNegotiationPlan",
  "impl spark_core::security::negotiation::SecurityNegotiationPlan",
  "pub fn spark_core::security::negotiation::SecurityNegotiationPlan::allow_plaintext(self) -> Self",
  "pub fn spark_core::security::negotiation::SecurityNegotiationPlan::fall_back_to_plaintext(&self) -> bool",
  "pub fn spark_core::security::negotiation::SecurityNegotiationPlan::new(offers: alloc::vec::Vec<spark_core::security::negotiation::SecurityProtocolOffer>) -> Self",
  "pub fn spark_core::security::negotiation::SecurityNegotiationPlan::offers(&self) -> &alloc::vec::Vec<spark_core::security::negotiation::SecurityProtocolOffer>",
  "impl core::clone::Clone for spark_core::security::negotiation::SecurityNegotiationPlan",
  "pub fn spark_core::security::negotiation::SecurityNegotiationPlan::clone(&self) -> spark_core::security::negotiation::SecurityNegotiationPlan",
  "impl core::cmp::Eq for spark_core::security::negotiation::SecurityNegotiationPlan",
  "impl core::cmp::PartialEq for spark_core::security::negotiation::SecurityNegotiationPlan",
  "pub fn spark_core::security::negotiation::SecurityNegotiationPlan::eq(&self, other: &spark_core::security::negotiation::SecurityNegotiationPlan) -> bool",
  "impl core::fmt::Debug for spark_core::security::negotiation::SecurityNegotiationPlan",
  "pub fn spark_core::security::negotiation::SecurityNegotiationPlan::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::negotiation::SecurityNegotiationPlan",
  "impl core::marker::Freeze for spark_core::security::negotiation::SecurityNegotiationPlan",
  "impl core::marker::Send for spark_core::security::negotiation::SecurityNegotiationPlan",
  "impl core::marker::Sync for spark_core::security::negotiation::SecurityNegotiationPlan",
  "impl core::marker::Unpin for spark_core::security::negotiation::SecurityNegotiationPlan",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::negotiation::SecurityNegotiationPlan",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::negotiation::SecurityNegotiationPlan",
  "pub struct spark_core::security::SecurityPolicy",
  "impl spark_core::security::policy::SecurityPolicy",
  "pub fn spark_core::security::policy::SecurityPolicy::description(&self) -> core::option::Option<&alloc::string::String>",
  "pub fn spark_core::security::policy::SecurityPolicy::id(&self) -> &str",
  "pub fn spark_core::security::policy::SecurityPolicy::new(id: alloc::string::String, rules: alloc::vec::Vec<spark_core::security::policy::PolicyRule>) -> Self",
  "pub fn spark_core::security::policy::SecurityPolicy::rules(&self) -> &alloc::vec::Vec<spark_core::security::policy::PolicyRule>",
  "pub fn spark_core::security::policy::SecurityPolicy::version(&self) -> core::option::Option<&alloc::string::String>",
  "pub fn spark_core::security::policy::SecurityPolicy::with_description(self, description: alloc::string::String) -> Self",
  "pub fn spark_core::security::policy::SecurityPolicy::with_version(self, version: alloc::string::String) -> Self",
  "impl core::clone::Clone for spark_core::security::policy::SecurityPolicy",
  "pub fn spark_core::security::policy::SecurityPolicy::clone(&self) -> spark_core::security::policy::SecurityPolicy",
  "impl core::cmp::Eq for spark_core::security::policy::SecurityPolicy",
  "impl core::cmp::PartialEq for spark_core::security::policy::SecurityPolicy",
  "pub fn spark_core::security::policy::SecurityPolicy::eq(&self, other: &spark_core::security::policy::SecurityPolicy) -> bool",
  "impl core::fmt::Debug for spark_core::security::policy::SecurityPolicy",
  "pub fn spark_core::security::policy::SecurityPolicy::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::policy::SecurityPolicy",
  "impl core::marker::Freeze for spark_core::security::policy::SecurityPolicy",
  "impl core::marker::Send for spark_core::security::policy::SecurityPolicy",
  "impl core::marker::Sync for spark_core::security::policy::SecurityPolicy",
  "impl core::marker::Unpin for spark_core::security::policy::SecurityPolicy",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::policy::SecurityPolicy",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::policy::SecurityPolicy",
  "pub struct spark_core::security::SecurityProtocolOffer",
  "impl spark_core::security::negotiation::SecurityProtocolOffer",
  "pub fn spark_core::security::negotiation::SecurityProtocolOffer::credential(&self) -> core::option::Option<&spark_core::security::credential::Credential>",
  "pub fn spark_core::security::negotiation::SecurityProtocolOffer::mandatory(&self) -> bool",
  "pub fn spark_core::security::negotiation::SecurityProtocolOffer::new(protocol: spark_core::security::negotiation::SecurityProtocol) -> Self",
  "pub fn spark_core::security::negotiation::SecurityProtocolOffer::protocol(&self) -> &spark_core::security::negotiation::SecurityProtocol",
  "pub fn spark_core::security::negotiation::SecurityProtocolOffer::require(self) -> Self",
  "pub fn spark_core::security::negotiation::SecurityProtocolOffer::with_credential(self, credential: spark_core::security::credential::Credential) -> Self",
  "impl core::clone::Clone for spark_core::security::negotiation::SecurityProtocolOffer",
  "pub fn spark_core::security::negotiation::SecurityProtocolOffer::clone(&self) -> spark_core::security::negotiation::SecurityProtocolOffer",
  "impl core::cmp::Eq for spark_core::security::negotiation::SecurityProtocolOffer",
  "impl core::cmp::PartialEq for spark_core::security::negotiation::SecurityProtocolOffer",
  "pub fn spark_core::security::negotiation::SecurityProtocolOffer::eq(&self, other: &spark_core::security::negotiation::SecurityProtocolOffer) -> bool",
  "impl core::fmt::Debug for spark_core::security::negotiation::SecurityProtocolOffer",
  "pub fn spark_core::security::negotiation::SecurityProtocolOffer::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::negotiation::SecurityProtocolOffer",
  "impl core::marker::Freeze for spark_core::security::negotiation::SecurityProtocolOffer",
  "impl core::marker::Send for spark_core::security::negotiation::SecurityProtocolOffer",
  "impl core::marker::Sync for spark_core::security::negotiation::SecurityProtocolOffer",
  "impl core::marker::Unpin for spark_core::security::negotiation::SecurityProtocolOffer",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::negotiation::SecurityProtocolOffer",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::negotiation::SecurityProtocolOffer",
  "pub trait spark_core::security::KeySource: Sealed",
  "pub fn spark_core::security::KeySource::fetch(&self, request: &spark_core::security::keystore::KeyRequest) -> core::result::Result<spark_core::security::keystore::KeyResponse, spark_core::security::keystore::KeyRetrievalError>",
  "pub trait spark_core::security::SecurityNegotiator: Sealed",
  "pub fn spark_core::security::SecurityNegotiator::negotiate(&self, plan: &spark_core::security::negotiation::SecurityNegotiationPlan, context: &spark_core::security::negotiation::NegotiationContext) -> spark_core::security::negotiation::NegotiationResult",
  "pub type spark_core::security::NegotiationResult = core::result::Result<spark_core::security::negotiation::NegotiationOutcome, spark_core::security::negotiation::NegotiationError>",
  "pub mod spark_core::service",
  "pub mod spark_core::service::auto_dyn",
  "pub struct spark_core::service::auto_dyn::DynBridge<S, Request>",
  "impl<S, Request> spark_core::service::auto_dyn::DynBridge<S, Request> where S: spark_core::service::traits::generic::Service<Request>, Request: core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::service::auto_dyn::DynBridge<S, Request>::into_inner(self) -> S",
  "pub fn spark_core::service::auto_dyn::DynBridge<S, Request>::new(inner: S) -> Self",
  "impl<S, Request> spark_core::service::auto_dyn::AutoDynBridge for spark_core::service::auto_dyn::DynBridge<S, Request> where S: spark_core::service::traits::generic::Service<Request> + core::marker::Send + core::marker::Sync + 'static, Request: core::marker::Send + core::marker::Sync + 'static, <S as spark_core::service::traits::generic::Service<Request>>::Response: core::marker::Send + core::marker::Sync + 'static",
  "pub type spark_core::service::auto_dyn::DynBridge<S, Request>::DynOut = spark_core::service::traits::object::BoxService",
  "pub fn spark_core::service::auto_dyn::DynBridge<S, Request>::into_dyn<R>(self) -> Self::DynOut where Self: spark_core::service::traits::generic::Service<R, Error = spark_core::error::SparkError>, R: spark_core::service::auto_dyn::Decode + core::marker::Send + core::marker::Sync + 'static, <Self as spark_core::service::traits::generic::Service<R>>::Response: spark_core::service::auto_dyn::Encode + core::marker::Send + core::marker::Sync + 'static",
  "impl<S, Request> spark_core::service::traits::generic::Service<Request> for spark_core::service::auto_dyn::DynBridge<S, Request> where S: spark_core::service::traits::generic::Service<Request>, Request: core::marker::Send + core::marker::Sync + 'static",
  "pub type spark_core::service::auto_dyn::DynBridge<S, Request>::Error = <S as spark_core::service::traits::generic::Service<Request>>::Error",
  "pub type spark_core::service::auto_dyn::DynBridge<S, Request>::Future = <S as spark_core::service::traits::generic::Service<Request>>::Future",
  "pub type spark_core::service::auto_dyn::DynBridge<S, Request>::Response = <S as spark_core::service::traits::generic::Service<Request>>::Response",
  "pub fn spark_core::service::auto_dyn::DynBridge<S, Request>::call(&mut self, ctx: spark_core::contract::CallContext, req: Request) -> Self::Future",
  "pub fn spark_core::service::auto_dyn::DynBridge<S, Request>::poll_ready(&mut self, ctx: &spark_core::context::ExecutionContext<'_>, cx: &mut core::task::wake::Context<'_>) -> spark_core::status::ready::PollReady<Self::Error>",
  "impl<S, Request> core::marker::Freeze for spark_core::service::auto_dyn::DynBridge<S, Request> where S: core::marker::Freeze",
  "impl<S, Request> core::marker::Send for spark_core::service::auto_dyn::DynBridge<S, Request> where S: core::marker::Send",
  "impl<S, Request> core::marker::Sync for spark_core::service::auto_dyn::DynBridge<S, Request> where S: core::marker::Sync",
  "impl<S, Request> core::marker::Unpin for spark_core::service::auto_dyn::DynBridge<S, Request> where S: core::marker::Unpin",
  "impl<S, Request> core::panic::unwind_safe::RefUnwindSafe for spark_core::service::auto_dyn::DynBridge<S, Request> where S: core::panic::unwind_safe::RefUnwindSafe",
  "impl<S, Request> core::panic::unwind_safe::UnwindSafe for spark_core::service::auto_dyn::DynBridge<S, Request> where S: core::panic::unwind_safe::UnwindSafe",
  "pub trait spark_core::service::auto_dyn::AutoDynBridge: core::marker::Sized + core::marker::Send + core::marker::Sync + 'static",
  "pub type spark_core::service::auto_dyn::AutoDynBridge::DynOut",
  "pub fn spark_core::service::auto_dyn::AutoDynBridge::into_dyn<Request>(self) -> Self::DynOut where Self: spark_core::service::traits::generic::Service<Request, Error = spark_core::error::SparkError>, Request: spark_core::service::auto_dyn::Decode + core::marker::Send + core::marker::Sync + 'static, <Self as spark_core::service::traits::generic::Service<Request>>::Response: spark_core::service::auto_dyn::Encode + core::marker::Send + core::marker::Sync + 'static",
  "impl spark_core::service::auto_dyn::AutoDynBridge for spark_core::service::traits::object::BoxService",
  "pub type spark_core::service::traits::object::BoxService::DynOut = spark_core::service::traits::object::BoxService",
  "pub fn spark_core::service::traits::object::BoxService::into_dyn<Request>(self) -> Self::DynOut where Self: spark_core::service::traits::generic::Service<Request, Error = spark_core::error::SparkError>, Request: spark_core::service::auto_dyn::Decode + core::marker::Send + core::marker::Sync + 'static, <Self as spark_core::service::traits::generic::Service<Request>>::Response: spark_core::service::auto_dyn::Encode + core::marker::Send + core::marker::Sync + 'static",
  "impl<S, Request> spark_core::service::auto_dyn::AutoDynBridge for spark_core::service::auto_dyn::DynBridge<S, Request> where S: spark_core::service::traits::generic::Service<Request> + core::marker::Send + core::marker::Sync + 'static, Request: core::marker::Send + core::marker::Sync + 'static, <S as spark_core::service::traits::generic::Service<Request>>::Response: core::marker::Send + core::marker::Sync + 'static",
  "pub type spark_core::service::auto_dyn::DynBridge<S, Request>::DynOut = spark_core::service::traits::object::BoxService",
  "pub fn spark_core::service::auto_dyn::DynBridge<S, Request>::into_dyn<R>(self) -> Self::DynOut where Self: spark_core::service::traits::generic::Service<R, Error = spark_core::error::SparkError>, R: spark_core::service::auto_dyn::Decode + core::marker::Send + core::marker::Sync + 'static, <Self as spark_core::service::traits::generic::Service<R>>::Response: spark_core::service::auto_dyn::Encode + core::marker::Send + core::marker::Sync + 'static",
  "pub trait spark_core::service::auto_dyn::Decode: core::marker::Sized",
  "pub fn spark_core::service::auto_dyn::Decode::decode(message: spark_core::buffer::message::PipelineMessage) -> core::result::Result<Self, spark_core::error::SparkError>",
  "impl spark_core::service::auto_dyn::Decode for spark_core::buffer::message::PipelineMessage",
  "pub fn spark_core::buffer::message::PipelineMessage::decode(message: spark_core::buffer::message::PipelineMessage) -> core::result::Result<Self, spark_core::error::SparkError>",
  "impl<T> spark_core::service::auto_dyn::Decode for T where T: core::convert::TryFrom<spark_core::buffer::message::PipelineMessage, Error = spark_core::error::SparkError>",
  "pub fn T::decode(message: spark_core::buffer::message::PipelineMessage) -> core::result::Result<Self, spark_core::error::SparkError>",
  "pub trait spark_core::service::auto_dyn::Encode",
  "pub fn spark_core::service::auto_dyn::Encode::encode(self) -> spark_core::buffer::message::PipelineMessage",
  "impl<T> spark_core::service::auto_dyn::Encode for T where T: core::convert::Into<spark_core::buffer::message::PipelineMessage>",
  "pub fn T::encode(self) -> spark_core::buffer::message::PipelineMessage",
  "pub fn spark_core::service::auto_dyn::bridge_to_box_service<S, Request>(service: S) -> spark_core::service::traits::object::BoxService where S: spark_core::service::traits::generic::Service<Request, Error = spark_core::error::SparkError> + core::marker::Send + core::marker::Sync + 'static, Request: spark_core::service::auto_dyn::Decode + core::marker::Send + core::marker::Sync + 'static, <S as spark_core::service::traits::generic::Service<Request>>::Response: spark_core::service::auto_dyn::Encode + core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::service::auto_dyn::type_mismatch_error(expected: &'static str, actual: &'static str) -> spark_core::error::SparkError",
  "pub mod spark_core::service::metrics",
  "pub enum spark_core::service::metrics::PayloadDirection",
  "pub spark_core::service::metrics::PayloadDirection::Inbound",
  "pub spark_core::service::metrics::PayloadDirection::Outbound",
  "impl core::clone::Clone for spark_core::service::metrics::PayloadDirection",
  "pub fn spark_core::service::metrics::PayloadDirection::clone(&self) -> spark_core::service::metrics::PayloadDirection",
  "impl core::cmp::Eq for spark_core::service::metrics::PayloadDirection",
  "impl core::cmp::PartialEq for spark_core::service::metrics::PayloadDirection",
  "pub fn spark_core::service::metrics::PayloadDirection::eq(&self, other: &spark_core::service::metrics::PayloadDirection) -> bool",
  "impl core::fmt::Debug for spark_core::service::metrics::PayloadDirection",
  "pub fn spark_core::service::metrics::PayloadDirection::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::service::metrics::PayloadDirection",
  "impl core::marker::StructuralPartialEq for spark_core::service::metrics::PayloadDirection",
  "impl core::marker::Freeze for spark_core::service::metrics::PayloadDirection",
  "impl core::marker::Send for spark_core::service::metrics::PayloadDirection",
  "impl core::marker::Sync for spark_core::service::metrics::PayloadDirection",
  "impl core::marker::Unpin for spark_core::service::metrics::PayloadDirection",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::service::metrics::PayloadDirection",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::service::metrics::PayloadDirection",
  "pub enum spark_core::service::metrics::ServiceOutcome",
  "pub spark_core::service::metrics::ServiceOutcome::Error",
  "pub spark_core::service::metrics::ServiceOutcome::Success",
  "impl spark_core::service::metrics::ServiceOutcome",
  "pub const spark_core::service::metrics::ServiceOutcome::ERROR_LABEL: &'static str",
  "pub const spark_core::service::metrics::ServiceOutcome::SUCCESS_LABEL: &'static str",
  "pub fn spark_core::service::metrics::ServiceOutcome::as_label(self) -> &'static str",
  "impl core::clone::Clone for spark_core::service::metrics::ServiceOutcome",
  "pub fn spark_core::service::metrics::ServiceOutcome::clone(&self) -> spark_core::service::metrics::ServiceOutcome",
  "impl core::cmp::Eq for spark_core::service::metrics::ServiceOutcome",
  "impl core::cmp::PartialEq for spark_core::service::metrics::ServiceOutcome",
  "pub fn spark_core::service::metrics::ServiceOutcome::eq(&self, other: &spark_core::service::metrics::ServiceOutcome) -> bool",
  "impl core::fmt::Debug for spark_core::service::metrics::ServiceOutcome",
  "pub fn spark_core::service::metrics::ServiceOutcome::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::service::metrics::ServiceOutcome",
  "impl core::marker::StructuralPartialEq for spark_core::service::metrics::ServiceOutcome",
  "impl core::marker::Freeze for spark_core::service::metrics::ServiceOutcome",
  "impl core::marker::Send for spark_core::service::metrics::ServiceOutcome",
  "impl core::marker::Sync for spark_core::service::metrics::ServiceOutcome",
  "impl core::marker::Unpin for spark_core::service::metrics::ServiceOutcome",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::service::metrics::ServiceOutcome",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::service::metrics::ServiceOutcome",
  "pub struct spark_core::service::metrics::ServiceMetricsHook<'a>",
  "impl<'a> spark_core::service::metrics::ServiceMetricsHook<'a>",
  "pub fn spark_core::service::metrics::ServiceMetricsHook<'a>::new(provider: &'a dyn spark_core::observability::metrics::MetricsProvider) -> Self",
  "pub fn spark_core::service::metrics::ServiceMetricsHook<'a>::on_call_finish(&self, base_attributes: spark_core::observability::attributes::AttributeSet<'_>, outcome: spark_core::service::metrics::ServiceOutcome, duration: core::time::Duration, completion_attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub fn spark_core::service::metrics::ServiceMetricsHook<'a>::on_call_start(&self, base_attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub fn spark_core::service::metrics::ServiceMetricsHook<'a>::record_payload_bytes(&self, direction: spark_core::service::metrics::PayloadDirection, bytes: u64, attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub fn spark_core::service::metrics::ServiceMetricsHook<'a>::record_ready_state(&self, base_attributes: spark_core::observability::attributes::AttributeSet<'_>, state: &spark_core::status::ready::ReadyState)",
  "impl<'a> core::marker::Freeze for spark_core::service::metrics::ServiceMetricsHook<'a>",
  "impl<'a> core::marker::Send for spark_core::service::metrics::ServiceMetricsHook<'a>",
  "impl<'a> core::marker::Sync for spark_core::service::metrics::ServiceMetricsHook<'a>",
  "impl<'a> core::marker::Unpin for spark_core::service::metrics::ServiceMetricsHook<'a>",
  "impl<'a> !core::panic::unwind_safe::RefUnwindSafe for spark_core::service::metrics::ServiceMetricsHook<'a>",
  "impl<'a> !core::panic::unwind_safe::UnwindSafe for spark_core::service::metrics::ServiceMetricsHook<'a>",
  "pub mod spark_core::service::simple",
  "pub struct spark_core::service::simple::AsyncFnLogic<F>(pub F)",
  "impl<Request, F, Fut, Response, E> spark_core::service::simple::ServiceLogic<Request> for spark_core::service::simple::AsyncFnLogic<F> where F: core::ops::function::FnMut(spark_core::contract::CallContext, Request) -> Fut + core::marker::Send + core::marker::Sync + 'static, Fut: core::future::future::Future<Output = core::result::Result<Response, E>> + core::marker::Send + 'static, Response: core::marker::Send + 'static, E: spark_core::Error + core::marker::Send + 'static",
  "pub type spark_core::service::simple::AsyncFnLogic<F>::Error = E",
  "pub type spark_core::service::simple::AsyncFnLogic<F>::Future = Fut",
  "pub type spark_core::service::simple::AsyncFnLogic<F>::Response = Response",
  "pub fn spark_core::service::simple::AsyncFnLogic<F>::invoke(&mut self, ctx: spark_core::contract::CallContext, req: Request) -> Self::Future",
  "impl<F> core::marker::Freeze for spark_core::service::simple::AsyncFnLogic<F> where F: core::marker::Freeze",
  "impl<F> core::marker::Send for spark_core::service::simple::AsyncFnLogic<F> where F: core::marker::Send",
  "impl<F> core::marker::Sync for spark_core::service::simple::AsyncFnLogic<F> where F: core::marker::Sync",
  "impl<F> core::marker::Unpin for spark_core::service::simple::AsyncFnLogic<F> where F: core::marker::Unpin",
  "impl<F> core::panic::unwind_safe::RefUnwindSafe for spark_core::service::simple::AsyncFnLogic<F> where F: core::panic::unwind_safe::RefUnwindSafe",
  "impl<F> core::panic::unwind_safe::UnwindSafe for spark_core::service::simple::AsyncFnLogic<F> where F: core::panic::unwind_safe::UnwindSafe",
  "pub struct spark_core::service::simple::SequentialService<L>",
  "impl<L> spark_core::service::simple::SequentialService<L>",
  "pub fn spark_core::service::simple::SequentialService<L>::new(logic: L) -> Self",
  "impl<L, Request> spark_core::service::traits::generic::Service<Request> for spark_core::service::simple::SequentialService<L> where L: spark_core::service::simple::ServiceLogic<Request>",
  "pub type spark_core::service::simple::SequentialService<L>::Error = <L as spark_core::service::simple::ServiceLogic<Request>>::Error",
  "pub type spark_core::service::simple::SequentialService<L>::Future = GuardedFuture<<L as spark_core::service::simple::ServiceLogic<Request>>::Future, <L as spark_core::service::simple::ServiceLogic<Request>>::Response, <L as spark_core::service::simple::ServiceLogic<Request>>::Error>",
  "pub type spark_core::service::simple::SequentialService<L>::Response = <L as spark_core::service::simple::ServiceLogic<Request>>::Response",
  "pub fn spark_core::service::simple::SequentialService<L>::call(&mut self, ctx: spark_core::contract::CallContext, req: Request) -> Self::Future",
  "pub fn spark_core::service::simple::SequentialService<L>::poll_ready(&mut self, _ctx: &spark_core::context::ExecutionContext<'_>, cx: &mut core::task::wake::Context<'_>) -> spark_core::status::ready::PollReady<Self::Error>",
  "impl<L> core::marker::Freeze for spark_core::service::simple::SequentialService<L> where L: core::marker::Freeze",
  "impl<L> core::marker::Send for spark_core::service::simple::SequentialService<L> where L: core::marker::Send",
  "impl<L> core::marker::Sync for spark_core::service::simple::SequentialService<L> where L: core::marker::Sync",
  "impl<L> core::marker::Unpin for spark_core::service::simple::SequentialService<L> where L: core::marker::Unpin",
  "impl<L> !core::panic::unwind_safe::RefUnwindSafe for spark_core::service::simple::SequentialService<L>",
  "impl<L> !core::panic::unwind_safe::UnwindSafe for spark_core::service::simple::SequentialService<L>",
  "pub struct spark_core::service::simple::SimpleServiceFn<F>",
  "impl<F> spark_core::service::simple::SimpleServiceFn<F> where F: core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::service::simple::SimpleServiceFn<F>::new(logic: F) -> Self",
  "impl<F, Request, Fut, Response, E> spark_core::service::traits::generic::Service<Request> for spark_core::service::simple::SimpleServiceFn<F> where F: core::ops::function::FnMut(spark_core::contract::CallContext, Request) -> Fut + core::marker::Send + core::marker::Sync + 'static, Fut: core::future::future::Future<Output = core::result::Result<Response, E>> + core::marker::Send + 'static, Response: core::marker::Send + 'static, E: spark_core::Error + core::marker::Send + 'static",
  "pub type spark_core::service::simple::SimpleServiceFn<F>::Error = E",
  "pub type spark_core::service::simple::SimpleServiceFn<F>::Future = GuardedFuture<Fut, Response, E>",
  "pub type spark_core::service::simple::SimpleServiceFn<F>::Response = Response",
  "pub fn spark_core::service::simple::SimpleServiceFn<F>::call(&mut self, ctx: spark_core::contract::CallContext, req: Request) -> Self::Future",
  "pub fn spark_core::service::simple::SimpleServiceFn<F>::poll_ready(&mut self, _ctx: &spark_core::context::ExecutionContext<'_>, cx: &mut core::task::wake::Context<'_>) -> spark_core::status::ready::PollReady<Self::Error>",
  "impl<F> core::marker::Freeze for spark_core::service::simple::SimpleServiceFn<F> where F: core::marker::Freeze",
  "impl<F> core::marker::Send for spark_core::service::simple::SimpleServiceFn<F> where F: core::marker::Send",
  "impl<F> core::marker::Sync for spark_core::service::simple::SimpleServiceFn<F> where F: core::marker::Sync",
  "impl<F> core::marker::Unpin for spark_core::service::simple::SimpleServiceFn<F> where F: core::marker::Unpin",
  "impl<F> !core::panic::unwind_safe::RefUnwindSafe for spark_core::service::simple::SimpleServiceFn<F>",
  "impl<F> !core::panic::unwind_safe::UnwindSafe for spark_core::service::simple::SimpleServiceFn<F>",
  "pub trait spark_core::service::simple::ServiceLogic<Request>: core::marker::Send + core::marker::Sync + 'static",
  "pub type spark_core::service::simple::ServiceLogic::Error: spark_core::Error + core::marker::Send + 'static",
  "pub type spark_core::service::simple::ServiceLogic::Future: core::future::future::Future<Output = core::result::Result<Self::Response, Self::Error>> + core::marker::Send + 'static",
  "pub type spark_core::service::simple::ServiceLogic::Response: core::marker::Send + 'static",
  "pub fn spark_core::service::simple::ServiceLogic::invoke(&mut self, ctx: spark_core::contract::CallContext, req: Request) -> Self::Future",
  "impl<Request, F, Fut, Response, E> spark_core::service::simple::ServiceLogic<Request> for spark_core::service::simple::AsyncFnLogic<F> where F: core::ops::function::FnMut(spark_core::contract::CallContext, Request) -> Fut + core::marker::Send + core::marker::Sync + 'static, Fut: core::future::future::Future<Output = core::result::Result<Response, E>> + core::marker::Send + 'static, Response: core::marker::Send + 'static, E: spark_core::Error + core::marker::Send + 'static",
  "pub type spark_core::service::simple::AsyncFnLogic<F>::Error = E",
  "pub type spark_core::service::simple::AsyncFnLogic<F>::Future = Fut",
  "pub type spark_core::service::simple::AsyncFnLogic<F>::Response = Response",
  "pub fn spark_core::service::simple::AsyncFnLogic<F>::invoke(&mut self, ctx: spark_core::contract::CallContext, req: Request) -> Self::Future",
  "pub mod spark_core::service::traits",
  "pub mod spark_core::service::traits::generic",
  "pub trait spark_core::service::traits::generic::Layer<S, Request> where S: spark_core::service::traits::generic::Service<Request>: Sealed",
  "pub type spark_core::service::traits::generic::Layer::Service: spark_core::service::traits::generic::Service<Request, Response = <S as spark_core::service::traits::generic::Service>::Response, Error = <S as spark_core::service::traits::generic::Service>::Error>",
  "pub fn spark_core::service::traits::generic::Layer::layer(&self, inner: S) -> Self::Service",
  "pub trait spark_core::service::traits::generic::Service<Request>: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub type spark_core::service::traits::generic::Service::Error: spark_core::Error",
  "pub type spark_core::service::traits::generic::Service::Future: core::future::future::Future<Output = core::result::Result<Self::Response, Self::Error>> + core::marker::Send + 'static",
  "pub type spark_core::service::traits::generic::Service::Response",
  "pub fn spark_core::service::traits::generic::Service::call(&mut self, ctx: spark_core::contract::CallContext, req: Request) -> Self::Future",
  "pub fn spark_core::service::traits::generic::Service::poll_ready(&mut self, ctx: &spark_core::context::ExecutionContext<'_>, cx: &mut core::task::wake::Context<'_>) -> spark_core::status::ready::PollReady<Self::Error>",
  "impl<F, Request, Fut, Response, E> spark_core::service::traits::generic::Service<Request> for spark_core::service::simple::SimpleServiceFn<F> where F: core::ops::function::FnMut(spark_core::contract::CallContext, Request) -> Fut + core::marker::Send + core::marker::Sync + 'static, Fut: core::future::future::Future<Output = core::result::Result<Response, E>> + core::marker::Send + 'static, Response: core::marker::Send + 'static, E: spark_core::Error + core::marker::Send + 'static",
  "pub type spark_core::service::simple::SimpleServiceFn<F>::Error = E",
  "pub type spark_core::service::simple::SimpleServiceFn<F>::Future = GuardedFuture<Fut, Response, E>",
  "pub type spark_core::service::simple::SimpleServiceFn<F>::Response = Response",
  "pub fn spark_core::service::simple::SimpleServiceFn<F>::call(&mut self, ctx: spark_core::contract::CallContext, req: Request) -> Self::Future",
  "pub fn spark_core::service::simple::SimpleServiceFn<F>::poll_ready(&mut self, _ctx: &spark_core::context::ExecutionContext<'_>, cx: &mut core::task::wake::Context<'_>) -> spark_core::status::ready::PollReady<Self::Error>",
  "impl<L, Request> spark_core::service::traits::generic::Service<Request> for spark_core::service::simple::SequentialService<L> where L: spark_core::service::simple::ServiceLogic<Request>",
  "pub type spark_core::service::simple::SequentialService<L>::Error = <L as spark_core::service::simple::ServiceLogic<Request>>::Error",
  "pub type spark_core::service::simple::SequentialService<L>::Future = GuardedFuture<<L as spark_core::service::simple::ServiceLogic<Request>>::Future, <L as spark_core::service::simple::ServiceLogic<Request>>::Response, <L as spark_core::service::simple::ServiceLogic<Request>>::Error>",
  "pub type spark_core::service::simple::SequentialService<L>::Response = <L as spark_core::service::simple::ServiceLogic<Request>>::Response",
  "pub fn spark_core::service::simple::SequentialService<L>::call(&mut self, ctx: spark_core::contract::CallContext, req: Request) -> Self::Future",
  "pub fn spark_core::service::simple::SequentialService<L>::poll_ready(&mut self, _ctx: &spark_core::context::ExecutionContext<'_>, cx: &mut core::task::wake::Context<'_>) -> spark_core::status::ready::PollReady<Self::Error>",
  "impl<S, Request> spark_core::service::traits::generic::Service<Request> for spark_core::service::auto_dyn::DynBridge<S, Request> where S: spark_core::service::traits::generic::Service<Request>, Request: core::marker::Send + core::marker::Sync + 'static",
  "pub type spark_core::service::auto_dyn::DynBridge<S, Request>::Error = <S as spark_core::service::traits::generic::Service<Request>>::Error",
  "pub type spark_core::service::auto_dyn::DynBridge<S, Request>::Future = <S as spark_core::service::traits::generic::Service<Request>>::Future",
  "pub type spark_core::service::auto_dyn::DynBridge<S, Request>::Response = <S as spark_core::service::traits::generic::Service<Request>>::Response",
  "pub fn spark_core::service::auto_dyn::DynBridge<S, Request>::call(&mut self, ctx: spark_core::contract::CallContext, req: Request) -> Self::Future",
  "pub fn spark_core::service::auto_dyn::DynBridge<S, Request>::poll_ready(&mut self, ctx: &spark_core::context::ExecutionContext<'_>, cx: &mut core::task::wake::Context<'_>) -> spark_core::status::ready::PollReady<Self::Error>",
  "pub mod spark_core::service::traits::object",
  "pub struct spark_core::service::traits::object::BoxService",
  "impl spark_core::service::traits::object::BoxService",
  "pub fn spark_core::service::traits::object::BoxService::as_dyn(&self) -> &dyn spark_core::service::traits::object::DynService",
  "pub fn spark_core::service::traits::object::BoxService::into_arc(self) -> alloc::sync::Arc<dyn spark_core::service::traits::object::DynService>",
  "pub fn spark_core::service::traits::object::BoxService::new(inner: alloc::sync::Arc<dyn spark_core::service::traits::object::DynService>) -> Self",
  "impl core::clone::Clone for spark_core::service::traits::object::BoxService",
  "pub fn spark_core::service::traits::object::BoxService::clone(&self) -> spark_core::service::traits::object::BoxService",
  "impl core::fmt::Debug for spark_core::service::traits::object::BoxService",
  "pub fn spark_core::service::traits::object::BoxService::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl spark_core::service::auto_dyn::AutoDynBridge for spark_core::service::traits::object::BoxService",
  "pub type spark_core::service::traits::object::BoxService::DynOut = spark_core::service::traits::object::BoxService",
  "pub fn spark_core::service::traits::object::BoxService::into_dyn<Request>(self) -> Self::DynOut where Self: spark_core::service::traits::generic::Service<Request, Error = spark_core::error::SparkError>, Request: spark_core::service::auto_dyn::Decode + core::marker::Send + core::marker::Sync + 'static, <Self as spark_core::service::traits::generic::Service<Request>>::Response: spark_core::service::auto_dyn::Encode + core::marker::Send + core::marker::Sync + 'static",
  "impl core::marker::Freeze for spark_core::service::traits::object::BoxService",
  "impl core::marker::Send for spark_core::service::traits::object::BoxService",
  "impl core::marker::Sync for spark_core::service::traits::object::BoxService",
  "impl core::marker::Unpin for spark_core::service::traits::object::BoxService",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::service::traits::object::BoxService",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::service::traits::object::BoxService",
  "pub struct spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode> where S: spark_core::service::traits::generic::Service<Request, Response = Response, Error = spark_core::error::SparkError>, Decode: core::ops::function::Fn(spark_core::buffer::message::PipelineMessage) -> core::result::Result<Request, spark_core::error::SparkError> + core::marker::Send + core::marker::Sync + 'static, Encode: core::ops::function::Fn(Response) -> spark_core::buffer::message::PipelineMessage + core::marker::Send + core::marker::Sync + 'static",
  "impl<S, Request, Response, Decode, Encode> spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode> where S: spark_core::service::traits::generic::Service<Request, Response = Response, Error = spark_core::error::SparkError>, Decode: core::ops::function::Fn(spark_core::buffer::message::PipelineMessage) -> core::result::Result<Request, spark_core::error::SparkError> + core::marker::Send + core::marker::Sync + 'static, Encode: core::ops::function::Fn(Response) -> spark_core::buffer::message::PipelineMessage + core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::into_inner(self) -> S",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::new(inner: S, decode: Decode, encode: Encode) -> Self",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::with_close_hook(self, hook: impl core::ops::function::Fn(&mut S, spark_core::contract::CloseReason) + core::marker::Send + core::marker::Sync + 'static) -> Self",
  "impl<S, Request, Response, Decode, Encode> spark_core::service::traits::object::DynService for spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode> where S: spark_core::service::traits::generic::Service<Request, Response = Response, Error = spark_core::error::SparkError>, Decode: core::ops::function::Fn(spark_core::buffer::message::PipelineMessage) -> core::result::Result<Request, spark_core::error::SparkError> + core::marker::Send + core::marker::Sync + 'static, Encode: core::ops::function::Fn(Response) -> spark_core::buffer::message::PipelineMessage + core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::call_dyn<'life0, 'async_trait>(&'life0 mut self, ctx: spark_core::contract::CallContext, req: spark_core::buffer::message::PipelineMessage) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<spark_core::buffer::message::PipelineMessage, spark_core::error::SparkError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::closed<'life0, 'async_trait>(&'life0 mut self) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<(), spark_core::error::SparkError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::graceful_close(&mut self, reason: spark_core::contract::CloseReason)",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::poll_ready_dyn(&mut self, ctx: &spark_core::context::ExecutionContext<'_>, cx: &mut core::task::wake::Context<'_>) -> spark_core::status::ready::PollReady<spark_core::error::SparkError>",
  "impl<S, Request, Response, Decode, Encode> core::marker::Freeze for spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode> where S: core::marker::Freeze",
  "impl<S, Request, Response, Decode, Encode> core::marker::Send for spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>",
  "impl<S, Request, Response, Decode, Encode> core::marker::Sync for spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>",
  "impl<S, Request, Response, Decode, Encode> core::marker::Unpin for spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode> where S: core::marker::Unpin",
  "impl<S, Request, Response, Decode, Encode> !core::panic::unwind_safe::RefUnwindSafe for spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>",
  "impl<S, Request, Response, Decode, Encode> !core::panic::unwind_safe::UnwindSafe for spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>",
  "pub trait spark_core::service::traits::object::DynService: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::service::traits::object::DynService::call_dyn<'life0, 'async_trait>(&'life0 mut self, ctx: spark_core::contract::CallContext, req: spark_core::buffer::message::PipelineMessage) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<spark_core::buffer::message::PipelineMessage, spark_core::error::SparkError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait",
  "pub fn spark_core::service::traits::object::DynService::closed<'life0, 'async_trait>(&'life0 mut self) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<(), spark_core::error::SparkError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait",
  "pub fn spark_core::service::traits::object::DynService::graceful_close(&mut self, reason: spark_core::contract::CloseReason)",
  "pub fn spark_core::service::traits::object::DynService::poll_ready_dyn(&mut self, ctx: &spark_core::context::ExecutionContext<'_>, cx: &mut core::task::wake::Context<'_>) -> spark_core::status::ready::PollReady<spark_core::error::SparkError>",
  "impl<S, Request, Response, Decode, Encode> spark_core::service::traits::object::DynService for spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode> where S: spark_core::service::traits::generic::Service<Request, Response = Response, Error = spark_core::error::SparkError>, Decode: core::ops::function::Fn(spark_core::buffer::message::PipelineMessage) -> core::result::Result<Request, spark_core::error::SparkError> + core::marker::Send + core::marker::Sync + 'static, Encode: core::ops::function::Fn(Response) -> spark_core::buffer::message::PipelineMessage + core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::call_dyn<'life0, 'async_trait>(&'life0 mut self, ctx: spark_core::contract::CallContext, req: spark_core::buffer::message::PipelineMessage) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<spark_core::buffer::message::PipelineMessage, spark_core::error::SparkError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::closed<'life0, 'async_trait>(&'life0 mut self) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<(), spark_core::error::SparkError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::graceful_close(&mut self, reason: spark_core::contract::CloseReason)",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::poll_ready_dyn(&mut self, ctx: &spark_core::context::ExecutionContext<'_>, cx: &mut core::task::wake::Context<'_>) -> spark_core::status::ready::PollReady<spark_core::error::SparkError>",
  "pub type spark_core::service::traits::object::CloseCallback<S> = (dyn core::ops::function::Fn(&mut S, spark_core::contract::CloseReason) + core::marker::Send + core::marker::Sync)",
  "pub struct spark_core::service::traits::BoxService",
  "impl spark_core::service::traits::object::BoxService",
  "pub fn spark_core::service::traits::object::BoxService::as_dyn(&self) -> &dyn spark_core::service::traits::object::DynService",
  "pub fn spark_core::service::traits::object::BoxService::into_arc(self) -> alloc::sync::Arc<dyn spark_core::service::traits::object::DynService>",
  "pub fn spark_core::service::traits::object::BoxService::new(inner: alloc::sync::Arc<dyn spark_core::service::traits::object::DynService>) -> Self",
  "impl core::clone::Clone for spark_core::service::traits::object::BoxService",
  "pub fn spark_core::service::traits::object::BoxService::clone(&self) -> spark_core::service::traits::object::BoxService",
  "impl core::fmt::Debug for spark_core::service::traits::object::BoxService",
  "pub fn spark_core::service::traits::object::BoxService::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl spark_core::service::auto_dyn::AutoDynBridge for spark_core::service::traits::object::BoxService",
  "pub type spark_core::service::traits::object::BoxService::DynOut = spark_core::service::traits::object::BoxService",
  "pub fn spark_core::service::traits::object::BoxService::into_dyn<Request>(self) -> Self::DynOut where Self: spark_core::service::traits::generic::Service<Request, Error = spark_core::error::SparkError>, Request: spark_core::service::auto_dyn::Decode + core::marker::Send + core::marker::Sync + 'static, <Self as spark_core::service::traits::generic::Service<Request>>::Response: spark_core::service::auto_dyn::Encode + core::marker::Send + core::marker::Sync + 'static",
  "impl core::marker::Freeze for spark_core::service::traits::object::BoxService",
  "impl core::marker::Send for spark_core::service::traits::object::BoxService",
  "impl core::marker::Sync for spark_core::service::traits::object::BoxService",
  "impl core::marker::Unpin for spark_core::service::traits::object::BoxService",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::service::traits::object::BoxService",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::service::traits::object::BoxService",
  "pub struct spark_core::service::traits::ServiceObject<S, Request, Response, Decode, Encode> where S: spark_core::service::traits::generic::Service<Request, Response = Response, Error = spark_core::error::SparkError>, Decode: core::ops::function::Fn(spark_core::buffer::message::PipelineMessage) -> core::result::Result<Request, spark_core::error::SparkError> + core::marker::Send + core::marker::Sync + 'static, Encode: core::ops::function::Fn(Response) -> spark_core::buffer::message::PipelineMessage + core::marker::Send + core::marker::Sync + 'static",
  "impl<S, Request, Response, Decode, Encode> spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode> where S: spark_core::service::traits::generic::Service<Request, Response = Response, Error = spark_core::error::SparkError>, Decode: core::ops::function::Fn(spark_core::buffer::message::PipelineMessage) -> core::result::Result<Request, spark_core::error::SparkError> + core::marker::Send + core::marker::Sync + 'static, Encode: core::ops::function::Fn(Response) -> spark_core::buffer::message::PipelineMessage + core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::into_inner(self) -> S",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::new(inner: S, decode: Decode, encode: Encode) -> Self",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::with_close_hook(self, hook: impl core::ops::function::Fn(&mut S, spark_core::contract::CloseReason) + core::marker::Send + core::marker::Sync + 'static) -> Self",
  "impl<S, Request, Response, Decode, Encode> spark_core::service::traits::object::DynService for spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode> where S: spark_core::service::traits::generic::Service<Request, Response = Response, Error = spark_core::error::SparkError>, Decode: core::ops::function::Fn(spark_core::buffer::message::PipelineMessage) -> core::result::Result<Request, spark_core::error::SparkError> + core::marker::Send + core::marker::Sync + 'static, Encode: core::ops::function::Fn(Response) -> spark_core::buffer::message::PipelineMessage + core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::call_dyn<'life0, 'async_trait>(&'life0 mut self, ctx: spark_core::contract::CallContext, req: spark_core::buffer::message::PipelineMessage) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<spark_core::buffer::message::PipelineMessage, spark_core::error::SparkError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::closed<'life0, 'async_trait>(&'life0 mut self) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<(), spark_core::error::SparkError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::graceful_close(&mut self, reason: spark_core::contract::CloseReason)",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::poll_ready_dyn(&mut self, ctx: &spark_core::context::ExecutionContext<'_>, cx: &mut core::task::wake::Context<'_>) -> spark_core::status::ready::PollReady<spark_core::error::SparkError>",
  "impl<S, Request, Response, Decode, Encode> core::marker::Freeze for spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode> where S: core::marker::Freeze",
  "impl<S, Request, Response, Decode, Encode> core::marker::Send for spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>",
  "impl<S, Request, Response, Decode, Encode> core::marker::Sync for spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>",
  "impl<S, Request, Response, Decode, Encode> core::marker::Unpin for spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode> where S: core::marker::Unpin",
  "impl<S, Request, Response, Decode, Encode> !core::panic::unwind_safe::RefUnwindSafe for spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>",
  "impl<S, Request, Response, Decode, Encode> !core::panic::unwind_safe::UnwindSafe for spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>",
  "pub trait spark_core::service::traits::DynService: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::service::traits::DynService::call_dyn<'life0, 'async_trait>(&'life0 mut self, ctx: spark_core::contract::CallContext, req: spark_core::buffer::message::PipelineMessage) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<spark_core::buffer::message::PipelineMessage, spark_core::error::SparkError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait",
  "pub fn spark_core::service::traits::DynService::closed<'life0, 'async_trait>(&'life0 mut self) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<(), spark_core::error::SparkError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait",
  "pub fn spark_core::service::traits::DynService::graceful_close(&mut self, reason: spark_core::contract::CloseReason)",
  "pub fn spark_core::service::traits::DynService::poll_ready_dyn(&mut self, ctx: &spark_core::context::ExecutionContext<'_>, cx: &mut core::task::wake::Context<'_>) -> spark_core::status::ready::PollReady<spark_core::error::SparkError>",
  "impl<S, Request, Response, Decode, Encode> spark_core::service::traits::object::DynService for spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode> where S: spark_core::service::traits::generic::Service<Request, Response = Response, Error = spark_core::error::SparkError>, Decode: core::ops::function::Fn(spark_core::buffer::message::PipelineMessage) -> core::result::Result<Request, spark_core::error::SparkError> + core::marker::Send + core::marker::Sync + 'static, Encode: core::ops::function::Fn(Response) -> spark_core::buffer::message::PipelineMessage + core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::call_dyn<'life0, 'async_trait>(&'life0 mut self, ctx: spark_core::contract::CallContext, req: spark_core::buffer::message::PipelineMessage) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<spark_core::buffer::message::PipelineMessage, spark_core::error::SparkError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::closed<'life0, 'async_trait>(&'life0 mut self) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<(), spark_core::error::SparkError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::graceful_close(&mut self, reason: spark_core::contract::CloseReason)",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::poll_ready_dyn(&mut self, ctx: &spark_core::context::ExecutionContext<'_>, cx: &mut core::task::wake::Context<'_>) -> spark_core::status::ready::PollReady<spark_core::error::SparkError>",
  "pub trait spark_core::service::traits::Layer<S, Request> where S: spark_core::service::traits::generic::Service<Request>: Sealed",
  "pub type spark_core::service::traits::Layer::Service: spark_core::service::traits::generic::Service<Request, Response = <S as spark_core::service::traits::generic::Service>::Response, Error = <S as spark_core::service::traits::generic::Service>::Error>",
  "pub fn spark_core::service::traits::Layer::layer(&self, inner: S) -> Self::Service",
  "pub trait spark_core::service::traits::Service<Request>: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub type spark_core::service::traits::Service::Error: spark_core::Error",
  "pub type spark_core::service::traits::Service::Future: core::future::future::Future<Output = core::result::Result<Self::Response, Self::Error>> + core::marker::Send + 'static",
  "pub type spark_core::service::traits::Service::Response",
  "pub fn spark_core::service::traits::Service::call(&mut self, ctx: spark_core::contract::CallContext, req: Request) -> Self::Future",
  "pub fn spark_core::service::traits::Service::poll_ready(&mut self, ctx: &spark_core::context::ExecutionContext<'_>, cx: &mut core::task::wake::Context<'_>) -> spark_core::status::ready::PollReady<Self::Error>",
  "impl<F, Request, Fut, Response, E> spark_core::service::traits::generic::Service<Request> for spark_core::service::simple::SimpleServiceFn<F> where F: core::ops::function::FnMut(spark_core::contract::CallContext, Request) -> Fut + core::marker::Send + core::marker::Sync + 'static, Fut: core::future::future::Future<Output = core::result::Result<Response, E>> + core::marker::Send + 'static, Response: core::marker::Send + 'static, E: spark_core::Error + core::marker::Send + 'static",
  "pub type spark_core::service::simple::SimpleServiceFn<F>::Error = E",
  "pub type spark_core::service::simple::SimpleServiceFn<F>::Future = GuardedFuture<Fut, Response, E>",
  "pub type spark_core::service::simple::SimpleServiceFn<F>::Response = Response",
  "pub fn spark_core::service::simple::SimpleServiceFn<F>::call(&mut self, ctx: spark_core::contract::CallContext, req: Request) -> Self::Future",
  "pub fn spark_core::service::simple::SimpleServiceFn<F>::poll_ready(&mut self, _ctx: &spark_core::context::ExecutionContext<'_>, cx: &mut core::task::wake::Context<'_>) -> spark_core::status::ready::PollReady<Self::Error>",
  "impl<L, Request> spark_core::service::traits::generic::Service<Request> for spark_core::service::simple::SequentialService<L> where L: spark_core::service::simple::ServiceLogic<Request>",
  "pub type spark_core::service::simple::SequentialService<L>::Error = <L as spark_core::service::simple::ServiceLogic<Request>>::Error",
  "pub type spark_core::service::simple::SequentialService<L>::Future = GuardedFuture<<L as spark_core::service::simple::ServiceLogic<Request>>::Future, <L as spark_core::service::simple::ServiceLogic<Request>>::Response, <L as spark_core::service::simple::ServiceLogic<Request>>::Error>",
  "pub type spark_core::service::simple::SequentialService<L>::Response = <L as spark_core::service::simple::ServiceLogic<Request>>::Response",
  "pub fn spark_core::service::simple::SequentialService<L>::call(&mut self, ctx: spark_core::contract::CallContext, req: Request) -> Self::Future",
  "pub fn spark_core::service::simple::SequentialService<L>::poll_ready(&mut self, _ctx: &spark_core::context::ExecutionContext<'_>, cx: &mut core::task::wake::Context<'_>) -> spark_core::status::ready::PollReady<Self::Error>",
  "impl<S, Request> spark_core::service::traits::generic::Service<Request> for spark_core::service::auto_dyn::DynBridge<S, Request> where S: spark_core::service::traits::generic::Service<Request>, Request: core::marker::Send + core::marker::Sync + 'static",
  "pub type spark_core::service::auto_dyn::DynBridge<S, Request>::Error = <S as spark_core::service::traits::generic::Service<Request>>::Error",
  "pub type spark_core::service::auto_dyn::DynBridge<S, Request>::Future = <S as spark_core::service::traits::generic::Service<Request>>::Future",
  "pub type spark_core::service::auto_dyn::DynBridge<S, Request>::Response = <S as spark_core::service::traits::generic::Service<Request>>::Response",
  "pub fn spark_core::service::auto_dyn::DynBridge<S, Request>::call(&mut self, ctx: spark_core::contract::CallContext, req: Request) -> Self::Future",
  "pub fn spark_core::service::auto_dyn::DynBridge<S, Request>::poll_ready(&mut self, ctx: &spark_core::context::ExecutionContext<'_>, cx: &mut core::task::wake::Context<'_>) -> spark_core::status::ready::PollReady<Self::Error>",
  "pub enum spark_core::service::PayloadDirection",
  "pub spark_core::service::PayloadDirection::Inbound",
  "pub spark_core::service::PayloadDirection::Outbound",
  "impl core::clone::Clone for spark_core::service::metrics::PayloadDirection",
  "pub fn spark_core::service::metrics::PayloadDirection::clone(&self) -> spark_core::service::metrics::PayloadDirection",
  "impl core::cmp::Eq for spark_core::service::metrics::PayloadDirection",
  "impl core::cmp::PartialEq for spark_core::service::metrics::PayloadDirection",
  "pub fn spark_core::service::metrics::PayloadDirection::eq(&self, other: &spark_core::service::metrics::PayloadDirection) -> bool",
  "impl core::fmt::Debug for spark_core::service::metrics::PayloadDirection",
  "pub fn spark_core::service::metrics::PayloadDirection::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::service::metrics::PayloadDirection",
  "impl core::marker::StructuralPartialEq for spark_core::service::metrics::PayloadDirection",
  "impl core::marker::Freeze for spark_core::service::metrics::PayloadDirection",
  "impl core::marker::Send for spark_core::service::metrics::PayloadDirection",
  "impl core::marker::Sync for spark_core::service::metrics::PayloadDirection",
  "impl core::marker::Unpin for spark_core::service::metrics::PayloadDirection",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::service::metrics::PayloadDirection",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::service::metrics::PayloadDirection",
  "pub enum spark_core::service::ServiceOutcome",
  "pub spark_core::service::ServiceOutcome::Error",
  "pub spark_core::service::ServiceOutcome::Success",
  "impl spark_core::service::metrics::ServiceOutcome",
  "pub const spark_core::service::metrics::ServiceOutcome::ERROR_LABEL: &'static str",
  "pub const spark_core::service::metrics::ServiceOutcome::SUCCESS_LABEL: &'static str",
  "pub fn spark_core::service::metrics::ServiceOutcome::as_label(self) -> &'static str",
  "impl core::clone::Clone for spark_core::service::metrics::ServiceOutcome",
  "pub fn spark_core::service::metrics::ServiceOutcome::clone(&self) -> spark_core::service::metrics::ServiceOutcome",
  "impl core::cmp::Eq for spark_core::service::metrics::ServiceOutcome",
  "impl core::cmp::PartialEq for spark_core::service::metrics::ServiceOutcome",
  "pub fn spark_core::service::metrics::ServiceOutcome::eq(&self, other: &spark_core::service::metrics::ServiceOutcome) -> bool",
  "impl core::fmt::Debug for spark_core::service::metrics::ServiceOutcome",
  "pub fn spark_core::service::metrics::ServiceOutcome::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::service::metrics::ServiceOutcome",
  "impl core::marker::StructuralPartialEq for spark_core::service::metrics::ServiceOutcome",
  "impl core::marker::Freeze for spark_core::service::metrics::ServiceOutcome",
  "impl core::marker::Send for spark_core::service::metrics::ServiceOutcome",
  "impl core::marker::Sync for spark_core::service::metrics::ServiceOutcome",
  "impl core::marker::Unpin for spark_core::service::metrics::ServiceOutcome",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::service::metrics::ServiceOutcome",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::service::metrics::ServiceOutcome",
  "pub struct spark_core::service::BoxService",
  "impl spark_core::service::traits::object::BoxService",
  "pub fn spark_core::service::traits::object::BoxService::as_dyn(&self) -> &dyn spark_core::service::traits::object::DynService",
  "pub fn spark_core::service::traits::object::BoxService::into_arc(self) -> alloc::sync::Arc<dyn spark_core::service::traits::object::DynService>",
  "pub fn spark_core::service::traits::object::BoxService::new(inner: alloc::sync::Arc<dyn spark_core::service::traits::object::DynService>) -> Self",
  "impl core::clone::Clone for spark_core::service::traits::object::BoxService",
  "pub fn spark_core::service::traits::object::BoxService::clone(&self) -> spark_core::service::traits::object::BoxService",
  "impl core::fmt::Debug for spark_core::service::traits::object::BoxService",
  "pub fn spark_core::service::traits::object::BoxService::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl spark_core::service::auto_dyn::AutoDynBridge for spark_core::service::traits::object::BoxService",
  "pub type spark_core::service::traits::object::BoxService::DynOut = spark_core::service::traits::object::BoxService",
  "pub fn spark_core::service::traits::object::BoxService::into_dyn<Request>(self) -> Self::DynOut where Self: spark_core::service::traits::generic::Service<Request, Error = spark_core::error::SparkError>, Request: spark_core::service::auto_dyn::Decode + core::marker::Send + core::marker::Sync + 'static, <Self as spark_core::service::traits::generic::Service<Request>>::Response: spark_core::service::auto_dyn::Encode + core::marker::Send + core::marker::Sync + 'static",
  "impl core::marker::Freeze for spark_core::service::traits::object::BoxService",
  "impl core::marker::Send for spark_core::service::traits::object::BoxService",
  "impl core::marker::Sync for spark_core::service::traits::object::BoxService",
  "impl core::marker::Unpin for spark_core::service::traits::object::BoxService",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::service::traits::object::BoxService",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::service::traits::object::BoxService",
  "pub struct spark_core::service::DynBridge<S, Request>",
  "impl<S, Request> spark_core::service::auto_dyn::DynBridge<S, Request> where S: spark_core::service::traits::generic::Service<Request>, Request: core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::service::auto_dyn::DynBridge<S, Request>::into_inner(self) -> S",
  "pub fn spark_core::service::auto_dyn::DynBridge<S, Request>::new(inner: S) -> Self",
  "impl<S, Request> spark_core::service::auto_dyn::AutoDynBridge for spark_core::service::auto_dyn::DynBridge<S, Request> where S: spark_core::service::traits::generic::Service<Request> + core::marker::Send + core::marker::Sync + 'static, Request: core::marker::Send + core::marker::Sync + 'static, <S as spark_core::service::traits::generic::Service<Request>>::Response: core::marker::Send + core::marker::Sync + 'static",
  "pub type spark_core::service::auto_dyn::DynBridge<S, Request>::DynOut = spark_core::service::traits::object::BoxService",
  "pub fn spark_core::service::auto_dyn::DynBridge<S, Request>::into_dyn<R>(self) -> Self::DynOut where Self: spark_core::service::traits::generic::Service<R, Error = spark_core::error::SparkError>, R: spark_core::service::auto_dyn::Decode + core::marker::Send + core::marker::Sync + 'static, <Self as spark_core::service::traits::generic::Service<R>>::Response: spark_core::service::auto_dyn::Encode + core::marker::Send + core::marker::Sync + 'static",
  "impl<S, Request> spark_core::service::traits::generic::Service<Request> for spark_core::service::auto_dyn::DynBridge<S, Request> where S: spark_core::service::traits::generic::Service<Request>, Request: core::marker::Send + core::marker::Sync + 'static",
  "pub type spark_core::service::auto_dyn::DynBridge<S, Request>::Error = <S as spark_core::service::traits::generic::Service<Request>>::Error",
  "pub type spark_core::service::auto_dyn::DynBridge<S, Request>::Future = <S as spark_core::service::traits::generic::Service<Request>>::Future",
  "pub type spark_core::service::auto_dyn::DynBridge<S, Request>::Response = <S as spark_core::service::traits::generic::Service<Request>>::Response",
  "pub fn spark_core::service::auto_dyn::DynBridge<S, Request>::call(&mut self, ctx: spark_core::contract::CallContext, req: Request) -> Self::Future",
  "pub fn spark_core::service::auto_dyn::DynBridge<S, Request>::poll_ready(&mut self, ctx: &spark_core::context::ExecutionContext<'_>, cx: &mut core::task::wake::Context<'_>) -> spark_core::status::ready::PollReady<Self::Error>",
  "impl<S, Request> core::marker::Freeze for spark_core::service::auto_dyn::DynBridge<S, Request> where S: core::marker::Freeze",
  "impl<S, Request> core::marker::Send for spark_core::service::auto_dyn::DynBridge<S, Request> where S: core::marker::Send",
  "impl<S, Request> core::marker::Sync for spark_core::service::auto_dyn::DynBridge<S, Request> where S: core::marker::Sync",
  "impl<S, Request> core::marker::Unpin for spark_core::service::auto_dyn::DynBridge<S, Request> where S: core::marker::Unpin",
  "impl<S, Request> core::panic::unwind_safe::RefUnwindSafe for spark_core::service::auto_dyn::DynBridge<S, Request> where S: core::panic::unwind_safe::RefUnwindSafe",
  "impl<S, Request> core::panic::unwind_safe::UnwindSafe for spark_core::service::auto_dyn::DynBridge<S, Request> where S: core::panic::unwind_safe::UnwindSafe",
  "pub struct spark_core::service::ServiceMetricsHook<'a>",
  "impl<'a> spark_core::service::metrics::ServiceMetricsHook<'a>",
  "pub fn spark_core::service::metrics::ServiceMetricsHook<'a>::new(provider: &'a dyn spark_core::observability::metrics::MetricsProvider) -> Self",
  "pub fn spark_core::service::metrics::ServiceMetricsHook<'a>::on_call_finish(&self, base_attributes: spark_core::observability::attributes::AttributeSet<'_>, outcome: spark_core::service::metrics::ServiceOutcome, duration: core::time::Duration, completion_attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub fn spark_core::service::metrics::ServiceMetricsHook<'a>::on_call_start(&self, base_attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub fn spark_core::service::metrics::ServiceMetricsHook<'a>::record_payload_bytes(&self, direction: spark_core::service::metrics::PayloadDirection, bytes: u64, attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub fn spark_core::service::metrics::ServiceMetricsHook<'a>::record_ready_state(&self, base_attributes: spark_core::observability::attributes::AttributeSet<'_>, state: &spark_core::status::ready::ReadyState)",
  "impl<'a> core::marker::Freeze for spark_core::service::metrics::ServiceMetricsHook<'a>",
  "impl<'a> core::marker::Send for spark_core::service::metrics::ServiceMetricsHook<'a>",
  "impl<'a> core::marker::Sync for spark_core::service::metrics::ServiceMetricsHook<'a>",
  "impl<'a> core::marker::Unpin for spark_core::service::metrics::ServiceMetricsHook<'a>",
  "impl<'a> !core::panic::unwind_safe::RefUnwindSafe for spark_core::service::metrics::ServiceMetricsHook<'a>",
  "impl<'a> !core::panic::unwind_safe::UnwindSafe for spark_core::service::metrics::ServiceMetricsHook<'a>",
  "pub struct spark_core::service::ServiceObject<S, Request, Response, Decode, Encode> where S: spark_core::service::traits::generic::Service<Request, Response = Response, Error = spark_core::error::SparkError>, Decode: core::ops::function::Fn(spark_core::buffer::message::PipelineMessage) -> core::result::Result<Request, spark_core::error::SparkError> + core::marker::Send + core::marker::Sync + 'static, Encode: core::ops::function::Fn(Response) -> spark_core::buffer::message::PipelineMessage + core::marker::Send + core::marker::Sync + 'static",
  "impl<S, Request, Response, Decode, Encode> spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode> where S: spark_core::service::traits::generic::Service<Request, Response = Response, Error = spark_core::error::SparkError>, Decode: core::ops::function::Fn(spark_core::buffer::message::PipelineMessage) -> core::result::Result<Request, spark_core::error::SparkError> + core::marker::Send + core::marker::Sync + 'static, Encode: core::ops::function::Fn(Response) -> spark_core::buffer::message::PipelineMessage + core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::into_inner(self) -> S",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::new(inner: S, decode: Decode, encode: Encode) -> Self",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::with_close_hook(self, hook: impl core::ops::function::Fn(&mut S, spark_core::contract::CloseReason) + core::marker::Send + core::marker::Sync + 'static) -> Self",
  "impl<S, Request, Response, Decode, Encode> spark_core::service::traits::object::DynService for spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode> where S: spark_core::service::traits::generic::Service<Request, Response = Response, Error = spark_core::error::SparkError>, Decode: core::ops::function::Fn(spark_core::buffer::message::PipelineMessage) -> core::result::Result<Request, spark_core::error::SparkError> + core::marker::Send + core::marker::Sync + 'static, Encode: core::ops::function::Fn(Response) -> spark_core::buffer::message::PipelineMessage + core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::call_dyn<'life0, 'async_trait>(&'life0 mut self, ctx: spark_core::contract::CallContext, req: spark_core::buffer::message::PipelineMessage) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<spark_core::buffer::message::PipelineMessage, spark_core::error::SparkError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::closed<'life0, 'async_trait>(&'life0 mut self) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<(), spark_core::error::SparkError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::graceful_close(&mut self, reason: spark_core::contract::CloseReason)",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::poll_ready_dyn(&mut self, ctx: &spark_core::context::ExecutionContext<'_>, cx: &mut core::task::wake::Context<'_>) -> spark_core::status::ready::PollReady<spark_core::error::SparkError>",
  "impl<S, Request, Response, Decode, Encode> core::marker::Freeze for spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode> where S: core::marker::Freeze",
  "impl<S, Request, Response, Decode, Encode> core::marker::Send for spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>",
  "impl<S, Request, Response, Decode, Encode> core::marker::Sync for spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>",
  "impl<S, Request, Response, Decode, Encode> core::marker::Unpin for spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode> where S: core::marker::Unpin",
  "impl<S, Request, Response, Decode, Encode> !core::panic::unwind_safe::RefUnwindSafe for spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>",
  "impl<S, Request, Response, Decode, Encode> !core::panic::unwind_safe::UnwindSafe for spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>",
  "pub struct spark_core::service::SimpleServiceFn<F>",
  "impl<F> spark_core::service::simple::SimpleServiceFn<F> where F: core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::service::simple::SimpleServiceFn<F>::new(logic: F) -> Self",
  "impl<F, Request, Fut, Response, E> spark_core::service::traits::generic::Service<Request> for spark_core::service::simple::SimpleServiceFn<F> where F: core::ops::function::FnMut(spark_core::contract::CallContext, Request) -> Fut + core::marker::Send + core::marker::Sync + 'static, Fut: core::future::future::Future<Output = core::result::Result<Response, E>> + core::marker::Send + 'static, Response: core::marker::Send + 'static, E: spark_core::Error + core::marker::Send + 'static",
  "pub type spark_core::service::simple::SimpleServiceFn<F>::Error = E",
  "pub type spark_core::service::simple::SimpleServiceFn<F>::Future = GuardedFuture<Fut, Response, E>",
  "pub type spark_core::service::simple::SimpleServiceFn<F>::Response = Response",
  "pub fn spark_core::service::simple::SimpleServiceFn<F>::call(&mut self, ctx: spark_core::contract::CallContext, req: Request) -> Self::Future",
  "pub fn spark_core::service::simple::SimpleServiceFn<F>::poll_ready(&mut self, _ctx: &spark_core::context::ExecutionContext<'_>, cx: &mut core::task::wake::Context<'_>) -> spark_core::status::ready::PollReady<Self::Error>",
  "impl<F> core::marker::Freeze for spark_core::service::simple::SimpleServiceFn<F> where F: core::marker::Freeze",
  "impl<F> core::marker::Send for spark_core::service::simple::SimpleServiceFn<F> where F: core::marker::Send",
  "impl<F> core::marker::Sync for spark_core::service::simple::SimpleServiceFn<F> where F: core::marker::Sync",
  "impl<F> core::marker::Unpin for spark_core::service::simple::SimpleServiceFn<F> where F: core::marker::Unpin",
  "impl<F> !core::panic::unwind_safe::RefUnwindSafe for spark_core::service::simple::SimpleServiceFn<F>",
  "impl<F> !core::panic::unwind_safe::UnwindSafe for spark_core::service::simple::SimpleServiceFn<F>",
  "pub trait spark_core::service::AutoDynBridge: core::marker::Sized + core::marker::Send + core::marker::Sync + 'static",
  "pub type spark_core::service::AutoDynBridge::DynOut",
  "pub fn spark_core::service::AutoDynBridge::into_dyn<Request>(self) -> Self::DynOut where Self: spark_core::service::traits::generic::Service<Request, Error = spark_core::error::SparkError>, Request: spark_core::service::auto_dyn::Decode + core::marker::Send + core::marker::Sync + 'static, <Self as spark_core::service::traits::generic::Service<Request>>::Response: spark_core::service::auto_dyn::Encode + core::marker::Send + core::marker::Sync + 'static",
  "impl spark_core::service::auto_dyn::AutoDynBridge for spark_core::service::traits::object::BoxService",
  "pub type spark_core::service::traits::object::BoxService::DynOut = spark_core::service::traits::object::BoxService",
  "pub fn spark_core::service::traits::object::BoxService::into_dyn<Request>(self) -> Self::DynOut where Self: spark_core::service::traits::generic::Service<Request, Error = spark_core::error::SparkError>, Request: spark_core::service::auto_dyn::Decode + core::marker::Send + core::marker::Sync + 'static, <Self as spark_core::service::traits::generic::Service<Request>>::Response: spark_core::service::auto_dyn::Encode + core::marker::Send + core::marker::Sync + 'static",
  "impl<S, Request> spark_core::service::auto_dyn::AutoDynBridge for spark_core::service::auto_dyn::DynBridge<S, Request> where S: spark_core::service::traits::generic::Service<Request> + core::marker::Send + core::marker::Sync + 'static, Request: core::marker::Send + core::marker::Sync + 'static, <S as spark_core::service::traits::generic::Service<Request>>::Response: core::marker::Send + core::marker::Sync + 'static",
  "pub type spark_core::service::auto_dyn::DynBridge<S, Request>::DynOut = spark_core::service::traits::object::BoxService",
  "pub fn spark_core::service::auto_dyn::DynBridge<S, Request>::into_dyn<R>(self) -> Self::DynOut where Self: spark_core::service::traits::generic::Service<R, Error = spark_core::error::SparkError>, R: spark_core::service::auto_dyn::Decode + core::marker::Send + core::marker::Sync + 'static, <Self as spark_core::service::traits::generic::Service<R>>::Response: spark_core::service::auto_dyn::Encode + core::marker::Send + core::marker::Sync + 'static",
  "pub trait spark_core::service::Decode: core::marker::Sized",
  "pub fn spark_core::service::Decode::decode(message: spark_core::buffer::message::PipelineMessage) -> core::result::Result<Self, spark_core::error::SparkError>",
  "impl spark_core::service::auto_dyn::Decode for spark_core::buffer::message::PipelineMessage",
  "pub fn spark_core::buffer::message::PipelineMessage::decode(message: spark_core::buffer::message::PipelineMessage) -> core::result::Result<Self, spark_core::error::SparkError>",
  "impl<T> spark_core::service::auto_dyn::Decode for T where T: core::convert::TryFrom<spark_core::buffer::message::PipelineMessage, Error = spark_core::error::SparkError>",
  "pub fn T::decode(message: spark_core::buffer::message::PipelineMessage) -> core::result::Result<Self, spark_core::error::SparkError>",
  "pub trait spark_core::service::DynService: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::service::DynService::call_dyn<'life0, 'async_trait>(&'life0 mut self, ctx: spark_core::contract::CallContext, req: spark_core::buffer::message::PipelineMessage) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<spark_core::buffer::message::PipelineMessage, spark_core::error::SparkError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait",
  "pub fn spark_core::service::DynService::closed<'life0, 'async_trait>(&'life0 mut self) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<(), spark_core::error::SparkError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait",
  "pub fn spark_core::service::DynService::graceful_close(&mut self, reason: spark_core::contract::CloseReason)",
  "pub fn spark_core::service::DynService::poll_ready_dyn(&mut self, ctx: &spark_core::context::ExecutionContext<'_>, cx: &mut core::task::wake::Context<'_>) -> spark_core::status::ready::PollReady<spark_core::error::SparkError>",
  "impl<S, Request, Response, Decode, Encode> spark_core::service::traits::object::DynService for spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode> where S: spark_core::service::traits::generic::Service<Request, Response = Response, Error = spark_core::error::SparkError>, Decode: core::ops::function::Fn(spark_core::buffer::message::PipelineMessage) -> core::result::Result<Request, spark_core::error::SparkError> + core::marker::Send + core::marker::Sync + 'static, Encode: core::ops::function::Fn(Response) -> spark_core::buffer::message::PipelineMessage + core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::call_dyn<'life0, 'async_trait>(&'life0 mut self, ctx: spark_core::contract::CallContext, req: spark_core::buffer::message::PipelineMessage) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<spark_core::buffer::message::PipelineMessage, spark_core::error::SparkError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::closed<'life0, 'async_trait>(&'life0 mut self) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<(), spark_core::error::SparkError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::graceful_close(&mut self, reason: spark_core::contract::CloseReason)",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::poll_ready_dyn(&mut self, ctx: &spark_core::context::ExecutionContext<'_>, cx: &mut core::task::wake::Context<'_>) -> spark_core::status::ready::PollReady<spark_core::error::SparkError>",
  "pub trait spark_core::service::Encode",
  "pub fn spark_core::service::Encode::encode(self) -> spark_core::buffer::message::PipelineMessage",
  "impl<T> spark_core::service::auto_dyn::Encode for T where T: core::convert::Into<spark_core::buffer::message::PipelineMessage>",
  "pub fn T::encode(self) -> spark_core::buffer::message::PipelineMessage",
  "pub trait spark_core::service::Layer<S, Request> where S: spark_core::service::traits::generic::Service<Request>: Sealed",
  "pub type spark_core::service::Layer::Service: spark_core::service::traits::generic::Service<Request, Response = <S as spark_core::service::traits::generic::Service>::Response, Error = <S as spark_core::service::traits::generic::Service>::Error>",
  "pub fn spark_core::service::Layer::layer(&self, inner: S) -> Self::Service",
  "pub trait spark_core::service::Service<Request>: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub type spark_core::service::Service::Error: spark_core::Error",
  "pub type spark_core::service::Service::Future: core::future::future::Future<Output = core::result::Result<Self::Response, Self::Error>> + core::marker::Send + 'static",
  "pub type spark_core::service::Service::Response",
  "pub fn spark_core::service::Service::call(&mut self, ctx: spark_core::contract::CallContext, req: Request) -> Self::Future",
  "pub fn spark_core::service::Service::poll_ready(&mut self, ctx: &spark_core::context::ExecutionContext<'_>, cx: &mut core::task::wake::Context<'_>) -> spark_core::status::ready::PollReady<Self::Error>",
  "impl<F, Request, Fut, Response, E> spark_core::service::traits::generic::Service<Request> for spark_core::service::simple::SimpleServiceFn<F> where F: core::ops::function::FnMut(spark_core::contract::CallContext, Request) -> Fut + core::marker::Send + core::marker::Sync + 'static, Fut: core::future::future::Future<Output = core::result::Result<Response, E>> + core::marker::Send + 'static, Response: core::marker::Send + 'static, E: spark_core::Error + core::marker::Send + 'static",
  "pub type spark_core::service::simple::SimpleServiceFn<F>::Error = E",
  "pub type spark_core::service::simple::SimpleServiceFn<F>::Future = GuardedFuture<Fut, Response, E>",
  "pub type spark_core::service::simple::SimpleServiceFn<F>::Response = Response",
  "pub fn spark_core::service::simple::SimpleServiceFn<F>::call(&mut self, ctx: spark_core::contract::CallContext, req: Request) -> Self::Future",
  "pub fn spark_core::service::simple::SimpleServiceFn<F>::poll_ready(&mut self, _ctx: &spark_core::context::ExecutionContext<'_>, cx: &mut core::task::wake::Context<'_>) -> spark_core::status::ready::PollReady<Self::Error>",
  "impl<L, Request> spark_core::service::traits::generic::Service<Request> for spark_core::service::simple::SequentialService<L> where L: spark_core::service::simple::ServiceLogic<Request>",
  "pub type spark_core::service::simple::SequentialService<L>::Error = <L as spark_core::service::simple::ServiceLogic<Request>>::Error",
  "pub type spark_core::service::simple::SequentialService<L>::Future = GuardedFuture<<L as spark_core::service::simple::ServiceLogic<Request>>::Future, <L as spark_core::service::simple::ServiceLogic<Request>>::Response, <L as spark_core::service::simple::ServiceLogic<Request>>::Error>",
  "pub type spark_core::service::simple::SequentialService<L>::Response = <L as spark_core::service::simple::ServiceLogic<Request>>::Response",
  "pub fn spark_core::service::simple::SequentialService<L>::call(&mut self, ctx: spark_core::contract::CallContext, req: Request) -> Self::Future",
  "pub fn spark_core::service::simple::SequentialService<L>::poll_ready(&mut self, _ctx: &spark_core::context::ExecutionContext<'_>, cx: &mut core::task::wake::Context<'_>) -> spark_core::status::ready::PollReady<Self::Error>",
  "impl<S, Request> spark_core::service::traits::generic::Service<Request> for spark_core::service::auto_dyn::DynBridge<S, Request> where S: spark_core::service::traits::generic::Service<Request>, Request: core::marker::Send + core::marker::Sync + 'static",
  "pub type spark_core::service::auto_dyn::DynBridge<S, Request>::Error = <S as spark_core::service::traits::generic::Service<Request>>::Error",
  "pub type spark_core::service::auto_dyn::DynBridge<S, Request>::Future = <S as spark_core::service::traits::generic::Service<Request>>::Future",
  "pub type spark_core::service::auto_dyn::DynBridge<S, Request>::Response = <S as spark_core::service::traits::generic::Service<Request>>::Response",
  "pub fn spark_core::service::auto_dyn::DynBridge<S, Request>::call(&mut self, ctx: spark_core::contract::CallContext, req: Request) -> Self::Future",
  "pub fn spark_core::service::auto_dyn::DynBridge<S, Request>::poll_ready(&mut self, ctx: &spark_core::context::ExecutionContext<'_>, cx: &mut core::task::wake::Context<'_>) -> spark_core::status::ready::PollReady<Self::Error>",
  "pub fn spark_core::service::bridge_to_box_service<S, Request>(service: S) -> spark_core::service::traits::object::BoxService where S: spark_core::service::traits::generic::Service<Request, Error = spark_core::error::SparkError> + core::marker::Send + core::marker::Sync + 'static, Request: spark_core::service::auto_dyn::Decode + core::marker::Send + core::marker::Sync + 'static, <S as spark_core::service::traits::generic::Service<Request>>::Response: spark_core::service::auto_dyn::Encode + core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::service::type_mismatch_error(expected: &'static str, actual: &'static str) -> spark_core::error::SparkError",
  "pub mod spark_core::spark",
  "pub use spark_core::spark::service",
  "pub mod spark_core::status",
  "pub mod spark_core::status::ready",
  "#[non_exhaustive] pub enum spark_core::status::ready::BusyReason",
  "pub spark_core::status::ready::BusyReason::Custom(alloc::borrow::Cow<'static, str>)",
  "pub spark_core::status::ready::BusyReason::Downstream",
  "pub spark_core::status::ready::BusyReason::QueueFull(spark_core::status::ready::QueueDepth)",
  "pub spark_core::status::ready::BusyReason::Upstream",
  "impl spark_core::status::ready::BusyReason",
  "pub fn spark_core::status::ready::BusyReason::custom(reason: impl core::convert::Into<alloc::borrow::Cow<'static, str>>) -> Self",
  "pub const fn spark_core::status::ready::BusyReason::downstream() -> Self",
  "pub const fn spark_core::status::ready::BusyReason::queue_full(depth: usize, capacity: usize) -> Self",
  "pub const fn spark_core::status::ready::BusyReason::upstream() -> Self",
  "impl core::clone::Clone for spark_core::status::ready::BusyReason",
  "pub fn spark_core::status::ready::BusyReason::clone(&self) -> spark_core::status::ready::BusyReason",
  "impl core::cmp::Eq for spark_core::status::ready::BusyReason",
  "impl core::cmp::PartialEq for spark_core::status::ready::BusyReason",
  "pub fn spark_core::status::ready::BusyReason::eq(&self, other: &spark_core::status::ready::BusyReason) -> bool",
  "impl core::fmt::Debug for spark_core::status::ready::BusyReason",
  "pub fn spark_core::status::ready::BusyReason::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::status::ready::BusyReason",
  "impl core::marker::Freeze for spark_core::status::ready::BusyReason",
  "impl core::marker::Send for spark_core::status::ready::BusyReason",
  "impl core::marker::Sync for spark_core::status::ready::BusyReason",
  "impl core::marker::Unpin for spark_core::status::ready::BusyReason",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::status::ready::BusyReason",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::status::ready::BusyReason",
  "#[non_exhaustive] pub enum spark_core::status::ready::ReadyCheck<E>",
  "pub spark_core::status::ready::ReadyCheck::Err(E)",
  "pub spark_core::status::ready::ReadyCheck::Ready(spark_core::status::ready::ReadyState)",
  "impl<E: core::clone::Clone> core::clone::Clone for spark_core::status::ready::ReadyCheck<E>",
  "pub fn spark_core::status::ready::ReadyCheck<E>::clone(&self) -> spark_core::status::ready::ReadyCheck<E>",
  "impl<E: core::cmp::Eq> core::cmp::Eq for spark_core::status::ready::ReadyCheck<E>",
  "impl<E: core::cmp::PartialEq> core::cmp::PartialEq for spark_core::status::ready::ReadyCheck<E>",
  "pub fn spark_core::status::ready::ReadyCheck<E>::eq(&self, other: &spark_core::status::ready::ReadyCheck<E>) -> bool",
  "impl<E: core::fmt::Debug> core::fmt::Debug for spark_core::status::ready::ReadyCheck<E>",
  "pub fn spark_core::status::ready::ReadyCheck<E>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<E> core::fmt::Display for spark_core::status::ready::ReadyCheck<E> where E: core::fmt::Display",
  "pub fn spark_core::status::ready::ReadyCheck<E>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<E> core::marker::StructuralPartialEq for spark_core::status::ready::ReadyCheck<E>",
  "impl<E> core::marker::Freeze for spark_core::status::ready::ReadyCheck<E> where E: core::marker::Freeze",
  "impl<E> core::marker::Send for spark_core::status::ready::ReadyCheck<E> where E: core::marker::Send",
  "impl<E> core::marker::Sync for spark_core::status::ready::ReadyCheck<E> where E: core::marker::Sync",
  "impl<E> core::marker::Unpin for spark_core::status::ready::ReadyCheck<E> where E: core::marker::Unpin",
  "impl<E> core::panic::unwind_safe::RefUnwindSafe for spark_core::status::ready::ReadyCheck<E> where E: core::panic::unwind_safe::RefUnwindSafe",
  "impl<E> core::panic::unwind_safe::UnwindSafe for spark_core::status::ready::ReadyCheck<E> where E: core::panic::unwind_safe::UnwindSafe",
  "#[non_exhaustive] pub enum spark_core::status::ready::ReadyState",
  "pub spark_core::status::ready::ReadyState::BudgetExhausted(spark_core::status::ready::SubscriptionBudget)",
  "pub spark_core::status::ready::ReadyState::Busy(spark_core::status::ready::BusyReason)",
  "pub spark_core::status::ready::ReadyState::Ready",
  "pub spark_core::status::ready::ReadyState::RetryAfter(spark_core::status::ready::RetryAdvice)",
  "impl spark_core::status::ready::ReadyState",
  "pub fn spark_core::status::ready::ReadyState::from_budget(limit: u32, remaining: u32) -> Self",
  "pub fn spark_core::status::ready::ReadyState::from_budget_decision(decision: &spark_core::contract::BudgetDecision) -> Self",
  "pub fn spark_core::status::ready::ReadyState::from_queue_depth(depth: usize, capacity: usize) -> Self",
  "pub const fn spark_core::status::ready::ReadyState::recovered() -> Self",
  "impl core::clone::Clone for spark_core::status::ready::ReadyState",
  "pub fn spark_core::status::ready::ReadyState::clone(&self) -> spark_core::status::ready::ReadyState",
  "impl core::cmp::Eq for spark_core::status::ready::ReadyState",
  "impl core::cmp::PartialEq for spark_core::status::ready::ReadyState",
  "pub fn spark_core::status::ready::ReadyState::eq(&self, other: &spark_core::status::ready::ReadyState) -> bool",
  "impl core::fmt::Debug for spark_core::status::ready::ReadyState",
  "pub fn spark_core::status::ready::ReadyState::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::status::ready::ReadyState",
  "impl core::marker::Freeze for spark_core::status::ready::ReadyState",
  "impl core::marker::Send for spark_core::status::ready::ReadyState",
  "impl core::marker::Sync for spark_core::status::ready::ReadyState",
  "impl core::marker::Unpin for spark_core::status::ready::ReadyState",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::status::ready::ReadyState",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::status::ready::ReadyState",
  "pub struct spark_core::status::ready::QueueDepth",
  "pub spark_core::status::ready::QueueDepth::capacity: usize",
  "pub spark_core::status::ready::QueueDepth::depth: usize",
  "impl core::clone::Clone for spark_core::status::ready::QueueDepth",
  "pub fn spark_core::status::ready::QueueDepth::clone(&self) -> spark_core::status::ready::QueueDepth",
  "impl core::cmp::Eq for spark_core::status::ready::QueueDepth",
  "impl core::cmp::PartialEq for spark_core::status::ready::QueueDepth",
  "pub fn spark_core::status::ready::QueueDepth::eq(&self, other: &spark_core::status::ready::QueueDepth) -> bool",
  "impl core::fmt::Debug for spark_core::status::ready::QueueDepth",
  "pub fn spark_core::status::ready::QueueDepth::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::status::ready::QueueDepth",
  "impl core::marker::StructuralPartialEq for spark_core::status::ready::QueueDepth",
  "impl core::marker::Freeze for spark_core::status::ready::QueueDepth",
  "impl core::marker::Send for spark_core::status::ready::QueueDepth",
  "impl core::marker::Sync for spark_core::status::ready::QueueDepth",
  "impl core::marker::Unpin for spark_core::status::ready::QueueDepth",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::status::ready::QueueDepth",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::status::ready::QueueDepth",
  "pub struct spark_core::status::ready::RetryAdvice",
  "pub spark_core::status::ready::RetryAdvice::reason: core::option::Option<alloc::borrow::Cow<'static, str>>",
  "pub spark_core::status::ready::RetryAdvice::wait: core::time::Duration",
  "impl spark_core::status::ready::RetryAdvice",
  "pub const fn spark_core::status::ready::RetryAdvice::after(wait: core::time::Duration) -> Self",
  "pub fn spark_core::status::ready::RetryAdvice::with_reason(self, reason: impl core::convert::Into<alloc::borrow::Cow<'static, str>>) -> Self",
  "impl core::clone::Clone for spark_core::status::ready::RetryAdvice",
  "pub fn spark_core::status::ready::RetryAdvice::clone(&self) -> spark_core::status::ready::RetryAdvice",
  "impl core::cmp::Eq for spark_core::status::ready::RetryAdvice",
  "impl core::cmp::PartialEq for spark_core::status::ready::RetryAdvice",
  "pub fn spark_core::status::ready::RetryAdvice::eq(&self, other: &spark_core::status::ready::RetryAdvice) -> bool",
  "impl core::fmt::Debug for spark_core::status::ready::RetryAdvice",
  "pub fn spark_core::status::ready::RetryAdvice::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::status::ready::RetryAdvice",
  "impl core::marker::Freeze for spark_core::status::ready::RetryAdvice",
  "impl core::marker::Send for spark_core::status::ready::RetryAdvice",
  "impl core::marker::Sync for spark_core::status::ready::RetryAdvice",
  "impl core::marker::Unpin for spark_core::status::ready::RetryAdvice",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::status::ready::RetryAdvice",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::status::ready::RetryAdvice",
  "pub struct spark_core::status::ready::RetryAfterThrottle",
  "impl spark_core::status::ready::RetryAfterThrottle",
  "pub fn spark_core::status::ready::RetryAfterThrottle::is_waiting(&self) -> bool",
  "pub fn spark_core::status::ready::RetryAfterThrottle::new(clock: alloc::sync::Arc<dyn spark_core::time::clock::Clock>) -> Self",
  "pub fn spark_core::status::ready::RetryAfterThrottle::observe(&mut self, advice: &spark_core::status::ready::RetryAdvice) -> spark_core::MonotonicTimePoint",
  "pub fn spark_core::status::ready::RetryAfterThrottle::poll(&mut self, cx: &mut core::task::wake::Context<'_>) -> core::task::poll::Poll<()>",
  "pub fn spark_core::status::ready::RetryAfterThrottle::remaining_delay(&self) -> core::time::Duration",
  "impl core::marker::Freeze for spark_core::status::ready::RetryAfterThrottle",
  "impl core::marker::Send for spark_core::status::ready::RetryAfterThrottle",
  "impl !core::marker::Sync for spark_core::status::ready::RetryAfterThrottle",
  "impl core::marker::Unpin for spark_core::status::ready::RetryAfterThrottle",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::status::ready::RetryAfterThrottle",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::status::ready::RetryAfterThrottle",
  "pub struct spark_core::status::ready::RetryRhythm",
  "impl spark_core::status::ready::RetryRhythm",
  "pub fn spark_core::status::ready::RetryRhythm::accumulated_wait(&self) -> core::time::Duration",
  "pub fn spark_core::status::ready::RetryRhythm::is_ready(&self, now: spark_core::MonotonicTimePoint) -> bool",
  "pub const fn spark_core::status::ready::RetryRhythm::new() -> Self",
  "pub fn spark_core::status::ready::RetryRhythm::next_ready_at(&self) -> core::option::Option<spark_core::MonotonicTimePoint>",
  "pub fn spark_core::status::ready::RetryRhythm::observe(&mut self, now: spark_core::MonotonicTimePoint, advice: &spark_core::status::ready::RetryAdvice) -> spark_core::MonotonicTimePoint",
  "pub fn spark_core::status::ready::RetryRhythm::remaining_delay(&self, now: spark_core::MonotonicTimePoint) -> core::time::Duration",
  "impl core::clone::Clone for spark_core::status::ready::RetryRhythm",
  "pub fn spark_core::status::ready::RetryRhythm::clone(&self) -> spark_core::status::ready::RetryRhythm",
  "impl core::default::Default for spark_core::status::ready::RetryRhythm",
  "pub fn spark_core::status::ready::RetryRhythm::default() -> spark_core::status::ready::RetryRhythm",
  "impl core::fmt::Debug for spark_core::status::ready::RetryRhythm",
  "pub fn spark_core::status::ready::RetryRhythm::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::status::ready::RetryRhythm",
  "impl core::marker::Send for spark_core::status::ready::RetryRhythm",
  "impl core::marker::Sync for spark_core::status::ready::RetryRhythm",
  "impl core::marker::Unpin for spark_core::status::ready::RetryRhythm",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::status::ready::RetryRhythm",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::status::ready::RetryRhythm",
  "pub struct spark_core::status::ready::SubscriptionBudget",
  "pub spark_core::status::ready::SubscriptionBudget::limit: u32",
  "pub spark_core::status::ready::SubscriptionBudget::remaining: u32",
  "impl spark_core::status::ready::SubscriptionBudget",
  "pub fn spark_core::status::ready::SubscriptionBudget::evaluate(limit: u32, remaining: u32) -> spark_core::status::ready::ReadyState",
  "impl core::clone::Clone for spark_core::status::ready::SubscriptionBudget",
  "pub fn spark_core::status::ready::SubscriptionBudget::clone(&self) -> spark_core::status::ready::SubscriptionBudget",
  "impl core::cmp::Eq for spark_core::status::ready::SubscriptionBudget",
  "impl core::cmp::PartialEq for spark_core::status::ready::SubscriptionBudget",
  "pub fn spark_core::status::ready::SubscriptionBudget::eq(&self, other: &spark_core::status::ready::SubscriptionBudget) -> bool",
  "impl core::convert::From<&spark_core::contract::BudgetSnapshot> for spark_core::status::ready::SubscriptionBudget",
  "pub fn spark_core::status::ready::SubscriptionBudget::from(snapshot: &spark_core::contract::BudgetSnapshot) -> Self",
  "impl core::fmt::Debug for spark_core::status::ready::SubscriptionBudget",
  "pub fn spark_core::status::ready::SubscriptionBudget::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::status::ready::SubscriptionBudget",
  "impl core::marker::StructuralPartialEq for spark_core::status::ready::SubscriptionBudget",
  "impl core::marker::Freeze for spark_core::status::ready::SubscriptionBudget",
  "impl core::marker::Send for spark_core::status::ready::SubscriptionBudget",
  "impl core::marker::Sync for spark_core::status::ready::SubscriptionBudget",
  "impl core::marker::Unpin for spark_core::status::ready::SubscriptionBudget",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::status::ready::SubscriptionBudget",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::status::ready::SubscriptionBudget",
  "pub type spark_core::status::ready::PollReady<E> = core::task::poll::Poll<spark_core::status::ready::ReadyCheck<E>>",
  "#[non_exhaustive] pub enum spark_core::status::BusyReason",
  "pub spark_core::status::BusyReason::Custom(alloc::borrow::Cow<'static, str>)",
  "pub spark_core::status::BusyReason::Downstream",
  "pub spark_core::status::BusyReason::QueueFull(spark_core::status::ready::QueueDepth)",
  "pub spark_core::status::BusyReason::Upstream",
  "impl spark_core::status::ready::BusyReason",
  "pub fn spark_core::status::ready::BusyReason::custom(reason: impl core::convert::Into<alloc::borrow::Cow<'static, str>>) -> Self",
  "pub const fn spark_core::status::ready::BusyReason::downstream() -> Self",
  "pub const fn spark_core::status::ready::BusyReason::queue_full(depth: usize, capacity: usize) -> Self",
  "pub const fn spark_core::status::ready::BusyReason::upstream() -> Self",
  "impl core::clone::Clone for spark_core::status::ready::BusyReason",
  "pub fn spark_core::status::ready::BusyReason::clone(&self) -> spark_core::status::ready::BusyReason",
  "impl core::cmp::Eq for spark_core::status::ready::BusyReason",
  "impl core::cmp::PartialEq for spark_core::status::ready::BusyReason",
  "pub fn spark_core::status::ready::BusyReason::eq(&self, other: &spark_core::status::ready::BusyReason) -> bool",
  "impl core::fmt::Debug for spark_core::status::ready::BusyReason",
  "pub fn spark_core::status::ready::BusyReason::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::status::ready::BusyReason",
  "impl core::marker::Freeze for spark_core::status::ready::BusyReason",
  "impl core::marker::Send for spark_core::status::ready::BusyReason",
  "impl core::marker::Sync for spark_core::status::ready::BusyReason",
  "impl core::marker::Unpin for spark_core::status::ready::BusyReason",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::status::ready::BusyReason",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::status::ready::BusyReason",
  "#[non_exhaustive] pub enum spark_core::status::ReadyCheck<E>",
  "pub spark_core::status::ReadyCheck::Err(E)",
  "pub spark_core::status::ReadyCheck::Ready(spark_core::status::ready::ReadyState)",
  "impl<E: core::clone::Clone> core::clone::Clone for spark_core::status::ready::ReadyCheck<E>",
  "pub fn spark_core::status::ready::ReadyCheck<E>::clone(&self) -> spark_core::status::ready::ReadyCheck<E>",
  "impl<E: core::cmp::Eq> core::cmp::Eq for spark_core::status::ready::ReadyCheck<E>",
  "impl<E: core::cmp::PartialEq> core::cmp::PartialEq for spark_core::status::ready::ReadyCheck<E>",
  "pub fn spark_core::status::ready::ReadyCheck<E>::eq(&self, other: &spark_core::status::ready::ReadyCheck<E>) -> bool",
  "impl<E: core::fmt::Debug> core::fmt::Debug for spark_core::status::ready::ReadyCheck<E>",
  "pub fn spark_core::status::ready::ReadyCheck<E>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<E> core::fmt::Display for spark_core::status::ready::ReadyCheck<E> where E: core::fmt::Display",
  "pub fn spark_core::status::ready::ReadyCheck<E>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<E> core::marker::StructuralPartialEq for spark_core::status::ready::ReadyCheck<E>",
  "impl<E> core::marker::Freeze for spark_core::status::ready::ReadyCheck<E> where E: core::marker::Freeze",
  "impl<E> core::marker::Send for spark_core::status::ready::ReadyCheck<E> where E: core::marker::Send",
  "impl<E> core::marker::Sync for spark_core::status::ready::ReadyCheck<E> where E: core::marker::Sync",
  "impl<E> core::marker::Unpin for spark_core::status::ready::ReadyCheck<E> where E: core::marker::Unpin",
  "impl<E> core::panic::unwind_safe::RefUnwindSafe for spark_core::status::ready::ReadyCheck<E> where E: core::panic::unwind_safe::RefUnwindSafe",
  "impl<E> core::panic::unwind_safe::UnwindSafe for spark_core::status::ready::ReadyCheck<E> where E: core::panic::unwind_safe::UnwindSafe",
  "#[non_exhaustive] pub enum spark_core::status::ReadyState",
  "pub spark_core::status::ReadyState::BudgetExhausted(spark_core::status::ready::SubscriptionBudget)",
  "pub spark_core::status::ReadyState::Busy(spark_core::status::ready::BusyReason)",
  "pub spark_core::status::ReadyState::Ready",
  "pub spark_core::status::ReadyState::RetryAfter(spark_core::status::ready::RetryAdvice)",
  "impl spark_core::status::ready::ReadyState",
  "pub fn spark_core::status::ready::ReadyState::from_budget(limit: u32, remaining: u32) -> Self",
  "pub fn spark_core::status::ready::ReadyState::from_budget_decision(decision: &spark_core::contract::BudgetDecision) -> Self",
  "pub fn spark_core::status::ready::ReadyState::from_queue_depth(depth: usize, capacity: usize) -> Self",
  "pub const fn spark_core::status::ready::ReadyState::recovered() -> Self",
  "impl core::clone::Clone for spark_core::status::ready::ReadyState",
  "pub fn spark_core::status::ready::ReadyState::clone(&self) -> spark_core::status::ready::ReadyState",
  "impl core::cmp::Eq for spark_core::status::ready::ReadyState",
  "impl core::cmp::PartialEq for spark_core::status::ready::ReadyState",
  "pub fn spark_core::status::ready::ReadyState::eq(&self, other: &spark_core::status::ready::ReadyState) -> bool",
  "impl core::fmt::Debug for spark_core::status::ready::ReadyState",
  "pub fn spark_core::status::ready::ReadyState::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::status::ready::ReadyState",
  "impl core::marker::Freeze for spark_core::status::ready::ReadyState",
  "impl core::marker::Send for spark_core::status::ready::ReadyState",
  "impl core::marker::Sync for spark_core::status::ready::ReadyState",
  "impl core::marker::Unpin for spark_core::status::ready::ReadyState",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::status::ready::ReadyState",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::status::ready::ReadyState",
  "pub struct spark_core::status::RetryAdvice",
  "pub spark_core::status::RetryAdvice::reason: core::option::Option<alloc::borrow::Cow<'static, str>>",
  "pub spark_core::status::RetryAdvice::wait: core::time::Duration",
  "impl spark_core::status::ready::RetryAdvice",
  "pub const fn spark_core::status::ready::RetryAdvice::after(wait: core::time::Duration) -> Self",
  "pub fn spark_core::status::ready::RetryAdvice::with_reason(self, reason: impl core::convert::Into<alloc::borrow::Cow<'static, str>>) -> Self",
  "impl core::clone::Clone for spark_core::status::ready::RetryAdvice",
  "pub fn spark_core::status::ready::RetryAdvice::clone(&self) -> spark_core::status::ready::RetryAdvice",
  "impl core::cmp::Eq for spark_core::status::ready::RetryAdvice",
  "impl core::cmp::PartialEq for spark_core::status::ready::RetryAdvice",
  "pub fn spark_core::status::ready::RetryAdvice::eq(&self, other: &spark_core::status::ready::RetryAdvice) -> bool",
  "impl core::fmt::Debug for spark_core::status::ready::RetryAdvice",
  "pub fn spark_core::status::ready::RetryAdvice::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::status::ready::RetryAdvice",
  "impl core::marker::Freeze for spark_core::status::ready::RetryAdvice",
  "impl core::marker::Send for spark_core::status::ready::RetryAdvice",
  "impl core::marker::Sync for spark_core::status::ready::RetryAdvice",
  "impl core::marker::Unpin for spark_core::status::ready::RetryAdvice",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::status::ready::RetryAdvice",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::status::ready::RetryAdvice",
  "pub struct spark_core::status::RetryAfterThrottle",
  "impl spark_core::status::ready::RetryAfterThrottle",
  "pub fn spark_core::status::ready::RetryAfterThrottle::is_waiting(&self) -> bool",
  "pub fn spark_core::status::ready::RetryAfterThrottle::new(clock: alloc::sync::Arc<dyn spark_core::time::clock::Clock>) -> Self",
  "pub fn spark_core::status::ready::RetryAfterThrottle::observe(&mut self, advice: &spark_core::status::ready::RetryAdvice) -> spark_core::MonotonicTimePoint",
  "pub fn spark_core::status::ready::RetryAfterThrottle::poll(&mut self, cx: &mut core::task::wake::Context<'_>) -> core::task::poll::Poll<()>",
  "pub fn spark_core::status::ready::RetryAfterThrottle::remaining_delay(&self) -> core::time::Duration",
  "impl core::marker::Freeze for spark_core::status::ready::RetryAfterThrottle",
  "impl core::marker::Send for spark_core::status::ready::RetryAfterThrottle",
  "impl !core::marker::Sync for spark_core::status::ready::RetryAfterThrottle",
  "impl core::marker::Unpin for spark_core::status::ready::RetryAfterThrottle",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::status::ready::RetryAfterThrottle",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::status::ready::RetryAfterThrottle",
  "pub struct spark_core::status::RetryRhythm",
  "impl spark_core::status::ready::RetryRhythm",
  "pub fn spark_core::status::ready::RetryRhythm::accumulated_wait(&self) -> core::time::Duration",
  "pub fn spark_core::status::ready::RetryRhythm::is_ready(&self, now: spark_core::MonotonicTimePoint) -> bool",
  "pub const fn spark_core::status::ready::RetryRhythm::new() -> Self",
  "pub fn spark_core::status::ready::RetryRhythm::next_ready_at(&self) -> core::option::Option<spark_core::MonotonicTimePoint>",
  "pub fn spark_core::status::ready::RetryRhythm::observe(&mut self, now: spark_core::MonotonicTimePoint, advice: &spark_core::status::ready::RetryAdvice) -> spark_core::MonotonicTimePoint",
  "pub fn spark_core::status::ready::RetryRhythm::remaining_delay(&self, now: spark_core::MonotonicTimePoint) -> core::time::Duration",
  "impl core::clone::Clone for spark_core::status::ready::RetryRhythm",
  "pub fn spark_core::status::ready::RetryRhythm::clone(&self) -> spark_core::status::ready::RetryRhythm",
  "impl core::default::Default for spark_core::status::ready::RetryRhythm",
  "pub fn spark_core::status::ready::RetryRhythm::default() -> spark_core::status::ready::RetryRhythm",
  "impl core::fmt::Debug for spark_core::status::ready::RetryRhythm",
  "pub fn spark_core::status::ready::RetryRhythm::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::status::ready::RetryRhythm",
  "impl core::marker::Send for spark_core::status::ready::RetryRhythm",
  "impl core::marker::Sync for spark_core::status::ready::RetryRhythm",
  "impl core::marker::Unpin for spark_core::status::ready::RetryRhythm",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::status::ready::RetryRhythm",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::status::ready::RetryRhythm",
  "pub struct spark_core::status::SubscriptionBudget",
  "pub spark_core::status::SubscriptionBudget::limit: u32",
  "pub spark_core::status::SubscriptionBudget::remaining: u32",
  "impl spark_core::status::ready::SubscriptionBudget",
  "pub fn spark_core::status::ready::SubscriptionBudget::evaluate(limit: u32, remaining: u32) -> spark_core::status::ready::ReadyState",
  "impl core::clone::Clone for spark_core::status::ready::SubscriptionBudget",
  "pub fn spark_core::status::ready::SubscriptionBudget::clone(&self) -> spark_core::status::ready::SubscriptionBudget",
  "impl core::cmp::Eq for spark_core::status::ready::SubscriptionBudget",
  "impl core::cmp::PartialEq for spark_core::status::ready::SubscriptionBudget",
  "pub fn spark_core::status::ready::SubscriptionBudget::eq(&self, other: &spark_core::status::ready::SubscriptionBudget) -> bool",
  "impl core::convert::From<&spark_core::contract::BudgetSnapshot> for spark_core::status::ready::SubscriptionBudget",
  "pub fn spark_core::status::ready::SubscriptionBudget::from(snapshot: &spark_core::contract::BudgetSnapshot) -> Self",
  "impl core::fmt::Debug for spark_core::status::ready::SubscriptionBudget",
  "pub fn spark_core::status::ready::SubscriptionBudget::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::status::ready::SubscriptionBudget",
  "impl core::marker::StructuralPartialEq for spark_core::status::ready::SubscriptionBudget",
  "impl core::marker::Freeze for spark_core::status::ready::SubscriptionBudget",
  "impl core::marker::Send for spark_core::status::ready::SubscriptionBudget",
  "impl core::marker::Sync for spark_core::status::ready::SubscriptionBudget",
  "impl core::marker::Unpin for spark_core::status::ready::SubscriptionBudget",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::status::ready::SubscriptionBudget",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::status::ready::SubscriptionBudget",
  "pub type spark_core::status::PollReady<E> = core::task::poll::Poll<spark_core::status::ready::ReadyCheck<E>>",
  "pub mod spark_core::time",
  "pub mod spark_core::time::clock",
  "pub struct spark_core::time::clock::MockClock",
  "impl spark_core::time::clock::MockClock",
  "pub fn spark_core::time::clock::MockClock::advance(&self, delta: core::time::Duration)",
  "pub fn spark_core::time::clock::MockClock::elapsed(&self) -> core::time::Duration",
  "pub fn spark_core::time::clock::MockClock::new() -> Self",
  "pub fn spark_core::time::clock::MockClock::with_start(origin: std::time::Instant) -> Self",
  "impl core::clone::Clone for spark_core::time::clock::MockClock",
  "pub fn spark_core::time::clock::MockClock::clone(&self) -> spark_core::time::clock::MockClock",
  "impl core::default::Default for spark_core::time::clock::MockClock",
  "pub fn spark_core::time::clock::MockClock::default() -> Self",
  "impl core::fmt::Debug for spark_core::time::clock::MockClock",
  "pub fn spark_core::time::clock::MockClock::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl spark_core::time::clock::Clock for spark_core::time::clock::MockClock",
  "pub fn spark_core::time::clock::MockClock::now(&self) -> std::time::Instant",
  "pub fn spark_core::time::clock::MockClock::sleep(&self, duration: core::time::Duration) -> spark_core::time::clock::Sleep",
  "impl core::marker::Freeze for spark_core::time::clock::MockClock",
  "impl core::marker::Send for spark_core::time::clock::MockClock",
  "impl core::marker::Sync for spark_core::time::clock::MockClock",
  "impl core::marker::Unpin for spark_core::time::clock::MockClock",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::time::clock::MockClock",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::time::clock::MockClock",
  "pub struct spark_core::time::clock::SystemClock",
  "impl core::clone::Clone for spark_core::time::clock::SystemClock",
  "pub fn spark_core::time::clock::SystemClock::clone(&self) -> spark_core::time::clock::SystemClock",
  "impl core::default::Default for spark_core::time::clock::SystemClock",
  "pub fn spark_core::time::clock::SystemClock::default() -> spark_core::time::clock::SystemClock",
  "impl core::fmt::Debug for spark_core::time::clock::SystemClock",
  "pub fn spark_core::time::clock::SystemClock::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl spark_core::time::clock::Clock for spark_core::time::clock::SystemClock",
  "pub fn spark_core::time::clock::SystemClock::now(&self) -> std::time::Instant",
  "pub fn spark_core::time::clock::SystemClock::sleep(&self, duration: core::time::Duration) -> spark_core::time::clock::Sleep",
  "impl core::marker::Freeze for spark_core::time::clock::SystemClock",
  "impl core::marker::Send for spark_core::time::clock::SystemClock",
  "impl core::marker::Sync for spark_core::time::clock::SystemClock",
  "impl core::marker::Unpin for spark_core::time::clock::SystemClock",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::time::clock::SystemClock",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::time::clock::SystemClock",
  "pub trait spark_core::time::clock::Clock: core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::time::clock::Clock::now(&self) -> std::time::Instant",
  "pub fn spark_core::time::clock::Clock::sleep(&self, duration: core::time::Duration) -> spark_core::time::clock::Sleep",
  "impl spark_core::time::clock::Clock for spark_core::time::clock::MockClock",
  "pub fn spark_core::time::clock::MockClock::now(&self) -> std::time::Instant",
  "pub fn spark_core::time::clock::MockClock::sleep(&self, duration: core::time::Duration) -> spark_core::time::clock::Sleep",
  "impl spark_core::time::clock::Clock for spark_core::time::clock::SystemClock",
  "pub fn spark_core::time::clock::SystemClock::now(&self) -> std::time::Instant",
  "pub fn spark_core::time::clock::SystemClock::sleep(&self, duration: core::time::Duration) -> spark_core::time::clock::Sleep",
  "pub type spark_core::time::clock::Sleep = core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = ()> + core::marker::Send + 'static)>>",
  "pub struct spark_core::time::MockClock",
  "impl spark_core::time::clock::MockClock",
  "pub fn spark_core::time::clock::MockClock::advance(&self, delta: core::time::Duration)",
  "pub fn spark_core::time::clock::MockClock::elapsed(&self) -> core::time::Duration",
  "pub fn spark_core::time::clock::MockClock::new() -> Self",
  "pub fn spark_core::time::clock::MockClock::with_start(origin: std::time::Instant) -> Self",
  "impl core::clone::Clone for spark_core::time::clock::MockClock",
  "pub fn spark_core::time::clock::MockClock::clone(&self) -> spark_core::time::clock::MockClock",
  "impl core::default::Default for spark_core::time::clock::MockClock",
  "pub fn spark_core::time::clock::MockClock::default() -> Self",
  "impl core::fmt::Debug for spark_core::time::clock::MockClock",
  "pub fn spark_core::time::clock::MockClock::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl spark_core::time::clock::Clock for spark_core::time::clock::MockClock",
  "pub fn spark_core::time::clock::MockClock::now(&self) -> std::time::Instant",
  "pub fn spark_core::time::clock::MockClock::sleep(&self, duration: core::time::Duration) -> spark_core::time::clock::Sleep",
  "impl core::marker::Freeze for spark_core::time::clock::MockClock",
  "impl core::marker::Send for spark_core::time::clock::MockClock",
  "impl core::marker::Sync for spark_core::time::clock::MockClock",
  "impl core::marker::Unpin for spark_core::time::clock::MockClock",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::time::clock::MockClock",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::time::clock::MockClock",
  "pub struct spark_core::time::SystemClock",
  "impl core::clone::Clone for spark_core::time::clock::SystemClock",
  "pub fn spark_core::time::clock::SystemClock::clone(&self) -> spark_core::time::clock::SystemClock",
  "impl core::default::Default for spark_core::time::clock::SystemClock",
  "pub fn spark_core::time::clock::SystemClock::default() -> spark_core::time::clock::SystemClock",
  "impl core::fmt::Debug for spark_core::time::clock::SystemClock",
  "pub fn spark_core::time::clock::SystemClock::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl spark_core::time::clock::Clock for spark_core::time::clock::SystemClock",
  "pub fn spark_core::time::clock::SystemClock::now(&self) -> std::time::Instant",
  "pub fn spark_core::time::clock::SystemClock::sleep(&self, duration: core::time::Duration) -> spark_core::time::clock::Sleep",
  "impl core::marker::Freeze for spark_core::time::clock::SystemClock",
  "impl core::marker::Send for spark_core::time::clock::SystemClock",
  "impl core::marker::Sync for spark_core::time::clock::SystemClock",
  "impl core::marker::Unpin for spark_core::time::clock::SystemClock",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::time::clock::SystemClock",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::time::clock::SystemClock",
  "pub trait spark_core::time::Clock: core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::time::Clock::now(&self) -> std::time::Instant",
  "pub fn spark_core::time::Clock::sleep(&self, duration: core::time::Duration) -> spark_core::time::clock::Sleep",
  "impl spark_core::time::clock::Clock for spark_core::time::clock::MockClock",
  "pub fn spark_core::time::clock::MockClock::now(&self) -> std::time::Instant",
  "pub fn spark_core::time::clock::MockClock::sleep(&self, duration: core::time::Duration) -> spark_core::time::clock::Sleep",
  "impl spark_core::time::clock::Clock for spark_core::time::clock::SystemClock",
  "pub fn spark_core::time::clock::SystemClock::now(&self) -> std::time::Instant",
  "pub fn spark_core::time::clock::SystemClock::sleep(&self, duration: core::time::Duration) -> spark_core::time::clock::Sleep",
  "pub type spark_core::time::Sleep = core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = ()> + core::marker::Send + 'static)>>",
  "pub mod spark_core::transport",
  "pub mod spark_core::transport::address",
  "#[non_exhaustive] pub enum spark_core::transport::address::TransportSocketAddr",
  "pub spark_core::transport::address::TransportSocketAddr::V4",
  "pub spark_core::transport::address::TransportSocketAddr::V4::addr: [u8; 4]",
  "pub spark_core::transport::address::TransportSocketAddr::V4::port: u16",
  "pub spark_core::transport::address::TransportSocketAddr::V6",
  "pub spark_core::transport::address::TransportSocketAddr::V6::addr: [u16; 8]",
  "pub spark_core::transport::address::TransportSocketAddr::V6::port: u16",
  "impl spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::transport::address::TransportSocketAddr::as_ipv6_addr(&self) -> core::option::Option<core::net::ip_addr::Ipv6Addr>",
  "impl core::clone::Clone for spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::transport::address::TransportSocketAddr::clone(&self) -> spark_core::transport::address::TransportSocketAddr",
  "impl core::cmp::Eq for spark_core::transport::address::TransportSocketAddr",
  "impl core::cmp::Ord for spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::transport::address::TransportSocketAddr::cmp(&self, other: &spark_core::transport::address::TransportSocketAddr) -> core::cmp::Ordering",
  "impl core::cmp::PartialEq for spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::transport::address::TransportSocketAddr::eq(&self, other: &spark_core::transport::address::TransportSocketAddr) -> bool",
  "impl core::cmp::PartialOrd for spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::transport::address::TransportSocketAddr::partial_cmp(&self, other: &spark_core::transport::address::TransportSocketAddr) -> core::option::Option<core::cmp::Ordering>",
  "impl core::convert::From<core::net::socket_addr::SocketAddr> for spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::transport::address::TransportSocketAddr::from(addr: core::net::socket_addr::SocketAddr) -> Self",
  "impl core::fmt::Debug for spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::transport::address::TransportSocketAddr::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::transport::address::TransportSocketAddr::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::transport::address::TransportSocketAddr::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::Copy for spark_core::transport::address::TransportSocketAddr",
  "impl core::marker::StructuralPartialEq for spark_core::transport::address::TransportSocketAddr",
  "impl core::marker::Freeze for spark_core::transport::address::TransportSocketAddr",
  "impl core::marker::Send for spark_core::transport::address::TransportSocketAddr",
  "impl core::marker::Sync for spark_core::transport::address::TransportSocketAddr",
  "impl core::marker::Unpin for spark_core::transport::address::TransportSocketAddr",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::address::TransportSocketAddr",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::address::TransportSocketAddr",
  "pub mod spark_core::transport::endpoint",
  "#[non_exhaustive] pub enum spark_core::transport::endpoint::EndpointKind",
  "pub spark_core::transport::endpoint::EndpointKind::Logical",
  "pub spark_core::transport::endpoint::EndpointKind::Physical",
  "impl core::clone::Clone for spark_core::transport::endpoint::EndpointKind",
  "pub fn spark_core::transport::endpoint::EndpointKind::clone(&self) -> spark_core::transport::endpoint::EndpointKind",
  "impl core::cmp::Eq for spark_core::transport::endpoint::EndpointKind",
  "impl core::cmp::PartialEq for spark_core::transport::endpoint::EndpointKind",
  "pub fn spark_core::transport::endpoint::EndpointKind::eq(&self, other: &spark_core::transport::endpoint::EndpointKind) -> bool",
  "impl core::fmt::Debug for spark_core::transport::endpoint::EndpointKind",
  "pub fn spark_core::transport::endpoint::EndpointKind::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::transport::endpoint::EndpointKind",
  "impl core::marker::StructuralPartialEq for spark_core::transport::endpoint::EndpointKind",
  "impl core::marker::Freeze for spark_core::transport::endpoint::EndpointKind",
  "impl core::marker::Send for spark_core::transport::endpoint::EndpointKind",
  "impl core::marker::Sync for spark_core::transport::endpoint::EndpointKind",
  "impl core::marker::Unpin for spark_core::transport::endpoint::EndpointKind",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::endpoint::EndpointKind",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::endpoint::EndpointKind",
  "pub struct spark_core::transport::endpoint::Endpoint",
  "impl spark_core::transport::endpoint::Endpoint",
  "pub fn spark_core::transport::endpoint::Endpoint::authority(&self) -> &str",
  "pub fn spark_core::transport::endpoint::Endpoint::builder(scheme: alloc::string::String, authority: alloc::string::String) -> spark_core::transport::endpoint::EndpointBuilder",
  "pub fn spark_core::transport::endpoint::Endpoint::kind(&self) -> spark_core::transport::endpoint::EndpointKind",
  "pub fn spark_core::transport::endpoint::Endpoint::logical(scheme: alloc::string::String, authority: alloc::string::String) -> Self",
  "pub fn spark_core::transport::endpoint::Endpoint::params(&self) -> &spark_core::transport::params::TransportParams",
  "pub fn spark_core::transport::endpoint::Endpoint::physical(scheme: alloc::string::String, authority: alloc::string::String, port: u16) -> Self",
  "pub fn spark_core::transport::endpoint::Endpoint::port(&self) -> core::option::Option<u16>",
  "pub fn spark_core::transport::endpoint::Endpoint::resource(&self) -> core::option::Option<&str>",
  "pub fn spark_core::transport::endpoint::Endpoint::scheme(&self) -> &str",
  "impl core::clone::Clone for spark_core::transport::endpoint::Endpoint",
  "pub fn spark_core::transport::endpoint::Endpoint::clone(&self) -> spark_core::transport::endpoint::Endpoint",
  "impl core::cmp::Eq for spark_core::transport::endpoint::Endpoint",
  "impl core::cmp::PartialEq for spark_core::transport::endpoint::Endpoint",
  "pub fn spark_core::transport::endpoint::Endpoint::eq(&self, other: &spark_core::transport::endpoint::Endpoint) -> bool",
  "impl core::fmt::Debug for spark_core::transport::endpoint::Endpoint",
  "pub fn spark_core::transport::endpoint::Endpoint::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::transport::endpoint::Endpoint",
  "impl core::marker::Freeze for spark_core::transport::endpoint::Endpoint",
  "impl core::marker::Send for spark_core::transport::endpoint::Endpoint",
  "impl core::marker::Sync for spark_core::transport::endpoint::Endpoint",
  "impl core::marker::Unpin for spark_core::transport::endpoint::Endpoint",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::endpoint::Endpoint",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::endpoint::Endpoint",
  "pub struct spark_core::transport::endpoint::EndpointBuilder",
  "impl spark_core::transport::endpoint::EndpointBuilder",
  "pub fn spark_core::transport::endpoint::EndpointBuilder::finish(self) -> spark_core::transport::endpoint::Endpoint",
  "pub fn spark_core::transport::endpoint::EndpointBuilder::with_kind(self, kind: spark_core::transport::endpoint::EndpointKind) -> Self",
  "pub fn spark_core::transport::endpoint::EndpointBuilder::with_params(self, params: spark_core::transport::params::TransportParams) -> Self",
  "pub fn spark_core::transport::endpoint::EndpointBuilder::with_port(self, port: u16) -> Self",
  "pub fn spark_core::transport::endpoint::EndpointBuilder::with_resource(self, resource: alloc::string::String) -> Self",
  "impl core::clone::Clone for spark_core::transport::endpoint::EndpointBuilder",
  "pub fn spark_core::transport::endpoint::EndpointBuilder::clone(&self) -> spark_core::transport::endpoint::EndpointBuilder",
  "impl core::fmt::Debug for spark_core::transport::endpoint::EndpointBuilder",
  "pub fn spark_core::transport::endpoint::EndpointBuilder::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::transport::endpoint::EndpointBuilder",
  "impl core::marker::Send for spark_core::transport::endpoint::EndpointBuilder",
  "impl core::marker::Sync for spark_core::transport::endpoint::EndpointBuilder",
  "impl core::marker::Unpin for spark_core::transport::endpoint::EndpointBuilder",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::endpoint::EndpointBuilder",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::endpoint::EndpointBuilder",
  "pub mod spark_core::transport::factory",
  "pub struct spark_core::transport::factory::ListenerConfig",
  "impl spark_core::transport::factory::ListenerConfig",
  "pub fn spark_core::transport::factory::ListenerConfig::accept_backoff(&self) -> core::option::Option<core::time::Duration>",
  "pub fn spark_core::transport::factory::ListenerConfig::concurrency_limit(&self) -> core::option::Option<u32>",
  "pub fn spark_core::transport::factory::ListenerConfig::endpoint(&self) -> &spark_core::transport::endpoint::Endpoint",
  "pub fn spark_core::transport::factory::ListenerConfig::new(endpoint: spark_core::transport::endpoint::Endpoint) -> Self",
  "pub fn spark_core::transport::factory::ListenerConfig::params(&self) -> &spark_core::transport::params::TransportParams",
  "pub fn spark_core::transport::factory::ListenerConfig::with_accept_backoff(self, backoff: core::time::Duration) -> Self",
  "pub fn spark_core::transport::factory::ListenerConfig::with_concurrency_limit(self, limit: u32) -> Self",
  "pub fn spark_core::transport::factory::ListenerConfig::with_params(self, params: spark_core::transport::params::TransportParams) -> Self",
  "impl core::clone::Clone for spark_core::transport::factory::ListenerConfig",
  "pub fn spark_core::transport::factory::ListenerConfig::clone(&self) -> spark_core::transport::factory::ListenerConfig",
  "impl core::fmt::Debug for spark_core::transport::factory::ListenerConfig",
  "pub fn spark_core::transport::factory::ListenerConfig::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::transport::factory::ListenerConfig",
  "impl core::marker::Send for spark_core::transport::factory::ListenerConfig",
  "impl core::marker::Sync for spark_core::transport::factory::ListenerConfig",
  "impl core::marker::Unpin for spark_core::transport::factory::ListenerConfig",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::factory::ListenerConfig",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::factory::ListenerConfig",
  "pub mod spark_core::transport::handshake",
  "pub enum spark_core::transport::handshake::HandshakeErrorKind",
  "pub spark_core::transport::handshake::HandshakeErrorKind::AuditFailure",
  "pub spark_core::transport::handshake::HandshakeErrorKind::AuditFailure::error: spark_core::audit::AuditError",
  "pub spark_core::transport::handshake::HandshakeErrorKind::LocalLacksRemoteRequirements",
  "pub spark_core::transport::handshake::HandshakeErrorKind::LocalLacksRemoteRequirements::missing: spark_core::transport::handshake::CapabilityBitmap",
  "pub spark_core::transport::handshake::HandshakeErrorKind::MajorVersionMismatch",
  "pub spark_core::transport::handshake::HandshakeErrorKind::MajorVersionMismatch::local: spark_core::transport::handshake::Version",
  "pub spark_core::transport::handshake::HandshakeErrorKind::MajorVersionMismatch::remote: spark_core::transport::handshake::Version",
  "pub spark_core::transport::handshake::HandshakeErrorKind::RemoteLacksLocalRequirements",
  "pub spark_core::transport::handshake::HandshakeErrorKind::RemoteLacksLocalRequirements::missing: spark_core::transport::handshake::CapabilityBitmap",
  "impl core::clone::Clone for spark_core::transport::handshake::HandshakeErrorKind",
  "pub fn spark_core::transport::handshake::HandshakeErrorKind::clone(&self) -> spark_core::transport::handshake::HandshakeErrorKind",
  "impl core::cmp::Eq for spark_core::transport::handshake::HandshakeErrorKind",
  "impl core::cmp::PartialEq for spark_core::transport::handshake::HandshakeErrorKind",
  "pub fn spark_core::transport::handshake::HandshakeErrorKind::eq(&self, other: &spark_core::transport::handshake::HandshakeErrorKind) -> bool",
  "impl core::fmt::Debug for spark_core::transport::handshake::HandshakeErrorKind",
  "pub fn spark_core::transport::handshake::HandshakeErrorKind::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::transport::handshake::HandshakeErrorKind",
  "impl core::marker::Freeze for spark_core::transport::handshake::HandshakeErrorKind",
  "impl core::marker::Send for spark_core::transport::handshake::HandshakeErrorKind",
  "impl core::marker::Sync for spark_core::transport::handshake::HandshakeErrorKind",
  "impl core::marker::Unpin for spark_core::transport::handshake::HandshakeErrorKind",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::handshake::HandshakeErrorKind",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::handshake::HandshakeErrorKind",
  "pub struct spark_core::transport::handshake::Capability",
  "impl spark_core::transport::handshake::Capability",
  "pub const spark_core::transport::handshake::Capability::COMPRESSION: Self",
  "pub const spark_core::transport::handshake::Capability::MULTIPLEXING: Self",
  "pub const spark_core::transport::handshake::Capability::ZERO_COPY: Self",
  "pub const fn spark_core::transport::handshake::Capability::custom(index: u8) -> Self",
  "impl core::clone::Clone for spark_core::transport::handshake::Capability",
  "pub fn spark_core::transport::handshake::Capability::clone(&self) -> spark_core::transport::handshake::Capability",
  "impl core::cmp::Eq for spark_core::transport::handshake::Capability",
  "impl core::cmp::PartialEq for spark_core::transport::handshake::Capability",
  "pub fn spark_core::transport::handshake::Capability::eq(&self, other: &spark_core::transport::handshake::Capability) -> bool",
  "impl core::fmt::Debug for spark_core::transport::handshake::Capability",
  "pub fn spark_core::transport::handshake::Capability::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::transport::handshake::Capability",
  "pub fn spark_core::transport::handshake::Capability::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::Copy for spark_core::transport::handshake::Capability",
  "impl core::marker::StructuralPartialEq for spark_core::transport::handshake::Capability",
  "impl core::marker::Freeze for spark_core::transport::handshake::Capability",
  "impl core::marker::Send for spark_core::transport::handshake::Capability",
  "impl core::marker::Sync for spark_core::transport::handshake::Capability",
  "impl core::marker::Unpin for spark_core::transport::handshake::Capability",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::handshake::Capability",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::handshake::Capability",
  "pub struct spark_core::transport::handshake::CapabilityBitmap",
  "impl spark_core::transport::handshake::CapabilityBitmap",
  "pub const fn spark_core::transport::handshake::CapabilityBitmap::bits(&self) -> u128",
  "pub const fn spark_core::transport::handshake::CapabilityBitmap::difference(self, other: Self) -> Self",
  "pub const fn spark_core::transport::handshake::CapabilityBitmap::empty() -> Self",
  "pub const fn spark_core::transport::handshake::CapabilityBitmap::from_bits(bits: u128) -> Self",
  "pub fn spark_core::transport::handshake::CapabilityBitmap::insert(&mut self, capability: spark_core::transport::handshake::Capability)",
  "pub const fn spark_core::transport::handshake::CapabilityBitmap::intersection(self, other: Self) -> Self",
  "pub const fn spark_core::transport::handshake::CapabilityBitmap::is_empty(&self) -> bool",
  "pub const fn spark_core::transport::handshake::CapabilityBitmap::is_subset_of(self, other: Self) -> bool",
  "pub const fn spark_core::transport::handshake::CapabilityBitmap::union(self, other: Self) -> Self",
  "impl core::clone::Clone for spark_core::transport::handshake::CapabilityBitmap",
  "pub fn spark_core::transport::handshake::CapabilityBitmap::clone(&self) -> spark_core::transport::handshake::CapabilityBitmap",
  "impl core::cmp::Eq for spark_core::transport::handshake::CapabilityBitmap",
  "impl core::cmp::PartialEq for spark_core::transport::handshake::CapabilityBitmap",
  "pub fn spark_core::transport::handshake::CapabilityBitmap::eq(&self, other: &spark_core::transport::handshake::CapabilityBitmap) -> bool",
  "impl core::fmt::Debug for spark_core::transport::handshake::CapabilityBitmap",
  "pub fn spark_core::transport::handshake::CapabilityBitmap::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::transport::handshake::CapabilityBitmap",
  "pub fn spark_core::transport::handshake::CapabilityBitmap::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::transport::handshake::CapabilityBitmap",
  "pub fn spark_core::transport::handshake::CapabilityBitmap::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::Copy for spark_core::transport::handshake::CapabilityBitmap",
  "impl core::marker::StructuralPartialEq for spark_core::transport::handshake::CapabilityBitmap",
  "impl core::marker::Freeze for spark_core::transport::handshake::CapabilityBitmap",
  "impl core::marker::Send for spark_core::transport::handshake::CapabilityBitmap",
  "impl core::marker::Sync for spark_core::transport::handshake::CapabilityBitmap",
  "impl core::marker::Unpin for spark_core::transport::handshake::CapabilityBitmap",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::handshake::CapabilityBitmap",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::handshake::CapabilityBitmap",
  "pub struct spark_core::transport::handshake::DowngradeReport",
  "impl spark_core::transport::handshake::DowngradeReport",
  "pub fn spark_core::transport::handshake::DowngradeReport::is_lossless(&self) -> bool",
  "pub fn spark_core::transport::handshake::DowngradeReport::local(&self) -> spark_core::transport::handshake::CapabilityBitmap",
  "pub fn spark_core::transport::handshake::DowngradeReport::new(local: spark_core::transport::handshake::CapabilityBitmap, remote: spark_core::transport::handshake::CapabilityBitmap) -> Self",
  "pub fn spark_core::transport::handshake::DowngradeReport::remote(&self) -> spark_core::transport::handshake::CapabilityBitmap",
  "impl core::clone::Clone for spark_core::transport::handshake::DowngradeReport",
  "pub fn spark_core::transport::handshake::DowngradeReport::clone(&self) -> spark_core::transport::handshake::DowngradeReport",
  "impl core::cmp::Eq for spark_core::transport::handshake::DowngradeReport",
  "impl core::cmp::PartialEq for spark_core::transport::handshake::DowngradeReport",
  "pub fn spark_core::transport::handshake::DowngradeReport::eq(&self, other: &spark_core::transport::handshake::DowngradeReport) -> bool",
  "impl core::fmt::Debug for spark_core::transport::handshake::DowngradeReport",
  "pub fn spark_core::transport::handshake::DowngradeReport::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::transport::handshake::DowngradeReport",
  "impl core::marker::StructuralPartialEq for spark_core::transport::handshake::DowngradeReport",
  "impl core::marker::Freeze for spark_core::transport::handshake::DowngradeReport",
  "impl core::marker::Send for spark_core::transport::handshake::DowngradeReport",
  "impl core::marker::Sync for spark_core::transport::handshake::DowngradeReport",
  "impl core::marker::Unpin for spark_core::transport::handshake::DowngradeReport",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::handshake::DowngradeReport",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::handshake::DowngradeReport",
  "pub struct spark_core::transport::handshake::HandshakeError",
  "impl spark_core::transport::handshake::HandshakeError",
  "pub fn spark_core::transport::handshake::HandshakeError::into_spark_error(self) -> spark_core::error::SparkError",
  "pub fn spark_core::transport::handshake::HandshakeError::kind(&self) -> &spark_core::transport::handshake::HandshakeErrorKind",
  "impl core::clone::Clone for spark_core::transport::handshake::HandshakeError",
  "pub fn spark_core::transport::handshake::HandshakeError::clone(&self) -> spark_core::transport::handshake::HandshakeError",
  "impl core::cmp::Eq for spark_core::transport::handshake::HandshakeError",
  "impl core::cmp::PartialEq for spark_core::transport::handshake::HandshakeError",
  "pub fn spark_core::transport::handshake::HandshakeError::eq(&self, other: &spark_core::transport::handshake::HandshakeError) -> bool",
  "impl core::convert::From<spark_core::transport::handshake::HandshakeError> for spark_core::error::SparkError",
  "pub fn spark_core::error::SparkError::from(error: spark_core::transport::handshake::HandshakeError) -> Self",
  "impl core::fmt::Debug for spark_core::transport::handshake::HandshakeError",
  "pub fn spark_core::transport::handshake::HandshakeError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::transport::handshake::HandshakeError",
  "pub fn spark_core::transport::handshake::HandshakeError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::transport::handshake::HandshakeError",
  "impl spark_core::Error for spark_core::transport::handshake::HandshakeError",
  "pub fn spark_core::transport::handshake::HandshakeError::source(&self) -> core::option::Option<&(dyn spark_core::Error + 'static)>",
  "impl core::marker::Freeze for spark_core::transport::handshake::HandshakeError",
  "impl core::marker::Send for spark_core::transport::handshake::HandshakeError",
  "impl core::marker::Sync for spark_core::transport::handshake::HandshakeError",
  "impl core::marker::Unpin for spark_core::transport::handshake::HandshakeError",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::handshake::HandshakeError",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::handshake::HandshakeError",
  "pub struct spark_core::transport::handshake::HandshakeOffer",
  "impl spark_core::transport::handshake::HandshakeOffer",
  "pub fn spark_core::transport::handshake::HandshakeOffer::mandatory(&self) -> spark_core::transport::handshake::CapabilityBitmap",
  "pub fn spark_core::transport::handshake::HandshakeOffer::new(version: spark_core::transport::handshake::Version, mandatory: spark_core::transport::handshake::CapabilityBitmap, optional: spark_core::transport::handshake::CapabilityBitmap) -> Self",
  "pub fn spark_core::transport::handshake::HandshakeOffer::optional(&self) -> spark_core::transport::handshake::CapabilityBitmap",
  "pub fn spark_core::transport::handshake::HandshakeOffer::total(&self) -> spark_core::transport::handshake::CapabilityBitmap",
  "pub fn spark_core::transport::handshake::HandshakeOffer::version(&self) -> spark_core::transport::handshake::Version",
  "impl core::clone::Clone for spark_core::transport::handshake::HandshakeOffer",
  "pub fn spark_core::transport::handshake::HandshakeOffer::clone(&self) -> spark_core::transport::handshake::HandshakeOffer",
  "impl core::cmp::Eq for spark_core::transport::handshake::HandshakeOffer",
  "impl core::cmp::PartialEq for spark_core::transport::handshake::HandshakeOffer",
  "pub fn spark_core::transport::handshake::HandshakeOffer::eq(&self, other: &spark_core::transport::handshake::HandshakeOffer) -> bool",
  "impl core::fmt::Debug for spark_core::transport::handshake::HandshakeOffer",
  "pub fn spark_core::transport::handshake::HandshakeOffer::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::transport::handshake::HandshakeOffer",
  "impl core::marker::Freeze for spark_core::transport::handshake::HandshakeOffer",
  "impl core::marker::Send for spark_core::transport::handshake::HandshakeOffer",
  "impl core::marker::Sync for spark_core::transport::handshake::HandshakeOffer",
  "impl core::marker::Unpin for spark_core::transport::handshake::HandshakeOffer",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::handshake::HandshakeOffer",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::handshake::HandshakeOffer",
  "pub struct spark_core::transport::handshake::HandshakeOutcome",
  "impl spark_core::transport::handshake::HandshakeOutcome",
  "pub fn spark_core::transport::handshake::HandshakeOutcome::capabilities(&self) -> spark_core::transport::handshake::CapabilityBitmap",
  "pub fn spark_core::transport::handshake::HandshakeOutcome::downgrade(&self) -> spark_core::transport::handshake::DowngradeReport",
  "pub fn spark_core::transport::handshake::HandshakeOutcome::new(version: spark_core::transport::handshake::Version, capabilities: spark_core::transport::handshake::CapabilityBitmap, downgrade: spark_core::transport::handshake::DowngradeReport) -> Self",
  "pub fn spark_core::transport::handshake::HandshakeOutcome::version(&self) -> spark_core::transport::handshake::Version",
  "impl core::clone::Clone for spark_core::transport::handshake::HandshakeOutcome",
  "pub fn spark_core::transport::handshake::HandshakeOutcome::clone(&self) -> spark_core::transport::handshake::HandshakeOutcome",
  "impl core::cmp::Eq for spark_core::transport::handshake::HandshakeOutcome",
  "impl core::cmp::PartialEq for spark_core::transport::handshake::HandshakeOutcome",
  "pub fn spark_core::transport::handshake::HandshakeOutcome::eq(&self, other: &spark_core::transport::handshake::HandshakeOutcome) -> bool",
  "impl core::fmt::Debug for spark_core::transport::handshake::HandshakeOutcome",
  "pub fn spark_core::transport::handshake::HandshakeOutcome::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::transport::handshake::HandshakeOutcome",
  "impl core::marker::StructuralPartialEq for spark_core::transport::handshake::HandshakeOutcome",
  "impl core::marker::Freeze for spark_core::transport::handshake::HandshakeOutcome",
  "impl core::marker::Send for spark_core::transport::handshake::HandshakeOutcome",
  "impl core::marker::Sync for spark_core::transport::handshake::HandshakeOutcome",
  "impl core::marker::Unpin for spark_core::transport::handshake::HandshakeOutcome",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::handshake::HandshakeOutcome",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::handshake::HandshakeOutcome",
  "pub struct spark_core::transport::handshake::NegotiationAuditContext",
  "impl spark_core::transport::handshake::NegotiationAuditContext",
  "pub fn spark_core::transport::handshake::NegotiationAuditContext::new(recorder: alloc::sync::Arc<dyn spark_core::audit::AuditRecorder>, entity_kind: impl core::convert::Into<alloc::borrow::Cow<'static, str>>, entity_id: impl core::convert::Into<alloc::string::String>, actor: spark_core::audit::AuditActor) -> Self",
  "pub fn spark_core::transport::handshake::NegotiationAuditContext::with_actions(self, success: impl core::convert::Into<alloc::borrow::Cow<'static, str>>, failure: impl core::convert::Into<alloc::borrow::Cow<'static, str>>) -> Self",
  "pub fn spark_core::transport::handshake::NegotiationAuditContext::with_labels(self, labels: alloc::vec::Vec<(alloc::borrow::Cow<'static, str>, alloc::borrow::Cow<'static, str>)>) -> Self",
  "pub fn spark_core::transport::handshake::NegotiationAuditContext::with_start_sequence(self, sequence: u64) -> Self",
  "pub fn spark_core::transport::handshake::NegotiationAuditContext::with_tsa_evidence(self, evidence: spark_core::audit::TsaEvidence) -> Self",
  "impl core::clone::Clone for spark_core::transport::handshake::NegotiationAuditContext",
  "pub fn spark_core::transport::handshake::NegotiationAuditContext::clone(&self) -> spark_core::transport::handshake::NegotiationAuditContext",
  "impl core::marker::Freeze for spark_core::transport::handshake::NegotiationAuditContext",
  "impl core::marker::Send for spark_core::transport::handshake::NegotiationAuditContext",
  "impl core::marker::Sync for spark_core::transport::handshake::NegotiationAuditContext",
  "impl core::marker::Unpin for spark_core::transport::handshake::NegotiationAuditContext",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::handshake::NegotiationAuditContext",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::transport::handshake::NegotiationAuditContext",
  "pub struct spark_core::transport::handshake::Version",
  "impl spark_core::transport::handshake::Version",
  "pub const fn spark_core::transport::handshake::Version::is_compatible_with(&self, other: &Self) -> bool",
  "pub const fn spark_core::transport::handshake::Version::major(&self) -> u16",
  "pub const fn spark_core::transport::handshake::Version::minor(&self) -> u16",
  "pub const fn spark_core::transport::handshake::Version::new(major: u16, minor: u16, patch: u16) -> Self",
  "pub const fn spark_core::transport::handshake::Version::patch(&self) -> u16",
  "impl core::clone::Clone for spark_core::transport::handshake::Version",
  "pub fn spark_core::transport::handshake::Version::clone(&self) -> spark_core::transport::handshake::Version",
  "impl core::cmp::Eq for spark_core::transport::handshake::Version",
  "impl core::cmp::Ord for spark_core::transport::handshake::Version",
  "pub fn spark_core::transport::handshake::Version::cmp(&self, other: &Self) -> core::cmp::Ordering",
  "impl core::cmp::PartialEq for spark_core::transport::handshake::Version",
  "pub fn spark_core::transport::handshake::Version::eq(&self, other: &spark_core::transport::handshake::Version) -> bool",
  "impl core::cmp::PartialOrd for spark_core::transport::handshake::Version",
  "pub fn spark_core::transport::handshake::Version::partial_cmp(&self, other: &Self) -> core::option::Option<core::cmp::Ordering>",
  "impl core::fmt::Debug for spark_core::transport::handshake::Version",
  "pub fn spark_core::transport::handshake::Version::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::transport::handshake::Version",
  "pub fn spark_core::transport::handshake::Version::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::transport::handshake::Version",
  "pub fn spark_core::transport::handshake::Version::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::Copy for spark_core::transport::handshake::Version",
  "impl core::marker::StructuralPartialEq for spark_core::transport::handshake::Version",
  "impl core::marker::Freeze for spark_core::transport::handshake::Version",
  "impl core::marker::Send for spark_core::transport::handshake::Version",
  "impl core::marker::Sync for spark_core::transport::handshake::Version",
  "impl core::marker::Unpin for spark_core::transport::handshake::Version",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::handshake::Version",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::handshake::Version",
  "pub fn spark_core::transport::handshake::negotiate(local: &spark_core::transport::handshake::HandshakeOffer, remote: &spark_core::transport::handshake::HandshakeOffer, occurred_at: u64, audit: core::option::Option<&mut spark_core::transport::handshake::NegotiationAuditContext>) -> core::result::Result<spark_core::transport::handshake::HandshakeOutcome, spark_core::transport::handshake::HandshakeError>",
  "pub mod spark_core::transport::intent",
  "#[non_exhaustive] pub enum spark_core::transport::intent::AvailabilityRequirement",
  "pub spark_core::transport::intent::AvailabilityRequirement::BestEffort",
  "pub spark_core::transport::intent::AvailabilityRequirement::RequireReady",
  "pub spark_core::transport::intent::AvailabilityRequirement::RequireRedundant",
  "impl core::clone::Clone for spark_core::transport::intent::AvailabilityRequirement",
  "pub fn spark_core::transport::intent::AvailabilityRequirement::clone(&self) -> spark_core::transport::intent::AvailabilityRequirement",
  "impl core::cmp::Eq for spark_core::transport::intent::AvailabilityRequirement",
  "impl core::cmp::PartialEq for spark_core::transport::intent::AvailabilityRequirement",
  "pub fn spark_core::transport::intent::AvailabilityRequirement::eq(&self, other: &spark_core::transport::intent::AvailabilityRequirement) -> bool",
  "impl core::fmt::Debug for spark_core::transport::intent::AvailabilityRequirement",
  "pub fn spark_core::transport::intent::AvailabilityRequirement::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::transport::intent::AvailabilityRequirement",
  "impl core::marker::StructuralPartialEq for spark_core::transport::intent::AvailabilityRequirement",
  "impl core::marker::Freeze for spark_core::transport::intent::AvailabilityRequirement",
  "impl core::marker::Send for spark_core::transport::intent::AvailabilityRequirement",
  "impl core::marker::Sync for spark_core::transport::intent::AvailabilityRequirement",
  "impl core::marker::Unpin for spark_core::transport::intent::AvailabilityRequirement",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::intent::AvailabilityRequirement",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::intent::AvailabilityRequirement",
  "#[non_exhaustive] pub enum spark_core::transport::intent::QualityOfService",
  "pub spark_core::transport::intent::QualityOfService::BulkTransfer",
  "pub spark_core::transport::intent::QualityOfService::Interactive",
  "pub spark_core::transport::intent::QualityOfService::Streaming",
  "impl core::clone::Clone for spark_core::transport::intent::QualityOfService",
  "pub fn spark_core::transport::intent::QualityOfService::clone(&self) -> spark_core::transport::intent::QualityOfService",
  "impl core::cmp::Eq for spark_core::transport::intent::QualityOfService",
  "impl core::cmp::PartialEq for spark_core::transport::intent::QualityOfService",
  "pub fn spark_core::transport::intent::QualityOfService::eq(&self, other: &spark_core::transport::intent::QualityOfService) -> bool",
  "impl core::fmt::Debug for spark_core::transport::intent::QualityOfService",
  "pub fn spark_core::transport::intent::QualityOfService::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::transport::intent::QualityOfService",
  "impl core::marker::StructuralPartialEq for spark_core::transport::intent::QualityOfService",
  "impl core::marker::Freeze for spark_core::transport::intent::QualityOfService",
  "impl core::marker::Send for spark_core::transport::intent::QualityOfService",
  "impl core::marker::Sync for spark_core::transport::intent::QualityOfService",
  "impl core::marker::Unpin for spark_core::transport::intent::QualityOfService",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::intent::QualityOfService",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::intent::QualityOfService",
  "#[non_exhaustive] pub enum spark_core::transport::intent::SecurityMode",
  "pub spark_core::transport::intent::SecurityMode::Custom",
  "pub spark_core::transport::intent::SecurityMode::Custom::identifier: alloc::string::String",
  "pub spark_core::transport::intent::SecurityMode::EnforcedTls",
  "pub spark_core::transport::intent::SecurityMode::Inherit",
  "pub spark_core::transport::intent::SecurityMode::Plaintext",
  "impl core::clone::Clone for spark_core::transport::intent::SecurityMode",
  "pub fn spark_core::transport::intent::SecurityMode::clone(&self) -> spark_core::transport::intent::SecurityMode",
  "impl core::cmp::Eq for spark_core::transport::intent::SecurityMode",
  "impl core::cmp::PartialEq for spark_core::transport::intent::SecurityMode",
  "pub fn spark_core::transport::intent::SecurityMode::eq(&self, other: &spark_core::transport::intent::SecurityMode) -> bool",
  "impl core::fmt::Debug for spark_core::transport::intent::SecurityMode",
  "pub fn spark_core::transport::intent::SecurityMode::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::transport::intent::SecurityMode",
  "impl core::marker::Freeze for spark_core::transport::intent::SecurityMode",
  "impl core::marker::Send for spark_core::transport::intent::SecurityMode",
  "impl core::marker::Sync for spark_core::transport::intent::SecurityMode",
  "impl core::marker::Unpin for spark_core::transport::intent::SecurityMode",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::intent::SecurityMode",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::intent::SecurityMode",
  "#[non_exhaustive] pub enum spark_core::transport::intent::SessionLifecycle",
  "pub spark_core::transport::intent::SessionLifecycle::BidirectionalStream",
  "pub spark_core::transport::intent::SessionLifecycle::Ephemeral",
  "pub spark_core::transport::intent::SessionLifecycle::Subscription",
  "impl core::clone::Clone for spark_core::transport::intent::SessionLifecycle",
  "pub fn spark_core::transport::intent::SessionLifecycle::clone(&self) -> spark_core::transport::intent::SessionLifecycle",
  "impl core::cmp::Eq for spark_core::transport::intent::SessionLifecycle",
  "impl core::cmp::PartialEq for spark_core::transport::intent::SessionLifecycle",
  "pub fn spark_core::transport::intent::SessionLifecycle::eq(&self, other: &spark_core::transport::intent::SessionLifecycle) -> bool",
  "impl core::fmt::Debug for spark_core::transport::intent::SessionLifecycle",
  "pub fn spark_core::transport::intent::SessionLifecycle::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::transport::intent::SessionLifecycle",
  "impl core::marker::StructuralPartialEq for spark_core::transport::intent::SessionLifecycle",
  "impl core::marker::Freeze for spark_core::transport::intent::SessionLifecycle",
  "impl core::marker::Send for spark_core::transport::intent::SessionLifecycle",
  "impl core::marker::Sync for spark_core::transport::intent::SessionLifecycle",
  "impl core::marker::Unpin for spark_core::transport::intent::SessionLifecycle",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::intent::SessionLifecycle",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::intent::SessionLifecycle",
  "pub struct spark_core::transport::intent::ConnectionIntent",
  "impl spark_core::transport::intent::ConnectionIntent",
  "pub fn spark_core::transport::intent::ConnectionIntent::availability(&self) -> spark_core::transport::intent::AvailabilityRequirement",
  "pub fn spark_core::transport::intent::ConnectionIntent::endpoint(&self) -> &spark_core::transport::endpoint::Endpoint",
  "pub fn spark_core::transport::intent::ConnectionIntent::lifecycle(&self) -> spark_core::transport::intent::SessionLifecycle",
  "pub fn spark_core::transport::intent::ConnectionIntent::new(endpoint: spark_core::transport::endpoint::Endpoint) -> Self",
  "pub fn spark_core::transport::intent::ConnectionIntent::params(&self) -> &spark_core::transport::params::TransportParams",
  "pub fn spark_core::transport::intent::ConnectionIntent::qos(&self) -> spark_core::transport::intent::QualityOfService",
  "pub fn spark_core::transport::intent::ConnectionIntent::retry_budget(&self) -> core::option::Option<u32>",
  "pub fn spark_core::transport::intent::ConnectionIntent::security(&self) -> &spark_core::transport::intent::SecurityMode",
  "pub fn spark_core::transport::intent::ConnectionIntent::timeout(&self) -> core::option::Option<core::time::Duration>",
  "pub fn spark_core::transport::intent::ConnectionIntent::with_availability(self, availability: spark_core::transport::intent::AvailabilityRequirement) -> Self",
  "pub fn spark_core::transport::intent::ConnectionIntent::with_lifecycle(self, lifecycle: spark_core::transport::intent::SessionLifecycle) -> Self",
  "pub fn spark_core::transport::intent::ConnectionIntent::with_params(self, params: spark_core::transport::params::TransportParams) -> Self",
  "pub fn spark_core::transport::intent::ConnectionIntent::with_qos(self, qos: spark_core::transport::intent::QualityOfService) -> Self",
  "pub fn spark_core::transport::intent::ConnectionIntent::with_retry_budget(self, retries: u32) -> Self",
  "pub fn spark_core::transport::intent::ConnectionIntent::with_security(self, security: spark_core::transport::intent::SecurityMode) -> Self",
  "pub fn spark_core::transport::intent::ConnectionIntent::with_timeout(self, timeout: core::time::Duration) -> Self",
  "impl core::clone::Clone for spark_core::transport::intent::ConnectionIntent",
  "pub fn spark_core::transport::intent::ConnectionIntent::clone(&self) -> spark_core::transport::intent::ConnectionIntent",
  "impl core::cmp::Eq for spark_core::transport::intent::ConnectionIntent",
  "impl core::cmp::PartialEq for spark_core::transport::intent::ConnectionIntent",
  "pub fn spark_core::transport::intent::ConnectionIntent::eq(&self, other: &spark_core::transport::intent::ConnectionIntent) -> bool",
  "impl core::fmt::Debug for spark_core::transport::intent::ConnectionIntent",
  "pub fn spark_core::transport::intent::ConnectionIntent::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::transport::intent::ConnectionIntent",
  "impl core::marker::Freeze for spark_core::transport::intent::ConnectionIntent",
  "impl core::marker::Send for spark_core::transport::intent::ConnectionIntent",
  "impl core::marker::Sync for spark_core::transport::intent::ConnectionIntent",
  "impl core::marker::Unpin for spark_core::transport::intent::ConnectionIntent",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::intent::ConnectionIntent",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::intent::ConnectionIntent",
  "pub mod spark_core::transport::metrics",
  "pub enum spark_core::transport::metrics::LinkDirection",
  "pub spark_core::transport::metrics::LinkDirection::Inbound",
  "pub spark_core::transport::metrics::LinkDirection::Outbound",
  "impl core::clone::Clone for spark_core::transport::metrics::LinkDirection",
  "pub fn spark_core::transport::metrics::LinkDirection::clone(&self) -> spark_core::transport::metrics::LinkDirection",
  "impl core::cmp::Eq for spark_core::transport::metrics::LinkDirection",
  "impl core::cmp::PartialEq for spark_core::transport::metrics::LinkDirection",
  "pub fn spark_core::transport::metrics::LinkDirection::eq(&self, other: &spark_core::transport::metrics::LinkDirection) -> bool",
  "impl core::fmt::Debug for spark_core::transport::metrics::LinkDirection",
  "pub fn spark_core::transport::metrics::LinkDirection::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::transport::metrics::LinkDirection",
  "impl core::marker::StructuralPartialEq for spark_core::transport::metrics::LinkDirection",
  "impl core::marker::Freeze for spark_core::transport::metrics::LinkDirection",
  "impl core::marker::Send for spark_core::transport::metrics::LinkDirection",
  "impl core::marker::Sync for spark_core::transport::metrics::LinkDirection",
  "impl core::marker::Unpin for spark_core::transport::metrics::LinkDirection",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::metrics::LinkDirection",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::metrics::LinkDirection",
  "pub struct spark_core::transport::metrics::TransportMetricsHook<'a>",
  "impl<'a> spark_core::transport::metrics::TransportMetricsHook<'a>",
  "pub fn spark_core::transport::metrics::TransportMetricsHook<'a>::new(provider: &'a dyn spark_core::observability::metrics::MetricsProvider) -> Self",
  "pub fn spark_core::transport::metrics::TransportMetricsHook<'a>::on_connection_attempt(&self, attempt_attributes: spark_core::observability::attributes::AttributeSet<'_>, success: bool)",
  "pub fn spark_core::transport::metrics::TransportMetricsHook<'a>::on_connection_closed(&self, active_attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub fn spark_core::transport::metrics::TransportMetricsHook<'a>::on_connection_established(&self, active_attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub fn spark_core::transport::metrics::TransportMetricsHook<'a>::record_handshake_duration(&self, duration: core::time::Duration, attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub fn spark_core::transport::metrics::TransportMetricsHook<'a>::record_link_bytes(&self, direction: spark_core::transport::metrics::LinkDirection, bytes: u64, attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "impl<'a> core::marker::Freeze for spark_core::transport::metrics::TransportMetricsHook<'a>",
  "impl<'a> core::marker::Send for spark_core::transport::metrics::TransportMetricsHook<'a>",
  "impl<'a> core::marker::Sync for spark_core::transport::metrics::TransportMetricsHook<'a>",
  "impl<'a> core::marker::Unpin for spark_core::transport::metrics::TransportMetricsHook<'a>",
  "impl<'a> !core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::metrics::TransportMetricsHook<'a>",
  "impl<'a> !core::panic::unwind_safe::UnwindSafe for spark_core::transport::metrics::TransportMetricsHook<'a>",
  "pub mod spark_core::transport::params",
  "pub struct spark_core::transport::params::TransportParams(_)",
  "impl spark_core::transport::params::TransportParams",
  "pub fn spark_core::transport::params::TransportParams::as_map(&self) -> &alloc::collections::btree::map::BTreeMap<alloc::string::String, alloc::string::String>",
  "pub fn spark_core::transport::params::TransportParams::get_bool(&self, key: &str) -> core::option::Option<bool>",
  "pub fn spark_core::transport::params::TransportParams::get_duration(&self, key: &str) -> core::option::Option<core::time::Duration>",
  "pub fn spark_core::transport::params::TransportParams::get_size_bytes(&self, key: &str) -> core::option::Option<u64>",
  "pub fn spark_core::transport::params::TransportParams::get_str(&self, key: &str) -> core::option::Option<&str>",
  "pub fn spark_core::transport::params::TransportParams::get_u64(&self, key: &str) -> core::option::Option<u64>",
  "pub fn spark_core::transport::params::TransportParams::insert(&mut self, key: alloc::string::String, value: alloc::string::String)",
  "pub fn spark_core::transport::params::TransportParams::merge(&mut self, other: &spark_core::transport::params::TransportParams) -> &mut Self",
  "pub fn spark_core::transport::params::TransportParams::new() -> Self",
  "impl core::clone::Clone for spark_core::transport::params::TransportParams",
  "pub fn spark_core::transport::params::TransportParams::clone(&self) -> spark_core::transport::params::TransportParams",
  "impl core::cmp::Eq for spark_core::transport::params::TransportParams",
  "impl core::cmp::PartialEq for spark_core::transport::params::TransportParams",
  "pub fn spark_core::transport::params::TransportParams::eq(&self, other: &spark_core::transport::params::TransportParams) -> bool",
  "impl core::default::Default for spark_core::transport::params::TransportParams",
  "pub fn spark_core::transport::params::TransportParams::default() -> spark_core::transport::params::TransportParams",
  "impl core::fmt::Debug for spark_core::transport::params::TransportParams",
  "pub fn spark_core::transport::params::TransportParams::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::transport::params::TransportParams",
  "impl core::marker::Freeze for spark_core::transport::params::TransportParams",
  "impl core::marker::Send for spark_core::transport::params::TransportParams",
  "impl core::marker::Sync for spark_core::transport::params::TransportParams",
  "impl core::marker::Unpin for spark_core::transport::params::TransportParams",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::params::TransportParams",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::params::TransportParams",
  "pub mod spark_core::transport::server",
  "pub struct spark_core::transport::server::ListenerShutdown",
  "impl spark_core::transport::server::ListenerShutdown",
  "pub fn spark_core::transport::server::ListenerShutdown::deadline(&self) -> core::time::Duration",
  "pub fn spark_core::transport::server::ListenerShutdown::drain_existing(&self) -> bool",
  "pub fn spark_core::transport::server::ListenerShutdown::new(deadline: core::time::Duration, drain_existing: bool) -> Self",
  "impl core::clone::Clone for spark_core::transport::server::ListenerShutdown",
  "pub fn spark_core::transport::server::ListenerShutdown::clone(&self) -> spark_core::transport::server::ListenerShutdown",
  "impl core::cmp::Eq for spark_core::transport::server::ListenerShutdown",
  "impl core::cmp::PartialEq for spark_core::transport::server::ListenerShutdown",
  "pub fn spark_core::transport::server::ListenerShutdown::eq(&self, other: &spark_core::transport::server::ListenerShutdown) -> bool",
  "impl core::fmt::Debug for spark_core::transport::server::ListenerShutdown",
  "pub fn spark_core::transport::server::ListenerShutdown::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::transport::server::ListenerShutdown",
  "impl core::marker::StructuralPartialEq for spark_core::transport::server::ListenerShutdown",
  "impl core::marker::Freeze for spark_core::transport::server::ListenerShutdown",
  "impl core::marker::Send for spark_core::transport::server::ListenerShutdown",
  "impl core::marker::Sync for spark_core::transport::server::ListenerShutdown",
  "impl core::marker::Unpin for spark_core::transport::server::ListenerShutdown",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::server::ListenerShutdown",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::server::ListenerShutdown",
  "pub fn spark_core::transport::server::describe_shutdown_target(addr: &spark_core::transport::address::TransportSocketAddr, plan: &spark_core::transport::server::ListenerShutdown) -> alloc::string::String",
  "pub mod spark_core::transport::traits",
  "pub mod spark_core::transport::traits::generic",
  "pub trait spark_core::transport::traits::generic::ServerTransport: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub type spark_core::transport::traits::generic::ServerTransport::ShutdownFuture<'a> where Self: 'a: core::future::future::Future<Output = core::result::Result<(), spark_core::error::CoreError>> + core::marker::Send + 'a",
  "pub fn spark_core::transport::traits::generic::ServerTransport::local_addr(&self, ctx: &spark_core::context::ExecutionContext<'_>) -> spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::transport::traits::generic::ServerTransport::shutdown(&self, ctx: &spark_core::context::ExecutionContext<'_>, plan: spark_core::transport::server::ListenerShutdown) -> Self::ShutdownFuture",
  "pub trait spark_core::transport::traits::generic::TransportFactory: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub type spark_core::transport::traits::generic::TransportFactory::BindFuture<'a, P> where Self: 'a, P: spark_core::pipeline::traits::generic::ControllerFactory + core::marker::Send + core::marker::Sync + 'static: core::future::future::Future<Output = core::result::Result<Self::Server, spark_core::error::CoreError>> + core::marker::Send + 'a",
  "pub type spark_core::transport::traits::generic::TransportFactory::Channel: spark_core::pipeline::channel::Channel",
  "pub type spark_core::transport::traits::generic::TransportFactory::ConnectFuture<'a> where Self: 'a: core::future::future::Future<Output = core::result::Result<Self::Channel, spark_core::error::CoreError>> + core::marker::Send + 'a",
  "pub type spark_core::transport::traits::generic::TransportFactory::Server: spark_core::transport::traits::generic::ServerTransport",
  "pub fn spark_core::transport::traits::generic::TransportFactory::bind<P>(&self, ctx: &spark_core::context::ExecutionContext<'_>, config: spark_core::transport::factory::ListenerConfig, pipeline_factory: alloc::sync::Arc<P>) -> Self::BindFuture where P: spark_core::pipeline::traits::generic::ControllerFactory + core::marker::Send + core::marker::Sync + 'static, <P as spark_core::pipeline::traits::generic::ControllerFactory>::Controller: spark_core::pipeline::controller::Controller",
  "pub fn spark_core::transport::traits::generic::TransportFactory::connect(&self, ctx: &spark_core::context::ExecutionContext<'_>, intent: spark_core::transport::intent::ConnectionIntent, discovery: core::option::Option<alloc::sync::Arc<dyn spark_core::cluster::discovery::ServiceDiscovery>>) -> Self::ConnectFuture",
  "pub fn spark_core::transport::traits::generic::TransportFactory::scheme(&self, ctx: &spark_core::context::ExecutionContext<'_>) -> &'static str",
  "pub mod spark_core::transport::traits::object",
  "pub struct spark_core::transport::traits::object::ServerTransportObject<T> where T: spark_core::transport::traits::generic::ServerTransport",
  "impl<T> spark_core::transport::traits::object::ServerTransportObject<T> where T: spark_core::transport::traits::generic::ServerTransport",
  "pub fn spark_core::transport::traits::object::ServerTransportObject<T>::into_inner(self) -> alloc::sync::Arc<T>",
  "pub fn spark_core::transport::traits::object::ServerTransportObject<T>::new(inner: T) -> Self",
  "impl<T> spark_core::transport::traits::object::DynServerTransport for spark_core::transport::traits::object::ServerTransportObject<T> where T: spark_core::transport::traits::generic::ServerTransport",
  "pub fn spark_core::transport::traits::object::ServerTransportObject<T>::local_addr_dyn(&self, ctx: &spark_core::context::ExecutionContext<'_>) -> spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::transport::traits::object::ServerTransportObject<T>::shutdown_dyn<'life0, 'life1, 'life2, 'async_trait>(&'life0 self, ctx: &'life1 spark_core::context::ExecutionContext<'life2>, plan: spark_core::transport::server::ListenerShutdown) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<(), spark_core::error::CoreError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait, 'life1: 'async_trait, 'life2: 'async_trait",
  "impl<T> core::marker::Freeze for spark_core::transport::traits::object::ServerTransportObject<T>",
  "impl<T> core::marker::Send for spark_core::transport::traits::object::ServerTransportObject<T>",
  "impl<T> core::marker::Sync for spark_core::transport::traits::object::ServerTransportObject<T>",
  "impl<T> core::marker::Unpin for spark_core::transport::traits::object::ServerTransportObject<T>",
  "impl<T> core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::traits::object::ServerTransportObject<T> where T: core::panic::unwind_safe::RefUnwindSafe",
  "impl<T> core::panic::unwind_safe::UnwindSafe for spark_core::transport::traits::object::ServerTransportObject<T> where T: core::panic::unwind_safe::RefUnwindSafe",
  "pub struct spark_core::transport::traits::object::TransportFactoryObject<F> where F: spark_core::transport::traits::generic::TransportFactory",
  "impl<F> spark_core::transport::traits::object::TransportFactoryObject<F> where F: spark_core::transport::traits::generic::TransportFactory",
  "pub fn spark_core::transport::traits::object::TransportFactoryObject<F>::into_inner(self) -> alloc::sync::Arc<F>",
  "pub fn spark_core::transport::traits::object::TransportFactoryObject<F>::new(inner: F) -> Self",
  "impl<F> spark_core::transport::traits::object::DynTransportFactory for spark_core::transport::traits::object::TransportFactoryObject<F> where F: spark_core::transport::traits::generic::TransportFactory",
  "pub fn spark_core::transport::traits::object::TransportFactoryObject<F>::bind_dyn<'life0, 'life1, 'life2, 'async_trait>(&'life0 self, ctx: &'life1 spark_core::context::ExecutionContext<'life2>, config: spark_core::transport::factory::ListenerConfig, pipeline_factory: alloc::sync::Arc<dyn spark_core::pipeline::traits::object::DynControllerFactory>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<alloc::boxed::Box<dyn spark_core::transport::traits::object::DynServerTransport>, spark_core::error::CoreError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait, 'life1: 'async_trait, 'life2: 'async_trait",
  "pub fn spark_core::transport::traits::object::TransportFactoryObject<F>::connect_dyn<'life0, 'life1, 'life2, 'async_trait>(&'life0 self, ctx: &'life1 spark_core::context::ExecutionContext<'life2>, intent: spark_core::transport::intent::ConnectionIntent, discovery: core::option::Option<alloc::sync::Arc<dyn spark_core::cluster::discovery::ServiceDiscovery>>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<alloc::boxed::Box<dyn spark_core::pipeline::channel::Channel>, spark_core::error::CoreError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait, 'life1: 'async_trait, 'life2: 'async_trait",
  "pub fn spark_core::transport::traits::object::TransportFactoryObject<F>::scheme_dyn(&self, ctx: &spark_core::context::ExecutionContext<'_>) -> &'static str",
  "impl<F> core::marker::Freeze for spark_core::transport::traits::object::TransportFactoryObject<F>",
  "impl<F> core::marker::Send for spark_core::transport::traits::object::TransportFactoryObject<F>",
  "impl<F> core::marker::Sync for spark_core::transport::traits::object::TransportFactoryObject<F>",
  "impl<F> core::marker::Unpin for spark_core::transport::traits::object::TransportFactoryObject<F>",
  "impl<F> core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::traits::object::TransportFactoryObject<F> where F: core::panic::unwind_safe::RefUnwindSafe",
  "impl<F> core::panic::unwind_safe::UnwindSafe for spark_core::transport::traits::object::TransportFactoryObject<F> where F: core::panic::unwind_safe::RefUnwindSafe",
  "pub trait spark_core::transport::traits::object::DynServerTransport: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::transport::traits::object::DynServerTransport::local_addr_dyn(&self, ctx: &spark_core::context::ExecutionContext<'_>) -> spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::transport::traits::object::DynServerTransport::shutdown_dyn<'life0, 'life1, 'life2, 'async_trait>(&'life0 self, ctx: &'life1 spark_core::context::ExecutionContext<'life2>, plan: spark_core::transport::server::ListenerShutdown) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<(), spark_core::error::CoreError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait, 'life1: 'async_trait, 'life2: 'async_trait",
  "impl<T> spark_core::transport::traits::object::DynServerTransport for spark_core::transport::traits::object::ServerTransportObject<T> where T: spark_core::transport::traits::generic::ServerTransport",
  "pub fn spark_core::transport::traits::object::ServerTransportObject<T>::local_addr_dyn(&self, ctx: &spark_core::context::ExecutionContext<'_>) -> spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::transport::traits::object::ServerTransportObject<T>::shutdown_dyn<'life0, 'life1, 'life2, 'async_trait>(&'life0 self, ctx: &'life1 spark_core::context::ExecutionContext<'life2>, plan: spark_core::transport::server::ListenerShutdown) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<(), spark_core::error::CoreError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait, 'life1: 'async_trait, 'life2: 'async_trait",
  "pub trait spark_core::transport::traits::object::DynTransportFactory: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::transport::traits::object::DynTransportFactory::bind_dyn<'life0, 'life1, 'life2, 'async_trait>(&'life0 self, ctx: &'life1 spark_core::context::ExecutionContext<'life2>, config: spark_core::transport::factory::ListenerConfig, pipeline_factory: alloc::sync::Arc<dyn spark_core::pipeline::traits::object::DynControllerFactory>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<alloc::boxed::Box<dyn spark_core::transport::traits::object::DynServerTransport>, spark_core::error::CoreError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait, 'life1: 'async_trait, 'life2: 'async_trait",
  "pub fn spark_core::transport::traits::object::DynTransportFactory::connect_dyn<'life0, 'life1, 'life2, 'async_trait>(&'life0 self, ctx: &'life1 spark_core::context::ExecutionContext<'life2>, intent: spark_core::transport::intent::ConnectionIntent, discovery: core::option::Option<alloc::sync::Arc<dyn spark_core::cluster::discovery::ServiceDiscovery>>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<alloc::boxed::Box<dyn spark_core::pipeline::channel::Channel>, spark_core::error::CoreError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait, 'life1: 'async_trait, 'life2: 'async_trait",
  "pub fn spark_core::transport::traits::object::DynTransportFactory::scheme_dyn(&self, ctx: &spark_core::context::ExecutionContext<'_>) -> &'static str",
  "impl<F> spark_core::transport::traits::object::DynTransportFactory for spark_core::transport::traits::object::TransportFactoryObject<F> where F: spark_core::transport::traits::generic::TransportFactory",
  "pub fn spark_core::transport::traits::object::TransportFactoryObject<F>::bind_dyn<'life0, 'life1, 'life2, 'async_trait>(&'life0 self, ctx: &'life1 spark_core::context::ExecutionContext<'life2>, config: spark_core::transport::factory::ListenerConfig, pipeline_factory: alloc::sync::Arc<dyn spark_core::pipeline::traits::object::DynControllerFactory>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<alloc::boxed::Box<dyn spark_core::transport::traits::object::DynServerTransport>, spark_core::error::CoreError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait, 'life1: 'async_trait, 'life2: 'async_trait",
  "pub fn spark_core::transport::traits::object::TransportFactoryObject<F>::connect_dyn<'life0, 'life1, 'life2, 'async_trait>(&'life0 self, ctx: &'life1 spark_core::context::ExecutionContext<'life2>, intent: spark_core::transport::intent::ConnectionIntent, discovery: core::option::Option<alloc::sync::Arc<dyn spark_core::cluster::discovery::ServiceDiscovery>>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<alloc::boxed::Box<dyn spark_core::pipeline::channel::Channel>, spark_core::error::CoreError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait, 'life1: 'async_trait, 'life2: 'async_trait",
  "pub fn spark_core::transport::traits::object::TransportFactoryObject<F>::scheme_dyn(&self, ctx: &spark_core::context::ExecutionContext<'_>) -> &'static str",
  "pub struct spark_core::transport::traits::ServerTransportObject<T> where T: spark_core::transport::traits::generic::ServerTransport",
  "impl<T> spark_core::transport::traits::object::ServerTransportObject<T> where T: spark_core::transport::traits::generic::ServerTransport",
  "pub fn spark_core::transport::traits::object::ServerTransportObject<T>::into_inner(self) -> alloc::sync::Arc<T>",
  "pub fn spark_core::transport::traits::object::ServerTransportObject<T>::new(inner: T) -> Self",
  "impl<T> spark_core::transport::traits::object::DynServerTransport for spark_core::transport::traits::object::ServerTransportObject<T> where T: spark_core::transport::traits::generic::ServerTransport",
  "pub fn spark_core::transport::traits::object::ServerTransportObject<T>::local_addr_dyn(&self, ctx: &spark_core::context::ExecutionContext<'_>) -> spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::transport::traits::object::ServerTransportObject<T>::shutdown_dyn<'life0, 'life1, 'life2, 'async_trait>(&'life0 self, ctx: &'life1 spark_core::context::ExecutionContext<'life2>, plan: spark_core::transport::server::ListenerShutdown) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<(), spark_core::error::CoreError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait, 'life1: 'async_trait, 'life2: 'async_trait",
  "impl<T> core::marker::Freeze for spark_core::transport::traits::object::ServerTransportObject<T>",
  "impl<T> core::marker::Send for spark_core::transport::traits::object::ServerTransportObject<T>",
  "impl<T> core::marker::Sync for spark_core::transport::traits::object::ServerTransportObject<T>",
  "impl<T> core::marker::Unpin for spark_core::transport::traits::object::ServerTransportObject<T>",
  "impl<T> core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::traits::object::ServerTransportObject<T> where T: core::panic::unwind_safe::RefUnwindSafe",
  "impl<T> core::panic::unwind_safe::UnwindSafe for spark_core::transport::traits::object::ServerTransportObject<T> where T: core::panic::unwind_safe::RefUnwindSafe",
  "pub struct spark_core::transport::traits::TransportFactoryObject<F> where F: spark_core::transport::traits::generic::TransportFactory",
  "impl<F> spark_core::transport::traits::object::TransportFactoryObject<F> where F: spark_core::transport::traits::generic::TransportFactory",
  "pub fn spark_core::transport::traits::object::TransportFactoryObject<F>::into_inner(self) -> alloc::sync::Arc<F>",
  "pub fn spark_core::transport::traits::object::TransportFactoryObject<F>::new(inner: F) -> Self",
  "impl<F> spark_core::transport::traits::object::DynTransportFactory for spark_core::transport::traits::object::TransportFactoryObject<F> where F: spark_core::transport::traits::generic::TransportFactory",
  "pub fn spark_core::transport::traits::object::TransportFactoryObject<F>::bind_dyn<'life0, 'life1, 'life2, 'async_trait>(&'life0 self, ctx: &'life1 spark_core::context::ExecutionContext<'life2>, config: spark_core::transport::factory::ListenerConfig, pipeline_factory: alloc::sync::Arc<dyn spark_core::pipeline::traits::object::DynControllerFactory>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<alloc::boxed::Box<dyn spark_core::transport::traits::object::DynServerTransport>, spark_core::error::CoreError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait, 'life1: 'async_trait, 'life2: 'async_trait",
  "pub fn spark_core::transport::traits::object::TransportFactoryObject<F>::connect_dyn<'life0, 'life1, 'life2, 'async_trait>(&'life0 self, ctx: &'life1 spark_core::context::ExecutionContext<'life2>, intent: spark_core::transport::intent::ConnectionIntent, discovery: core::option::Option<alloc::sync::Arc<dyn spark_core::cluster::discovery::ServiceDiscovery>>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<alloc::boxed::Box<dyn spark_core::pipeline::channel::Channel>, spark_core::error::CoreError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait, 'life1: 'async_trait, 'life2: 'async_trait",
  "pub fn spark_core::transport::traits::object::TransportFactoryObject<F>::scheme_dyn(&self, ctx: &spark_core::context::ExecutionContext<'_>) -> &'static str",
  "impl<F> core::marker::Freeze for spark_core::transport::traits::object::TransportFactoryObject<F>",
  "impl<F> core::marker::Send for spark_core::transport::traits::object::TransportFactoryObject<F>",
  "impl<F> core::marker::Sync for spark_core::transport::traits::object::TransportFactoryObject<F>",
  "impl<F> core::marker::Unpin for spark_core::transport::traits::object::TransportFactoryObject<F>",
  "impl<F> core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::traits::object::TransportFactoryObject<F> where F: core::panic::unwind_safe::RefUnwindSafe",
  "impl<F> core::panic::unwind_safe::UnwindSafe for spark_core::transport::traits::object::TransportFactoryObject<F> where F: core::panic::unwind_safe::RefUnwindSafe",
  "pub trait spark_core::transport::traits::DynServerTransport: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::transport::traits::DynServerTransport::local_addr_dyn(&self, ctx: &spark_core::context::ExecutionContext<'_>) -> spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::transport::traits::DynServerTransport::shutdown_dyn<'life0, 'life1, 'life2, 'async_trait>(&'life0 self, ctx: &'life1 spark_core::context::ExecutionContext<'life2>, plan: spark_core::transport::server::ListenerShutdown) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<(), spark_core::error::CoreError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait, 'life1: 'async_trait, 'life2: 'async_trait",
  "impl<T> spark_core::transport::traits::object::DynServerTransport for spark_core::transport::traits::object::ServerTransportObject<T> where T: spark_core::transport::traits::generic::ServerTransport",
  "pub fn spark_core::transport::traits::object::ServerTransportObject<T>::local_addr_dyn(&self, ctx: &spark_core::context::ExecutionContext<'_>) -> spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::transport::traits::object::ServerTransportObject<T>::shutdown_dyn<'life0, 'life1, 'life2, 'async_trait>(&'life0 self, ctx: &'life1 spark_core::context::ExecutionContext<'life2>, plan: spark_core::transport::server::ListenerShutdown) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<(), spark_core::error::CoreError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait, 'life1: 'async_trait, 'life2: 'async_trait",
  "pub trait spark_core::transport::traits::DynTransportFactory: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::transport::traits::DynTransportFactory::bind_dyn<'life0, 'life1, 'life2, 'async_trait>(&'life0 self, ctx: &'life1 spark_core::context::ExecutionContext<'life2>, config: spark_core::transport::factory::ListenerConfig, pipeline_factory: alloc::sync::Arc<dyn spark_core::pipeline::traits::object::DynControllerFactory>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<alloc::boxed::Box<dyn spark_core::transport::traits::object::DynServerTransport>, spark_core::error::CoreError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait, 'life1: 'async_trait, 'life2: 'async_trait",
  "pub fn spark_core::transport::traits::DynTransportFactory::connect_dyn<'life0, 'life1, 'life2, 'async_trait>(&'life0 self, ctx: &'life1 spark_core::context::ExecutionContext<'life2>, intent: spark_core::transport::intent::ConnectionIntent, discovery: core::option::Option<alloc::sync::Arc<dyn spark_core::cluster::discovery::ServiceDiscovery>>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<alloc::boxed::Box<dyn spark_core::pipeline::channel::Channel>, spark_core::error::CoreError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait, 'life1: 'async_trait, 'life2: 'async_trait",
  "pub fn spark_core::transport::traits::DynTransportFactory::scheme_dyn(&self, ctx: &spark_core::context::ExecutionContext<'_>) -> &'static str",
  "impl<F> spark_core::transport::traits::object::DynTransportFactory for spark_core::transport::traits::object::TransportFactoryObject<F> where F: spark_core::transport::traits::generic::TransportFactory",
  "pub fn spark_core::transport::traits::object::TransportFactoryObject<F>::bind_dyn<'life0, 'life1, 'life2, 'async_trait>(&'life0 self, ctx: &'life1 spark_core::context::ExecutionContext<'life2>, config: spark_core::transport::factory::ListenerConfig, pipeline_factory: alloc::sync::Arc<dyn spark_core::pipeline::traits::object::DynControllerFactory>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<alloc::boxed::Box<dyn spark_core::transport::traits::object::DynServerTransport>, spark_core::error::CoreError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait, 'life1: 'async_trait, 'life2: 'async_trait",
  "pub fn spark_core::transport::traits::object::TransportFactoryObject<F>::connect_dyn<'life0, 'life1, 'life2, 'async_trait>(&'life0 self, ctx: &'life1 spark_core::context::ExecutionContext<'life2>, intent: spark_core::transport::intent::ConnectionIntent, discovery: core::option::Option<alloc::sync::Arc<dyn spark_core::cluster::discovery::ServiceDiscovery>>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<alloc::boxed::Box<dyn spark_core::pipeline::channel::Channel>, spark_core::error::CoreError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait, 'life1: 'async_trait, 'life2: 'async_trait",
  "pub fn spark_core::transport::traits::object::TransportFactoryObject<F>::scheme_dyn(&self, ctx: &spark_core::context::ExecutionContext<'_>) -> &'static str",
  "pub trait spark_core::transport::traits::ServerTransport: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub type spark_core::transport::traits::ServerTransport::ShutdownFuture<'a> where Self: 'a: core::future::future::Future<Output = core::result::Result<(), spark_core::error::CoreError>> + core::marker::Send + 'a",
  "pub fn spark_core::transport::traits::ServerTransport::local_addr(&self, ctx: &spark_core::context::ExecutionContext<'_>) -> spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::transport::traits::ServerTransport::shutdown(&self, ctx: &spark_core::context::ExecutionContext<'_>, plan: spark_core::transport::server::ListenerShutdown) -> Self::ShutdownFuture",
  "pub trait spark_core::transport::traits::TransportFactory: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub type spark_core::transport::traits::TransportFactory::BindFuture<'a, P> where Self: 'a, P: spark_core::pipeline::traits::generic::ControllerFactory + core::marker::Send + core::marker::Sync + 'static: core::future::future::Future<Output = core::result::Result<Self::Server, spark_core::error::CoreError>> + core::marker::Send + 'a",
  "pub type spark_core::transport::traits::TransportFactory::Channel: spark_core::pipeline::channel::Channel",
  "pub type spark_core::transport::traits::TransportFactory::ConnectFuture<'a> where Self: 'a: core::future::future::Future<Output = core::result::Result<Self::Channel, spark_core::error::CoreError>> + core::marker::Send + 'a",
  "pub type spark_core::transport::traits::TransportFactory::Server: spark_core::transport::traits::generic::ServerTransport",
  "pub fn spark_core::transport::traits::TransportFactory::bind<P>(&self, ctx: &spark_core::context::ExecutionContext<'_>, config: spark_core::transport::factory::ListenerConfig, pipeline_factory: alloc::sync::Arc<P>) -> Self::BindFuture where P: spark_core::pipeline::traits::generic::ControllerFactory + core::marker::Send + core::marker::Sync + 'static, <P as spark_core::pipeline::traits::generic::ControllerFactory>::Controller: spark_core::pipeline::controller::Controller",
  "pub fn spark_core::transport::traits::TransportFactory::connect(&self, ctx: &spark_core::context::ExecutionContext<'_>, intent: spark_core::transport::intent::ConnectionIntent, discovery: core::option::Option<alloc::sync::Arc<dyn spark_core::cluster::discovery::ServiceDiscovery>>) -> Self::ConnectFuture",
  "pub fn spark_core::transport::traits::TransportFactory::scheme(&self, ctx: &spark_core::context::ExecutionContext<'_>) -> &'static str",
  "#[non_exhaustive] pub enum spark_core::transport::AvailabilityRequirement",
  "pub spark_core::transport::AvailabilityRequirement::BestEffort",
  "pub spark_core::transport::AvailabilityRequirement::RequireReady",
  "pub spark_core::transport::AvailabilityRequirement::RequireRedundant",
  "impl core::clone::Clone for spark_core::transport::intent::AvailabilityRequirement",
  "pub fn spark_core::transport::intent::AvailabilityRequirement::clone(&self) -> spark_core::transport::intent::AvailabilityRequirement",
  "impl core::cmp::Eq for spark_core::transport::intent::AvailabilityRequirement",
  "impl core::cmp::PartialEq for spark_core::transport::intent::AvailabilityRequirement",
  "pub fn spark_core::transport::intent::AvailabilityRequirement::eq(&self, other: &spark_core::transport::intent::AvailabilityRequirement) -> bool",
  "impl core::fmt::Debug for spark_core::transport::intent::AvailabilityRequirement",
  "pub fn spark_core::transport::intent::AvailabilityRequirement::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::transport::intent::AvailabilityRequirement",
  "impl core::marker::StructuralPartialEq for spark_core::transport::intent::AvailabilityRequirement",
  "impl core::marker::Freeze for spark_core::transport::intent::AvailabilityRequirement",
  "impl core::marker::Send for spark_core::transport::intent::AvailabilityRequirement",
  "impl core::marker::Sync for spark_core::transport::intent::AvailabilityRequirement",
  "impl core::marker::Unpin for spark_core::transport::intent::AvailabilityRequirement",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::intent::AvailabilityRequirement",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::intent::AvailabilityRequirement",
  "#[non_exhaustive] pub enum spark_core::transport::EndpointKind",
  "pub spark_core::transport::EndpointKind::Logical",
  "pub spark_core::transport::EndpointKind::Physical",
  "impl core::clone::Clone for spark_core::transport::endpoint::EndpointKind",
  "pub fn spark_core::transport::endpoint::EndpointKind::clone(&self) -> spark_core::transport::endpoint::EndpointKind",
  "impl core::cmp::Eq for spark_core::transport::endpoint::EndpointKind",
  "impl core::cmp::PartialEq for spark_core::transport::endpoint::EndpointKind",
  "pub fn spark_core::transport::endpoint::EndpointKind::eq(&self, other: &spark_core::transport::endpoint::EndpointKind) -> bool",
  "impl core::fmt::Debug for spark_core::transport::endpoint::EndpointKind",
  "pub fn spark_core::transport::endpoint::EndpointKind::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::transport::endpoint::EndpointKind",
  "impl core::marker::StructuralPartialEq for spark_core::transport::endpoint::EndpointKind",
  "impl core::marker::Freeze for spark_core::transport::endpoint::EndpointKind",
  "impl core::marker::Send for spark_core::transport::endpoint::EndpointKind",
  "impl core::marker::Sync for spark_core::transport::endpoint::EndpointKind",
  "impl core::marker::Unpin for spark_core::transport::endpoint::EndpointKind",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::endpoint::EndpointKind",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::endpoint::EndpointKind",
  "pub enum spark_core::transport::HandshakeErrorKind",
  "pub spark_core::transport::HandshakeErrorKind::AuditFailure",
  "pub spark_core::transport::HandshakeErrorKind::AuditFailure::error: spark_core::audit::AuditError",
  "pub spark_core::transport::HandshakeErrorKind::LocalLacksRemoteRequirements",
  "pub spark_core::transport::HandshakeErrorKind::LocalLacksRemoteRequirements::missing: spark_core::transport::handshake::CapabilityBitmap",
  "pub spark_core::transport::HandshakeErrorKind::MajorVersionMismatch",
  "pub spark_core::transport::HandshakeErrorKind::MajorVersionMismatch::local: spark_core::transport::handshake::Version",
  "pub spark_core::transport::HandshakeErrorKind::MajorVersionMismatch::remote: spark_core::transport::handshake::Version",
  "pub spark_core::transport::HandshakeErrorKind::RemoteLacksLocalRequirements",
  "pub spark_core::transport::HandshakeErrorKind::RemoteLacksLocalRequirements::missing: spark_core::transport::handshake::CapabilityBitmap",
  "impl core::clone::Clone for spark_core::transport::handshake::HandshakeErrorKind",
  "pub fn spark_core::transport::handshake::HandshakeErrorKind::clone(&self) -> spark_core::transport::handshake::HandshakeErrorKind",
  "impl core::cmp::Eq for spark_core::transport::handshake::HandshakeErrorKind",
  "impl core::cmp::PartialEq for spark_core::transport::handshake::HandshakeErrorKind",
  "pub fn spark_core::transport::handshake::HandshakeErrorKind::eq(&self, other: &spark_core::transport::handshake::HandshakeErrorKind) -> bool",
  "impl core::fmt::Debug for spark_core::transport::handshake::HandshakeErrorKind",
  "pub fn spark_core::transport::handshake::HandshakeErrorKind::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::transport::handshake::HandshakeErrorKind",
  "impl core::marker::Freeze for spark_core::transport::handshake::HandshakeErrorKind",
  "impl core::marker::Send for spark_core::transport::handshake::HandshakeErrorKind",
  "impl core::marker::Sync for spark_core::transport::handshake::HandshakeErrorKind",
  "impl core::marker::Unpin for spark_core::transport::handshake::HandshakeErrorKind",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::handshake::HandshakeErrorKind",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::handshake::HandshakeErrorKind",
  "pub enum spark_core::transport::LinkDirection",
  "pub spark_core::transport::LinkDirection::Inbound",
  "pub spark_core::transport::LinkDirection::Outbound",
  "impl core::clone::Clone for spark_core::transport::metrics::LinkDirection",
  "pub fn spark_core::transport::metrics::LinkDirection::clone(&self) -> spark_core::transport::metrics::LinkDirection",
  "impl core::cmp::Eq for spark_core::transport::metrics::LinkDirection",
  "impl core::cmp::PartialEq for spark_core::transport::metrics::LinkDirection",
  "pub fn spark_core::transport::metrics::LinkDirection::eq(&self, other: &spark_core::transport::metrics::LinkDirection) -> bool",
  "impl core::fmt::Debug for spark_core::transport::metrics::LinkDirection",
  "pub fn spark_core::transport::metrics::LinkDirection::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::transport::metrics::LinkDirection",
  "impl core::marker::StructuralPartialEq for spark_core::transport::metrics::LinkDirection",
  "impl core::marker::Freeze for spark_core::transport::metrics::LinkDirection",
  "impl core::marker::Send for spark_core::transport::metrics::LinkDirection",
  "impl core::marker::Sync for spark_core::transport::metrics::LinkDirection",
  "impl core::marker::Unpin for spark_core::transport::metrics::LinkDirection",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::metrics::LinkDirection",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::metrics::LinkDirection",
  "#[non_exhaustive] pub enum spark_core::transport::QualityOfService",
  "pub spark_core::transport::QualityOfService::BulkTransfer",
  "pub spark_core::transport::QualityOfService::Interactive",
  "pub spark_core::transport::QualityOfService::Streaming",
  "impl core::clone::Clone for spark_core::transport::intent::QualityOfService",
  "pub fn spark_core::transport::intent::QualityOfService::clone(&self) -> spark_core::transport::intent::QualityOfService",
  "impl core::cmp::Eq for spark_core::transport::intent::QualityOfService",
  "impl core::cmp::PartialEq for spark_core::transport::intent::QualityOfService",
  "pub fn spark_core::transport::intent::QualityOfService::eq(&self, other: &spark_core::transport::intent::QualityOfService) -> bool",
  "impl core::fmt::Debug for spark_core::transport::intent::QualityOfService",
  "pub fn spark_core::transport::intent::QualityOfService::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::transport::intent::QualityOfService",
  "impl core::marker::StructuralPartialEq for spark_core::transport::intent::QualityOfService",
  "impl core::marker::Freeze for spark_core::transport::intent::QualityOfService",
  "impl core::marker::Send for spark_core::transport::intent::QualityOfService",
  "impl core::marker::Sync for spark_core::transport::intent::QualityOfService",
  "impl core::marker::Unpin for spark_core::transport::intent::QualityOfService",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::intent::QualityOfService",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::intent::QualityOfService",
  "#[non_exhaustive] pub enum spark_core::transport::SecurityMode",
  "pub spark_core::transport::SecurityMode::Custom",
  "pub spark_core::transport::SecurityMode::Custom::identifier: alloc::string::String",
  "pub spark_core::transport::SecurityMode::EnforcedTls",
  "pub spark_core::transport::SecurityMode::Inherit",
  "pub spark_core::transport::SecurityMode::Plaintext",
  "impl core::clone::Clone for spark_core::transport::intent::SecurityMode",
  "pub fn spark_core::transport::intent::SecurityMode::clone(&self) -> spark_core::transport::intent::SecurityMode",
  "impl core::cmp::Eq for spark_core::transport::intent::SecurityMode",
  "impl core::cmp::PartialEq for spark_core::transport::intent::SecurityMode",
  "pub fn spark_core::transport::intent::SecurityMode::eq(&self, other: &spark_core::transport::intent::SecurityMode) -> bool",
  "impl core::fmt::Debug for spark_core::transport::intent::SecurityMode",
  "pub fn spark_core::transport::intent::SecurityMode::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::transport::intent::SecurityMode",
  "impl core::marker::Freeze for spark_core::transport::intent::SecurityMode",
  "impl core::marker::Send for spark_core::transport::intent::SecurityMode",
  "impl core::marker::Sync for spark_core::transport::intent::SecurityMode",
  "impl core::marker::Unpin for spark_core::transport::intent::SecurityMode",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::intent::SecurityMode",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::intent::SecurityMode",
  "#[non_exhaustive] pub enum spark_core::transport::SessionLifecycle",
  "pub spark_core::transport::SessionLifecycle::BidirectionalStream",
  "pub spark_core::transport::SessionLifecycle::Ephemeral",
  "pub spark_core::transport::SessionLifecycle::Subscription",
  "impl core::clone::Clone for spark_core::transport::intent::SessionLifecycle",
  "pub fn spark_core::transport::intent::SessionLifecycle::clone(&self) -> spark_core::transport::intent::SessionLifecycle",
  "impl core::cmp::Eq for spark_core::transport::intent::SessionLifecycle",
  "impl core::cmp::PartialEq for spark_core::transport::intent::SessionLifecycle",
  "pub fn spark_core::transport::intent::SessionLifecycle::eq(&self, other: &spark_core::transport::intent::SessionLifecycle) -> bool",
  "impl core::fmt::Debug for spark_core::transport::intent::SessionLifecycle",
  "pub fn spark_core::transport::intent::SessionLifecycle::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::transport::intent::SessionLifecycle",
  "impl core::marker::StructuralPartialEq for spark_core::transport::intent::SessionLifecycle",
  "impl core::marker::Freeze for spark_core::transport::intent::SessionLifecycle",
  "impl core::marker::Send for spark_core::transport::intent::SessionLifecycle",
  "impl core::marker::Sync for spark_core::transport::intent::SessionLifecycle",
  "impl core::marker::Unpin for spark_core::transport::intent::SessionLifecycle",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::intent::SessionLifecycle",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::intent::SessionLifecycle",
  "#[non_exhaustive] pub enum spark_core::transport::TransportSocketAddr",
  "pub spark_core::transport::TransportSocketAddr::V4",
  "pub spark_core::transport::TransportSocketAddr::V4::addr: [u8; 4]",
  "pub spark_core::transport::TransportSocketAddr::V4::port: u16",
  "pub spark_core::transport::TransportSocketAddr::V6",
  "pub spark_core::transport::TransportSocketAddr::V6::addr: [u16; 8]",
  "pub spark_core::transport::TransportSocketAddr::V6::port: u16",
  "impl spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::transport::address::TransportSocketAddr::as_ipv6_addr(&self) -> core::option::Option<core::net::ip_addr::Ipv6Addr>",
  "impl core::clone::Clone for spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::transport::address::TransportSocketAddr::clone(&self) -> spark_core::transport::address::TransportSocketAddr",
  "impl core::cmp::Eq for spark_core::transport::address::TransportSocketAddr",
  "impl core::cmp::Ord for spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::transport::address::TransportSocketAddr::cmp(&self, other: &spark_core::transport::address::TransportSocketAddr) -> core::cmp::Ordering",
  "impl core::cmp::PartialEq for spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::transport::address::TransportSocketAddr::eq(&self, other: &spark_core::transport::address::TransportSocketAddr) -> bool",
  "impl core::cmp::PartialOrd for spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::transport::address::TransportSocketAddr::partial_cmp(&self, other: &spark_core::transport::address::TransportSocketAddr) -> core::option::Option<core::cmp::Ordering>",
  "impl core::convert::From<core::net::socket_addr::SocketAddr> for spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::transport::address::TransportSocketAddr::from(addr: core::net::socket_addr::SocketAddr) -> Self",
  "impl core::fmt::Debug for spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::transport::address::TransportSocketAddr::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::transport::address::TransportSocketAddr::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::transport::address::TransportSocketAddr::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::Copy for spark_core::transport::address::TransportSocketAddr",
  "impl core::marker::StructuralPartialEq for spark_core::transport::address::TransportSocketAddr",
  "impl core::marker::Freeze for spark_core::transport::address::TransportSocketAddr",
  "impl core::marker::Send for spark_core::transport::address::TransportSocketAddr",
  "impl core::marker::Sync for spark_core::transport::address::TransportSocketAddr",
  "impl core::marker::Unpin for spark_core::transport::address::TransportSocketAddr",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::address::TransportSocketAddr",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::address::TransportSocketAddr",
  "pub struct spark_core::transport::Capability",
  "impl spark_core::transport::handshake::Capability",
  "pub const spark_core::transport::handshake::Capability::COMPRESSION: Self",
  "pub const spark_core::transport::handshake::Capability::MULTIPLEXING: Self",
  "pub const spark_core::transport::handshake::Capability::ZERO_COPY: Self",
  "pub const fn spark_core::transport::handshake::Capability::custom(index: u8) -> Self",
  "impl core::clone::Clone for spark_core::transport::handshake::Capability",
  "pub fn spark_core::transport::handshake::Capability::clone(&self) -> spark_core::transport::handshake::Capability",
  "impl core::cmp::Eq for spark_core::transport::handshake::Capability",
  "impl core::cmp::PartialEq for spark_core::transport::handshake::Capability",
  "pub fn spark_core::transport::handshake::Capability::eq(&self, other: &spark_core::transport::handshake::Capability) -> bool",
  "impl core::fmt::Debug for spark_core::transport::handshake::Capability",
  "pub fn spark_core::transport::handshake::Capability::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::transport::handshake::Capability",
  "pub fn spark_core::transport::handshake::Capability::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::Copy for spark_core::transport::handshake::Capability",
  "impl core::marker::StructuralPartialEq for spark_core::transport::handshake::Capability",
  "impl core::marker::Freeze for spark_core::transport::handshake::Capability",
  "impl core::marker::Send for spark_core::transport::handshake::Capability",
  "impl core::marker::Sync for spark_core::transport::handshake::Capability",
  "impl core::marker::Unpin for spark_core::transport::handshake::Capability",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::handshake::Capability",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::handshake::Capability",
  "pub struct spark_core::transport::CapabilityBitmap",
  "impl spark_core::transport::handshake::CapabilityBitmap",
  "pub const fn spark_core::transport::handshake::CapabilityBitmap::bits(&self) -> u128",
  "pub const fn spark_core::transport::handshake::CapabilityBitmap::difference(self, other: Self) -> Self",
  "pub const fn spark_core::transport::handshake::CapabilityBitmap::empty() -> Self",
  "pub const fn spark_core::transport::handshake::CapabilityBitmap::from_bits(bits: u128) -> Self",
  "pub fn spark_core::transport::handshake::CapabilityBitmap::insert(&mut self, capability: spark_core::transport::handshake::Capability)",
  "pub const fn spark_core::transport::handshake::CapabilityBitmap::intersection(self, other: Self) -> Self",
  "pub const fn spark_core::transport::handshake::CapabilityBitmap::is_empty(&self) -> bool",
  "pub const fn spark_core::transport::handshake::CapabilityBitmap::is_subset_of(self, other: Self) -> bool",
  "pub const fn spark_core::transport::handshake::CapabilityBitmap::union(self, other: Self) -> Self",
  "impl core::clone::Clone for spark_core::transport::handshake::CapabilityBitmap",
  "pub fn spark_core::transport::handshake::CapabilityBitmap::clone(&self) -> spark_core::transport::handshake::CapabilityBitmap",
  "impl core::cmp::Eq for spark_core::transport::handshake::CapabilityBitmap",
  "impl core::cmp::PartialEq for spark_core::transport::handshake::CapabilityBitmap",
  "pub fn spark_core::transport::handshake::CapabilityBitmap::eq(&self, other: &spark_core::transport::handshake::CapabilityBitmap) -> bool",
  "impl core::fmt::Debug for spark_core::transport::handshake::CapabilityBitmap",
  "pub fn spark_core::transport::handshake::CapabilityBitmap::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::transport::handshake::CapabilityBitmap",
  "pub fn spark_core::transport::handshake::CapabilityBitmap::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::transport::handshake::CapabilityBitmap",
  "pub fn spark_core::transport::handshake::CapabilityBitmap::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::Copy for spark_core::transport::handshake::CapabilityBitmap",
  "impl core::marker::StructuralPartialEq for spark_core::transport::handshake::CapabilityBitmap",
  "impl core::marker::Freeze for spark_core::transport::handshake::CapabilityBitmap",
  "impl core::marker::Send for spark_core::transport::handshake::CapabilityBitmap",
  "impl core::marker::Sync for spark_core::transport::handshake::CapabilityBitmap",
  "impl core::marker::Unpin for spark_core::transport::handshake::CapabilityBitmap",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::handshake::CapabilityBitmap",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::handshake::CapabilityBitmap",
  "pub struct spark_core::transport::ConnectionIntent",
  "impl spark_core::transport::intent::ConnectionIntent",
  "pub fn spark_core::transport::intent::ConnectionIntent::availability(&self) -> spark_core::transport::intent::AvailabilityRequirement",
  "pub fn spark_core::transport::intent::ConnectionIntent::endpoint(&self) -> &spark_core::transport::endpoint::Endpoint",
  "pub fn spark_core::transport::intent::ConnectionIntent::lifecycle(&self) -> spark_core::transport::intent::SessionLifecycle",
  "pub fn spark_core::transport::intent::ConnectionIntent::new(endpoint: spark_core::transport::endpoint::Endpoint) -> Self",
  "pub fn spark_core::transport::intent::ConnectionIntent::params(&self) -> &spark_core::transport::params::TransportParams",
  "pub fn spark_core::transport::intent::ConnectionIntent::qos(&self) -> spark_core::transport::intent::QualityOfService",
  "pub fn spark_core::transport::intent::ConnectionIntent::retry_budget(&self) -> core::option::Option<u32>",
  "pub fn spark_core::transport::intent::ConnectionIntent::security(&self) -> &spark_core::transport::intent::SecurityMode",
  "pub fn spark_core::transport::intent::ConnectionIntent::timeout(&self) -> core::option::Option<core::time::Duration>",
  "pub fn spark_core::transport::intent::ConnectionIntent::with_availability(self, availability: spark_core::transport::intent::AvailabilityRequirement) -> Self",
  "pub fn spark_core::transport::intent::ConnectionIntent::with_lifecycle(self, lifecycle: spark_core::transport::intent::SessionLifecycle) -> Self",
  "pub fn spark_core::transport::intent::ConnectionIntent::with_params(self, params: spark_core::transport::params::TransportParams) -> Self",
  "pub fn spark_core::transport::intent::ConnectionIntent::with_qos(self, qos: spark_core::transport::intent::QualityOfService) -> Self",
  "pub fn spark_core::transport::intent::ConnectionIntent::with_retry_budget(self, retries: u32) -> Self",
  "pub fn spark_core::transport::intent::ConnectionIntent::with_security(self, security: spark_core::transport::intent::SecurityMode) -> Self",
  "pub fn spark_core::transport::intent::ConnectionIntent::with_timeout(self, timeout: core::time::Duration) -> Self",
  "impl core::clone::Clone for spark_core::transport::intent::ConnectionIntent",
  "pub fn spark_core::transport::intent::ConnectionIntent::clone(&self) -> spark_core::transport::intent::ConnectionIntent",
  "impl core::cmp::Eq for spark_core::transport::intent::ConnectionIntent",
  "impl core::cmp::PartialEq for spark_core::transport::intent::ConnectionIntent",
  "pub fn spark_core::transport::intent::ConnectionIntent::eq(&self, other: &spark_core::transport::intent::ConnectionIntent) -> bool",
  "impl core::fmt::Debug for spark_core::transport::intent::ConnectionIntent",
  "pub fn spark_core::transport::intent::ConnectionIntent::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::transport::intent::ConnectionIntent",
  "impl core::marker::Freeze for spark_core::transport::intent::ConnectionIntent",
  "impl core::marker::Send for spark_core::transport::intent::ConnectionIntent",
  "impl core::marker::Sync for spark_core::transport::intent::ConnectionIntent",
  "impl core::marker::Unpin for spark_core::transport::intent::ConnectionIntent",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::intent::ConnectionIntent",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::intent::ConnectionIntent",
  "pub struct spark_core::transport::DowngradeReport",
  "impl spark_core::transport::handshake::DowngradeReport",
  "pub fn spark_core::transport::handshake::DowngradeReport::is_lossless(&self) -> bool",
  "pub fn spark_core::transport::handshake::DowngradeReport::local(&self) -> spark_core::transport::handshake::CapabilityBitmap",
  "pub fn spark_core::transport::handshake::DowngradeReport::new(local: spark_core::transport::handshake::CapabilityBitmap, remote: spark_core::transport::handshake::CapabilityBitmap) -> Self",
  "pub fn spark_core::transport::handshake::DowngradeReport::remote(&self) -> spark_core::transport::handshake::CapabilityBitmap",
  "impl core::clone::Clone for spark_core::transport::handshake::DowngradeReport",
  "pub fn spark_core::transport::handshake::DowngradeReport::clone(&self) -> spark_core::transport::handshake::DowngradeReport",
  "impl core::cmp::Eq for spark_core::transport::handshake::DowngradeReport",
  "impl core::cmp::PartialEq for spark_core::transport::handshake::DowngradeReport",
  "pub fn spark_core::transport::handshake::DowngradeReport::eq(&self, other: &spark_core::transport::handshake::DowngradeReport) -> bool",
  "impl core::fmt::Debug for spark_core::transport::handshake::DowngradeReport",
  "pub fn spark_core::transport::handshake::DowngradeReport::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::transport::handshake::DowngradeReport",
  "impl core::marker::StructuralPartialEq for spark_core::transport::handshake::DowngradeReport",
  "impl core::marker::Freeze for spark_core::transport::handshake::DowngradeReport",
  "impl core::marker::Send for spark_core::transport::handshake::DowngradeReport",
  "impl core::marker::Sync for spark_core::transport::handshake::DowngradeReport",
  "impl core::marker::Unpin for spark_core::transport::handshake::DowngradeReport",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::handshake::DowngradeReport",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::handshake::DowngradeReport",
  "pub struct spark_core::transport::Endpoint",
  "impl spark_core::transport::endpoint::Endpoint",
  "pub fn spark_core::transport::endpoint::Endpoint::authority(&self) -> &str",
  "pub fn spark_core::transport::endpoint::Endpoint::builder(scheme: alloc::string::String, authority: alloc::string::String) -> spark_core::transport::endpoint::EndpointBuilder",
  "pub fn spark_core::transport::endpoint::Endpoint::kind(&self) -> spark_core::transport::endpoint::EndpointKind",
  "pub fn spark_core::transport::endpoint::Endpoint::logical(scheme: alloc::string::String, authority: alloc::string::String) -> Self",
  "pub fn spark_core::transport::endpoint::Endpoint::params(&self) -> &spark_core::transport::params::TransportParams",
  "pub fn spark_core::transport::endpoint::Endpoint::physical(scheme: alloc::string::String, authority: alloc::string::String, port: u16) -> Self",
  "pub fn spark_core::transport::endpoint::Endpoint::port(&self) -> core::option::Option<u16>",
  "pub fn spark_core::transport::endpoint::Endpoint::resource(&self) -> core::option::Option<&str>",
  "pub fn spark_core::transport::endpoint::Endpoint::scheme(&self) -> &str",
  "impl core::clone::Clone for spark_core::transport::endpoint::Endpoint",
  "pub fn spark_core::transport::endpoint::Endpoint::clone(&self) -> spark_core::transport::endpoint::Endpoint",
  "impl core::cmp::Eq for spark_core::transport::endpoint::Endpoint",
  "impl core::cmp::PartialEq for spark_core::transport::endpoint::Endpoint",
  "pub fn spark_core::transport::endpoint::Endpoint::eq(&self, other: &spark_core::transport::endpoint::Endpoint) -> bool",
  "impl core::fmt::Debug for spark_core::transport::endpoint::Endpoint",
  "pub fn spark_core::transport::endpoint::Endpoint::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::transport::endpoint::Endpoint",
  "impl core::marker::Freeze for spark_core::transport::endpoint::Endpoint",
  "impl core::marker::Send for spark_core::transport::endpoint::Endpoint",
  "impl core::marker::Sync for spark_core::transport::endpoint::Endpoint",
  "impl core::marker::Unpin for spark_core::transport::endpoint::Endpoint",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::endpoint::Endpoint",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::endpoint::Endpoint",
  "pub struct spark_core::transport::HandshakeError",
  "impl spark_core::transport::handshake::HandshakeError",
  "pub fn spark_core::transport::handshake::HandshakeError::into_spark_error(self) -> spark_core::error::SparkError",
  "pub fn spark_core::transport::handshake::HandshakeError::kind(&self) -> &spark_core::transport::handshake::HandshakeErrorKind",
  "impl core::clone::Clone for spark_core::transport::handshake::HandshakeError",
  "pub fn spark_core::transport::handshake::HandshakeError::clone(&self) -> spark_core::transport::handshake::HandshakeError",
  "impl core::cmp::Eq for spark_core::transport::handshake::HandshakeError",
  "impl core::cmp::PartialEq for spark_core::transport::handshake::HandshakeError",
  "pub fn spark_core::transport::handshake::HandshakeError::eq(&self, other: &spark_core::transport::handshake::HandshakeError) -> bool",
  "impl core::convert::From<spark_core::transport::handshake::HandshakeError> for spark_core::error::SparkError",
  "pub fn spark_core::error::SparkError::from(error: spark_core::transport::handshake::HandshakeError) -> Self",
  "impl core::fmt::Debug for spark_core::transport::handshake::HandshakeError",
  "pub fn spark_core::transport::handshake::HandshakeError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::transport::handshake::HandshakeError",
  "pub fn spark_core::transport::handshake::HandshakeError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::transport::handshake::HandshakeError",
  "impl spark_core::Error for spark_core::transport::handshake::HandshakeError",
  "pub fn spark_core::transport::handshake::HandshakeError::source(&self) -> core::option::Option<&(dyn spark_core::Error + 'static)>",
  "impl core::marker::Freeze for spark_core::transport::handshake::HandshakeError",
  "impl core::marker::Send for spark_core::transport::handshake::HandshakeError",
  "impl core::marker::Sync for spark_core::transport::handshake::HandshakeError",
  "impl core::marker::Unpin for spark_core::transport::handshake::HandshakeError",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::handshake::HandshakeError",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::handshake::HandshakeError",
  "pub struct spark_core::transport::HandshakeOffer",
  "impl spark_core::transport::handshake::HandshakeOffer",
  "pub fn spark_core::transport::handshake::HandshakeOffer::mandatory(&self) -> spark_core::transport::handshake::CapabilityBitmap",
  "pub fn spark_core::transport::handshake::HandshakeOffer::new(version: spark_core::transport::handshake::Version, mandatory: spark_core::transport::handshake::CapabilityBitmap, optional: spark_core::transport::handshake::CapabilityBitmap) -> Self",
  "pub fn spark_core::transport::handshake::HandshakeOffer::optional(&self) -> spark_core::transport::handshake::CapabilityBitmap",
  "pub fn spark_core::transport::handshake::HandshakeOffer::total(&self) -> spark_core::transport::handshake::CapabilityBitmap",
  "pub fn spark_core::transport::handshake::HandshakeOffer::version(&self) -> spark_core::transport::handshake::Version",
  "impl core::clone::Clone for spark_core::transport::handshake::HandshakeOffer",
  "pub fn spark_core::transport::handshake::HandshakeOffer::clone(&self) -> spark_core::transport::handshake::HandshakeOffer",
  "impl core::cmp::Eq for spark_core::transport::handshake::HandshakeOffer",
  "impl core::cmp::PartialEq for spark_core::transport::handshake::HandshakeOffer",
  "pub fn spark_core::transport::handshake::HandshakeOffer::eq(&self, other: &spark_core::transport::handshake::HandshakeOffer) -> bool",
  "impl core::fmt::Debug for spark_core::transport::handshake::HandshakeOffer",
  "pub fn spark_core::transport::handshake::HandshakeOffer::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::transport::handshake::HandshakeOffer",
  "impl core::marker::Freeze for spark_core::transport::handshake::HandshakeOffer",
  "impl core::marker::Send for spark_core::transport::handshake::HandshakeOffer",
  "impl core::marker::Sync for spark_core::transport::handshake::HandshakeOffer",
  "impl core::marker::Unpin for spark_core::transport::handshake::HandshakeOffer",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::handshake::HandshakeOffer",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::handshake::HandshakeOffer",
  "pub struct spark_core::transport::HandshakeOutcome",
  "impl spark_core::transport::handshake::HandshakeOutcome",
  "pub fn spark_core::transport::handshake::HandshakeOutcome::capabilities(&self) -> spark_core::transport::handshake::CapabilityBitmap",
  "pub fn spark_core::transport::handshake::HandshakeOutcome::downgrade(&self) -> spark_core::transport::handshake::DowngradeReport",
  "pub fn spark_core::transport::handshake::HandshakeOutcome::new(version: spark_core::transport::handshake::Version, capabilities: spark_core::transport::handshake::CapabilityBitmap, downgrade: spark_core::transport::handshake::DowngradeReport) -> Self",
  "pub fn spark_core::transport::handshake::HandshakeOutcome::version(&self) -> spark_core::transport::handshake::Version",
  "impl core::clone::Clone for spark_core::transport::handshake::HandshakeOutcome",
  "pub fn spark_core::transport::handshake::HandshakeOutcome::clone(&self) -> spark_core::transport::handshake::HandshakeOutcome",
  "impl core::cmp::Eq for spark_core::transport::handshake::HandshakeOutcome",
  "impl core::cmp::PartialEq for spark_core::transport::handshake::HandshakeOutcome",
  "pub fn spark_core::transport::handshake::HandshakeOutcome::eq(&self, other: &spark_core::transport::handshake::HandshakeOutcome) -> bool",
  "impl core::fmt::Debug for spark_core::transport::handshake::HandshakeOutcome",
  "pub fn spark_core::transport::handshake::HandshakeOutcome::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::transport::handshake::HandshakeOutcome",
  "impl core::marker::StructuralPartialEq for spark_core::transport::handshake::HandshakeOutcome",
  "impl core::marker::Freeze for spark_core::transport::handshake::HandshakeOutcome",
  "impl core::marker::Send for spark_core::transport::handshake::HandshakeOutcome",
  "impl core::marker::Sync for spark_core::transport::handshake::HandshakeOutcome",
  "impl core::marker::Unpin for spark_core::transport::handshake::HandshakeOutcome",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::handshake::HandshakeOutcome",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::handshake::HandshakeOutcome",
  "pub struct spark_core::transport::ListenerConfig",
  "impl spark_core::transport::factory::ListenerConfig",
  "pub fn spark_core::transport::factory::ListenerConfig::accept_backoff(&self) -> core::option::Option<core::time::Duration>",
  "pub fn spark_core::transport::factory::ListenerConfig::concurrency_limit(&self) -> core::option::Option<u32>",
  "pub fn spark_core::transport::factory::ListenerConfig::endpoint(&self) -> &spark_core::transport::endpoint::Endpoint",
  "pub fn spark_core::transport::factory::ListenerConfig::new(endpoint: spark_core::transport::endpoint::Endpoint) -> Self",
  "pub fn spark_core::transport::factory::ListenerConfig::params(&self) -> &spark_core::transport::params::TransportParams",
  "pub fn spark_core::transport::factory::ListenerConfig::with_accept_backoff(self, backoff: core::time::Duration) -> Self",
  "pub fn spark_core::transport::factory::ListenerConfig::with_concurrency_limit(self, limit: u32) -> Self",
  "pub fn spark_core::transport::factory::ListenerConfig::with_params(self, params: spark_core::transport::params::TransportParams) -> Self",
  "impl core::clone::Clone for spark_core::transport::factory::ListenerConfig",
  "pub fn spark_core::transport::factory::ListenerConfig::clone(&self) -> spark_core::transport::factory::ListenerConfig",
  "impl core::fmt::Debug for spark_core::transport::factory::ListenerConfig",
  "pub fn spark_core::transport::factory::ListenerConfig::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::transport::factory::ListenerConfig",
  "impl core::marker::Send for spark_core::transport::factory::ListenerConfig",
  "impl core::marker::Sync for spark_core::transport::factory::ListenerConfig",
  "impl core::marker::Unpin for spark_core::transport::factory::ListenerConfig",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::factory::ListenerConfig",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::factory::ListenerConfig",
  "pub struct spark_core::transport::ListenerShutdown",
  "impl spark_core::transport::server::ListenerShutdown",
  "pub fn spark_core::transport::server::ListenerShutdown::deadline(&self) -> core::time::Duration",
  "pub fn spark_core::transport::server::ListenerShutdown::drain_existing(&self) -> bool",
  "pub fn spark_core::transport::server::ListenerShutdown::new(deadline: core::time::Duration, drain_existing: bool) -> Self",
  "impl core::clone::Clone for spark_core::transport::server::ListenerShutdown",
  "pub fn spark_core::transport::server::ListenerShutdown::clone(&self) -> spark_core::transport::server::ListenerShutdown",
  "impl core::cmp::Eq for spark_core::transport::server::ListenerShutdown",
  "impl core::cmp::PartialEq for spark_core::transport::server::ListenerShutdown",
  "pub fn spark_core::transport::server::ListenerShutdown::eq(&self, other: &spark_core::transport::server::ListenerShutdown) -> bool",
  "impl core::fmt::Debug for spark_core::transport::server::ListenerShutdown",
  "pub fn spark_core::transport::server::ListenerShutdown::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::transport::server::ListenerShutdown",
  "impl core::marker::StructuralPartialEq for spark_core::transport::server::ListenerShutdown",
  "impl core::marker::Freeze for spark_core::transport::server::ListenerShutdown",
  "impl core::marker::Send for spark_core::transport::server::ListenerShutdown",
  "impl core::marker::Sync for spark_core::transport::server::ListenerShutdown",
  "impl core::marker::Unpin for spark_core::transport::server::ListenerShutdown",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::server::ListenerShutdown",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::server::ListenerShutdown",
  "pub struct spark_core::transport::NegotiationAuditContext",
  "impl spark_core::transport::handshake::NegotiationAuditContext",
  "pub fn spark_core::transport::handshake::NegotiationAuditContext::new(recorder: alloc::sync::Arc<dyn spark_core::audit::AuditRecorder>, entity_kind: impl core::convert::Into<alloc::borrow::Cow<'static, str>>, entity_id: impl core::convert::Into<alloc::string::String>, actor: spark_core::audit::AuditActor) -> Self",
  "pub fn spark_core::transport::handshake::NegotiationAuditContext::with_actions(self, success: impl core::convert::Into<alloc::borrow::Cow<'static, str>>, failure: impl core::convert::Into<alloc::borrow::Cow<'static, str>>) -> Self",
  "pub fn spark_core::transport::handshake::NegotiationAuditContext::with_labels(self, labels: alloc::vec::Vec<(alloc::borrow::Cow<'static, str>, alloc::borrow::Cow<'static, str>)>) -> Self",
  "pub fn spark_core::transport::handshake::NegotiationAuditContext::with_start_sequence(self, sequence: u64) -> Self",
  "pub fn spark_core::transport::handshake::NegotiationAuditContext::with_tsa_evidence(self, evidence: spark_core::audit::TsaEvidence) -> Self",
  "impl core::clone::Clone for spark_core::transport::handshake::NegotiationAuditContext",
  "pub fn spark_core::transport::handshake::NegotiationAuditContext::clone(&self) -> spark_core::transport::handshake::NegotiationAuditContext",
  "impl core::marker::Freeze for spark_core::transport::handshake::NegotiationAuditContext",
  "impl core::marker::Send for spark_core::transport::handshake::NegotiationAuditContext",
  "impl core::marker::Sync for spark_core::transport::handshake::NegotiationAuditContext",
  "impl core::marker::Unpin for spark_core::transport::handshake::NegotiationAuditContext",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::handshake::NegotiationAuditContext",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::transport::handshake::NegotiationAuditContext",
  "pub struct spark_core::transport::ServerTransportObject<T> where T: spark_core::transport::traits::generic::ServerTransport",
  "impl<T> spark_core::transport::traits::object::ServerTransportObject<T> where T: spark_core::transport::traits::generic::ServerTransport",
  "pub fn spark_core::transport::traits::object::ServerTransportObject<T>::into_inner(self) -> alloc::sync::Arc<T>",
  "pub fn spark_core::transport::traits::object::ServerTransportObject<T>::new(inner: T) -> Self",
  "impl<T> spark_core::transport::traits::object::DynServerTransport for spark_core::transport::traits::object::ServerTransportObject<T> where T: spark_core::transport::traits::generic::ServerTransport",
  "pub fn spark_core::transport::traits::object::ServerTransportObject<T>::local_addr_dyn(&self, ctx: &spark_core::context::ExecutionContext<'_>) -> spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::transport::traits::object::ServerTransportObject<T>::shutdown_dyn<'life0, 'life1, 'life2, 'async_trait>(&'life0 self, ctx: &'life1 spark_core::context::ExecutionContext<'life2>, plan: spark_core::transport::server::ListenerShutdown) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<(), spark_core::error::CoreError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait, 'life1: 'async_trait, 'life2: 'async_trait",
  "impl<T> core::marker::Freeze for spark_core::transport::traits::object::ServerTransportObject<T>",
  "impl<T> core::marker::Send for spark_core::transport::traits::object::ServerTransportObject<T>",
  "impl<T> core::marker::Sync for spark_core::transport::traits::object::ServerTransportObject<T>",
  "impl<T> core::marker::Unpin for spark_core::transport::traits::object::ServerTransportObject<T>",
  "impl<T> core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::traits::object::ServerTransportObject<T> where T: core::panic::unwind_safe::RefUnwindSafe",
  "impl<T> core::panic::unwind_safe::UnwindSafe for spark_core::transport::traits::object::ServerTransportObject<T> where T: core::panic::unwind_safe::RefUnwindSafe",
  "pub struct spark_core::transport::TransportFactoryObject<F> where F: spark_core::transport::traits::generic::TransportFactory",
  "impl<F> spark_core::transport::traits::object::TransportFactoryObject<F> where F: spark_core::transport::traits::generic::TransportFactory",
  "pub fn spark_core::transport::traits::object::TransportFactoryObject<F>::into_inner(self) -> alloc::sync::Arc<F>",
  "pub fn spark_core::transport::traits::object::TransportFactoryObject<F>::new(inner: F) -> Self",
  "impl<F> spark_core::transport::traits::object::DynTransportFactory for spark_core::transport::traits::object::TransportFactoryObject<F> where F: spark_core::transport::traits::generic::TransportFactory",
  "pub fn spark_core::transport::traits::object::TransportFactoryObject<F>::bind_dyn<'life0, 'life1, 'life2, 'async_trait>(&'life0 self, ctx: &'life1 spark_core::context::ExecutionContext<'life2>, config: spark_core::transport::factory::ListenerConfig, pipeline_factory: alloc::sync::Arc<dyn spark_core::pipeline::traits::object::DynControllerFactory>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<alloc::boxed::Box<dyn spark_core::transport::traits::object::DynServerTransport>, spark_core::error::CoreError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait, 'life1: 'async_trait, 'life2: 'async_trait",
  "pub fn spark_core::transport::traits::object::TransportFactoryObject<F>::connect_dyn<'life0, 'life1, 'life2, 'async_trait>(&'life0 self, ctx: &'life1 spark_core::context::ExecutionContext<'life2>, intent: spark_core::transport::intent::ConnectionIntent, discovery: core::option::Option<alloc::sync::Arc<dyn spark_core::cluster::discovery::ServiceDiscovery>>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<alloc::boxed::Box<dyn spark_core::pipeline::channel::Channel>, spark_core::error::CoreError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait, 'life1: 'async_trait, 'life2: 'async_trait",
  "pub fn spark_core::transport::traits::object::TransportFactoryObject<F>::scheme_dyn(&self, ctx: &spark_core::context::ExecutionContext<'_>) -> &'static str",
  "impl<F> core::marker::Freeze for spark_core::transport::traits::object::TransportFactoryObject<F>",
  "impl<F> core::marker::Send for spark_core::transport::traits::object::TransportFactoryObject<F>",
  "impl<F> core::marker::Sync for spark_core::transport::traits::object::TransportFactoryObject<F>",
  "impl<F> core::marker::Unpin for spark_core::transport::traits::object::TransportFactoryObject<F>",
  "impl<F> core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::traits::object::TransportFactoryObject<F> where F: core::panic::unwind_safe::RefUnwindSafe",
  "impl<F> core::panic::unwind_safe::UnwindSafe for spark_core::transport::traits::object::TransportFactoryObject<F> where F: core::panic::unwind_safe::RefUnwindSafe",
  "pub struct spark_core::transport::TransportMetricsHook<'a>",
  "impl<'a> spark_core::transport::metrics::TransportMetricsHook<'a>",
  "pub fn spark_core::transport::metrics::TransportMetricsHook<'a>::new(provider: &'a dyn spark_core::observability::metrics::MetricsProvider) -> Self",
  "pub fn spark_core::transport::metrics::TransportMetricsHook<'a>::on_connection_attempt(&self, attempt_attributes: spark_core::observability::attributes::AttributeSet<'_>, success: bool)",
  "pub fn spark_core::transport::metrics::TransportMetricsHook<'a>::on_connection_closed(&self, active_attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub fn spark_core::transport::metrics::TransportMetricsHook<'a>::on_connection_established(&self, active_attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub fn spark_core::transport::metrics::TransportMetricsHook<'a>::record_handshake_duration(&self, duration: core::time::Duration, attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub fn spark_core::transport::metrics::TransportMetricsHook<'a>::record_link_bytes(&self, direction: spark_core::transport::metrics::LinkDirection, bytes: u64, attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "impl<'a> core::marker::Freeze for spark_core::transport::metrics::TransportMetricsHook<'a>",
  "impl<'a> core::marker::Send for spark_core::transport::metrics::TransportMetricsHook<'a>",
  "impl<'a> core::marker::Sync for spark_core::transport::metrics::TransportMetricsHook<'a>",
  "impl<'a> core::marker::Unpin for spark_core::transport::metrics::TransportMetricsHook<'a>",
  "impl<'a> !core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::metrics::TransportMetricsHook<'a>",
  "impl<'a> !core::panic::unwind_safe::UnwindSafe for spark_core::transport::metrics::TransportMetricsHook<'a>",
  "pub struct spark_core::transport::TransportParams(_)",
  "impl spark_core::transport::params::TransportParams",
  "pub fn spark_core::transport::params::TransportParams::as_map(&self) -> &alloc::collections::btree::map::BTreeMap<alloc::string::String, alloc::string::String>",
  "pub fn spark_core::transport::params::TransportParams::get_bool(&self, key: &str) -> core::option::Option<bool>",
  "pub fn spark_core::transport::params::TransportParams::get_duration(&self, key: &str) -> core::option::Option<core::time::Duration>",
  "pub fn spark_core::transport::params::TransportParams::get_size_bytes(&self, key: &str) -> core::option::Option<u64>",
  "pub fn spark_core::transport::params::TransportParams::get_str(&self, key: &str) -> core::option::Option<&str>",
  "pub fn spark_core::transport::params::TransportParams::get_u64(&self, key: &str) -> core::option::Option<u64>",
  "pub fn spark_core::transport::params::TransportParams::insert(&mut self, key: alloc::string::String, value: alloc::string::String)",
  "pub fn spark_core::transport::params::TransportParams::merge(&mut self, other: &spark_core::transport::params::TransportParams) -> &mut Self",
  "pub fn spark_core::transport::params::TransportParams::new() -> Self",
  "impl core::clone::Clone for spark_core::transport::params::TransportParams",
  "pub fn spark_core::transport::params::TransportParams::clone(&self) -> spark_core::transport::params::TransportParams",
  "impl core::cmp::Eq for spark_core::transport::params::TransportParams",
  "impl core::cmp::PartialEq for spark_core::transport::params::TransportParams",
  "pub fn spark_core::transport::params::TransportParams::eq(&self, other: &spark_core::transport::params::TransportParams) -> bool",
  "impl core::default::Default for spark_core::transport::params::TransportParams",
  "pub fn spark_core::transport::params::TransportParams::default() -> spark_core::transport::params::TransportParams",
  "impl core::fmt::Debug for spark_core::transport::params::TransportParams",
  "pub fn spark_core::transport::params::TransportParams::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::transport::params::TransportParams",
  "impl core::marker::Freeze for spark_core::transport::params::TransportParams",
  "impl core::marker::Send for spark_core::transport::params::TransportParams",
  "impl core::marker::Sync for spark_core::transport::params::TransportParams",
  "impl core::marker::Unpin for spark_core::transport::params::TransportParams",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::params::TransportParams",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::params::TransportParams",
  "pub struct spark_core::transport::Version",
  "impl spark_core::transport::handshake::Version",
  "pub const fn spark_core::transport::handshake::Version::is_compatible_with(&self, other: &Self) -> bool",
  "pub const fn spark_core::transport::handshake::Version::major(&self) -> u16",
  "pub const fn spark_core::transport::handshake::Version::minor(&self) -> u16",
  "pub const fn spark_core::transport::handshake::Version::new(major: u16, minor: u16, patch: u16) -> Self",
  "pub const fn spark_core::transport::handshake::Version::patch(&self) -> u16",
  "impl core::clone::Clone for spark_core::transport::handshake::Version",
  "pub fn spark_core::transport::handshake::Version::clone(&self) -> spark_core::transport::handshake::Version",
  "impl core::cmp::Eq for spark_core::transport::handshake::Version",
  "impl core::cmp::Ord for spark_core::transport::handshake::Version",
  "pub fn spark_core::transport::handshake::Version::cmp(&self, other: &Self) -> core::cmp::Ordering",
  "impl core::cmp::PartialEq for spark_core::transport::handshake::Version",
  "pub fn spark_core::transport::handshake::Version::eq(&self, other: &spark_core::transport::handshake::Version) -> bool",
  "impl core::cmp::PartialOrd for spark_core::transport::handshake::Version",
  "pub fn spark_core::transport::handshake::Version::partial_cmp(&self, other: &Self) -> core::option::Option<core::cmp::Ordering>",
  "impl core::fmt::Debug for spark_core::transport::handshake::Version",
  "pub fn spark_core::transport::handshake::Version::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::transport::handshake::Version",
  "pub fn spark_core::transport::handshake::Version::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::transport::handshake::Version",
  "pub fn spark_core::transport::handshake::Version::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::Copy for spark_core::transport::handshake::Version",
  "impl core::marker::StructuralPartialEq for spark_core::transport::handshake::Version",
  "impl core::marker::Freeze for spark_core::transport::handshake::Version",
  "impl core::marker::Send for spark_core::transport::handshake::Version",
  "impl core::marker::Sync for spark_core::transport::handshake::Version",
  "impl core::marker::Unpin for spark_core::transport::handshake::Version",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::handshake::Version",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::handshake::Version",
  "pub trait spark_core::transport::DynServerTransport: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::transport::DynServerTransport::local_addr_dyn(&self, ctx: &spark_core::context::ExecutionContext<'_>) -> spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::transport::DynServerTransport::shutdown_dyn<'life0, 'life1, 'life2, 'async_trait>(&'life0 self, ctx: &'life1 spark_core::context::ExecutionContext<'life2>, plan: spark_core::transport::server::ListenerShutdown) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<(), spark_core::error::CoreError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait, 'life1: 'async_trait, 'life2: 'async_trait",
  "impl<T> spark_core::transport::traits::object::DynServerTransport for spark_core::transport::traits::object::ServerTransportObject<T> where T: spark_core::transport::traits::generic::ServerTransport",
  "pub fn spark_core::transport::traits::object::ServerTransportObject<T>::local_addr_dyn(&self, ctx: &spark_core::context::ExecutionContext<'_>) -> spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::transport::traits::object::ServerTransportObject<T>::shutdown_dyn<'life0, 'life1, 'life2, 'async_trait>(&'life0 self, ctx: &'life1 spark_core::context::ExecutionContext<'life2>, plan: spark_core::transport::server::ListenerShutdown) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<(), spark_core::error::CoreError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait, 'life1: 'async_trait, 'life2: 'async_trait",
  "pub trait spark_core::transport::DynTransportFactory: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::transport::DynTransportFactory::bind_dyn<'life0, 'life1, 'life2, 'async_trait>(&'life0 self, ctx: &'life1 spark_core::context::ExecutionContext<'life2>, config: spark_core::transport::factory::ListenerConfig, pipeline_factory: alloc::sync::Arc<dyn spark_core::pipeline::traits::object::DynControllerFactory>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<alloc::boxed::Box<dyn spark_core::transport::traits::object::DynServerTransport>, spark_core::error::CoreError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait, 'life1: 'async_trait, 'life2: 'async_trait",
  "pub fn spark_core::transport::DynTransportFactory::connect_dyn<'life0, 'life1, 'life2, 'async_trait>(&'life0 self, ctx: &'life1 spark_core::context::ExecutionContext<'life2>, intent: spark_core::transport::intent::ConnectionIntent, discovery: core::option::Option<alloc::sync::Arc<dyn spark_core::cluster::discovery::ServiceDiscovery>>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<alloc::boxed::Box<dyn spark_core::pipeline::channel::Channel>, spark_core::error::CoreError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait, 'life1: 'async_trait, 'life2: 'async_trait",
  "pub fn spark_core::transport::DynTransportFactory::scheme_dyn(&self, ctx: &spark_core::context::ExecutionContext<'_>) -> &'static str",
  "impl<F> spark_core::transport::traits::object::DynTransportFactory for spark_core::transport::traits::object::TransportFactoryObject<F> where F: spark_core::transport::traits::generic::TransportFactory",
  "pub fn spark_core::transport::traits::object::TransportFactoryObject<F>::bind_dyn<'life0, 'life1, 'life2, 'async_trait>(&'life0 self, ctx: &'life1 spark_core::context::ExecutionContext<'life2>, config: spark_core::transport::factory::ListenerConfig, pipeline_factory: alloc::sync::Arc<dyn spark_core::pipeline::traits::object::DynControllerFactory>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<alloc::boxed::Box<dyn spark_core::transport::traits::object::DynServerTransport>, spark_core::error::CoreError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait, 'life1: 'async_trait, 'life2: 'async_trait",
  "pub fn spark_core::transport::traits::object::TransportFactoryObject<F>::connect_dyn<'life0, 'life1, 'life2, 'async_trait>(&'life0 self, ctx: &'life1 spark_core::context::ExecutionContext<'life2>, intent: spark_core::transport::intent::ConnectionIntent, discovery: core::option::Option<alloc::sync::Arc<dyn spark_core::cluster::discovery::ServiceDiscovery>>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<alloc::boxed::Box<dyn spark_core::pipeline::channel::Channel>, spark_core::error::CoreError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait, 'life1: 'async_trait, 'life2: 'async_trait",
  "pub fn spark_core::transport::traits::object::TransportFactoryObject<F>::scheme_dyn(&self, ctx: &spark_core::context::ExecutionContext<'_>) -> &'static str",
  "pub trait spark_core::transport::ServerTransport: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub type spark_core::transport::ServerTransport::ShutdownFuture<'a> where Self: 'a: core::future::future::Future<Output = core::result::Result<(), spark_core::error::CoreError>> + core::marker::Send + 'a",
  "pub fn spark_core::transport::ServerTransport::local_addr(&self, ctx: &spark_core::context::ExecutionContext<'_>) -> spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::transport::ServerTransport::shutdown(&self, ctx: &spark_core::context::ExecutionContext<'_>, plan: spark_core::transport::server::ListenerShutdown) -> Self::ShutdownFuture",
  "pub trait spark_core::transport::TransportFactory: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub type spark_core::transport::TransportFactory::BindFuture<'a, P> where Self: 'a, P: spark_core::pipeline::traits::generic::ControllerFactory + core::marker::Send + core::marker::Sync + 'static: core::future::future::Future<Output = core::result::Result<Self::Server, spark_core::error::CoreError>> + core::marker::Send + 'a",
  "pub type spark_core::transport::TransportFactory::Channel: spark_core::pipeline::channel::Channel",
  "pub type spark_core::transport::TransportFactory::ConnectFuture<'a> where Self: 'a: core::future::future::Future<Output = core::result::Result<Self::Channel, spark_core::error::CoreError>> + core::marker::Send + 'a",
  "pub type spark_core::transport::TransportFactory::Server: spark_core::transport::traits::generic::ServerTransport",
  "pub fn spark_core::transport::TransportFactory::bind<P>(&self, ctx: &spark_core::context::ExecutionContext<'_>, config: spark_core::transport::factory::ListenerConfig, pipeline_factory: alloc::sync::Arc<P>) -> Self::BindFuture where P: spark_core::pipeline::traits::generic::ControllerFactory + core::marker::Send + core::marker::Sync + 'static, <P as spark_core::pipeline::traits::generic::ControllerFactory>::Controller: spark_core::pipeline::controller::Controller",
  "pub fn spark_core::transport::TransportFactory::connect(&self, ctx: &spark_core::context::ExecutionContext<'_>, intent: spark_core::transport::intent::ConnectionIntent, discovery: core::option::Option<alloc::sync::Arc<dyn spark_core::cluster::discovery::ServiceDiscovery>>) -> Self::ConnectFuture",
  "pub fn spark_core::transport::TransportFactory::scheme(&self, ctx: &spark_core::context::ExecutionContext<'_>) -> &'static str",
  "pub fn spark_core::transport::describe_shutdown_target(addr: &spark_core::transport::address::TransportSocketAddr, plan: &spark_core::transport::server::ListenerShutdown) -> alloc::string::String",
  "pub fn spark_core::transport::negotiate(local: &spark_core::transport::handshake::HandshakeOffer, remote: &spark_core::transport::handshake::HandshakeOffer, occurred_at: u64, audit: core::option::Option<&mut spark_core::transport::handshake::NegotiationAuditContext>) -> core::result::Result<spark_core::transport::handshake::HandshakeOutcome, spark_core::transport::handshake::HandshakeError>",
  "pub macro spark_core::with_ctx!",
  "#[non_exhaustive] pub enum spark_core::AvailabilityRequirement",
  "pub spark_core::AvailabilityRequirement::BestEffort",
  "pub spark_core::AvailabilityRequirement::RequireReady",
  "pub spark_core::AvailabilityRequirement::RequireRedundant",
  "impl core::clone::Clone for spark_core::transport::intent::AvailabilityRequirement",
  "pub fn spark_core::transport::intent::AvailabilityRequirement::clone(&self) -> spark_core::transport::intent::AvailabilityRequirement",
  "impl core::cmp::Eq for spark_core::transport::intent::AvailabilityRequirement",
  "impl core::cmp::PartialEq for spark_core::transport::intent::AvailabilityRequirement",
  "pub fn spark_core::transport::intent::AvailabilityRequirement::eq(&self, other: &spark_core::transport::intent::AvailabilityRequirement) -> bool",
  "impl core::fmt::Debug for spark_core::transport::intent::AvailabilityRequirement",
  "pub fn spark_core::transport::intent::AvailabilityRequirement::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::transport::intent::AvailabilityRequirement",
  "impl core::marker::StructuralPartialEq for spark_core::transport::intent::AvailabilityRequirement",
  "impl core::marker::Freeze for spark_core::transport::intent::AvailabilityRequirement",
  "impl core::marker::Send for spark_core::transport::intent::AvailabilityRequirement",
  "impl core::marker::Sync for spark_core::transport::intent::AvailabilityRequirement",
  "impl core::marker::Unpin for spark_core::transport::intent::AvailabilityRequirement",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::intent::AvailabilityRequirement",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::intent::AvailabilityRequirement",
  "#[non_exhaustive] pub enum spark_core::BudgetDecision",
  "pub spark_core::BudgetDecision::Exhausted",
  "pub spark_core::BudgetDecision::Exhausted::snapshot: spark_core::contract::BudgetSnapshot",
  "pub spark_core::BudgetDecision::Granted",
  "pub spark_core::BudgetDecision::Granted::snapshot: spark_core::contract::BudgetSnapshot",
  "impl spark_core::contract::BudgetDecision",
  "pub fn spark_core::contract::BudgetDecision::is_granted(&self) -> bool",
  "pub fn spark_core::contract::BudgetDecision::snapshot(&self) -> &spark_core::contract::BudgetSnapshot",
  "impl core::clone::Clone for spark_core::contract::BudgetDecision",
  "pub fn spark_core::contract::BudgetDecision::clone(&self) -> spark_core::contract::BudgetDecision",
  "impl core::cmp::Eq for spark_core::contract::BudgetDecision",
  "impl core::cmp::PartialEq for spark_core::contract::BudgetDecision",
  "pub fn spark_core::contract::BudgetDecision::eq(&self, other: &spark_core::contract::BudgetDecision) -> bool",
  "impl core::fmt::Debug for spark_core::contract::BudgetDecision",
  "pub fn spark_core::contract::BudgetDecision::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::contract::BudgetDecision",
  "impl core::marker::Freeze for spark_core::contract::BudgetDecision",
  "impl core::marker::Send for spark_core::contract::BudgetDecision",
  "impl core::marker::Sync for spark_core::contract::BudgetDecision",
  "impl core::marker::Unpin for spark_core::contract::BudgetDecision",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::contract::BudgetDecision",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::contract::BudgetDecision",
  "#[non_exhaustive] pub enum spark_core::BudgetKind",
  "pub spark_core::BudgetKind::Custom(alloc::sync::Arc<str>)",
  "pub spark_core::BudgetKind::Decode",
  "pub spark_core::BudgetKind::Flow",
  "impl spark_core::contract::BudgetKind",
  "pub fn spark_core::contract::BudgetKind::custom(name: impl core::convert::Into<alloc::sync::Arc<str>>) -> Self",
  "impl core::clone::Clone for spark_core::contract::BudgetKind",
  "pub fn spark_core::contract::BudgetKind::clone(&self) -> spark_core::contract::BudgetKind",
  "impl core::cmp::Eq for spark_core::contract::BudgetKind",
  "impl core::cmp::PartialEq for spark_core::contract::BudgetKind",
  "pub fn spark_core::contract::BudgetKind::eq(&self, other: &spark_core::contract::BudgetKind) -> bool",
  "impl core::fmt::Debug for spark_core::contract::BudgetKind",
  "pub fn spark_core::contract::BudgetKind::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::contract::BudgetKind",
  "pub fn spark_core::contract::BudgetKind::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::StructuralPartialEq for spark_core::contract::BudgetKind",
  "impl core::marker::Freeze for spark_core::contract::BudgetKind",
  "impl core::marker::Send for spark_core::contract::BudgetKind",
  "impl core::marker::Sync for spark_core::contract::BudgetKind",
  "impl core::marker::Unpin for spark_core::contract::BudgetKind",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::contract::BudgetKind",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::contract::BudgetKind",
  "pub enum spark_core::BuildErrorKind",
  "pub spark_core::BuildErrorKind::MissingProfile",
  "pub spark_core::BuildErrorKind::MissingSources",
  "pub spark_core::BuildErrorKind::ProfileExtendsDuplicate",
  "pub spark_core::BuildErrorKind::ProfileExtendsSelfReference",
  "pub spark_core::BuildErrorKind::SourceLoadFailure",
  "pub spark_core::BuildErrorKind::SourceLoadFailure::index: usize",
  "impl core::clone::Clone for spark_core::BuildErrorKind",
  "pub fn spark_core::BuildErrorKind::clone(&self) -> spark_core::BuildErrorKind",
  "impl core::cmp::Eq for spark_core::BuildErrorKind",
  "impl core::cmp::PartialEq for spark_core::BuildErrorKind",
  "pub fn spark_core::BuildErrorKind::eq(&self, other: &spark_core::BuildErrorKind) -> bool",
  "impl core::fmt::Debug for spark_core::BuildErrorKind",
  "pub fn spark_core::BuildErrorKind::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::BuildErrorKind",
  "pub fn spark_core::BuildErrorKind::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::BuildErrorKind",
  "impl core::marker::Freeze for spark_core::BuildErrorKind",
  "impl core::marker::Send for spark_core::BuildErrorKind",
  "impl core::marker::Sync for spark_core::BuildErrorKind",
  "impl core::marker::Unpin for spark_core::BuildErrorKind",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::BuildErrorKind",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::BuildErrorKind",
  "pub enum spark_core::BuildErrorStage",
  "pub spark_core::BuildErrorStage::Finalize",
  "pub spark_core::BuildErrorStage::Load",
  "pub spark_core::BuildErrorStage::Validation",
  "impl core::clone::Clone for spark_core::BuildErrorStage",
  "pub fn spark_core::BuildErrorStage::clone(&self) -> spark_core::BuildErrorStage",
  "impl core::cmp::Eq for spark_core::BuildErrorStage",
  "impl core::cmp::PartialEq for spark_core::BuildErrorStage",
  "pub fn spark_core::BuildErrorStage::eq(&self, other: &spark_core::BuildErrorStage) -> bool",
  "impl core::fmt::Debug for spark_core::BuildErrorStage",
  "pub fn spark_core::BuildErrorStage::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::BuildErrorStage",
  "pub fn spark_core::BuildErrorStage::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::BuildErrorStage",
  "impl core::marker::StructuralPartialEq for spark_core::BuildErrorStage",
  "impl core::marker::Freeze for spark_core::BuildErrorStage",
  "impl core::marker::Send for spark_core::BuildErrorStage",
  "impl core::marker::Sync for spark_core::BuildErrorStage",
  "impl core::marker::Unpin for spark_core::BuildErrorStage",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::BuildErrorStage",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::BuildErrorStage",
  "#[non_exhaustive] pub enum spark_core::BusyReason",
  "pub spark_core::BusyReason::Custom(alloc::borrow::Cow<'static, str>)",
  "pub spark_core::BusyReason::Downstream",
  "pub spark_core::BusyReason::QueueFull(spark_core::status::ready::QueueDepth)",
  "pub spark_core::BusyReason::Upstream",
  "impl spark_core::status::ready::BusyReason",
  "pub fn spark_core::status::ready::BusyReason::custom(reason: impl core::convert::Into<alloc::borrow::Cow<'static, str>>) -> Self",
  "pub const fn spark_core::status::ready::BusyReason::downstream() -> Self",
  "pub const fn spark_core::status::ready::BusyReason::queue_full(depth: usize, capacity: usize) -> Self",
  "pub const fn spark_core::status::ready::BusyReason::upstream() -> Self",
  "impl core::clone::Clone for spark_core::status::ready::BusyReason",
  "pub fn spark_core::status::ready::BusyReason::clone(&self) -> spark_core::status::ready::BusyReason",
  "impl core::cmp::Eq for spark_core::status::ready::BusyReason",
  "impl core::cmp::PartialEq for spark_core::status::ready::BusyReason",
  "pub fn spark_core::status::ready::BusyReason::eq(&self, other: &spark_core::status::ready::BusyReason) -> bool",
  "impl core::fmt::Debug for spark_core::status::ready::BusyReason",
  "pub fn spark_core::status::ready::BusyReason::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::status::ready::BusyReason",
  "impl core::marker::Freeze for spark_core::status::ready::BusyReason",
  "impl core::marker::Send for spark_core::status::ready::BusyReason",
  "impl core::marker::Sync for spark_core::status::ready::BusyReason",
  "impl core::marker::Unpin for spark_core::status::ready::BusyReason",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::status::ready::BusyReason",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::status::ready::BusyReason",
  "#[non_exhaustive] pub enum spark_core::CapabilityLevel",
  "pub spark_core::CapabilityLevel::Full",
  "pub spark_core::CapabilityLevel::Limited",
  "pub spark_core::CapabilityLevel::Unsupported",
  "impl core::clone::Clone for spark_core::host::capability::CapabilityLevel",
  "pub fn spark_core::host::capability::CapabilityLevel::clone(&self) -> spark_core::host::capability::CapabilityLevel",
  "impl core::cmp::Eq for spark_core::host::capability::CapabilityLevel",
  "impl core::cmp::PartialEq for spark_core::host::capability::CapabilityLevel",
  "pub fn spark_core::host::capability::CapabilityLevel::eq(&self, other: &spark_core::host::capability::CapabilityLevel) -> bool",
  "impl core::fmt::Debug for spark_core::host::capability::CapabilityLevel",
  "pub fn spark_core::host::capability::CapabilityLevel::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::capability::CapabilityLevel",
  "impl core::marker::Freeze for spark_core::host::capability::CapabilityLevel",
  "impl core::marker::Send for spark_core::host::capability::CapabilityLevel",
  "impl core::marker::Sync for spark_core::host::capability::CapabilityLevel",
  "impl core::marker::Unpin for spark_core::host::capability::CapabilityLevel",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::capability::CapabilityLevel",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::capability::CapabilityLevel",
  "#[non_exhaustive] pub enum spark_core::ChangeEvent",
  "pub spark_core::ChangeEvent::Created",
  "pub spark_core::ChangeEvent::Created::key: spark_core::ConfigKey",
  "pub spark_core::ChangeEvent::Created::value: spark_core::ConfigValue",
  "pub spark_core::ChangeEvent::Deleted",
  "pub spark_core::ChangeEvent::Deleted::key: spark_core::ConfigKey",
  "pub spark_core::ChangeEvent::Updated",
  "pub spark_core::ChangeEvent::Updated::key: spark_core::ConfigKey",
  "pub spark_core::ChangeEvent::Updated::value: spark_core::ConfigValue",
  "impl core::clone::Clone for spark_core::ChangeEvent",
  "pub fn spark_core::ChangeEvent::clone(&self) -> spark_core::ChangeEvent",
  "impl core::cmp::PartialEq for spark_core::ChangeEvent",
  "pub fn spark_core::ChangeEvent::eq(&self, other: &spark_core::ChangeEvent) -> bool",
  "impl core::fmt::Debug for spark_core::ChangeEvent",
  "pub fn spark_core::ChangeEvent::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::ChangeEvent",
  "impl core::marker::Freeze for spark_core::ChangeEvent",
  "impl core::marker::Send for spark_core::ChangeEvent",
  "impl core::marker::Sync for spark_core::ChangeEvent",
  "impl core::marker::Unpin for spark_core::ChangeEvent",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ChangeEvent",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ChangeEvent",
  "#[non_exhaustive] pub enum spark_core::ChannelState",
  "pub spark_core::ChannelState::Active",
  "pub spark_core::ChannelState::Closed",
  "pub spark_core::ChannelState::Draining",
  "pub spark_core::ChannelState::Initialized",
  "impl core::clone::Clone for spark_core::pipeline::channel::ChannelState",
  "pub fn spark_core::pipeline::channel::ChannelState::clone(&self) -> spark_core::pipeline::channel::ChannelState",
  "impl core::cmp::Eq for spark_core::pipeline::channel::ChannelState",
  "impl core::cmp::Ord for spark_core::pipeline::channel::ChannelState",
  "pub fn spark_core::pipeline::channel::ChannelState::cmp(&self, other: &spark_core::pipeline::channel::ChannelState) -> core::cmp::Ordering",
  "impl core::cmp::PartialEq for spark_core::pipeline::channel::ChannelState",
  "pub fn spark_core::pipeline::channel::ChannelState::eq(&self, other: &spark_core::pipeline::channel::ChannelState) -> bool",
  "impl core::cmp::PartialOrd for spark_core::pipeline::channel::ChannelState",
  "pub fn spark_core::pipeline::channel::ChannelState::partial_cmp(&self, other: &spark_core::pipeline::channel::ChannelState) -> core::option::Option<core::cmp::Ordering>",
  "impl core::fmt::Debug for spark_core::pipeline::channel::ChannelState",
  "pub fn spark_core::pipeline::channel::ChannelState::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::pipeline::channel::ChannelState",
  "impl core::marker::StructuralPartialEq for spark_core::pipeline::channel::ChannelState",
  "impl core::marker::Freeze for spark_core::pipeline::channel::ChannelState",
  "impl core::marker::Send for spark_core::pipeline::channel::ChannelState",
  "impl core::marker::Sync for spark_core::pipeline::channel::ChannelState",
  "impl core::marker::Unpin for spark_core::pipeline::channel::ChannelState",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::pipeline::channel::ChannelState",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::pipeline::channel::ChannelState",
  "#[non_exhaustive] pub enum spark_core::ClusterConsistencyLevel",
  "pub spark_core::ClusterConsistencyLevel::BoundedStaleness",
  "pub spark_core::ClusterConsistencyLevel::BoundedStaleness::max_staleness: core::time::Duration",
  "pub spark_core::ClusterConsistencyLevel::Eventual",
  "pub spark_core::ClusterConsistencyLevel::Linearizable",
  "pub spark_core::ClusterConsistencyLevel::Sequential",
  "impl spark_core::cluster::topology::ClusterConsistencyLevel",
  "pub fn spark_core::cluster::topology::ClusterConsistencyLevel::max_staleness(&self) -> core::option::Option<core::time::Duration>",
  "impl core::clone::Clone for spark_core::cluster::topology::ClusterConsistencyLevel",
  "pub fn spark_core::cluster::topology::ClusterConsistencyLevel::clone(&self) -> spark_core::cluster::topology::ClusterConsistencyLevel",
  "impl core::cmp::Eq for spark_core::cluster::topology::ClusterConsistencyLevel",
  "impl core::cmp::PartialEq for spark_core::cluster::topology::ClusterConsistencyLevel",
  "pub fn spark_core::cluster::topology::ClusterConsistencyLevel::eq(&self, other: &spark_core::cluster::topology::ClusterConsistencyLevel) -> bool",
  "impl core::fmt::Debug for spark_core::cluster::topology::ClusterConsistencyLevel",
  "pub fn spark_core::cluster::topology::ClusterConsistencyLevel::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::cluster::topology::ClusterConsistencyLevel",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::topology::ClusterConsistencyLevel",
  "impl core::marker::Freeze for spark_core::cluster::topology::ClusterConsistencyLevel",
  "impl core::marker::Send for spark_core::cluster::topology::ClusterConsistencyLevel",
  "impl core::marker::Sync for spark_core::cluster::topology::ClusterConsistencyLevel",
  "impl core::marker::Unpin for spark_core::cluster::topology::ClusterConsistencyLevel",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::topology::ClusterConsistencyLevel",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::topology::ClusterConsistencyLevel",
  "#[non_exhaustive] pub enum spark_core::ClusterMembershipEvent",
  "pub spark_core::ClusterMembershipEvent::MemberJoined",
  "pub spark_core::ClusterMembershipEvent::MemberJoined::profile: spark_core::cluster::membership::ClusterNodeProfile",
  "pub spark_core::ClusterMembershipEvent::MemberJoined::revision: spark_core::cluster::topology::ClusterRevision",
  "pub spark_core::ClusterMembershipEvent::MemberRetired",
  "pub spark_core::ClusterMembershipEvent::MemberRetired::node_id: spark_core::cluster::membership::NodeId",
  "pub spark_core::ClusterMembershipEvent::MemberRetired::revision: spark_core::cluster::topology::ClusterRevision",
  "pub spark_core::ClusterMembershipEvent::MemberStateChanged",
  "pub spark_core::ClusterMembershipEvent::MemberStateChanged::new_state: spark_core::cluster::membership::ClusterNodeState",
  "pub spark_core::ClusterMembershipEvent::MemberStateChanged::node_id: spark_core::cluster::membership::NodeId",
  "pub spark_core::ClusterMembershipEvent::MemberStateChanged::revision: spark_core::cluster::topology::ClusterRevision",
  "pub spark_core::ClusterMembershipEvent::MemberUnreachable",
  "pub spark_core::ClusterMembershipEvent::MemberUnreachable::node_id: spark_core::cluster::membership::NodeId",
  "pub spark_core::ClusterMembershipEvent::MemberUnreachable::revision: spark_core::cluster::topology::ClusterRevision",
  "pub spark_core::ClusterMembershipEvent::MemberUpdated",
  "pub spark_core::ClusterMembershipEvent::MemberUpdated::profile: spark_core::cluster::membership::ClusterNodeProfile",
  "pub spark_core::ClusterMembershipEvent::MemberUpdated::revision: spark_core::cluster::topology::ClusterRevision",
  "pub spark_core::ClusterMembershipEvent::SnapshotApplied(spark_core::cluster::membership::ClusterMembershipSnapshot)",
  "impl core::clone::Clone for spark_core::cluster::membership::ClusterMembershipEvent",
  "pub fn spark_core::cluster::membership::ClusterMembershipEvent::clone(&self) -> spark_core::cluster::membership::ClusterMembershipEvent",
  "impl core::fmt::Debug for spark_core::cluster::membership::ClusterMembershipEvent",
  "pub fn spark_core::cluster::membership::ClusterMembershipEvent::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::cluster::membership::ClusterMembershipEvent",
  "impl core::marker::Send for spark_core::cluster::membership::ClusterMembershipEvent",
  "impl core::marker::Sync for spark_core::cluster::membership::ClusterMembershipEvent",
  "impl core::marker::Unpin for spark_core::cluster::membership::ClusterMembershipEvent",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::membership::ClusterMembershipEvent",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::membership::ClusterMembershipEvent",
  "#[non_exhaustive] pub enum spark_core::ClusterNodeState",
  "pub spark_core::ClusterNodeState::Active",
  "pub spark_core::ClusterNodeState::Degraded",
  "pub spark_core::ClusterNodeState::Retiring",
  "pub spark_core::ClusterNodeState::Unreachable",
  "impl core::clone::Clone for spark_core::cluster::membership::ClusterNodeState",
  "pub fn spark_core::cluster::membership::ClusterNodeState::clone(&self) -> spark_core::cluster::membership::ClusterNodeState",
  "impl core::cmp::Eq for spark_core::cluster::membership::ClusterNodeState",
  "impl core::cmp::PartialEq for spark_core::cluster::membership::ClusterNodeState",
  "pub fn spark_core::cluster::membership::ClusterNodeState::eq(&self, other: &spark_core::cluster::membership::ClusterNodeState) -> bool",
  "impl core::fmt::Debug for spark_core::cluster::membership::ClusterNodeState",
  "pub fn spark_core::cluster::membership::ClusterNodeState::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::cluster::membership::ClusterNodeState",
  "pub fn spark_core::cluster::membership::ClusterNodeState::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::Copy for spark_core::cluster::membership::ClusterNodeState",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::membership::ClusterNodeState",
  "impl core::marker::Freeze for spark_core::cluster::membership::ClusterNodeState",
  "impl core::marker::Send for spark_core::cluster::membership::ClusterNodeState",
  "impl core::marker::Sync for spark_core::cluster::membership::ClusterNodeState",
  "impl core::marker::Unpin for spark_core::cluster::membership::ClusterNodeState",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::membership::ClusterNodeState",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::membership::ClusterNodeState",
  "#[non_exhaustive] pub enum spark_core::ClusterScopeSelector",
  "pub spark_core::ClusterScopeSelector::ByRole(spark_core::cluster::topology::RoleDescriptor)",
  "pub spark_core::ClusterScopeSelector::ByShard(alloc::string::String)",
  "pub spark_core::ClusterScopeSelector::Custom(alloc::string::String)",
  "pub spark_core::ClusterScopeSelector::EntireCluster",
  "impl core::clone::Clone for spark_core::cluster::membership::ClusterScopeSelector",
  "pub fn spark_core::cluster::membership::ClusterScopeSelector::clone(&self) -> spark_core::cluster::membership::ClusterScopeSelector",
  "impl core::cmp::Eq for spark_core::cluster::membership::ClusterScopeSelector",
  "impl core::cmp::PartialEq for spark_core::cluster::membership::ClusterScopeSelector",
  "pub fn spark_core::cluster::membership::ClusterScopeSelector::eq(&self, other: &spark_core::cluster::membership::ClusterScopeSelector) -> bool",
  "impl core::fmt::Debug for spark_core::cluster::membership::ClusterScopeSelector",
  "pub fn spark_core::cluster::membership::ClusterScopeSelector::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::membership::ClusterScopeSelector",
  "impl core::marker::Freeze for spark_core::cluster::membership::ClusterScopeSelector",
  "impl core::marker::Send for spark_core::cluster::membership::ClusterScopeSelector",
  "impl core::marker::Sync for spark_core::cluster::membership::ClusterScopeSelector",
  "impl core::marker::Unpin for spark_core::cluster::membership::ClusterScopeSelector",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::membership::ClusterScopeSelector",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::membership::ClusterScopeSelector",
  "#[non_exhaustive] pub enum spark_core::ComponentHealthState",
  "pub spark_core::ComponentHealthState::Degraded",
  "pub spark_core::ComponentHealthState::Failed",
  "pub spark_core::ComponentHealthState::Initializing",
  "pub spark_core::ComponentHealthState::Ready",
  "impl core::clone::Clone for spark_core::host::component::ComponentHealthState",
  "pub fn spark_core::host::component::ComponentHealthState::clone(&self) -> spark_core::host::component::ComponentHealthState",
  "impl core::cmp::Eq for spark_core::host::component::ComponentHealthState",
  "impl core::cmp::PartialEq for spark_core::host::component::ComponentHealthState",
  "pub fn spark_core::host::component::ComponentHealthState::eq(&self, other: &spark_core::host::component::ComponentHealthState) -> bool",
  "impl core::fmt::Debug for spark_core::host::component::ComponentHealthState",
  "pub fn spark_core::host::component::ComponentHealthState::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::component::ComponentHealthState",
  "impl core::marker::Freeze for spark_core::host::component::ComponentHealthState",
  "impl core::marker::Send for spark_core::host::component::ComponentHealthState",
  "impl core::marker::Sync for spark_core::host::component::ComponentHealthState",
  "impl core::marker::Unpin for spark_core::host::component::ComponentHealthState",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::component::ComponentHealthState",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::component::ComponentHealthState",
  "#[non_exhaustive] pub enum spark_core::ComponentKind",
  "pub spark_core::ComponentKind::ConfigurationProvider",
  "pub spark_core::ComponentKind::Custom(alloc::string::String)",
  "pub spark_core::ComponentKind::Extension",
  "pub spark_core::ComponentKind::ObservabilityExporter",
  "pub spark_core::ComponentKind::ServiceRuntime",
  "pub spark_core::ComponentKind::TransportAdapter",
  "impl core::clone::Clone for spark_core::host::component::ComponentKind",
  "pub fn spark_core::host::component::ComponentKind::clone(&self) -> spark_core::host::component::ComponentKind",
  "impl core::cmp::Eq for spark_core::host::component::ComponentKind",
  "impl core::cmp::PartialEq for spark_core::host::component::ComponentKind",
  "pub fn spark_core::host::component::ComponentKind::eq(&self, other: &spark_core::host::component::ComponentKind) -> bool",
  "impl core::fmt::Debug for spark_core::host::component::ComponentKind",
  "pub fn spark_core::host::component::ComponentKind::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::component::ComponentKind",
  "impl core::marker::Freeze for spark_core::host::component::ComponentKind",
  "impl core::marker::Send for spark_core::host::component::ComponentKind",
  "impl core::marker::Sync for spark_core::host::component::ComponentKind",
  "impl core::marker::Unpin for spark_core::host::component::ComponentKind",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::component::ComponentKind",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::component::ComponentKind",
  "pub enum spark_core::ConfigDelta",
  "pub spark_core::ConfigDelta::Change(spark_core::ChangeNotification)",
  "pub spark_core::ConfigDelta::Refresh(alloc::vec::Vec<spark_core::ConfigurationLayer>)",
  "impl core::clone::Clone for spark_core::ConfigDelta",
  "pub fn spark_core::ConfigDelta::clone(&self) -> spark_core::ConfigDelta",
  "impl core::cmp::PartialEq for spark_core::ConfigDelta",
  "pub fn spark_core::ConfigDelta::eq(&self, other: &spark_core::ConfigDelta) -> bool",
  "impl core::fmt::Debug for spark_core::ConfigDelta",
  "pub fn spark_core::ConfigDelta::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::ConfigDelta",
  "impl core::marker::Freeze for spark_core::ConfigDelta",
  "impl core::marker::Send for spark_core::ConfigDelta",
  "impl core::marker::Sync for spark_core::ConfigDelta",
  "impl core::marker::Unpin for spark_core::ConfigDelta",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ConfigDelta",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ConfigDelta",
  "#[non_exhaustive] pub enum spark_core::ConfigScope",
  "pub spark_core::ConfigScope::Cluster",
  "pub spark_core::ConfigScope::Global",
  "pub spark_core::ConfigScope::Node",
  "pub spark_core::ConfigScope::Runtime",
  "pub spark_core::ConfigScope::Session",
  "impl spark_core::ConfigScope",
  "pub const fn spark_core::ConfigScope::as_str(self) -> &'static str",
  "pub fn spark_core::ConfigScope::parse(value: &str) -> core::option::Option<Self>",
  "impl core::clone::Clone for spark_core::ConfigScope",
  "pub fn spark_core::ConfigScope::clone(&self) -> spark_core::ConfigScope",
  "impl core::cmp::Eq for spark_core::ConfigScope",
  "impl core::cmp::PartialEq for spark_core::ConfigScope",
  "pub fn spark_core::ConfigScope::eq(&self, other: &spark_core::ConfigScope) -> bool",
  "impl core::fmt::Debug for spark_core::ConfigScope",
  "pub fn spark_core::ConfigScope::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::ConfigScope",
  "pub fn spark_core::ConfigScope::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::ConfigScope",
  "pub fn spark_core::ConfigScope::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::Copy for spark_core::ConfigScope",
  "impl core::marker::StructuralPartialEq for spark_core::ConfigScope",
  "impl core::marker::Freeze for spark_core::ConfigScope",
  "impl core::marker::Send for spark_core::ConfigScope",
  "impl core::marker::Sync for spark_core::ConfigScope",
  "impl core::marker::Unpin for spark_core::ConfigScope",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ConfigScope",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ConfigScope",
  "#[non_exhaustive] pub enum spark_core::ConfigValue",
  "pub spark_core::ConfigValue::Binary(alloc::borrow::Cow<'static, [u8]>, spark_core::ConfigMetadata)",
  "pub spark_core::ConfigValue::Boolean(bool, spark_core::ConfigMetadata)",
  "pub spark_core::ConfigValue::Dictionary(alloc::vec::Vec<(alloc::borrow::Cow<'static, str>, spark_core::ConfigValue)>, spark_core::ConfigMetadata)",
  "pub spark_core::ConfigValue::Duration(core::time::Duration, spark_core::ConfigMetadata)",
  "pub spark_core::ConfigValue::Float(f64, spark_core::ConfigMetadata)",
  "pub spark_core::ConfigValue::Integer(i64, spark_core::ConfigMetadata)",
  "pub spark_core::ConfigValue::List(alloc::vec::Vec<spark_core::ConfigValue>, spark_core::ConfigMetadata)",
  "pub spark_core::ConfigValue::Text(alloc::borrow::Cow<'static, str>, spark_core::ConfigMetadata)",
  "impl spark_core::ConfigValue",
  "pub fn spark_core::ConfigValue::metadata(&self) -> &spark_core::ConfigMetadata",
  "impl core::clone::Clone for spark_core::ConfigValue",
  "pub fn spark_core::ConfigValue::clone(&self) -> spark_core::ConfigValue",
  "impl core::cmp::PartialEq for spark_core::ConfigValue",
  "pub fn spark_core::ConfigValue::eq(&self, other: &spark_core::ConfigValue) -> bool",
  "impl core::fmt::Debug for spark_core::ConfigValue",
  "pub fn spark_core::ConfigValue::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::ConfigValue",
  "impl core::marker::Freeze for spark_core::ConfigValue",
  "impl core::marker::Send for spark_core::ConfigValue",
  "impl core::marker::Sync for spark_core::ConfigValue",
  "impl core::marker::Unpin for spark_core::ConfigValue",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ConfigValue",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ConfigValue",
  "#[non_exhaustive] pub enum spark_core::ConfigurationError",
  "pub spark_core::ConfigurationError::Audit",
  "pub spark_core::ConfigurationError::Audit::context: alloc::borrow::Cow<'static, str>",
  "pub spark_core::ConfigurationError::Conflict",
  "pub spark_core::ConfigurationError::Conflict::context: alloc::borrow::Cow<'static, str>",
  "pub spark_core::ConfigurationError::Decode",
  "pub spark_core::ConfigurationError::Decode::context: alloc::borrow::Cow<'static, str>",
  "pub spark_core::ConfigurationError::Source",
  "pub spark_core::ConfigurationError::Source::context: alloc::borrow::Cow<'static, str>",
  "pub spark_core::ConfigurationError::Validation",
  "pub spark_core::ConfigurationError::Validation::context: alloc::borrow::Cow<'static, str>",
  "impl spark_core::ConfigurationError",
  "pub fn spark_core::ConfigurationError::context(&self) -> &str",
  "pub fn spark_core::ConfigurationError::kind(&self) -> spark_core::configuration::ConfigurationErrorKind",
  "pub fn spark_core::ConfigurationError::with_context<C>(kind: spark_core::configuration::ConfigurationErrorKind, context: C) -> Self where C: core::convert::Into<alloc::borrow::Cow<'static, str>>",
  "impl core::fmt::Debug for spark_core::ConfigurationError",
  "pub fn spark_core::ConfigurationError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::ConfigurationError",
  "pub fn spark_core::ConfigurationError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl spark_core::Error for spark_core::ConfigurationError",
  "pub fn spark_core::ConfigurationError::source(&self) -> core::option::Option<&(dyn spark_core::Error + 'static)>",
  "impl core::marker::Freeze for spark_core::ConfigurationError",
  "impl core::marker::Send for spark_core::ConfigurationError",
  "impl core::marker::Sync for spark_core::ConfigurationError",
  "impl core::marker::Unpin for spark_core::ConfigurationError",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ConfigurationError",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ConfigurationError",
  "pub enum spark_core::ConfigurationUpdateKind",
  "pub spark_core::ConfigurationUpdateKind::Incremental",
  "pub spark_core::ConfigurationUpdateKind::Incremental::change_set: spark_core::ChangeSet",
  "pub spark_core::ConfigurationUpdateKind::Incremental::notification: spark_core::ChangeNotification",
  "pub spark_core::ConfigurationUpdateKind::Refresh",
  "impl core::clone::Clone for spark_core::ConfigurationUpdateKind",
  "pub fn spark_core::ConfigurationUpdateKind::clone(&self) -> spark_core::ConfigurationUpdateKind",
  "impl core::cmp::PartialEq for spark_core::ConfigurationUpdateKind",
  "pub fn spark_core::ConfigurationUpdateKind::eq(&self, other: &spark_core::ConfigurationUpdateKind) -> bool",
  "impl core::fmt::Debug for spark_core::ConfigurationUpdateKind",
  "pub fn spark_core::ConfigurationUpdateKind::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::ConfigurationUpdateKind",
  "impl core::marker::Freeze for spark_core::ConfigurationUpdateKind",
  "impl core::marker::Send for spark_core::ConfigurationUpdateKind",
  "impl core::marker::Sync for spark_core::ConfigurationUpdateKind",
  "impl core::marker::Unpin for spark_core::ConfigurationUpdateKind",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ConfigurationUpdateKind",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ConfigurationUpdateKind",
  "#[non_exhaustive] pub enum spark_core::ControllerEventKind",
  "pub spark_core::ControllerEventKind::ChannelActivated",
  "pub spark_core::ControllerEventKind::ChannelDeactivated",
  "pub spark_core::ControllerEventKind::ExceptionRaised",
  "pub spark_core::ControllerEventKind::ReadCompleted",
  "pub spark_core::ControllerEventKind::ReadDispatched",
  "pub spark_core::ControllerEventKind::UserEventDispatched",
  "pub spark_core::ControllerEventKind::WritabilityChanged",
  "impl core::clone::Clone for spark_core::pipeline::controller::ControllerEventKind",
  "pub fn spark_core::pipeline::controller::ControllerEventKind::clone(&self) -> spark_core::pipeline::controller::ControllerEventKind",
  "impl core::cmp::Eq for spark_core::pipeline::controller::ControllerEventKind",
  "impl core::cmp::PartialEq for spark_core::pipeline::controller::ControllerEventKind",
  "pub fn spark_core::pipeline::controller::ControllerEventKind::eq(&self, other: &spark_core::pipeline::controller::ControllerEventKind) -> bool",
  "impl core::fmt::Debug for spark_core::pipeline::controller::ControllerEventKind",
  "pub fn spark_core::pipeline::controller::ControllerEventKind::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::pipeline::controller::ControllerEventKind",
  "impl core::marker::StructuralPartialEq for spark_core::pipeline::controller::ControllerEventKind",
  "impl core::marker::Freeze for spark_core::pipeline::controller::ControllerEventKind",
  "impl core::marker::Send for spark_core::pipeline::controller::ControllerEventKind",
  "impl core::marker::Sync for spark_core::pipeline::controller::ControllerEventKind",
  "impl core::marker::Unpin for spark_core::pipeline::controller::ControllerEventKind",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::pipeline::controller::ControllerEventKind",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::pipeline::controller::ControllerEventKind",
  "#[non_exhaustive] pub enum spark_core::CoreUserEvent",
  "pub spark_core::CoreUserEvent::ApplicationSpecific(alloc::sync::Arc<dyn spark_core::observability::events::ApplicationEvent>)",
  "pub spark_core::CoreUserEvent::ConfigChanged",
  "pub spark_core::CoreUserEvent::ConfigChanged::keys: alloc::vec::Vec<alloc::string::String>",
  "pub spark_core::CoreUserEvent::IdleTimeout(spark_core::observability::events::IdleTimeout)",
  "pub spark_core::CoreUserEvent::RateLimited(spark_core::observability::events::RateLimited)",
  "pub spark_core::CoreUserEvent::TlsEstablished(spark_core::observability::events::TlsInfo)",
  "impl spark_core::observability::events::CoreUserEvent",
  "pub fn spark_core::observability::events::CoreUserEvent::application_event_kind(&self) -> core::option::Option<&'static str>",
  "pub fn spark_core::observability::events::CoreUserEvent::downcast_application_event<E>(&self) -> core::option::Option<&E> where E: spark_core::observability::events::ApplicationEvent",
  "pub fn spark_core::observability::events::CoreUserEvent::from_application_event<E>(event: E) -> Self where E: spark_core::observability::events::ApplicationEvent",
  "impl core::clone::Clone for spark_core::observability::events::CoreUserEvent",
  "pub fn spark_core::observability::events::CoreUserEvent::clone(&self) -> spark_core::observability::events::CoreUserEvent",
  "impl core::fmt::Debug for spark_core::observability::events::CoreUserEvent",
  "pub fn spark_core::observability::events::CoreUserEvent::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::observability::events::CoreUserEvent",
  "impl core::marker::Send for spark_core::observability::events::CoreUserEvent",
  "impl core::marker::Sync for spark_core::observability::events::CoreUserEvent",
  "impl core::marker::Unpin for spark_core::observability::events::CoreUserEvent",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::events::CoreUserEvent",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::observability::events::CoreUserEvent",
  "#[non_exhaustive] pub enum spark_core::CredentialMaterial",
  "pub spark_core::CredentialMaterial::CertificateChain(alloc::vec::Vec<u8>)",
  "pub spark_core::CredentialMaterial::Custom",
  "pub spark_core::CredentialMaterial::Custom::format: alloc::string::String",
  "pub spark_core::CredentialMaterial::Custom::payload: alloc::vec::Vec<u8>",
  "pub spark_core::CredentialMaterial::PublicKey(alloc::vec::Vec<u8>)",
  "pub spark_core::CredentialMaterial::SignedToken(alloc::vec::Vec<u8>)",
  "pub spark_core::CredentialMaterial::SymmetricKey(alloc::vec::Vec<u8>)",
  "impl core::clone::Clone for spark_core::security::credential::CredentialMaterial",
  "pub fn spark_core::security::credential::CredentialMaterial::clone(&self) -> spark_core::security::credential::CredentialMaterial",
  "impl core::cmp::Eq for spark_core::security::credential::CredentialMaterial",
  "impl core::cmp::PartialEq for spark_core::security::credential::CredentialMaterial",
  "pub fn spark_core::security::credential::CredentialMaterial::eq(&self, other: &spark_core::security::credential::CredentialMaterial) -> bool",
  "impl core::fmt::Debug for spark_core::security::credential::CredentialMaterial",
  "pub fn spark_core::security::credential::CredentialMaterial::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::credential::CredentialMaterial",
  "impl core::marker::Freeze for spark_core::security::credential::CredentialMaterial",
  "impl core::marker::Send for spark_core::security::credential::CredentialMaterial",
  "impl core::marker::Sync for spark_core::security::credential::CredentialMaterial",
  "impl core::marker::Unpin for spark_core::security::credential::CredentialMaterial",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::credential::CredentialMaterial",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::credential::CredentialMaterial",
  "#[non_exhaustive] pub enum spark_core::CredentialScope",
  "pub spark_core::CredentialScope::Connection",
  "pub spark_core::CredentialScope::Message",
  "pub spark_core::CredentialScope::Session",
  "impl core::clone::Clone for spark_core::security::credential::CredentialScope",
  "pub fn spark_core::security::credential::CredentialScope::clone(&self) -> spark_core::security::credential::CredentialScope",
  "impl core::cmp::Eq for spark_core::security::credential::CredentialScope",
  "impl core::cmp::PartialEq for spark_core::security::credential::CredentialScope",
  "pub fn spark_core::security::credential::CredentialScope::eq(&self, other: &spark_core::security::credential::CredentialScope) -> bool",
  "impl core::fmt::Debug for spark_core::security::credential::CredentialScope",
  "pub fn spark_core::security::credential::CredentialScope::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::security::credential::CredentialScope",
  "impl core::marker::StructuralPartialEq for spark_core::security::credential::CredentialScope",
  "impl core::marker::Freeze for spark_core::security::credential::CredentialScope",
  "impl core::marker::Send for spark_core::security::credential::CredentialScope",
  "impl core::marker::Sync for spark_core::security::credential::CredentialScope",
  "impl core::marker::Unpin for spark_core::security::credential::CredentialScope",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::credential::CredentialScope",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::credential::CredentialScope",
  "#[non_exhaustive] pub enum spark_core::CredentialState",
  "pub spark_core::CredentialState::Active",
  "pub spark_core::CredentialState::Expired",
  "pub spark_core::CredentialState::Revoked",
  "impl core::clone::Clone for spark_core::security::credential::CredentialState",
  "pub fn spark_core::security::credential::CredentialState::clone(&self) -> spark_core::security::credential::CredentialState",
  "impl core::cmp::Eq for spark_core::security::credential::CredentialState",
  "impl core::cmp::PartialEq for spark_core::security::credential::CredentialState",
  "pub fn spark_core::security::credential::CredentialState::eq(&self, other: &spark_core::security::credential::CredentialState) -> bool",
  "impl core::fmt::Debug for spark_core::security::credential::CredentialState",
  "pub fn spark_core::security::credential::CredentialState::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::security::credential::CredentialState",
  "impl core::marker::StructuralPartialEq for spark_core::security::credential::CredentialState",
  "impl core::marker::Freeze for spark_core::security::credential::CredentialState",
  "impl core::marker::Send for spark_core::security::credential::CredentialState",
  "impl core::marker::Sync for spark_core::security::credential::CredentialState",
  "impl core::marker::Unpin for spark_core::security::credential::CredentialState",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::credential::CredentialState",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::credential::CredentialState",
  "#[non_exhaustive] pub enum spark_core::DecodeOutcome<T>",
  "pub spark_core::DecodeOutcome::Complete(T)",
  "pub spark_core::DecodeOutcome::Incomplete",
  "pub spark_core::DecodeOutcome::Skipped",
  "impl<T: core::fmt::Debug> core::fmt::Debug for spark_core::DecodeOutcome<T>",
  "pub fn spark_core::DecodeOutcome<T>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<T> core::marker::Freeze for spark_core::DecodeOutcome<T> where T: core::marker::Freeze",
  "impl<T> core::marker::Send for spark_core::DecodeOutcome<T> where T: core::marker::Send",
  "impl<T> core::marker::Sync for spark_core::DecodeOutcome<T> where T: core::marker::Sync",
  "impl<T> core::marker::Unpin for spark_core::DecodeOutcome<T> where T: core::marker::Unpin",
  "impl<T> core::panic::unwind_safe::RefUnwindSafe for spark_core::DecodeOutcome<T> where T: core::panic::unwind_safe::RefUnwindSafe",
  "impl<T> core::panic::unwind_safe::UnwindSafe for spark_core::DecodeOutcome<T> where T: core::panic::unwind_safe::UnwindSafe",
  "#[non_exhaustive] pub enum spark_core::DiscoveryEvent",
  "pub spark_core::DiscoveryEvent::InstanceAdded",
  "pub spark_core::DiscoveryEvent::InstanceAdded::instance: spark_core::cluster::discovery::ServiceInstance",
  "pub spark_core::DiscoveryEvent::InstanceAdded::revision: spark_core::cluster::topology::ClusterRevision",
  "pub spark_core::DiscoveryEvent::InstanceRemoved",
  "pub spark_core::DiscoveryEvent::InstanceRemoved::endpoint: spark_core::transport::endpoint::Endpoint",
  "pub spark_core::DiscoveryEvent::InstanceRemoved::revision: spark_core::cluster::topology::ClusterRevision",
  "pub spark_core::DiscoveryEvent::InstanceUpdated",
  "pub spark_core::DiscoveryEvent::InstanceUpdated::instance: spark_core::cluster::discovery::ServiceInstance",
  "pub spark_core::DiscoveryEvent::InstanceUpdated::revision: spark_core::cluster::topology::ClusterRevision",
  "pub spark_core::DiscoveryEvent::SnapshotApplied(spark_core::cluster::discovery::DiscoverySnapshot)",
  "pub spark_core::DiscoveryEvent::TopologyHintUpdated",
  "pub spark_core::DiscoveryEvent::TopologyHintUpdated::hints: alloc::vec::Vec<alloc::string::String>",
  "pub spark_core::DiscoveryEvent::TopologyHintUpdated::revision: spark_core::cluster::topology::ClusterRevision",
  "impl core::clone::Clone for spark_core::cluster::discovery::DiscoveryEvent",
  "pub fn spark_core::cluster::discovery::DiscoveryEvent::clone(&self) -> spark_core::cluster::discovery::DiscoveryEvent",
  "impl core::fmt::Debug for spark_core::cluster::discovery::DiscoveryEvent",
  "pub fn spark_core::cluster::discovery::DiscoveryEvent::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::cluster::discovery::DiscoveryEvent",
  "impl core::marker::Send for spark_core::cluster::discovery::DiscoveryEvent",
  "impl core::marker::Sync for spark_core::cluster::discovery::DiscoveryEvent",
  "impl core::marker::Unpin for spark_core::cluster::discovery::DiscoveryEvent",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::discovery::DiscoveryEvent",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::discovery::DiscoveryEvent",
  "#[non_exhaustive] pub enum spark_core::DomainErrorKind",
  "pub spark_core::DomainErrorKind::Application",
  "pub spark_core::DomainErrorKind::Buffer",
  "pub spark_core::DomainErrorKind::Cluster",
  "pub spark_core::DomainErrorKind::Discovery",
  "pub spark_core::DomainErrorKind::Protocol",
  "pub spark_core::DomainErrorKind::Router",
  "pub spark_core::DomainErrorKind::Runtime",
  "pub spark_core::DomainErrorKind::Transport",
  "impl core::clone::Clone for spark_core::error::DomainErrorKind",
  "pub fn spark_core::error::DomainErrorKind::clone(&self) -> spark_core::error::DomainErrorKind",
  "impl core::cmp::Eq for spark_core::error::DomainErrorKind",
  "impl core::cmp::PartialEq for spark_core::error::DomainErrorKind",
  "pub fn spark_core::error::DomainErrorKind::eq(&self, other: &spark_core::error::DomainErrorKind) -> bool",
  "impl core::fmt::Debug for spark_core::error::DomainErrorKind",
  "pub fn spark_core::error::DomainErrorKind::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::error::DomainErrorKind",
  "pub fn spark_core::error::DomainErrorKind::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::Copy for spark_core::error::DomainErrorKind",
  "impl core::marker::StructuralPartialEq for spark_core::error::DomainErrorKind",
  "impl core::marker::Freeze for spark_core::error::DomainErrorKind",
  "impl core::marker::Send for spark_core::error::DomainErrorKind",
  "impl core::marker::Sync for spark_core::error::DomainErrorKind",
  "impl core::marker::Unpin for spark_core::error::DomainErrorKind",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::error::DomainErrorKind",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::error::DomainErrorKind",
  "#[non_exhaustive] pub enum spark_core::EndpointKind",
  "pub spark_core::EndpointKind::Logical",
  "pub spark_core::EndpointKind::Physical",
  "impl core::clone::Clone for spark_core::transport::endpoint::EndpointKind",
  "pub fn spark_core::transport::endpoint::EndpointKind::clone(&self) -> spark_core::transport::endpoint::EndpointKind",
  "impl core::cmp::Eq for spark_core::transport::endpoint::EndpointKind",
  "impl core::cmp::PartialEq for spark_core::transport::endpoint::EndpointKind",
  "pub fn spark_core::transport::endpoint::EndpointKind::eq(&self, other: &spark_core::transport::endpoint::EndpointKind) -> bool",
  "impl core::fmt::Debug for spark_core::transport::endpoint::EndpointKind",
  "pub fn spark_core::transport::endpoint::EndpointKind::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::transport::endpoint::EndpointKind",
  "impl core::marker::StructuralPartialEq for spark_core::transport::endpoint::EndpointKind",
  "impl core::marker::Freeze for spark_core::transport::endpoint::EndpointKind",
  "impl core::marker::Send for spark_core::transport::endpoint::EndpointKind",
  "impl core::marker::Sync for spark_core::transport::endpoint::EndpointKind",
  "impl core::marker::Unpin for spark_core::transport::endpoint::EndpointKind",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::endpoint::EndpointKind",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::endpoint::EndpointKind",
  "#[non_exhaustive] pub enum spark_core::ErrorCategory",
  "pub spark_core::ErrorCategory::Cancelled",
  "pub spark_core::ErrorCategory::NonRetryable",
  "pub spark_core::ErrorCategory::ProtocolViolation",
  "pub spark_core::ErrorCategory::ResourceExhausted(spark_core::contract::BudgetKind)",
  "pub spark_core::ErrorCategory::Retryable(spark_core::status::ready::RetryAdvice)",
  "pub spark_core::ErrorCategory::Security(spark_core::security::class::SecurityClass)",
  "pub spark_core::ErrorCategory::Timeout",
  "impl core::clone::Clone for spark_core::error::ErrorCategory",
  "pub fn spark_core::error::ErrorCategory::clone(&self) -> spark_core::error::ErrorCategory",
  "impl core::cmp::Eq for spark_core::error::ErrorCategory",
  "impl core::cmp::PartialEq for spark_core::error::ErrorCategory",
  "pub fn spark_core::error::ErrorCategory::eq(&self, other: &spark_core::error::ErrorCategory) -> bool",
  "impl core::fmt::Debug for spark_core::error::ErrorCategory",
  "pub fn spark_core::error::ErrorCategory::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::error::ErrorCategory",
  "impl core::marker::Freeze for spark_core::error::ErrorCategory",
  "impl core::marker::Send for spark_core::error::ErrorCategory",
  "impl core::marker::Sync for spark_core::error::ErrorCategory",
  "impl core::marker::Unpin for spark_core::error::ErrorCategory",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::error::ErrorCategory",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::error::ErrorCategory",
  "#[non_exhaustive] pub enum spark_core::EventPolicy",
  "pub spark_core::EventPolicy::BoundedBuffer",
  "pub spark_core::EventPolicy::BoundedBuffer::capacity: core::num::nonzero::NonZeroUsize",
  "pub spark_core::EventPolicy::BoundedBuffer::overflow: spark_core::cluster::flow_control::OverflowPolicy",
  "pub spark_core::EventPolicy::Debounce",
  "pub spark_core::EventPolicy::Debounce::window: core::time::Duration",
  "pub spark_core::EventPolicy::Passthrough",
  "pub spark_core::EventPolicy::RateLimit",
  "pub spark_core::EventPolicy::RateLimit::burst: core::num::nonzero::NonZeroU32",
  "pub spark_core::EventPolicy::RateLimit::permits_per_sec: core::num::nonzero::NonZeroU32",
  "pub spark_core::EventPolicy::Sample",
  "pub spark_core::EventPolicy::Sample::every: core::num::nonzero::NonZeroUsize",
  "impl core::clone::Clone for spark_core::observability::events::EventPolicy",
  "pub fn spark_core::observability::events::EventPolicy::clone(&self) -> spark_core::observability::events::EventPolicy",
  "impl core::cmp::Eq for spark_core::observability::events::EventPolicy",
  "impl core::cmp::PartialEq for spark_core::observability::events::EventPolicy",
  "pub fn spark_core::observability::events::EventPolicy::eq(&self, other: &spark_core::observability::events::EventPolicy) -> bool",
  "impl core::fmt::Debug for spark_core::observability::events::EventPolicy",
  "pub fn spark_core::observability::events::EventPolicy::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::observability::events::EventPolicy",
  "impl core::marker::Freeze for spark_core::observability::events::EventPolicy",
  "impl core::marker::Send for spark_core::observability::events::EventPolicy",
  "impl core::marker::Sync for spark_core::observability::events::EventPolicy",
  "impl core::marker::Unpin for spark_core::observability::events::EventPolicy",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::events::EventPolicy",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::events::EventPolicy",
  "#[non_exhaustive] pub enum spark_core::FlowControlMode",
  "pub spark_core::FlowControlMode::Bounded",
  "pub spark_core::FlowControlMode::Bounded::capacity: core::num::nonzero::NonZeroUsize",
  "pub spark_core::FlowControlMode::Bounded::overflow: spark_core::cluster::flow_control::OverflowPolicy",
  "pub spark_core::FlowControlMode::Unbounded",
  "impl core::clone::Clone for spark_core::cluster::flow_control::FlowControlMode",
  "pub fn spark_core::cluster::flow_control::FlowControlMode::clone(&self) -> spark_core::cluster::flow_control::FlowControlMode",
  "impl core::cmp::Eq for spark_core::cluster::flow_control::FlowControlMode",
  "impl core::cmp::PartialEq for spark_core::cluster::flow_control::FlowControlMode",
  "pub fn spark_core::cluster::flow_control::FlowControlMode::eq(&self, other: &spark_core::cluster::flow_control::FlowControlMode) -> bool",
  "impl core::fmt::Debug for spark_core::cluster::flow_control::FlowControlMode",
  "pub fn spark_core::cluster::flow_control::FlowControlMode::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::cluster::flow_control::FlowControlMode",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::flow_control::FlowControlMode",
  "impl core::marker::Freeze for spark_core::cluster::flow_control::FlowControlMode",
  "impl core::marker::Send for spark_core::cluster::flow_control::FlowControlMode",
  "impl core::marker::Sync for spark_core::cluster::flow_control::FlowControlMode",
  "impl core::marker::Unpin for spark_core::cluster::flow_control::FlowControlMode",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::flow_control::FlowControlMode",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::flow_control::FlowControlMode",
  "pub enum spark_core::HandshakeErrorKind",
  "pub spark_core::HandshakeErrorKind::AuditFailure",
  "pub spark_core::HandshakeErrorKind::AuditFailure::error: spark_core::audit::AuditError",
  "pub spark_core::HandshakeErrorKind::LocalLacksRemoteRequirements",
  "pub spark_core::HandshakeErrorKind::LocalLacksRemoteRequirements::missing: spark_core::transport::handshake::CapabilityBitmap",
  "pub spark_core::HandshakeErrorKind::MajorVersionMismatch",
  "pub spark_core::HandshakeErrorKind::MajorVersionMismatch::local: spark_core::transport::handshake::Version",
  "pub spark_core::HandshakeErrorKind::MajorVersionMismatch::remote: spark_core::transport::handshake::Version",
  "pub spark_core::HandshakeErrorKind::RemoteLacksLocalRequirements",
  "pub spark_core::HandshakeErrorKind::RemoteLacksLocalRequirements::missing: spark_core::transport::handshake::CapabilityBitmap",
  "impl core::clone::Clone for spark_core::transport::handshake::HandshakeErrorKind",
  "pub fn spark_core::transport::handshake::HandshakeErrorKind::clone(&self) -> spark_core::transport::handshake::HandshakeErrorKind",
  "impl core::cmp::Eq for spark_core::transport::handshake::HandshakeErrorKind",
  "impl core::cmp::PartialEq for spark_core::transport::handshake::HandshakeErrorKind",
  "pub fn spark_core::transport::handshake::HandshakeErrorKind::eq(&self, other: &spark_core::transport::handshake::HandshakeErrorKind) -> bool",
  "impl core::fmt::Debug for spark_core::transport::handshake::HandshakeErrorKind",
  "pub fn spark_core::transport::handshake::HandshakeErrorKind::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::transport::handshake::HandshakeErrorKind",
  "impl core::marker::Freeze for spark_core::transport::handshake::HandshakeErrorKind",
  "impl core::marker::Send for spark_core::transport::handshake::HandshakeErrorKind",
  "impl core::marker::Sync for spark_core::transport::handshake::HandshakeErrorKind",
  "impl core::marker::Unpin for spark_core::transport::handshake::HandshakeErrorKind",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::handshake::HandshakeErrorKind",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::handshake::HandshakeErrorKind",
  "#[non_exhaustive] pub enum spark_core::HealthState",
  "pub spark_core::HealthState::Degraded",
  "pub spark_core::HealthState::Down",
  "pub spark_core::HealthState::Up",
  "impl core::clone::Clone for spark_core::observability::health::HealthState",
  "pub fn spark_core::observability::health::HealthState::clone(&self) -> spark_core::observability::health::HealthState",
  "impl core::cmp::Eq for spark_core::observability::health::HealthState",
  "impl core::cmp::PartialEq for spark_core::observability::health::HealthState",
  "pub fn spark_core::observability::health::HealthState::eq(&self, other: &spark_core::observability::health::HealthState) -> bool",
  "impl core::fmt::Debug for spark_core::observability::health::HealthState",
  "pub fn spark_core::observability::health::HealthState::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::observability::health::HealthState",
  "impl core::marker::StructuralPartialEq for spark_core::observability::health::HealthState",
  "impl core::marker::Freeze for spark_core::observability::health::HealthState",
  "impl core::marker::Send for spark_core::observability::health::HealthState",
  "impl core::marker::Sync for spark_core::observability::health::HealthState",
  "impl core::marker::Unpin for spark_core::observability::health::HealthState",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::health::HealthState",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::health::HealthState",
  "#[non_exhaustive] pub enum spark_core::IdentityKind",
  "pub spark_core::IdentityKind::Custom(alloc::string::String)",
  "pub spark_core::IdentityKind::Machine",
  "pub spark_core::IdentityKind::Service",
  "pub spark_core::IdentityKind::User",
  "pub spark_core::IdentityKind::Workload",
  "impl core::clone::Clone for spark_core::security::identity::IdentityKind",
  "pub fn spark_core::security::identity::IdentityKind::clone(&self) -> spark_core::security::identity::IdentityKind",
  "impl core::cmp::Eq for spark_core::security::identity::IdentityKind",
  "impl core::cmp::PartialEq for spark_core::security::identity::IdentityKind",
  "pub fn spark_core::security::identity::IdentityKind::eq(&self, other: &spark_core::security::identity::IdentityKind) -> bool",
  "impl core::fmt::Debug for spark_core::security::identity::IdentityKind",
  "pub fn spark_core::security::identity::IdentityKind::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::identity::IdentityKind",
  "impl core::marker::Freeze for spark_core::security::identity::IdentityKind",
  "impl core::marker::Send for spark_core::security::identity::IdentityKind",
  "impl core::marker::Sync for spark_core::security::identity::IdentityKind",
  "impl core::marker::Unpin for spark_core::security::identity::IdentityKind",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::identity::IdentityKind",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::identity::IdentityKind",
  "#[non_exhaustive] pub enum spark_core::IdentityProof",
  "pub spark_core::IdentityProof::Custom",
  "pub spark_core::IdentityProof::Custom::format: alloc::string::String",
  "pub spark_core::IdentityProof::Custom::payload: alloc::vec::Vec<u8>",
  "pub spark_core::IdentityProof::JsonWebToken(alloc::string::String)",
  "pub spark_core::IdentityProof::PublicKey(alloc::vec::Vec<u8>)",
  "pub spark_core::IdentityProof::Spiffe(alloc::string::String)",
  "pub spark_core::IdentityProof::X509Chain(alloc::vec::Vec<u8>)",
  "impl core::clone::Clone for spark_core::security::identity::IdentityProof",
  "pub fn spark_core::security::identity::IdentityProof::clone(&self) -> spark_core::security::identity::IdentityProof",
  "impl core::cmp::Eq for spark_core::security::identity::IdentityProof",
  "impl core::cmp::PartialEq for spark_core::security::identity::IdentityProof",
  "pub fn spark_core::security::identity::IdentityProof::eq(&self, other: &spark_core::security::identity::IdentityProof) -> bool",
  "impl core::fmt::Debug for spark_core::security::identity::IdentityProof",
  "pub fn spark_core::security::identity::IdentityProof::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::identity::IdentityProof",
  "impl core::marker::Freeze for spark_core::security::identity::IdentityProof",
  "impl core::marker::Send for spark_core::security::identity::IdentityProof",
  "impl core::marker::Sync for spark_core::security::identity::IdentityProof",
  "impl core::marker::Unpin for spark_core::security::identity::IdentityProof",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::identity::IdentityProof",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::identity::IdentityProof",
  "#[non_exhaustive] pub enum spark_core::IdleDirection",
  "pub spark_core::IdleDirection::Both",
  "pub spark_core::IdleDirection::Read",
  "pub spark_core::IdleDirection::Write",
  "impl core::clone::Clone for spark_core::observability::events::IdleDirection",
  "pub fn spark_core::observability::events::IdleDirection::clone(&self) -> spark_core::observability::events::IdleDirection",
  "impl core::cmp::Eq for spark_core::observability::events::IdleDirection",
  "impl core::cmp::PartialEq for spark_core::observability::events::IdleDirection",
  "pub fn spark_core::observability::events::IdleDirection::eq(&self, other: &spark_core::observability::events::IdleDirection) -> bool",
  "impl core::fmt::Debug for spark_core::observability::events::IdleDirection",
  "pub fn spark_core::observability::events::IdleDirection::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::observability::events::IdleDirection",
  "impl core::marker::StructuralPartialEq for spark_core::observability::events::IdleDirection",
  "impl core::marker::Freeze for spark_core::observability::events::IdleDirection",
  "impl core::marker::Send for spark_core::observability::events::IdleDirection",
  "impl core::marker::Sync for spark_core::observability::events::IdleDirection",
  "impl core::marker::Unpin for spark_core::observability::events::IdleDirection",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::events::IdleDirection",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::events::IdleDirection",
  "#[non_exhaustive] pub enum spark_core::ImplErrorKind",
  "pub spark_core::ImplErrorKind::BufferExhausted",
  "pub spark_core::ImplErrorKind::CodecRegistry",
  "pub spark_core::ImplErrorKind::Io",
  "pub spark_core::ImplErrorKind::StateViolation",
  "pub spark_core::ImplErrorKind::Timeout",
  "pub spark_core::ImplErrorKind::Uncategorized",
  "impl core::clone::Clone for spark_core::error::ImplErrorKind",
  "pub fn spark_core::error::ImplErrorKind::clone(&self) -> spark_core::error::ImplErrorKind",
  "impl core::cmp::Eq for spark_core::error::ImplErrorKind",
  "impl core::cmp::PartialEq for spark_core::error::ImplErrorKind",
  "pub fn spark_core::error::ImplErrorKind::eq(&self, other: &spark_core::error::ImplErrorKind) -> bool",
  "impl core::fmt::Debug for spark_core::error::ImplErrorKind",
  "pub fn spark_core::error::ImplErrorKind::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::error::ImplErrorKind",
  "pub fn spark_core::error::ImplErrorKind::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::Copy for spark_core::error::ImplErrorKind",
  "impl core::marker::StructuralPartialEq for spark_core::error::ImplErrorKind",
  "impl core::marker::Freeze for spark_core::error::ImplErrorKind",
  "impl core::marker::Send for spark_core::error::ImplErrorKind",
  "impl core::marker::Sync for spark_core::error::ImplErrorKind",
  "impl core::marker::Unpin for spark_core::error::ImplErrorKind",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::error::ImplErrorKind",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::error::ImplErrorKind",
  "#[non_exhaustive] pub enum spark_core::KeyPurpose",
  "pub spark_core::KeyPurpose::Custom(alloc::string::String)",
  "pub spark_core::KeyPurpose::DataEncryption",
  "pub spark_core::KeyPurpose::MessageIntegrity",
  "pub spark_core::KeyPurpose::RemoteAttestation",
  "pub spark_core::KeyPurpose::TransportHandshake",
  "impl core::clone::Clone for spark_core::security::keystore::KeyPurpose",
  "pub fn spark_core::security::keystore::KeyPurpose::clone(&self) -> spark_core::security::keystore::KeyPurpose",
  "impl core::cmp::Eq for spark_core::security::keystore::KeyPurpose",
  "impl core::cmp::PartialEq for spark_core::security::keystore::KeyPurpose",
  "pub fn spark_core::security::keystore::KeyPurpose::eq(&self, other: &spark_core::security::keystore::KeyPurpose) -> bool",
  "impl core::fmt::Debug for spark_core::security::keystore::KeyPurpose",
  "pub fn spark_core::security::keystore::KeyPurpose::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::keystore::KeyPurpose",
  "impl core::marker::Freeze for spark_core::security::keystore::KeyPurpose",
  "impl core::marker::Send for spark_core::security::keystore::KeyPurpose",
  "impl core::marker::Sync for spark_core::security::keystore::KeyPurpose",
  "impl core::marker::Unpin for spark_core::security::keystore::KeyPurpose",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::keystore::KeyPurpose",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::keystore::KeyPurpose",
  "#[non_exhaustive] pub enum spark_core::KeyRetrievalError",
  "pub spark_core::KeyRetrievalError::InvalidRequest(alloc::string::String)",
  "pub spark_core::KeyRetrievalError::NotFound",
  "pub spark_core::KeyRetrievalError::Other(alloc::string::String)",
  "pub spark_core::KeyRetrievalError::Unauthorized",
  "pub spark_core::KeyRetrievalError::Unavailable",
  "impl core::fmt::Debug for spark_core::security::keystore::KeyRetrievalError",
  "pub fn spark_core::security::keystore::KeyRetrievalError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::security::keystore::KeyRetrievalError",
  "pub fn spark_core::security::keystore::KeyRetrievalError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl spark_core::Error for spark_core::security::keystore::KeyRetrievalError",
  "pub fn spark_core::security::keystore::KeyRetrievalError::source(&self) -> core::option::Option<&(dyn spark_core::Error + 'static)>",
  "impl core::marker::Freeze for spark_core::security::keystore::KeyRetrievalError",
  "impl core::marker::Send for spark_core::security::keystore::KeyRetrievalError",
  "impl core::marker::Sync for spark_core::security::keystore::KeyRetrievalError",
  "impl core::marker::Unpin for spark_core::security::keystore::KeyRetrievalError",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::keystore::KeyRetrievalError",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::keystore::KeyRetrievalError",
  "#[non_exhaustive] pub enum spark_core::LimitAction",
  "pub spark_core::LimitAction::Degrade",
  "pub spark_core::LimitAction::Queue",
  "pub spark_core::LimitAction::Queue::max_queue_depth: u32",
  "pub spark_core::LimitAction::Reject",
  "impl spark_core::limits::LimitAction",
  "pub const fn spark_core::limits::LimitAction::as_str(self) -> &'static str",
  "pub const fn spark_core::limits::LimitAction::queue_capacity(self) -> core::option::Option<u32>",
  "impl core::clone::Clone for spark_core::limits::LimitAction",
  "pub fn spark_core::limits::LimitAction::clone(&self) -> spark_core::limits::LimitAction",
  "impl core::cmp::Eq for spark_core::limits::LimitAction",
  "impl core::cmp::PartialEq for spark_core::limits::LimitAction",
  "pub fn spark_core::limits::LimitAction::eq(&self, other: &spark_core::limits::LimitAction) -> bool",
  "impl core::fmt::Debug for spark_core::limits::LimitAction",
  "pub fn spark_core::limits::LimitAction::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::limits::LimitAction",
  "pub fn spark_core::limits::LimitAction::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::limits::LimitAction",
  "impl core::marker::StructuralPartialEq for spark_core::limits::LimitAction",
  "impl core::marker::Freeze for spark_core::limits::LimitAction",
  "impl core::marker::Send for spark_core::limits::LimitAction",
  "impl core::marker::Sync for spark_core::limits::LimitAction",
  "impl core::marker::Unpin for spark_core::limits::LimitAction",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::limits::LimitAction",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::limits::LimitAction",
  "pub enum spark_core::LimitConfigError",
  "pub spark_core::LimitConfigError::InvalidAction",
  "pub spark_core::LimitConfigError::InvalidAction::provided: alloc::string::String",
  "pub spark_core::LimitConfigError::InvalidAction::resource: spark_core::limits::ResourceKind",
  "pub spark_core::LimitConfigError::InvalidValueType",
  "pub spark_core::LimitConfigError::InvalidValueType::expected: &'static str",
  "pub spark_core::LimitConfigError::InvalidValueType::field: spark_core::limits::LimitField",
  "pub spark_core::LimitConfigError::InvalidValueType::resource: spark_core::limits::ResourceKind",
  "pub spark_core::LimitConfigError::LimitBelowMinimum",
  "pub spark_core::LimitConfigError::LimitBelowMinimum::provided: i64",
  "pub spark_core::LimitConfigError::LimitBelowMinimum::resource: spark_core::limits::ResourceKind",
  "pub spark_core::LimitConfigError::LimitExceedsMaximum",
  "pub spark_core::LimitConfigError::LimitExceedsMaximum::maximum: u64",
  "pub spark_core::LimitConfigError::LimitExceedsMaximum::provided: u64",
  "pub spark_core::LimitConfigError::LimitExceedsMaximum::resource: spark_core::limits::ResourceKind",
  "pub spark_core::LimitConfigError::QueueCapacityInvalid",
  "pub spark_core::LimitConfigError::QueueCapacityInvalid::provided: u32",
  "pub spark_core::LimitConfigError::QueueCapacityInvalid::resource: spark_core::limits::ResourceKind",
  "pub spark_core::LimitConfigError::QueueCapacityWithoutQueueStrategy",
  "pub spark_core::LimitConfigError::QueueCapacityWithoutQueueStrategy::resource: spark_core::limits::ResourceKind",
  "impl core::clone::Clone for spark_core::limits::LimitConfigError",
  "pub fn spark_core::limits::LimitConfigError::clone(&self) -> spark_core::limits::LimitConfigError",
  "impl core::cmp::Eq for spark_core::limits::LimitConfigError",
  "impl core::cmp::PartialEq for spark_core::limits::LimitConfigError",
  "pub fn spark_core::limits::LimitConfigError::eq(&self, other: &spark_core::limits::LimitConfigError) -> bool",
  "impl core::fmt::Debug for spark_core::limits::LimitConfigError",
  "pub fn spark_core::limits::LimitConfigError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::limits::LimitConfigError",
  "pub fn spark_core::limits::LimitConfigError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::limits::LimitConfigError",
  "impl spark_core::Error for spark_core::limits::LimitConfigError",
  "pub fn spark_core::limits::LimitConfigError::source(&self) -> core::option::Option<&(dyn spark_core::Error + 'static)>",
  "impl core::marker::Freeze for spark_core::limits::LimitConfigError",
  "impl core::marker::Send for spark_core::limits::LimitConfigError",
  "impl core::marker::Sync for spark_core::limits::LimitConfigError",
  "impl core::marker::Unpin for spark_core::limits::LimitConfigError",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::limits::LimitConfigError",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::limits::LimitConfigError",
  "#[non_exhaustive] pub enum spark_core::LimitDecision",
  "pub spark_core::LimitDecision::Degraded",
  "pub spark_core::LimitDecision::Permit",
  "pub spark_core::LimitDecision::Queued",
  "pub spark_core::LimitDecision::Queued::capacity: u32",
  "pub spark_core::LimitDecision::Queued::depth: u32",
  "pub spark_core::LimitDecision::Rejected",
  "impl spark_core::limits::LimitDecision",
  "pub const fn spark_core::limits::LimitDecision::as_str(self) -> &'static str",
  "impl core::clone::Clone for spark_core::limits::LimitDecision",
  "pub fn spark_core::limits::LimitDecision::clone(&self) -> spark_core::limits::LimitDecision",
  "impl core::cmp::Eq for spark_core::limits::LimitDecision",
  "impl core::cmp::PartialEq for spark_core::limits::LimitDecision",
  "pub fn spark_core::limits::LimitDecision::eq(&self, other: &spark_core::limits::LimitDecision) -> bool",
  "impl core::fmt::Debug for spark_core::limits::LimitDecision",
  "pub fn spark_core::limits::LimitDecision::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::limits::LimitDecision",
  "pub fn spark_core::limits::LimitDecision::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::limits::LimitDecision",
  "impl core::marker::StructuralPartialEq for spark_core::limits::LimitDecision",
  "impl core::marker::Freeze for spark_core::limits::LimitDecision",
  "impl core::marker::Send for spark_core::limits::LimitDecision",
  "impl core::marker::Sync for spark_core::limits::LimitDecision",
  "impl core::marker::Unpin for spark_core::limits::LimitDecision",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::limits::LimitDecision",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::limits::LimitDecision",
  "#[non_exhaustive] pub enum spark_core::LogSeverity",
  "pub spark_core::LogSeverity::Debug",
  "pub spark_core::LogSeverity::Error",
  "pub spark_core::LogSeverity::Fatal",
  "pub spark_core::LogSeverity::Info",
  "pub spark_core::LogSeverity::Trace",
  "pub spark_core::LogSeverity::Warn",
  "impl core::clone::Clone for spark_core::observability::logging::LogSeverity",
  "pub fn spark_core::observability::logging::LogSeverity::clone(&self) -> spark_core::observability::logging::LogSeverity",
  "impl core::cmp::Eq for spark_core::observability::logging::LogSeverity",
  "impl core::cmp::PartialEq for spark_core::observability::logging::LogSeverity",
  "pub fn spark_core::observability::logging::LogSeverity::eq(&self, other: &spark_core::observability::logging::LogSeverity) -> bool",
  "impl core::fmt::Debug for spark_core::observability::logging::LogSeverity",
  "pub fn spark_core::observability::logging::LogSeverity::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::observability::logging::LogSeverity",
  "pub fn spark_core::observability::logging::LogSeverity::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::Copy for spark_core::observability::logging::LogSeverity",
  "impl core::marker::StructuralPartialEq for spark_core::observability::logging::LogSeverity",
  "impl core::marker::Freeze for spark_core::observability::logging::LogSeverity",
  "impl core::marker::Send for spark_core::observability::logging::LogSeverity",
  "impl core::marker::Sync for spark_core::observability::logging::LogSeverity",
  "impl core::marker::Unpin for spark_core::observability::logging::LogSeverity",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::logging::LogSeverity",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::logging::LogSeverity",
  "#[non_exhaustive] pub enum spark_core::MetricAttributeValue<'a>",
  "pub spark_core::MetricAttributeValue::Bool(bool)",
  "pub spark_core::MetricAttributeValue::F64(f64)",
  "pub spark_core::MetricAttributeValue::I64(i64)",
  "pub spark_core::MetricAttributeValue::Text(alloc::borrow::Cow<'a, str>)",
  "impl<'a> spark_core::observability::attributes::MetricAttributeValue<'a>",
  "pub fn spark_core::observability::attributes::MetricAttributeValue<'a>::into_owned(self) -> spark_core::observability::attributes::MetricAttributeValue<'static>",
  "impl core::convert::From<alloc::string::String> for spark_core::observability::attributes::MetricAttributeValue<'_>",
  "pub fn spark_core::observability::attributes::MetricAttributeValue<'_>::from(value: alloc::string::String) -> Self",
  "impl core::convert::From<bool> for spark_core::observability::attributes::MetricAttributeValue<'_>",
  "pub fn spark_core::observability::attributes::MetricAttributeValue<'_>::from(value: bool) -> Self",
  "impl core::convert::From<f32> for spark_core::observability::attributes::MetricAttributeValue<'_>",
  "pub fn spark_core::observability::attributes::MetricAttributeValue<'_>::from(value: f32) -> Self",
  "impl core::convert::From<f64> for spark_core::observability::attributes::MetricAttributeValue<'_>",
  "pub fn spark_core::observability::attributes::MetricAttributeValue<'_>::from(value: f64) -> Self",
  "impl core::convert::From<i32> for spark_core::observability::attributes::MetricAttributeValue<'_>",
  "pub fn spark_core::observability::attributes::MetricAttributeValue<'_>::from(value: i32) -> Self",
  "impl core::convert::From<i64> for spark_core::observability::attributes::MetricAttributeValue<'_>",
  "pub fn spark_core::observability::attributes::MetricAttributeValue<'_>::from(value: i64) -> Self",
  "impl core::convert::From<u32> for spark_core::observability::attributes::MetricAttributeValue<'_>",
  "pub fn spark_core::observability::attributes::MetricAttributeValue<'_>::from(value: u32) -> Self",
  "impl core::convert::From<u64> for spark_core::observability::attributes::MetricAttributeValue<'_>",
  "pub fn spark_core::observability::attributes::MetricAttributeValue<'_>::from(value: u64) -> Self",
  "impl<'a> core::clone::Clone for spark_core::observability::attributes::MetricAttributeValue<'a>",
  "pub fn spark_core::observability::attributes::MetricAttributeValue<'a>::clone(&self) -> spark_core::observability::attributes::MetricAttributeValue<'a>",
  "impl<'a> core::cmp::PartialEq for spark_core::observability::attributes::MetricAttributeValue<'a>",
  "pub fn spark_core::observability::attributes::MetricAttributeValue<'a>::eq(&self, other: &spark_core::observability::attributes::MetricAttributeValue<'a>) -> bool",
  "impl<'a> core::convert::From<&'a str> for spark_core::observability::attributes::MetricAttributeValue<'a>",
  "pub fn spark_core::observability::attributes::MetricAttributeValue<'a>::from(value: &'a str) -> Self",
  "impl<'a> core::convert::From<alloc::borrow::Cow<'a, str>> for spark_core::observability::attributes::MetricAttributeValue<'a>",
  "pub fn spark_core::observability::attributes::MetricAttributeValue<'a>::from(value: alloc::borrow::Cow<'a, str>) -> Self",
  "impl<'a> core::fmt::Debug for spark_core::observability::attributes::MetricAttributeValue<'a>",
  "pub fn spark_core::observability::attributes::MetricAttributeValue<'a>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<'a> core::marker::StructuralPartialEq for spark_core::observability::attributes::MetricAttributeValue<'a>",
  "impl<'a> core::marker::Freeze for spark_core::observability::attributes::MetricAttributeValue<'a>",
  "impl<'a> core::marker::Send for spark_core::observability::attributes::MetricAttributeValue<'a>",
  "impl<'a> core::marker::Sync for spark_core::observability::attributes::MetricAttributeValue<'a>",
  "impl<'a> core::marker::Unpin for spark_core::observability::attributes::MetricAttributeValue<'a>",
  "impl<'a> core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::attributes::MetricAttributeValue<'a>",
  "impl<'a> core::panic::unwind_safe::UnwindSafe for spark_core::observability::attributes::MetricAttributeValue<'a>",
  "#[non_exhaustive] pub enum spark_core::NegotiationError",
  "pub spark_core::NegotiationError::CredentialInvalid(alloc::string::String)",
  "pub spark_core::NegotiationError::NoCommonProtocol",
  "pub spark_core::NegotiationError::Other(alloc::string::String)",
  "pub spark_core::NegotiationError::ProtocolRejected",
  "pub spark_core::NegotiationError::Timeout",
  "impl core::clone::Clone for spark_core::security::negotiation::NegotiationError",
  "pub fn spark_core::security::negotiation::NegotiationError::clone(&self) -> spark_core::security::negotiation::NegotiationError",
  "impl core::cmp::Eq for spark_core::security::negotiation::NegotiationError",
  "impl core::cmp::PartialEq for spark_core::security::negotiation::NegotiationError",
  "pub fn spark_core::security::negotiation::NegotiationError::eq(&self, other: &spark_core::security::negotiation::NegotiationError) -> bool",
  "impl core::fmt::Debug for spark_core::security::negotiation::NegotiationError",
  "pub fn spark_core::security::negotiation::NegotiationError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::negotiation::NegotiationError",
  "impl core::marker::Freeze for spark_core::security::negotiation::NegotiationError",
  "impl core::marker::Send for spark_core::security::negotiation::NegotiationError",
  "impl core::marker::Sync for spark_core::security::negotiation::NegotiationError",
  "impl core::marker::Unpin for spark_core::security::negotiation::NegotiationError",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::negotiation::NegotiationError",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::negotiation::NegotiationError",
  "#[non_exhaustive] pub enum spark_core::NetworkAddressFamily",
  "pub spark_core::NetworkAddressFamily::Custom(alloc::string::String)",
  "pub spark_core::NetworkAddressFamily::Ipv4",
  "pub spark_core::NetworkAddressFamily::Ipv6",
  "pub spark_core::NetworkAddressFamily::UnixDomain",
  "impl core::clone::Clone for spark_core::host::capability::NetworkAddressFamily",
  "pub fn spark_core::host::capability::NetworkAddressFamily::clone(&self) -> spark_core::host::capability::NetworkAddressFamily",
  "impl core::cmp::Eq for spark_core::host::capability::NetworkAddressFamily",
  "impl core::cmp::PartialEq for spark_core::host::capability::NetworkAddressFamily",
  "pub fn spark_core::host::capability::NetworkAddressFamily::eq(&self, other: &spark_core::host::capability::NetworkAddressFamily) -> bool",
  "impl core::fmt::Debug for spark_core::host::capability::NetworkAddressFamily",
  "pub fn spark_core::host::capability::NetworkAddressFamily::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::capability::NetworkAddressFamily",
  "impl core::marker::Freeze for spark_core::host::capability::NetworkAddressFamily",
  "impl core::marker::Send for spark_core::host::capability::NetworkAddressFamily",
  "impl core::marker::Sync for spark_core::host::capability::NetworkAddressFamily",
  "impl core::marker::Unpin for spark_core::host::capability::NetworkAddressFamily",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::capability::NetworkAddressFamily",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::capability::NetworkAddressFamily",
  "#[non_exhaustive] pub enum spark_core::NetworkProtocol",
  "pub spark_core::NetworkProtocol::Custom(alloc::string::String)",
  "pub spark_core::NetworkProtocol::Grpc",
  "pub spark_core::NetworkProtocol::Http3",
  "pub spark_core::NetworkProtocol::MessageStream",
  "pub spark_core::NetworkProtocol::Quic",
  "pub spark_core::NetworkProtocol::WebSocket",
  "impl core::clone::Clone for spark_core::host::capability::NetworkProtocol",
  "pub fn spark_core::host::capability::NetworkProtocol::clone(&self) -> spark_core::host::capability::NetworkProtocol",
  "impl core::cmp::Eq for spark_core::host::capability::NetworkProtocol",
  "impl core::cmp::PartialEq for spark_core::host::capability::NetworkProtocol",
  "pub fn spark_core::host::capability::NetworkProtocol::eq(&self, other: &spark_core::host::capability::NetworkProtocol) -> bool",
  "impl core::fmt::Debug for spark_core::host::capability::NetworkProtocol",
  "pub fn spark_core::host::capability::NetworkProtocol::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::capability::NetworkProtocol",
  "impl core::marker::Freeze for spark_core::host::capability::NetworkProtocol",
  "impl core::marker::Send for spark_core::host::capability::NetworkProtocol",
  "impl core::marker::Sync for spark_core::host::capability::NetworkProtocol",
  "impl core::marker::Unpin for spark_core::host::capability::NetworkProtocol",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::capability::NetworkProtocol",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::capability::NetworkProtocol",
  "#[non_exhaustive] pub enum spark_core::OpsEvent",
  "pub spark_core::OpsEvent::BufferLeakDetected",
  "pub spark_core::OpsEvent::BufferLeakDetected::count: usize",
  "pub spark_core::OpsEvent::ClusterChange(spark_core::cluster::membership::ClusterMembershipEvent)",
  "pub spark_core::OpsEvent::DiscoveryJitter(spark_core::cluster::discovery::DiscoveryEvent)",
  "pub spark_core::OpsEvent::FailureClusterDetected",
  "pub spark_core::OpsEvent::FailureClusterDetected::count: u64",
  "pub spark_core::OpsEvent::FailureClusterDetected::error_code: &'static str",
  "pub spark_core::OpsEvent::FlowControlApplied",
  "pub spark_core::OpsEvent::FlowControlApplied::channel_id: alloc::string::String",
  "pub spark_core::OpsEvent::HealthChange(spark_core::observability::health::ComponentHealth)",
  "pub spark_core::OpsEvent::ShutdownTriggered",
  "pub spark_core::OpsEvent::ShutdownTriggered::deadline: core::time::Duration",
  "impl core::clone::Clone for spark_core::observability::events::OpsEvent",
  "pub fn spark_core::observability::events::OpsEvent::clone(&self) -> spark_core::observability::events::OpsEvent",
  "impl core::fmt::Debug for spark_core::observability::events::OpsEvent",
  "pub fn spark_core::observability::events::OpsEvent::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::observability::events::OpsEvent",
  "impl core::marker::Send for spark_core::observability::events::OpsEvent",
  "impl core::marker::Sync for spark_core::observability::events::OpsEvent",
  "impl core::marker::Unpin for spark_core::observability::events::OpsEvent",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::events::OpsEvent",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::events::OpsEvent",
  "#[non_exhaustive] pub enum spark_core::OpsEventKind",
  "pub spark_core::OpsEventKind::BufferLeakDetected",
  "pub spark_core::OpsEventKind::ClusterChange",
  "pub spark_core::OpsEventKind::Custom(alloc::string::String)",
  "pub spark_core::OpsEventKind::DiscoveryJitter",
  "pub spark_core::OpsEventKind::FailureClusterDetected",
  "pub spark_core::OpsEventKind::FlowControlApplied",
  "pub spark_core::OpsEventKind::HealthChange",
  "pub spark_core::OpsEventKind::ShutdownTriggered",
  "impl core::clone::Clone for spark_core::observability::events::OpsEventKind",
  "pub fn spark_core::observability::events::OpsEventKind::clone(&self) -> spark_core::observability::events::OpsEventKind",
  "impl core::cmp::Eq for spark_core::observability::events::OpsEventKind",
  "impl core::cmp::PartialEq for spark_core::observability::events::OpsEventKind",
  "pub fn spark_core::observability::events::OpsEventKind::eq(&self, other: &spark_core::observability::events::OpsEventKind) -> bool",
  "impl core::fmt::Debug for spark_core::observability::events::OpsEventKind",
  "pub fn spark_core::observability::events::OpsEventKind::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::observability::events::OpsEventKind",
  "pub fn spark_core::observability::events::OpsEventKind::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::StructuralPartialEq for spark_core::observability::events::OpsEventKind",
  "impl core::marker::Freeze for spark_core::observability::events::OpsEventKind",
  "impl core::marker::Send for spark_core::observability::events::OpsEventKind",
  "impl core::marker::Sync for spark_core::observability::events::OpsEventKind",
  "impl core::marker::Unpin for spark_core::observability::events::OpsEventKind",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::events::OpsEventKind",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::events::OpsEventKind",
  "#[non_exhaustive] pub enum spark_core::OverflowPolicy",
  "pub spark_core::OverflowPolicy::DropNewest",
  "pub spark_core::OverflowPolicy::DropOldest",
  "pub spark_core::OverflowPolicy::FailStream",
  "impl core::clone::Clone for spark_core::cluster::flow_control::OverflowPolicy",
  "pub fn spark_core::cluster::flow_control::OverflowPolicy::clone(&self) -> spark_core::cluster::flow_control::OverflowPolicy",
  "impl core::cmp::Eq for spark_core::cluster::flow_control::OverflowPolicy",
  "impl core::cmp::PartialEq for spark_core::cluster::flow_control::OverflowPolicy",
  "pub fn spark_core::cluster::flow_control::OverflowPolicy::eq(&self, other: &spark_core::cluster::flow_control::OverflowPolicy) -> bool",
  "impl core::fmt::Debug for spark_core::cluster::flow_control::OverflowPolicy",
  "pub fn spark_core::cluster::flow_control::OverflowPolicy::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::cluster::flow_control::OverflowPolicy",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::flow_control::OverflowPolicy",
  "impl core::marker::Freeze for spark_core::cluster::flow_control::OverflowPolicy",
  "impl core::marker::Send for spark_core::cluster::flow_control::OverflowPolicy",
  "impl core::marker::Sync for spark_core::cluster::flow_control::OverflowPolicy",
  "impl core::marker::Unpin for spark_core::cluster::flow_control::OverflowPolicy",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::flow_control::OverflowPolicy",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::flow_control::OverflowPolicy",
  "#[non_exhaustive] pub enum spark_core::PipelineMessage",
  "pub spark_core::PipelineMessage::Buffer(alloc::boxed::Box<dyn spark_core::buffer::readable::ReadableBuffer>)",
  "pub spark_core::PipelineMessage::User(alloc::boxed::Box<dyn spark_core::buffer::message::UserMessage>)",
  "impl spark_core::buffer::message::PipelineMessage",
  "pub fn spark_core::buffer::message::PipelineMessage::downcast_user_mut<T>(&mut self) -> core::option::Option<&mut T> where T: spark_core::buffer::message::UserMessage",
  "pub fn spark_core::buffer::message::PipelineMessage::downcast_user_ref<T>(&self) -> core::option::Option<&T> where T: spark_core::buffer::message::UserMessage",
  "pub fn spark_core::buffer::message::PipelineMessage::from_user<M>(message: M) -> Self where M: spark_core::buffer::message::UserMessage",
  "pub fn spark_core::buffer::message::PipelineMessage::try_into_user<T>(self) -> core::result::Result<T, Self> where T: spark_core::buffer::message::UserMessage",
  "pub fn spark_core::buffer::message::PipelineMessage::user_kind(&self) -> core::option::Option<&'static str>",
  "impl core::fmt::Debug for spark_core::buffer::message::PipelineMessage",
  "pub fn spark_core::buffer::message::PipelineMessage::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl spark_core::service::auto_dyn::Decode for spark_core::buffer::message::PipelineMessage",
  "pub fn spark_core::buffer::message::PipelineMessage::decode(message: spark_core::buffer::message::PipelineMessage) -> core::result::Result<Self, spark_core::error::SparkError>",
  "impl core::marker::Freeze for spark_core::buffer::message::PipelineMessage",
  "impl core::marker::Send for spark_core::buffer::message::PipelineMessage",
  "impl core::marker::Sync for spark_core::buffer::message::PipelineMessage",
  "impl core::marker::Unpin for spark_core::buffer::message::PipelineMessage",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::buffer::message::PipelineMessage",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::buffer::message::PipelineMessage",
  "#[non_exhaustive] pub enum spark_core::PolicyEffect",
  "pub spark_core::PolicyEffect::Allow",
  "pub spark_core::PolicyEffect::Challenge",
  "pub spark_core::PolicyEffect::Deny",
  "impl core::clone::Clone for spark_core::security::policy::PolicyEffect",
  "pub fn spark_core::security::policy::PolicyEffect::clone(&self) -> spark_core::security::policy::PolicyEffect",
  "impl core::cmp::Eq for spark_core::security::policy::PolicyEffect",
  "impl core::cmp::PartialEq for spark_core::security::policy::PolicyEffect",
  "pub fn spark_core::security::policy::PolicyEffect::eq(&self, other: &spark_core::security::policy::PolicyEffect) -> bool",
  "impl core::fmt::Debug for spark_core::security::policy::PolicyEffect",
  "pub fn spark_core::security::policy::PolicyEffect::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::security::policy::PolicyEffect",
  "impl core::marker::StructuralPartialEq for spark_core::security::policy::PolicyEffect",
  "impl core::marker::Freeze for spark_core::security::policy::PolicyEffect",
  "impl core::marker::Send for spark_core::security::policy::PolicyEffect",
  "impl core::marker::Sync for spark_core::security::policy::PolicyEffect",
  "impl core::marker::Unpin for spark_core::security::policy::PolicyEffect",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::policy::PolicyEffect",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::policy::PolicyEffect",
  "#[non_exhaustive] pub enum spark_core::ProfileLayering",
  "pub spark_core::ProfileLayering::BaseFirst",
  "pub spark_core::ProfileLayering::OverrideFirst",
  "impl core::clone::Clone for spark_core::ProfileLayering",
  "pub fn spark_core::ProfileLayering::clone(&self) -> spark_core::ProfileLayering",
  "impl core::cmp::Eq for spark_core::ProfileLayering",
  "impl core::cmp::PartialEq for spark_core::ProfileLayering",
  "pub fn spark_core::ProfileLayering::eq(&self, other: &spark_core::ProfileLayering) -> bool",
  "impl core::fmt::Debug for spark_core::ProfileLayering",
  "pub fn spark_core::ProfileLayering::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::ProfileLayering",
  "impl core::marker::StructuralPartialEq for spark_core::ProfileLayering",
  "impl core::marker::Freeze for spark_core::ProfileLayering",
  "impl core::marker::Send for spark_core::ProfileLayering",
  "impl core::marker::Sync for spark_core::ProfileLayering",
  "impl core::marker::Unpin for spark_core::ProfileLayering",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ProfileLayering",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ProfileLayering",
  "#[non_exhaustive] pub enum spark_core::ProvisioningOutcome",
  "pub spark_core::ProvisioningOutcome::Applied",
  "pub spark_core::ProvisioningOutcome::Applied::details: core::option::Option<alloc::string::String>",
  "pub spark_core::ProvisioningOutcome::Deferred",
  "pub spark_core::ProvisioningOutcome::Deferred::retry_after_seconds: core::option::Option<u32>",
  "pub spark_core::ProvisioningOutcome::Rejected",
  "pub spark_core::ProvisioningOutcome::Rejected::reason: alloc::string::String",
  "impl spark_core::host::provisioning::ProvisioningOutcome",
  "pub fn spark_core::host::provisioning::ProvisioningOutcome::applied(details: core::option::Option<alloc::string::String>) -> Self",
  "pub fn spark_core::host::provisioning::ProvisioningOutcome::deferred(retry_after_seconds: core::option::Option<u32>) -> Self",
  "pub fn spark_core::host::provisioning::ProvisioningOutcome::rejected(reason: alloc::string::String) -> Self",
  "impl core::clone::Clone for spark_core::host::provisioning::ProvisioningOutcome",
  "pub fn spark_core::host::provisioning::ProvisioningOutcome::clone(&self) -> spark_core::host::provisioning::ProvisioningOutcome",
  "impl core::cmp::Eq for spark_core::host::provisioning::ProvisioningOutcome",
  "impl core::cmp::PartialEq for spark_core::host::provisioning::ProvisioningOutcome",
  "pub fn spark_core::host::provisioning::ProvisioningOutcome::eq(&self, other: &spark_core::host::provisioning::ProvisioningOutcome) -> bool",
  "impl core::fmt::Debug for spark_core::host::provisioning::ProvisioningOutcome",
  "pub fn spark_core::host::provisioning::ProvisioningOutcome::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::provisioning::ProvisioningOutcome",
  "impl core::marker::Freeze for spark_core::host::provisioning::ProvisioningOutcome",
  "impl core::marker::Send for spark_core::host::provisioning::ProvisioningOutcome",
  "impl core::marker::Sync for spark_core::host::provisioning::ProvisioningOutcome",
  "impl core::marker::Unpin for spark_core::host::provisioning::ProvisioningOutcome",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::provisioning::ProvisioningOutcome",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::provisioning::ProvisioningOutcome",
  "#[non_exhaustive] pub enum spark_core::QualityOfService",
  "pub spark_core::QualityOfService::BulkTransfer",
  "pub spark_core::QualityOfService::Interactive",
  "pub spark_core::QualityOfService::Streaming",
  "impl core::clone::Clone for spark_core::transport::intent::QualityOfService",
  "pub fn spark_core::transport::intent::QualityOfService::clone(&self) -> spark_core::transport::intent::QualityOfService",
  "impl core::cmp::Eq for spark_core::transport::intent::QualityOfService",
  "impl core::cmp::PartialEq for spark_core::transport::intent::QualityOfService",
  "pub fn spark_core::transport::intent::QualityOfService::eq(&self, other: &spark_core::transport::intent::QualityOfService) -> bool",
  "impl core::fmt::Debug for spark_core::transport::intent::QualityOfService",
  "pub fn spark_core::transport::intent::QualityOfService::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::transport::intent::QualityOfService",
  "impl core::marker::StructuralPartialEq for spark_core::transport::intent::QualityOfService",
  "impl core::marker::Freeze for spark_core::transport::intent::QualityOfService",
  "impl core::marker::Send for spark_core::transport::intent::QualityOfService",
  "impl core::marker::Sync for spark_core::transport::intent::QualityOfService",
  "impl core::marker::Unpin for spark_core::transport::intent::QualityOfService",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::intent::QualityOfService",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::intent::QualityOfService",
  "#[non_exhaustive] pub enum spark_core::RateDirection",
  "pub spark_core::RateDirection::Inbound",
  "pub spark_core::RateDirection::Outbound",
  "impl core::clone::Clone for spark_core::observability::events::RateDirection",
  "pub fn spark_core::observability::events::RateDirection::clone(&self) -> spark_core::observability::events::RateDirection",
  "impl core::cmp::Eq for spark_core::observability::events::RateDirection",
  "impl core::cmp::PartialEq for spark_core::observability::events::RateDirection",
  "pub fn spark_core::observability::events::RateDirection::eq(&self, other: &spark_core::observability::events::RateDirection) -> bool",
  "impl core::fmt::Debug for spark_core::observability::events::RateDirection",
  "pub fn spark_core::observability::events::RateDirection::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::observability::events::RateDirection",
  "impl core::marker::StructuralPartialEq for spark_core::observability::events::RateDirection",
  "impl core::marker::Freeze for spark_core::observability::events::RateDirection",
  "impl core::marker::Send for spark_core::observability::events::RateDirection",
  "impl core::marker::Sync for spark_core::observability::events::RateDirection",
  "impl core::marker::Unpin for spark_core::observability::events::RateDirection",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::events::RateDirection",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::events::RateDirection",
  "#[non_exhaustive] pub enum spark_core::ReadyCheck<E>",
  "pub spark_core::ReadyCheck::Err(E)",
  "pub spark_core::ReadyCheck::Ready(spark_core::status::ready::ReadyState)",
  "impl<E: core::clone::Clone> core::clone::Clone for spark_core::status::ready::ReadyCheck<E>",
  "pub fn spark_core::status::ready::ReadyCheck<E>::clone(&self) -> spark_core::status::ready::ReadyCheck<E>",
  "impl<E: core::cmp::Eq> core::cmp::Eq for spark_core::status::ready::ReadyCheck<E>",
  "impl<E: core::cmp::PartialEq> core::cmp::PartialEq for spark_core::status::ready::ReadyCheck<E>",
  "pub fn spark_core::status::ready::ReadyCheck<E>::eq(&self, other: &spark_core::status::ready::ReadyCheck<E>) -> bool",
  "impl<E: core::fmt::Debug> core::fmt::Debug for spark_core::status::ready::ReadyCheck<E>",
  "pub fn spark_core::status::ready::ReadyCheck<E>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<E> core::fmt::Display for spark_core::status::ready::ReadyCheck<E> where E: core::fmt::Display",
  "pub fn spark_core::status::ready::ReadyCheck<E>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<E> core::marker::StructuralPartialEq for spark_core::status::ready::ReadyCheck<E>",
  "impl<E> core::marker::Freeze for spark_core::status::ready::ReadyCheck<E> where E: core::marker::Freeze",
  "impl<E> core::marker::Send for spark_core::status::ready::ReadyCheck<E> where E: core::marker::Send",
  "impl<E> core::marker::Sync for spark_core::status::ready::ReadyCheck<E> where E: core::marker::Sync",
  "impl<E> core::marker::Unpin for spark_core::status::ready::ReadyCheck<E> where E: core::marker::Unpin",
  "impl<E> core::panic::unwind_safe::RefUnwindSafe for spark_core::status::ready::ReadyCheck<E> where E: core::panic::unwind_safe::RefUnwindSafe",
  "impl<E> core::panic::unwind_safe::UnwindSafe for spark_core::status::ready::ReadyCheck<E> where E: core::panic::unwind_safe::UnwindSafe",
  "#[non_exhaustive] pub enum spark_core::ReadyState",
  "pub spark_core::ReadyState::BudgetExhausted(spark_core::status::ready::SubscriptionBudget)",
  "pub spark_core::ReadyState::Busy(spark_core::status::ready::BusyReason)",
  "pub spark_core::ReadyState::Ready",
  "pub spark_core::ReadyState::RetryAfter(spark_core::status::ready::RetryAdvice)",
  "impl spark_core::status::ready::ReadyState",
  "pub fn spark_core::status::ready::ReadyState::from_budget(limit: u32, remaining: u32) -> Self",
  "pub fn spark_core::status::ready::ReadyState::from_budget_decision(decision: &spark_core::contract::BudgetDecision) -> Self",
  "pub fn spark_core::status::ready::ReadyState::from_queue_depth(depth: usize, capacity: usize) -> Self",
  "pub const fn spark_core::status::ready::ReadyState::recovered() -> Self",
  "impl core::clone::Clone for spark_core::status::ready::ReadyState",
  "pub fn spark_core::status::ready::ReadyState::clone(&self) -> spark_core::status::ready::ReadyState",
  "impl core::cmp::Eq for spark_core::status::ready::ReadyState",
  "impl core::cmp::PartialEq for spark_core::status::ready::ReadyState",
  "pub fn spark_core::status::ready::ReadyState::eq(&self, other: &spark_core::status::ready::ReadyState) -> bool",
  "impl core::fmt::Debug for spark_core::status::ready::ReadyState",
  "pub fn spark_core::status::ready::ReadyState::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::status::ready::ReadyState",
  "impl core::marker::Freeze for spark_core::status::ready::ReadyState",
  "impl core::marker::Send for spark_core::status::ready::ReadyState",
  "impl core::marker::Sync for spark_core::status::ready::ReadyState",
  "impl core::marker::Unpin for spark_core::status::ready::ReadyState",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::status::ready::ReadyState",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::status::ready::ReadyState",
  "#[non_exhaustive] pub enum spark_core::ResourceKind",
  "pub spark_core::ResourceKind::Connections",
  "pub spark_core::ResourceKind::FileHandles",
  "pub spark_core::ResourceKind::MemoryBytes",
  "impl spark_core::limits::ResourceKind",
  "pub const spark_core::limits::ResourceKind::ALL: [spark_core::limits::ResourceKind; 3]",
  "pub const fn spark_core::limits::ResourceKind::as_str(self) -> &'static str",
  "pub const fn spark_core::limits::ResourceKind::default_limit(self) -> u64",
  "pub const fn spark_core::limits::ResourceKind::default_queue_capacity(self) -> core::option::Option<u32>",
  "pub const fn spark_core::limits::ResourceKind::max_limit(self) -> u64",
  "pub const fn spark_core::limits::ResourceKind::unit(self) -> &'static str",
  "impl core::clone::Clone for spark_core::limits::ResourceKind",
  "pub fn spark_core::limits::ResourceKind::clone(&self) -> spark_core::limits::ResourceKind",
  "impl core::cmp::Eq for spark_core::limits::ResourceKind",
  "impl core::cmp::PartialEq for spark_core::limits::ResourceKind",
  "pub fn spark_core::limits::ResourceKind::eq(&self, other: &spark_core::limits::ResourceKind) -> bool",
  "impl core::fmt::Debug for spark_core::limits::ResourceKind",
  "pub fn spark_core::limits::ResourceKind::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::limits::ResourceKind",
  "pub fn spark_core::limits::ResourceKind::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::limits::ResourceKind",
  "pub fn spark_core::limits::ResourceKind::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::Copy for spark_core::limits::ResourceKind",
  "impl core::marker::StructuralPartialEq for spark_core::limits::ResourceKind",
  "impl core::marker::Freeze for spark_core::limits::ResourceKind",
  "impl core::marker::Send for spark_core::limits::ResourceKind",
  "impl core::marker::Sync for spark_core::limits::ResourceKind",
  "impl core::marker::Unpin for spark_core::limits::ResourceKind",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::limits::ResourceKind",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::limits::ResourceKind",
  "#[non_exhaustive] pub enum spark_core::RouteError<E> where E: spark_core::Error",
  "pub spark_core::RouteError::Internal(E)",
  "pub spark_core::RouteError::NotFound",
  "pub spark_core::RouteError::NotFound::metadata: spark_core::router::metadata::RouteMetadata",
  "pub spark_core::RouteError::NotFound::pattern: spark_core::router::route::RoutePattern",
  "pub spark_core::RouteError::PolicyDenied",
  "pub spark_core::RouteError::PolicyDenied::reason: alloc::borrow::Cow<'static, str>",
  "pub spark_core::RouteError::ServiceUnavailable",
  "pub spark_core::RouteError::ServiceUnavailable::id: spark_core::router::route::RouteId",
  "pub spark_core::RouteError::ServiceUnavailable::source: E",
  "impl<E> core::fmt::Debug for spark_core::router::traits::generic::RouteError<E> where E: spark_core::Error + core::fmt::Debug",
  "pub fn spark_core::router::traits::generic::RouteError<E>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<E> core::marker::Freeze for spark_core::router::traits::generic::RouteError<E> where E: core::marker::Freeze",
  "impl<E> core::marker::Send for spark_core::router::traits::generic::RouteError<E> where E: core::marker::Send",
  "impl<E> core::marker::Sync for spark_core::router::traits::generic::RouteError<E> where E: core::marker::Sync",
  "impl<E> core::marker::Unpin for spark_core::router::traits::generic::RouteError<E> where E: core::marker::Unpin",
  "impl<E> core::panic::unwind_safe::RefUnwindSafe for spark_core::router::traits::generic::RouteError<E> where E: core::panic::unwind_safe::RefUnwindSafe",
  "impl<E> core::panic::unwind_safe::UnwindSafe for spark_core::router::traits::generic::RouteError<E> where E: core::panic::unwind_safe::UnwindSafe",
  "#[non_exhaustive] pub enum spark_core::RouteKind",
  "pub spark_core::RouteKind::Control",
  "pub spark_core::RouteKind::Custom(alloc::borrow::Cow<'static, str>)",
  "pub spark_core::RouteKind::Message",
  "pub spark_core::RouteKind::Rpc",
  "pub spark_core::RouteKind::Stream",
  "impl core::clone::Clone for spark_core::router::route::RouteKind",
  "pub fn spark_core::router::route::RouteKind::clone(&self) -> spark_core::router::route::RouteKind",
  "impl core::cmp::Eq for spark_core::router::route::RouteKind",
  "impl core::cmp::Ord for spark_core::router::route::RouteKind",
  "pub fn spark_core::router::route::RouteKind::cmp(&self, other: &spark_core::router::route::RouteKind) -> core::cmp::Ordering",
  "impl core::cmp::PartialEq for spark_core::router::route::RouteKind",
  "pub fn spark_core::router::route::RouteKind::eq(&self, other: &spark_core::router::route::RouteKind) -> bool",
  "impl core::cmp::PartialOrd for spark_core::router::route::RouteKind",
  "pub fn spark_core::router::route::RouteKind::partial_cmp(&self, other: &spark_core::router::route::RouteKind) -> core::option::Option<core::cmp::Ordering>",
  "impl core::fmt::Debug for spark_core::router::route::RouteKind",
  "pub fn spark_core::router::route::RouteKind::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::router::route::RouteKind",
  "pub fn spark_core::router::route::RouteKind::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::StructuralPartialEq for spark_core::router::route::RouteKind",
  "impl core::marker::Freeze for spark_core::router::route::RouteKind",
  "impl core::marker::Send for spark_core::router::route::RouteKind",
  "impl core::marker::Sync for spark_core::router::route::RouteKind",
  "impl core::marker::Unpin for spark_core::router::route::RouteKind",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::router::route::RouteKind",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::router::route::RouteKind",
  "#[non_exhaustive] pub enum spark_core::RouteSegment",
  "pub spark_core::RouteSegment::Literal(alloc::borrow::Cow<'static, str>)",
  "pub spark_core::RouteSegment::Parameter(alloc::borrow::Cow<'static, str>)",
  "pub spark_core::RouteSegment::Wildcard",
  "impl core::clone::Clone for spark_core::router::route::RouteSegment",
  "pub fn spark_core::router::route::RouteSegment::clone(&self) -> spark_core::router::route::RouteSegment",
  "impl core::cmp::Eq for spark_core::router::route::RouteSegment",
  "impl core::cmp::Ord for spark_core::router::route::RouteSegment",
  "pub fn spark_core::router::route::RouteSegment::cmp(&self, other: &spark_core::router::route::RouteSegment) -> core::cmp::Ordering",
  "impl core::cmp::PartialEq for spark_core::router::route::RouteSegment",
  "pub fn spark_core::router::route::RouteSegment::eq(&self, other: &spark_core::router::route::RouteSegment) -> bool",
  "impl core::cmp::PartialOrd for spark_core::router::route::RouteSegment",
  "pub fn spark_core::router::route::RouteSegment::partial_cmp(&self, other: &spark_core::router::route::RouteSegment) -> core::option::Option<core::cmp::Ordering>",
  "impl core::fmt::Debug for spark_core::router::route::RouteSegment",
  "pub fn spark_core::router::route::RouteSegment::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::router::route::RouteSegment",
  "pub fn spark_core::router::route::RouteSegment::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::StructuralPartialEq for spark_core::router::route::RouteSegment",
  "impl core::marker::Freeze for spark_core::router::route::RouteSegment",
  "impl core::marker::Send for spark_core::router::route::RouteSegment",
  "impl core::marker::Sync for spark_core::router::route::RouteSegment",
  "impl core::marker::Unpin for spark_core::router::route::RouteSegment",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::router::route::RouteSegment",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::router::route::RouteSegment",
  "#[non_exhaustive] pub enum spark_core::SecurityClass",
  "pub spark_core::SecurityClass::Audit",
  "pub spark_core::SecurityClass::Authentication",
  "pub spark_core::SecurityClass::Authorization",
  "pub spark_core::SecurityClass::Confidentiality",
  "pub spark_core::SecurityClass::Integrity",
  "pub spark_core::SecurityClass::Unknown",
  "impl spark_core::security::class::SecurityClass",
  "pub const fn spark_core::security::class::SecurityClass::code(self) -> &'static str",
  "pub const fn spark_core::security::class::SecurityClass::summary(self) -> &'static str",
  "impl core::clone::Clone for spark_core::security::class::SecurityClass",
  "pub fn spark_core::security::class::SecurityClass::clone(&self) -> spark_core::security::class::SecurityClass",
  "impl core::cmp::Eq for spark_core::security::class::SecurityClass",
  "impl core::cmp::PartialEq for spark_core::security::class::SecurityClass",
  "pub fn spark_core::security::class::SecurityClass::eq(&self, other: &spark_core::security::class::SecurityClass) -> bool",
  "impl core::fmt::Debug for spark_core::security::class::SecurityClass",
  "pub fn spark_core::security::class::SecurityClass::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::security::class::SecurityClass",
  "pub fn spark_core::security::class::SecurityClass::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::Copy for spark_core::security::class::SecurityClass",
  "impl core::marker::StructuralPartialEq for spark_core::security::class::SecurityClass",
  "impl core::marker::Freeze for spark_core::security::class::SecurityClass",
  "impl core::marker::Send for spark_core::security::class::SecurityClass",
  "impl core::marker::Sync for spark_core::security::class::SecurityClass",
  "impl core::marker::Unpin for spark_core::security::class::SecurityClass",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::class::SecurityClass",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::class::SecurityClass",
  "#[non_exhaustive] pub enum spark_core::SecurityFeature",
  "pub spark_core::SecurityFeature::ApiKey",
  "pub spark_core::SecurityFeature::Custom(alloc::string::String)",
  "pub spark_core::SecurityFeature::JsonWebToken",
  "pub spark_core::SecurityFeature::MutualTls",
  "pub spark_core::SecurityFeature::TrustedExecution",
  "pub spark_core::SecurityFeature::WorkloadIdentity",
  "impl core::clone::Clone for spark_core::host::capability::SecurityFeature",
  "pub fn spark_core::host::capability::SecurityFeature::clone(&self) -> spark_core::host::capability::SecurityFeature",
  "impl core::cmp::Eq for spark_core::host::capability::SecurityFeature",
  "impl core::cmp::PartialEq for spark_core::host::capability::SecurityFeature",
  "pub fn spark_core::host::capability::SecurityFeature::eq(&self, other: &spark_core::host::capability::SecurityFeature) -> bool",
  "impl core::fmt::Debug for spark_core::host::capability::SecurityFeature",
  "pub fn spark_core::host::capability::SecurityFeature::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::capability::SecurityFeature",
  "impl core::marker::Freeze for spark_core::host::capability::SecurityFeature",
  "impl core::marker::Send for spark_core::host::capability::SecurityFeature",
  "impl core::marker::Sync for spark_core::host::capability::SecurityFeature",
  "impl core::marker::Unpin for spark_core::host::capability::SecurityFeature",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::capability::SecurityFeature",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::capability::SecurityFeature",
  "#[non_exhaustive] pub enum spark_core::SecurityMode",
  "pub spark_core::SecurityMode::Custom",
  "pub spark_core::SecurityMode::Custom::identifier: alloc::string::String",
  "pub spark_core::SecurityMode::EnforcedTls",
  "pub spark_core::SecurityMode::Inherit",
  "pub spark_core::SecurityMode::Plaintext",
  "impl core::clone::Clone for spark_core::transport::intent::SecurityMode",
  "pub fn spark_core::transport::intent::SecurityMode::clone(&self) -> spark_core::transport::intent::SecurityMode",
  "impl core::cmp::Eq for spark_core::transport::intent::SecurityMode",
  "impl core::cmp::PartialEq for spark_core::transport::intent::SecurityMode",
  "pub fn spark_core::transport::intent::SecurityMode::eq(&self, other: &spark_core::transport::intent::SecurityMode) -> bool",
  "impl core::fmt::Debug for spark_core::transport::intent::SecurityMode",
  "pub fn spark_core::transport::intent::SecurityMode::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::transport::intent::SecurityMode",
  "impl core::marker::Freeze for spark_core::transport::intent::SecurityMode",
  "impl core::marker::Send for spark_core::transport::intent::SecurityMode",
  "impl core::marker::Sync for spark_core::transport::intent::SecurityMode",
  "impl core::marker::Unpin for spark_core::transport::intent::SecurityMode",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::intent::SecurityMode",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::intent::SecurityMode",
  "#[non_exhaustive] pub enum spark_core::SecurityProtocol",
  "pub spark_core::SecurityProtocol::Custom",
  "pub spark_core::SecurityProtocol::Custom::name: alloc::string::String",
  "pub spark_core::SecurityProtocol::Custom::parameters: alloc::vec::Vec<(alloc::string::String, alloc::string::String)>",
  "pub spark_core::SecurityProtocol::MutualTls",
  "pub spark_core::SecurityProtocol::NoiseHandshake",
  "pub spark_core::SecurityProtocol::PostQuantum",
  "pub spark_core::SecurityProtocol::RemoteAttestation",
  "pub spark_core::SecurityProtocol::TokenBinding",
  "impl core::clone::Clone for spark_core::security::negotiation::SecurityProtocol",
  "pub fn spark_core::security::negotiation::SecurityProtocol::clone(&self) -> spark_core::security::negotiation::SecurityProtocol",
  "impl core::cmp::Eq for spark_core::security::negotiation::SecurityProtocol",
  "impl core::cmp::PartialEq for spark_core::security::negotiation::SecurityProtocol",
  "pub fn spark_core::security::negotiation::SecurityProtocol::eq(&self, other: &spark_core::security::negotiation::SecurityProtocol) -> bool",
  "impl core::fmt::Debug for spark_core::security::negotiation::SecurityProtocol",
  "pub fn spark_core::security::negotiation::SecurityProtocol::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::negotiation::SecurityProtocol",
  "impl core::marker::Freeze for spark_core::security::negotiation::SecurityProtocol",
  "impl core::marker::Send for spark_core::security::negotiation::SecurityProtocol",
  "impl core::marker::Sync for spark_core::security::negotiation::SecurityProtocol",
  "impl core::marker::Unpin for spark_core::security::negotiation::SecurityProtocol",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::negotiation::SecurityProtocol",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::negotiation::SecurityProtocol",
  "#[non_exhaustive] pub enum spark_core::SessionLifecycle",
  "pub spark_core::SessionLifecycle::BidirectionalStream",
  "pub spark_core::SessionLifecycle::Ephemeral",
  "pub spark_core::SessionLifecycle::Subscription",
  "impl core::clone::Clone for spark_core::transport::intent::SessionLifecycle",
  "pub fn spark_core::transport::intent::SessionLifecycle::clone(&self) -> spark_core::transport::intent::SessionLifecycle",
  "impl core::cmp::Eq for spark_core::transport::intent::SessionLifecycle",
  "impl core::cmp::PartialEq for spark_core::transport::intent::SessionLifecycle",
  "pub fn spark_core::transport::intent::SessionLifecycle::eq(&self, other: &spark_core::transport::intent::SessionLifecycle) -> bool",
  "impl core::fmt::Debug for spark_core::transport::intent::SessionLifecycle",
  "pub fn spark_core::transport::intent::SessionLifecycle::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::transport::intent::SessionLifecycle",
  "impl core::marker::StructuralPartialEq for spark_core::transport::intent::SessionLifecycle",
  "impl core::marker::Freeze for spark_core::transport::intent::SessionLifecycle",
  "impl core::marker::Send for spark_core::transport::intent::SessionLifecycle",
  "impl core::marker::Sync for spark_core::transport::intent::SessionLifecycle",
  "impl core::marker::Unpin for spark_core::transport::intent::SessionLifecycle",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::intent::SessionLifecycle",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::intent::SessionLifecycle",
  "#[non_exhaustive] pub enum spark_core::ShutdownReason",
  "pub spark_core::ShutdownReason::Failure(alloc::string::String)",
  "pub spark_core::ShutdownReason::Graceful",
  "pub spark_core::ShutdownReason::Maintenance",
  "impl core::clone::Clone for spark_core::host::lifecycle::ShutdownReason",
  "pub fn spark_core::host::lifecycle::ShutdownReason::clone(&self) -> spark_core::host::lifecycle::ShutdownReason",
  "impl core::cmp::Eq for spark_core::host::lifecycle::ShutdownReason",
  "impl core::cmp::PartialEq for spark_core::host::lifecycle::ShutdownReason",
  "pub fn spark_core::host::lifecycle::ShutdownReason::eq(&self, other: &spark_core::host::lifecycle::ShutdownReason) -> bool",
  "impl core::fmt::Debug for spark_core::host::lifecycle::ShutdownReason",
  "pub fn spark_core::host::lifecycle::ShutdownReason::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::lifecycle::ShutdownReason",
  "impl core::marker::Freeze for spark_core::host::lifecycle::ShutdownReason",
  "impl core::marker::Send for spark_core::host::lifecycle::ShutdownReason",
  "impl core::marker::Sync for spark_core::host::lifecycle::ShutdownReason",
  "impl core::marker::Unpin for spark_core::host::lifecycle::ShutdownReason",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::lifecycle::ShutdownReason",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::lifecycle::ShutdownReason",
  "pub enum spark_core::SloPolicyAction",
  "pub spark_core::SloPolicyAction::CircuitBreak",
  "pub spark_core::SloPolicyAction::CircuitBreak::open_for: core::time::Duration",
  "pub spark_core::SloPolicyAction::Degrade",
  "pub spark_core::SloPolicyAction::Degrade::feature: alloc::sync::Arc<str>",
  "pub spark_core::SloPolicyAction::RateLimit",
  "pub spark_core::SloPolicyAction::RateLimit::limit_percent: u8",
  "pub spark_core::SloPolicyAction::Retry",
  "pub spark_core::SloPolicyAction::Retry::backoff: core::time::Duration",
  "pub spark_core::SloPolicyAction::Retry::max_attempts: u8",
  "impl core::clone::Clone for spark_core::SloPolicyAction",
  "pub fn spark_core::SloPolicyAction::clone(&self) -> spark_core::SloPolicyAction",
  "impl core::cmp::Eq for spark_core::SloPolicyAction",
  "impl core::cmp::PartialEq for spark_core::SloPolicyAction",
  "pub fn spark_core::SloPolicyAction::eq(&self, other: &spark_core::SloPolicyAction) -> bool",
  "impl core::fmt::Debug for spark_core::SloPolicyAction",
  "pub fn spark_core::SloPolicyAction::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::SloPolicyAction",
  "impl core::marker::Freeze for spark_core::SloPolicyAction",
  "impl core::marker::Send for spark_core::SloPolicyAction",
  "impl core::marker::Sync for spark_core::SloPolicyAction",
  "impl core::marker::Unpin for spark_core::SloPolicyAction",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::SloPolicyAction",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::SloPolicyAction",
  "#[non_exhaustive] pub enum spark_core::SnapshotValue",
  "pub spark_core::SnapshotValue::Boolean(bool)",
  "pub spark_core::SnapshotValue::Dictionary(alloc::vec::Vec<(alloc::string::String, spark_core::SnapshotValue)>)",
  "pub spark_core::SnapshotValue::Duration(u128)",
  "pub spark_core::SnapshotValue::Float(u64)",
  "pub spark_core::SnapshotValue::Integer(i64)",
  "pub spark_core::SnapshotValue::List(alloc::vec::Vec<spark_core::SnapshotValue>)",
  "pub spark_core::SnapshotValue::Redacted",
  "pub spark_core::SnapshotValue::Text(alloc::string::String)",
  "impl core::clone::Clone for spark_core::SnapshotValue",
  "pub fn spark_core::SnapshotValue::clone(&self) -> spark_core::SnapshotValue",
  "impl core::cmp::Eq for spark_core::SnapshotValue",
  "impl core::cmp::PartialEq for spark_core::SnapshotValue",
  "pub fn spark_core::SnapshotValue::eq(&self, other: &spark_core::SnapshotValue) -> bool",
  "impl core::fmt::Debug for spark_core::SnapshotValue",
  "pub fn spark_core::SnapshotValue::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::SnapshotValue",
  "impl core::marker::Freeze for spark_core::SnapshotValue",
  "impl core::marker::Send for spark_core::SnapshotValue",
  "impl core::marker::Sync for spark_core::SnapshotValue",
  "impl core::marker::Unpin for spark_core::SnapshotValue",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::SnapshotValue",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::SnapshotValue",
  "#[non_exhaustive] pub enum spark_core::StartupPhase",
  "pub spark_core::StartupPhase::Bootstrapping",
  "pub spark_core::StartupPhase::Ready",
  "pub spark_core::StartupPhase::Warming",
  "impl core::clone::Clone for spark_core::host::lifecycle::StartupPhase",
  "pub fn spark_core::host::lifecycle::StartupPhase::clone(&self) -> spark_core::host::lifecycle::StartupPhase",
  "impl core::cmp::Eq for spark_core::host::lifecycle::StartupPhase",
  "impl core::cmp::PartialEq for spark_core::host::lifecycle::StartupPhase",
  "pub fn spark_core::host::lifecycle::StartupPhase::eq(&self, other: &spark_core::host::lifecycle::StartupPhase) -> bool",
  "impl core::fmt::Debug for spark_core::host::lifecycle::StartupPhase",
  "pub fn spark_core::host::lifecycle::StartupPhase::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::lifecycle::StartupPhase",
  "impl core::marker::Freeze for spark_core::host::lifecycle::StartupPhase",
  "impl core::marker::Send for spark_core::host::lifecycle::StartupPhase",
  "impl core::marker::Sync for spark_core::host::lifecycle::StartupPhase",
  "impl core::marker::Unpin for spark_core::host::lifecycle::StartupPhase",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::lifecycle::StartupPhase",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::lifecycle::StartupPhase",
  "#[non_exhaustive] pub enum spark_core::SubjectMatcher",
  "pub spark_core::SubjectMatcher::Any",
  "pub spark_core::SubjectMatcher::Identity(spark_core::security::identity::IdentityDescriptor)",
  "pub spark_core::SubjectMatcher::IdentityPrefix",
  "pub spark_core::SubjectMatcher::IdentityPrefix::authority: alloc::string::String",
  "pub spark_core::SubjectMatcher::IdentityPrefix::name_prefix: alloc::string::String",
  "pub spark_core::SubjectMatcher::Labels(alloc::vec::Vec<(alloc::string::String, alloc::string::String)>)",
  "impl core::clone::Clone for spark_core::security::policy::SubjectMatcher",
  "pub fn spark_core::security::policy::SubjectMatcher::clone(&self) -> spark_core::security::policy::SubjectMatcher",
  "impl core::cmp::Eq for spark_core::security::policy::SubjectMatcher",
  "impl core::cmp::PartialEq for spark_core::security::policy::SubjectMatcher",
  "pub fn spark_core::security::policy::SubjectMatcher::eq(&self, other: &spark_core::security::policy::SubjectMatcher) -> bool",
  "impl core::fmt::Debug for spark_core::security::policy::SubjectMatcher",
  "pub fn spark_core::security::policy::SubjectMatcher::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::policy::SubjectMatcher",
  "impl core::marker::Freeze for spark_core::security::policy::SubjectMatcher",
  "impl core::marker::Send for spark_core::security::policy::SubjectMatcher",
  "impl core::marker::Sync for spark_core::security::policy::SubjectMatcher",
  "impl core::marker::Unpin for spark_core::security::policy::SubjectMatcher",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::policy::SubjectMatcher",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::policy::SubjectMatcher",
  "#[non_exhaustive] pub enum spark_core::TaskCancellationStrategy",
  "pub spark_core::TaskCancellationStrategy::Cooperative",
  "pub spark_core::TaskCancellationStrategy::Forceful",
  "impl core::clone::Clone for spark_core::TaskCancellationStrategy",
  "pub fn spark_core::TaskCancellationStrategy::clone(&self) -> spark_core::TaskCancellationStrategy",
  "impl core::cmp::Eq for spark_core::TaskCancellationStrategy",
  "impl core::cmp::PartialEq for spark_core::TaskCancellationStrategy",
  "pub fn spark_core::TaskCancellationStrategy::eq(&self, other: &spark_core::TaskCancellationStrategy) -> bool",
  "impl core::default::Default for spark_core::TaskCancellationStrategy",
  "pub fn spark_core::TaskCancellationStrategy::default() -> spark_core::TaskCancellationStrategy",
  "impl core::fmt::Debug for spark_core::TaskCancellationStrategy",
  "pub fn spark_core::TaskCancellationStrategy::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::TaskCancellationStrategy",
  "impl core::marker::StructuralPartialEq for spark_core::TaskCancellationStrategy",
  "impl core::marker::Freeze for spark_core::TaskCancellationStrategy",
  "impl core::marker::Send for spark_core::TaskCancellationStrategy",
  "impl core::marker::Sync for spark_core::TaskCancellationStrategy",
  "impl core::marker::Unpin for spark_core::TaskCancellationStrategy",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::TaskCancellationStrategy",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::TaskCancellationStrategy",
  "#[non_exhaustive] pub enum spark_core::TaskError",
  "pub spark_core::TaskError::Cancelled",
  "pub spark_core::TaskError::ExecutorTerminated",
  "pub spark_core::TaskError::Failed(alloc::borrow::Cow<'static, str>)",
  "pub spark_core::TaskError::Panicked",
  "impl core::clone::Clone for spark_core::TaskError",
  "pub fn spark_core::TaskError::clone(&self) -> spark_core::TaskError",
  "impl core::fmt::Debug for spark_core::TaskError",
  "pub fn spark_core::TaskError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::TaskError",
  "pub fn spark_core::TaskError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::TaskError",
  "impl core::marker::Send for spark_core::TaskError",
  "impl core::marker::Sync for spark_core::TaskError",
  "impl core::marker::Unpin for spark_core::TaskError",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::TaskError",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::TaskError",
  "#[non_exhaustive] pub enum spark_core::TaskPriority",
  "pub spark_core::TaskPriority::Critical",
  "pub spark_core::TaskPriority::High",
  "pub spark_core::TaskPriority::Idle",
  "pub spark_core::TaskPriority::Low",
  "pub spark_core::TaskPriority::Normal",
  "impl core::clone::Clone for spark_core::TaskPriority",
  "pub fn spark_core::TaskPriority::clone(&self) -> spark_core::TaskPriority",
  "impl core::cmp::Eq for spark_core::TaskPriority",
  "impl core::cmp::PartialEq for spark_core::TaskPriority",
  "pub fn spark_core::TaskPriority::eq(&self, other: &spark_core::TaskPriority) -> bool",
  "impl core::default::Default for spark_core::TaskPriority",
  "pub fn spark_core::TaskPriority::default() -> spark_core::TaskPriority",
  "impl core::fmt::Debug for spark_core::TaskPriority",
  "pub fn spark_core::TaskPriority::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::TaskPriority",
  "impl core::marker::StructuralPartialEq for spark_core::TaskPriority",
  "impl core::marker::Freeze for spark_core::TaskPriority",
  "impl core::marker::Send for spark_core::TaskPriority",
  "impl core::marker::Sync for spark_core::TaskPriority",
  "impl core::marker::Unpin for spark_core::TaskPriority",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::TaskPriority",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::TaskPriority",
  "#[non_exhaustive] pub enum spark_core::ThroughputClass",
  "pub spark_core::ThroughputClass::Balanced",
  "pub spark_core::ThroughputClass::LatencyOptimized",
  "pub spark_core::ThroughputClass::ThroughputOptimized",
  "impl core::clone::Clone for spark_core::host::capability::ThroughputClass",
  "pub fn spark_core::host::capability::ThroughputClass::clone(&self) -> spark_core::host::capability::ThroughputClass",
  "impl core::cmp::Eq for spark_core::host::capability::ThroughputClass",
  "impl core::cmp::PartialEq for spark_core::host::capability::ThroughputClass",
  "pub fn spark_core::host::capability::ThroughputClass::eq(&self, other: &spark_core::host::capability::ThroughputClass) -> bool",
  "impl core::fmt::Debug for spark_core::host::capability::ThroughputClass",
  "pub fn spark_core::host::capability::ThroughputClass::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::capability::ThroughputClass",
  "impl core::marker::Freeze for spark_core::host::capability::ThroughputClass",
  "impl core::marker::Send for spark_core::host::capability::ThroughputClass",
  "impl core::marker::Sync for spark_core::host::capability::ThroughputClass",
  "impl core::marker::Unpin for spark_core::host::capability::ThroughputClass",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::capability::ThroughputClass",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::capability::ThroughputClass",
  "pub enum spark_core::TimeoutConfigError",
  "pub spark_core::TimeoutConfigError::InvalidValueType",
  "pub spark_core::TimeoutConfigError::InvalidValueType::expected: &'static str",
  "pub spark_core::TimeoutConfigError::InvalidValueType::field: spark_core::runtime::timeouts::TimeoutField",
  "pub spark_core::TimeoutConfigError::NonPositiveDuration",
  "pub spark_core::TimeoutConfigError::NonPositiveDuration::field: spark_core::runtime::timeouts::TimeoutField",
  "pub spark_core::TimeoutConfigError::NonPositiveDuration::provided: i64",
  "impl core::clone::Clone for spark_core::TimeoutConfigError",
  "pub fn spark_core::TimeoutConfigError::clone(&self) -> spark_core::TimeoutConfigError",
  "impl core::cmp::Eq for spark_core::TimeoutConfigError",
  "impl core::cmp::PartialEq for spark_core::TimeoutConfigError",
  "pub fn spark_core::TimeoutConfigError::eq(&self, other: &spark_core::TimeoutConfigError) -> bool",
  "impl core::fmt::Debug for spark_core::TimeoutConfigError",
  "pub fn spark_core::TimeoutConfigError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::TimeoutConfigError",
  "pub fn spark_core::TimeoutConfigError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::TimeoutConfigError",
  "impl spark_core::Error for spark_core::TimeoutConfigError",
  "pub fn spark_core::TimeoutConfigError::source(&self) -> core::option::Option<&(dyn spark_core::Error + 'static)>",
  "impl core::marker::Freeze for spark_core::TimeoutConfigError",
  "impl core::marker::Send for spark_core::TimeoutConfigError",
  "impl core::marker::Sync for spark_core::TimeoutConfigError",
  "impl core::marker::Unpin for spark_core::TimeoutConfigError",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::TimeoutConfigError",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::TimeoutConfigError",
  "#[non_exhaustive] pub enum spark_core::TraceContextError",
  "pub spark_core::TraceContextError::InvalidSpanId",
  "pub spark_core::TraceContextError::InvalidTraceId",
  "pub spark_core::TraceContextError::InvalidTraceState(spark_core::observability::trace::TraceStateError)",
  "impl core::clone::Clone for spark_core::observability::trace::TraceContextError",
  "pub fn spark_core::observability::trace::TraceContextError::clone(&self) -> spark_core::observability::trace::TraceContextError",
  "impl core::cmp::Eq for spark_core::observability::trace::TraceContextError",
  "impl core::cmp::PartialEq for spark_core::observability::trace::TraceContextError",
  "pub fn spark_core::observability::trace::TraceContextError::eq(&self, other: &spark_core::observability::trace::TraceContextError) -> bool",
  "impl core::fmt::Debug for spark_core::observability::trace::TraceContextError",
  "pub fn spark_core::observability::trace::TraceContextError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::observability::trace::TraceContextError",
  "pub fn spark_core::observability::trace::TraceContextError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::observability::trace::TraceContextError",
  "impl core::marker::Freeze for spark_core::observability::trace::TraceContextError",
  "impl core::marker::Send for spark_core::observability::trace::TraceContextError",
  "impl core::marker::Sync for spark_core::observability::trace::TraceContextError",
  "impl core::marker::Unpin for spark_core::observability::trace::TraceContextError",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::trace::TraceContextError",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::trace::TraceContextError",
  "#[non_exhaustive] pub enum spark_core::TraceStateError",
  "pub spark_core::TraceStateError::InvalidKey",
  "pub spark_core::TraceStateError::InvalidValue",
  "impl core::clone::Clone for spark_core::observability::trace::TraceStateError",
  "pub fn spark_core::observability::trace::TraceStateError::clone(&self) -> spark_core::observability::trace::TraceStateError",
  "impl core::cmp::Eq for spark_core::observability::trace::TraceStateError",
  "impl core::cmp::PartialEq for spark_core::observability::trace::TraceStateError",
  "pub fn spark_core::observability::trace::TraceStateError::eq(&self, other: &spark_core::observability::trace::TraceStateError) -> bool",
  "impl core::fmt::Debug for spark_core::observability::trace::TraceStateError",
  "pub fn spark_core::observability::trace::TraceStateError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::observability::trace::TraceStateError",
  "pub fn spark_core::observability::trace::TraceStateError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::observability::trace::TraceStateError",
  "pub fn spark_core::observability::trace::TraceStateError::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::StructuralPartialEq for spark_core::observability::trace::TraceStateError",
  "impl core::marker::Freeze for spark_core::observability::trace::TraceStateError",
  "impl core::marker::Send for spark_core::observability::trace::TraceStateError",
  "impl core::marker::Sync for spark_core::observability::trace::TraceStateError",
  "impl core::marker::Unpin for spark_core::observability::trace::TraceStateError",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::trace::TraceStateError",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::trace::TraceStateError",
  "#[non_exhaustive] pub enum spark_core::TransportSocketAddr",
  "pub spark_core::TransportSocketAddr::V4",
  "pub spark_core::TransportSocketAddr::V4::addr: [u8; 4]",
  "pub spark_core::TransportSocketAddr::V4::port: u16",
  "pub spark_core::TransportSocketAddr::V6",
  "pub spark_core::TransportSocketAddr::V6::addr: [u16; 8]",
  "pub spark_core::TransportSocketAddr::V6::port: u16",
  "impl spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::transport::address::TransportSocketAddr::as_ipv6_addr(&self) -> core::option::Option<core::net::ip_addr::Ipv6Addr>",
  "impl core::clone::Clone for spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::transport::address::TransportSocketAddr::clone(&self) -> spark_core::transport::address::TransportSocketAddr",
  "impl core::cmp::Eq for spark_core::transport::address::TransportSocketAddr",
  "impl core::cmp::Ord for spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::transport::address::TransportSocketAddr::cmp(&self, other: &spark_core::transport::address::TransportSocketAddr) -> core::cmp::Ordering",
  "impl core::cmp::PartialEq for spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::transport::address::TransportSocketAddr::eq(&self, other: &spark_core::transport::address::TransportSocketAddr) -> bool",
  "impl core::cmp::PartialOrd for spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::transport::address::TransportSocketAddr::partial_cmp(&self, other: &spark_core::transport::address::TransportSocketAddr) -> core::option::Option<core::cmp::Ordering>",
  "impl core::convert::From<core::net::socket_addr::SocketAddr> for spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::transport::address::TransportSocketAddr::from(addr: core::net::socket_addr::SocketAddr) -> Self",
  "impl core::fmt::Debug for spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::transport::address::TransportSocketAddr::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::transport::address::TransportSocketAddr::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::transport::address::TransportSocketAddr::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::Copy for spark_core::transport::address::TransportSocketAddr",
  "impl core::marker::StructuralPartialEq for spark_core::transport::address::TransportSocketAddr",
  "impl core::marker::Freeze for spark_core::transport::address::TransportSocketAddr",
  "impl core::marker::Send for spark_core::transport::address::TransportSocketAddr",
  "impl core::marker::Sync for spark_core::transport::address::TransportSocketAddr",
  "impl core::marker::Unpin for spark_core::transport::address::TransportSocketAddr",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::address::TransportSocketAddr",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::address::TransportSocketAddr",
  "pub enum spark_core::ValidationState",
  "pub spark_core::ValidationState::Failed",
  "pub spark_core::ValidationState::Passed",
  "impl core::clone::Clone for spark_core::ValidationState",
  "pub fn spark_core::ValidationState::clone(&self) -> spark_core::ValidationState",
  "impl core::cmp::Eq for spark_core::ValidationState",
  "impl core::cmp::PartialEq for spark_core::ValidationState",
  "pub fn spark_core::ValidationState::eq(&self, other: &spark_core::ValidationState) -> bool",
  "impl core::fmt::Debug for spark_core::ValidationState",
  "pub fn spark_core::ValidationState::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::ValidationState",
  "impl core::marker::StructuralPartialEq for spark_core::ValidationState",
  "impl core::marker::Freeze for spark_core::ValidationState",
  "impl core::marker::Send for spark_core::ValidationState",
  "impl core::marker::Sync for spark_core::ValidationState",
  "impl core::marker::Unpin for spark_core::ValidationState",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ValidationState",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ValidationState",
  "#[non_exhaustive] pub enum spark_core::WriteSignal",
  "pub spark_core::WriteSignal::Accepted",
  "pub spark_core::WriteSignal::AcceptedAndFlushed",
  "pub spark_core::WriteSignal::FlowControlApplied",
  "impl core::clone::Clone for spark_core::pipeline::channel::WriteSignal",
  "pub fn spark_core::pipeline::channel::WriteSignal::clone(&self) -> spark_core::pipeline::channel::WriteSignal",
  "impl core::cmp::Eq for spark_core::pipeline::channel::WriteSignal",
  "impl core::cmp::PartialEq for spark_core::pipeline::channel::WriteSignal",
  "pub fn spark_core::pipeline::channel::WriteSignal::eq(&self, other: &spark_core::pipeline::channel::WriteSignal) -> bool",
  "impl core::fmt::Debug for spark_core::pipeline::channel::WriteSignal",
  "pub fn spark_core::pipeline::channel::WriteSignal::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::pipeline::channel::WriteSignal",
  "impl core::marker::StructuralPartialEq for spark_core::pipeline::channel::WriteSignal",
  "impl core::marker::Freeze for spark_core::pipeline::channel::WriteSignal",
  "impl core::marker::Send for spark_core::pipeline::channel::WriteSignal",
  "impl core::marker::Sync for spark_core::pipeline::channel::WriteSignal",
  "impl core::marker::Unpin for spark_core::pipeline::channel::WriteSignal",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::pipeline::channel::WriteSignal",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::pipeline::channel::WriteSignal",
  "pub struct spark_core::AuditActor",
  "pub spark_core::AuditActor::display_name: core::option::Option<alloc::borrow::Cow<'static, str>>",
  "pub spark_core::AuditActor::id: alloc::borrow::Cow<'static, str>",
  "pub spark_core::AuditActor::tenant: core::option::Option<alloc::borrow::Cow<'static, str>>",
  "impl core::clone::Clone for spark_core::audit::AuditActor",
  "pub fn spark_core::audit::AuditActor::clone(&self) -> spark_core::audit::AuditActor",
  "impl core::cmp::PartialEq for spark_core::audit::AuditActor",
  "pub fn spark_core::audit::AuditActor::eq(&self, other: &spark_core::audit::AuditActor) -> bool",
  "impl core::fmt::Debug for spark_core::audit::AuditActor",
  "pub fn spark_core::audit::AuditActor::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::audit::AuditActor",
  "impl serde_core::ser::Serialize for spark_core::audit::AuditActor",
  "pub fn spark_core::audit::AuditActor::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde_core::ser::Serializer>::Ok, <S as serde_core::ser::Serializer>::Error> where S: serde_core::ser::Serializer",
  "impl<'de> serde_core::de::Deserialize<'de> for spark_core::audit::AuditActor",
  "pub fn spark_core::audit::AuditActor::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde_core::de::Deserializer>::Error> where D: serde_core::de::Deserializer<'de>",
  "impl core::marker::Freeze for spark_core::audit::AuditActor",
  "impl core::marker::Send for spark_core::audit::AuditActor",
  "impl core::marker::Sync for spark_core::audit::AuditActor",
  "impl core::marker::Unpin for spark_core::audit::AuditActor",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::audit::AuditActor",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::audit::AuditActor",
  "pub struct spark_core::AuditChangeEntry",
  "pub spark_core::AuditChangeEntry::key: spark_core::ConfigKey",
  "pub spark_core::AuditChangeEntry::value: spark_core::ConfigValue",
  "impl core::clone::Clone for spark_core::audit::AuditChangeEntry",
  "pub fn spark_core::audit::AuditChangeEntry::clone(&self) -> spark_core::audit::AuditChangeEntry",
  "impl core::cmp::PartialEq for spark_core::audit::AuditChangeEntry",
  "pub fn spark_core::audit::AuditChangeEntry::eq(&self, other: &spark_core::audit::AuditChangeEntry) -> bool",
  "impl core::fmt::Debug for spark_core::audit::AuditChangeEntry",
  "pub fn spark_core::audit::AuditChangeEntry::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::audit::AuditChangeEntry",
  "impl serde_core::ser::Serialize for spark_core::audit::AuditChangeEntry",
  "pub fn spark_core::audit::AuditChangeEntry::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde_core::ser::Serializer>::Ok, <S as serde_core::ser::Serializer>::Error> where S: serde_core::ser::Serializer",
  "impl<'de> serde_core::de::Deserialize<'de> for spark_core::audit::AuditChangeEntry",
  "pub fn spark_core::audit::AuditChangeEntry::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde_core::de::Deserializer>::Error> where D: serde_core::de::Deserializer<'de>",
  "impl core::marker::Freeze for spark_core::audit::AuditChangeEntry",
  "impl core::marker::Send for spark_core::audit::AuditChangeEntry",
  "impl core::marker::Sync for spark_core::audit::AuditChangeEntry",
  "impl core::marker::Unpin for spark_core::audit::AuditChangeEntry",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::audit::AuditChangeEntry",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::audit::AuditChangeEntry",
  "pub struct spark_core::AuditChangeSet",
  "pub spark_core::AuditChangeSet::created: alloc::vec::Vec<spark_core::audit::AuditChangeEntry>",
  "pub spark_core::AuditChangeSet::deleted: alloc::vec::Vec<spark_core::audit::AuditDeletedEntry>",
  "pub spark_core::AuditChangeSet::updated: alloc::vec::Vec<spark_core::audit::AuditChangeEntry>",
  "impl spark_core::audit::AuditChangeSet",
  "pub fn spark_core::audit::AuditChangeSet::from_change_set(changes: &spark_core::ChangeSet) -> Self",
  "impl core::clone::Clone for spark_core::audit::AuditChangeSet",
  "pub fn spark_core::audit::AuditChangeSet::clone(&self) -> spark_core::audit::AuditChangeSet",
  "impl core::cmp::PartialEq for spark_core::audit::AuditChangeSet",
  "pub fn spark_core::audit::AuditChangeSet::eq(&self, other: &spark_core::audit::AuditChangeSet) -> bool",
  "impl core::fmt::Debug for spark_core::audit::AuditChangeSet",
  "pub fn spark_core::audit::AuditChangeSet::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::audit::AuditChangeSet",
  "impl serde_core::ser::Serialize for spark_core::audit::AuditChangeSet",
  "pub fn spark_core::audit::AuditChangeSet::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde_core::ser::Serializer>::Ok, <S as serde_core::ser::Serializer>::Error> where S: serde_core::ser::Serializer",
  "impl<'de> serde_core::de::Deserialize<'de> for spark_core::audit::AuditChangeSet",
  "pub fn spark_core::audit::AuditChangeSet::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde_core::de::Deserializer>::Error> where D: serde_core::de::Deserializer<'de>",
  "impl core::marker::Freeze for spark_core::audit::AuditChangeSet",
  "impl core::marker::Send for spark_core::audit::AuditChangeSet",
  "impl core::marker::Sync for spark_core::audit::AuditChangeSet",
  "impl core::marker::Unpin for spark_core::audit::AuditChangeSet",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::audit::AuditChangeSet",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::audit::AuditChangeSet",
  "pub struct spark_core::AuditContext",
  "pub spark_core::AuditContext::action: alloc::borrow::Cow<'static, str>",
  "pub spark_core::AuditContext::actor: spark_core::audit::AuditActor",
  "pub spark_core::AuditContext::entity_kind: alloc::borrow::Cow<'static, str>",
  "pub spark_core::AuditContext::entity_labels: alloc::vec::Vec<(alloc::borrow::Cow<'static, str>, alloc::borrow::Cow<'static, str>)>",
  "pub spark_core::AuditContext::tsa_evidence: core::option::Option<spark_core::audit::TsaEvidence>",
  "impl spark_core::audit::AuditContext",
  "pub fn spark_core::audit::AuditContext::new(entity_kind: alloc::borrow::Cow<'static, str>, actor: spark_core::audit::AuditActor, action: alloc::borrow::Cow<'static, str>) -> Self",
  "pub fn spark_core::audit::AuditContext::with_entity_labels(self, labels: alloc::vec::Vec<(alloc::borrow::Cow<'static, str>, alloc::borrow::Cow<'static, str>)>) -> Self",
  "pub fn spark_core::audit::AuditContext::with_tsa(self, evidence: spark_core::audit::TsaEvidence) -> Self",
  "impl core::clone::Clone for spark_core::audit::AuditContext",
  "pub fn spark_core::audit::AuditContext::clone(&self) -> spark_core::audit::AuditContext",
  "impl core::fmt::Debug for spark_core::audit::AuditContext",
  "pub fn spark_core::audit::AuditContext::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::audit::AuditContext",
  "impl core::marker::Send for spark_core::audit::AuditContext",
  "impl core::marker::Sync for spark_core::audit::AuditContext",
  "impl core::marker::Unpin for spark_core::audit::AuditContext",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::audit::AuditContext",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::audit::AuditContext",
  "pub struct spark_core::AuditDeletedEntry",
  "pub spark_core::AuditDeletedEntry::key: spark_core::ConfigKey",
  "impl core::clone::Clone for spark_core::audit::AuditDeletedEntry",
  "pub fn spark_core::audit::AuditDeletedEntry::clone(&self) -> spark_core::audit::AuditDeletedEntry",
  "impl core::cmp::PartialEq for spark_core::audit::AuditDeletedEntry",
  "pub fn spark_core::audit::AuditDeletedEntry::eq(&self, other: &spark_core::audit::AuditDeletedEntry) -> bool",
  "impl core::fmt::Debug for spark_core::audit::AuditDeletedEntry",
  "pub fn spark_core::audit::AuditDeletedEntry::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::audit::AuditDeletedEntry",
  "impl serde_core::ser::Serialize for spark_core::audit::AuditDeletedEntry",
  "pub fn spark_core::audit::AuditDeletedEntry::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde_core::ser::Serializer>::Ok, <S as serde_core::ser::Serializer>::Error> where S: serde_core::ser::Serializer",
  "impl<'de> serde_core::de::Deserialize<'de> for spark_core::audit::AuditDeletedEntry",
  "pub fn spark_core::audit::AuditDeletedEntry::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde_core::de::Deserializer>::Error> where D: serde_core::de::Deserializer<'de>",
  "impl core::marker::Freeze for spark_core::audit::AuditDeletedEntry",
  "impl core::marker::Send for spark_core::audit::AuditDeletedEntry",
  "impl core::marker::Sync for spark_core::audit::AuditDeletedEntry",
  "impl core::marker::Unpin for spark_core::audit::AuditDeletedEntry",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::audit::AuditDeletedEntry",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::audit::AuditDeletedEntry",
  "pub struct spark_core::AuditEntityRef",
  "pub spark_core::AuditEntityRef::id: alloc::string::String",
  "pub spark_core::AuditEntityRef::kind: alloc::borrow::Cow<'static, str>",
  "pub spark_core::AuditEntityRef::labels: alloc::vec::Vec<(alloc::borrow::Cow<'static, str>, alloc::borrow::Cow<'static, str>)>",
  "impl core::clone::Clone for spark_core::audit::AuditEntityRef",
  "pub fn spark_core::audit::AuditEntityRef::clone(&self) -> spark_core::audit::AuditEntityRef",
  "impl core::cmp::PartialEq for spark_core::audit::AuditEntityRef",
  "pub fn spark_core::audit::AuditEntityRef::eq(&self, other: &spark_core::audit::AuditEntityRef) -> bool",
  "impl core::fmt::Debug for spark_core::audit::AuditEntityRef",
  "pub fn spark_core::audit::AuditEntityRef::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::audit::AuditEntityRef",
  "impl serde_core::ser::Serialize for spark_core::audit::AuditEntityRef",
  "pub fn spark_core::audit::AuditEntityRef::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde_core::ser::Serializer>::Ok, <S as serde_core::ser::Serializer>::Error> where S: serde_core::ser::Serializer",
  "impl<'de> serde_core::de::Deserialize<'de> for spark_core::audit::AuditEntityRef",
  "pub fn spark_core::audit::AuditEntityRef::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde_core::de::Deserializer>::Error> where D: serde_core::de::Deserializer<'de>",
  "impl core::marker::Freeze for spark_core::audit::AuditEntityRef",
  "impl core::marker::Send for spark_core::audit::AuditEntityRef",
  "impl core::marker::Sync for spark_core::audit::AuditEntityRef",
  "impl core::marker::Unpin for spark_core::audit::AuditEntityRef",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::audit::AuditEntityRef",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::audit::AuditEntityRef",
  "pub struct spark_core::AuditError",
  "impl spark_core::audit::AuditError",
  "pub fn spark_core::audit::AuditError::message(&self) -> &str",
  "pub fn spark_core::audit::AuditError::new<M>(message: M) -> Self where M: core::convert::Into<alloc::borrow::Cow<'static, str>>",
  "impl core::clone::Clone for spark_core::audit::AuditError",
  "pub fn spark_core::audit::AuditError::clone(&self) -> spark_core::audit::AuditError",
  "impl core::cmp::Eq for spark_core::audit::AuditError",
  "impl core::cmp::PartialEq for spark_core::audit::AuditError",
  "pub fn spark_core::audit::AuditError::eq(&self, other: &spark_core::audit::AuditError) -> bool",
  "impl core::error::Error for spark_core::audit::AuditError",
  "impl core::fmt::Debug for spark_core::audit::AuditError",
  "pub fn spark_core::audit::AuditError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::audit::AuditError",
  "pub fn spark_core::audit::AuditError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::audit::AuditError",
  "impl core::marker::Freeze for spark_core::audit::AuditError",
  "impl core::marker::Send for spark_core::audit::AuditError",
  "impl core::marker::Sync for spark_core::audit::AuditError",
  "impl core::marker::Unpin for spark_core::audit::AuditError",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::audit::AuditError",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::audit::AuditError",
  "pub struct spark_core::AuditEventV1",
  "pub spark_core::AuditEventV1::action: alloc::borrow::Cow<'static, str>",
  "pub spark_core::AuditEventV1::actor: spark_core::audit::AuditActor",
  "pub spark_core::AuditEventV1::changes: spark_core::audit::AuditChangeSet",
  "pub spark_core::AuditEventV1::entity: spark_core::audit::AuditEntityRef",
  "pub spark_core::AuditEventV1::event_id: alloc::string::String",
  "pub spark_core::AuditEventV1::occurred_at: u64",
  "pub spark_core::AuditEventV1::sequence: u64",
  "pub spark_core::AuditEventV1::state_curr_hash: alloc::string::String",
  "pub spark_core::AuditEventV1::state_prev_hash: alloc::string::String",
  "pub spark_core::AuditEventV1::tsa_evidence: core::option::Option<spark_core::audit::TsaEvidence>",
  "impl core::clone::Clone for spark_core::audit::AuditEventV1",
  "pub fn spark_core::audit::AuditEventV1::clone(&self) -> spark_core::audit::AuditEventV1",
  "impl core::cmp::PartialEq for spark_core::audit::AuditEventV1",
  "pub fn spark_core::audit::AuditEventV1::eq(&self, other: &spark_core::audit::AuditEventV1) -> bool",
  "impl core::fmt::Debug for spark_core::audit::AuditEventV1",
  "pub fn spark_core::audit::AuditEventV1::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::audit::AuditEventV1",
  "impl serde_core::ser::Serialize for spark_core::audit::AuditEventV1",
  "pub fn spark_core::audit::AuditEventV1::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde_core::ser::Serializer>::Ok, <S as serde_core::ser::Serializer>::Error> where S: serde_core::ser::Serializer",
  "impl<'de> serde_core::de::Deserialize<'de> for spark_core::audit::AuditEventV1",
  "pub fn spark_core::audit::AuditEventV1::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde_core::de::Deserializer>::Error> where D: serde_core::de::Deserializer<'de>",
  "impl core::marker::Freeze for spark_core::audit::AuditEventV1",
  "impl core::marker::Send for spark_core::audit::AuditEventV1",
  "impl core::marker::Sync for spark_core::audit::AuditEventV1",
  "impl core::marker::Unpin for spark_core::audit::AuditEventV1",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::audit::AuditEventV1",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::audit::AuditEventV1",
  "pub struct spark_core::AuditPipeline",
  "pub spark_core::AuditPipeline::context: spark_core::audit::AuditContext",
  "pub spark_core::AuditPipeline::recorder: alloc::sync::Arc<dyn spark_core::audit::AuditRecorder>",
  "impl core::clone::Clone for spark_core::audit::AuditPipeline",
  "pub fn spark_core::audit::AuditPipeline::clone(&self) -> spark_core::audit::AuditPipeline",
  "impl core::marker::Freeze for spark_core::audit::AuditPipeline",
  "impl core::marker::Send for spark_core::audit::AuditPipeline",
  "impl core::marker::Sync for spark_core::audit::AuditPipeline",
  "impl core::marker::Unpin for spark_core::audit::AuditPipeline",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::audit::AuditPipeline",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::audit::AuditPipeline",
  "pub struct spark_core::AuditStateHasher",
  "impl spark_core::audit::AuditStateHasher",
  "pub fn spark_core::audit::AuditStateHasher::hash_configuration<'a, I>(iter: I) -> alloc::string::String where I: core::iter::traits::collect::IntoIterator<Item = (&'a spark_core::ConfigKey, &'a spark_core::ConfigValue)>",
  "impl core::marker::Freeze for spark_core::audit::AuditStateHasher",
  "impl core::marker::Send for spark_core::audit::AuditStateHasher",
  "impl core::marker::Sync for spark_core::audit::AuditStateHasher",
  "impl core::marker::Unpin for spark_core::audit::AuditStateHasher",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::audit::AuditStateHasher",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::audit::AuditStateHasher",
  "pub struct spark_core::BlockingTaskSubmission(pub spark_core::ManagedBlockingTask)",
  "impl core::convert::From<spark_core::ManagedBlockingTask> for spark_core::BlockingTaskSubmission",
  "pub fn spark_core::BlockingTaskSubmission::from(value: spark_core::ManagedBlockingTask) -> Self",
  "impl core::marker::Freeze for spark_core::BlockingTaskSubmission",
  "impl core::marker::Send for spark_core::BlockingTaskSubmission",
  "impl !core::marker::Sync for spark_core::BlockingTaskSubmission",
  "impl core::marker::Unpin for spark_core::BlockingTaskSubmission",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::BlockingTaskSubmission",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::BlockingTaskSubmission",
  "pub struct spark_core::BoxService",
  "impl spark_core::service::traits::object::BoxService",
  "pub fn spark_core::service::traits::object::BoxService::as_dyn(&self) -> &dyn spark_core::service::traits::object::DynService",
  "pub fn spark_core::service::traits::object::BoxService::into_arc(self) -> alloc::sync::Arc<dyn spark_core::service::traits::object::DynService>",
  "pub fn spark_core::service::traits::object::BoxService::new(inner: alloc::sync::Arc<dyn spark_core::service::traits::object::DynService>) -> Self",
  "impl core::clone::Clone for spark_core::service::traits::object::BoxService",
  "pub fn spark_core::service::traits::object::BoxService::clone(&self) -> spark_core::service::traits::object::BoxService",
  "impl core::fmt::Debug for spark_core::service::traits::object::BoxService",
  "pub fn spark_core::service::traits::object::BoxService::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl spark_core::service::auto_dyn::AutoDynBridge for spark_core::service::traits::object::BoxService",
  "pub type spark_core::service::traits::object::BoxService::DynOut = spark_core::service::traits::object::BoxService",
  "pub fn spark_core::service::traits::object::BoxService::into_dyn<Request>(self) -> Self::DynOut where Self: spark_core::service::traits::generic::Service<Request, Error = spark_core::error::SparkError>, Request: spark_core::service::auto_dyn::Decode + core::marker::Send + core::marker::Sync + 'static, <Self as spark_core::service::traits::generic::Service<Request>>::Response: spark_core::service::auto_dyn::Encode + core::marker::Send + core::marker::Sync + 'static",
  "impl core::marker::Freeze for spark_core::service::traits::object::BoxService",
  "impl core::marker::Send for spark_core::service::traits::object::BoxService",
  "impl core::marker::Sync for spark_core::service::traits::object::BoxService",
  "impl core::marker::Unpin for spark_core::service::traits::object::BoxService",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::service::traits::object::BoxService",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::service::traits::object::BoxService",
  "pub struct spark_core::Budget",
  "impl spark_core::contract::Budget",
  "pub fn spark_core::contract::Budget::kind(&self) -> &spark_core::contract::BudgetKind",
  "pub fn spark_core::contract::Budget::limit(&self) -> u64",
  "pub fn spark_core::contract::Budget::new(kind: spark_core::contract::BudgetKind, limit: u64) -> Self",
  "pub fn spark_core::contract::Budget::refund(&self, amount: u64)",
  "pub fn spark_core::contract::Budget::remaining(&self) -> u64",
  "pub fn spark_core::contract::Budget::snapshot(&self) -> spark_core::contract::BudgetSnapshot",
  "pub fn spark_core::contract::Budget::try_consume(&self, amount: u64) -> spark_core::contract::BudgetDecision",
  "pub fn spark_core::contract::Budget::unbounded(kind: spark_core::contract::BudgetKind) -> Self",
  "impl core::clone::Clone for spark_core::contract::Budget",
  "pub fn spark_core::contract::Budget::clone(&self) -> spark_core::contract::Budget",
  "impl core::fmt::Debug for spark_core::contract::Budget",
  "pub fn spark_core::contract::Budget::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::contract::Budget",
  "impl core::marker::Send for spark_core::contract::Budget",
  "impl core::marker::Sync for spark_core::contract::Budget",
  "impl core::marker::Unpin for spark_core::contract::Budget",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::contract::Budget",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::contract::Budget",
  "pub struct spark_core::BudgetSnapshot",
  "impl spark_core::contract::BudgetSnapshot",
  "pub fn spark_core::contract::BudgetSnapshot::kind(&self) -> &spark_core::contract::BudgetKind",
  "pub fn spark_core::contract::BudgetSnapshot::limit(&self) -> u64",
  "pub fn spark_core::contract::BudgetSnapshot::new(kind: spark_core::contract::BudgetKind, remaining: u64, limit: u64) -> Self",
  "pub fn spark_core::contract::BudgetSnapshot::remaining(&self) -> u64",
  "impl core::clone::Clone for spark_core::contract::BudgetSnapshot",
  "pub fn spark_core::contract::BudgetSnapshot::clone(&self) -> spark_core::contract::BudgetSnapshot",
  "impl core::cmp::Eq for spark_core::contract::BudgetSnapshot",
  "impl core::cmp::PartialEq for spark_core::contract::BudgetSnapshot",
  "pub fn spark_core::contract::BudgetSnapshot::eq(&self, other: &spark_core::contract::BudgetSnapshot) -> bool",
  "impl core::convert::From<&spark_core::contract::BudgetSnapshot> for spark_core::status::ready::SubscriptionBudget",
  "pub fn spark_core::status::ready::SubscriptionBudget::from(snapshot: &spark_core::contract::BudgetSnapshot) -> Self",
  "impl core::fmt::Debug for spark_core::contract::BudgetSnapshot",
  "pub fn spark_core::contract::BudgetSnapshot::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::contract::BudgetSnapshot",
  "impl core::marker::Freeze for spark_core::contract::BudgetSnapshot",
  "impl core::marker::Send for spark_core::contract::BudgetSnapshot",
  "impl core::marker::Sync for spark_core::contract::BudgetSnapshot",
  "impl core::marker::Unpin for spark_core::contract::BudgetSnapshot",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::contract::BudgetSnapshot",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::contract::BudgetSnapshot",
  "pub struct spark_core::BuildError",
  "impl spark_core::BuildError",
  "pub fn spark_core::BuildError::cause(&self) -> core::option::Option<&spark_core::ConfigurationError>",
  "pub fn spark_core::BuildError::kind(&self) -> &spark_core::BuildErrorKind",
  "pub fn spark_core::BuildError::report(&self) -> &spark_core::ValidationReport",
  "pub fn spark_core::BuildError::stage(&self) -> spark_core::BuildErrorStage",
  "impl core::fmt::Debug for spark_core::BuildError",
  "pub fn spark_core::BuildError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::BuildError",
  "pub fn spark_core::BuildError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl spark_core::Error for spark_core::BuildError",
  "pub fn spark_core::BuildError::source(&self) -> core::option::Option<&(dyn spark_core::Error + 'static)>",
  "impl core::marker::Freeze for spark_core::BuildError",
  "impl core::marker::Send for spark_core::BuildError",
  "impl core::marker::Sync for spark_core::BuildError",
  "impl core::marker::Unpin for spark_core::BuildError",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::BuildError",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::BuildError",
  "pub struct spark_core::BuildOutcome",
  "pub spark_core::BuildOutcome::handle: spark_core::ConfigurationHandle",
  "pub spark_core::BuildOutcome::initial: spark_core::ResolvedConfiguration",
  "pub spark_core::BuildOutcome::report: spark_core::BuildReport",
  "impl core::fmt::Debug for spark_core::BuildOutcome",
  "pub fn spark_core::BuildOutcome::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl !core::marker::Freeze for spark_core::BuildOutcome",
  "impl core::marker::Send for spark_core::BuildOutcome",
  "impl core::marker::Sync for spark_core::BuildOutcome",
  "impl core::marker::Unpin for spark_core::BuildOutcome",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::BuildOutcome",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::BuildOutcome",
  "pub struct spark_core::BuildReport",
  "impl spark_core::BuildReport",
  "pub fn spark_core::BuildReport::new(validation: spark_core::ValidationReport, snapshot: spark_core::ConfigurationSnapshot) -> Self",
  "pub fn spark_core::BuildReport::snapshot(&self) -> &spark_core::ConfigurationSnapshot",
  "pub fn spark_core::BuildReport::validation(&self) -> &spark_core::ValidationReport",
  "impl core::clone::Clone for spark_core::BuildReport",
  "pub fn spark_core::BuildReport::clone(&self) -> spark_core::BuildReport",
  "impl core::fmt::Debug for spark_core::BuildReport",
  "pub fn spark_core::BuildReport::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::BuildReport",
  "pub fn spark_core::BuildReport::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::BuildReport",
  "impl core::marker::Send for spark_core::BuildReport",
  "impl core::marker::Sync for spark_core::BuildReport",
  "impl core::marker::Unpin for spark_core::BuildReport",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::BuildReport",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::BuildReport",
  "pub struct spark_core::CallContext",
  "impl spark_core::contract::CallContext",
  "pub fn spark_core::contract::CallContext::budget(&self, kind: &spark_core::contract::BudgetKind) -> core::option::Option<spark_core::contract::Budget>",
  "pub fn spark_core::contract::CallContext::budgets(&self) -> impl core::iter::traits::iterator::Iterator<Item = &spark_core::contract::Budget>",
  "pub fn spark_core::contract::CallContext::builder() -> spark_core::contract::CallContextBuilder",
  "pub fn spark_core::contract::CallContext::cancellation(&self) -> &spark_core::contract::Cancellation",
  "pub fn spark_core::contract::CallContext::deadline(&self) -> spark_core::contract::Deadline",
  "pub fn spark_core::contract::CallContext::execution(&self) -> spark_core::context::ExecutionContext<'_>",
  "pub fn spark_core::contract::CallContext::observability(&self) -> &spark_core::contract::ObservabilityContract",
  "pub fn spark_core::contract::CallContext::security(&self) -> &spark_core::contract::SecurityContextSnapshot",
  "pub fn spark_core::contract::CallContext::trace_context(&self) -> &spark_core::observability::trace::TraceContext",
  "impl core::clone::Clone for spark_core::contract::CallContext",
  "pub fn spark_core::contract::CallContext::clone(&self) -> spark_core::contract::CallContext",
  "impl core::fmt::Debug for spark_core::contract::CallContext",
  "pub fn spark_core::contract::CallContext::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::contract::CallContext",
  "pub fn spark_core::contract::CallContext::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<'a> core::convert::From<&'a spark_core::contract::CallContext> for spark_core::context::ExecutionContext<'a>",
  "pub fn spark_core::context::ExecutionContext<'a>::from(ctx: &'a spark_core::contract::CallContext) -> Self",
  "impl core::marker::Freeze for spark_core::contract::CallContext",
  "impl core::marker::Send for spark_core::contract::CallContext",
  "impl core::marker::Sync for spark_core::contract::CallContext",
  "impl core::marker::Unpin for spark_core::contract::CallContext",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::contract::CallContext",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::contract::CallContext",
  "pub struct spark_core::CallContextBuilder",
  "impl spark_core::contract::CallContextBuilder",
  "pub fn spark_core::contract::CallContextBuilder::add_budget(self, budget: spark_core::contract::Budget) -> Self",
  "pub fn spark_core::contract::CallContextBuilder::build(self) -> spark_core::contract::CallContext",
  "pub fn spark_core::contract::CallContextBuilder::with_cancellation(self, cancellation: spark_core::contract::Cancellation) -> Self",
  "pub fn spark_core::contract::CallContextBuilder::with_deadline(self, deadline: spark_core::contract::Deadline) -> Self",
  "pub fn spark_core::contract::CallContextBuilder::with_observability(self, observability: spark_core::contract::ObservabilityContract) -> Self",
  "pub fn spark_core::contract::CallContextBuilder::with_security(self, security: spark_core::contract::SecurityContextSnapshot) -> Self",
  "pub fn spark_core::contract::CallContextBuilder::with_trace_context(self, trace_context: spark_core::observability::trace::TraceContext) -> Self",
  "impl core::default::Default for spark_core::contract::CallContextBuilder",
  "pub fn spark_core::contract::CallContextBuilder::default() -> Self",
  "impl core::marker::Freeze for spark_core::contract::CallContextBuilder",
  "impl core::marker::Send for spark_core::contract::CallContextBuilder",
  "impl core::marker::Sync for spark_core::contract::CallContextBuilder",
  "impl core::marker::Unpin for spark_core::contract::CallContextBuilder",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::contract::CallContextBuilder",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::contract::CallContextBuilder",
  "pub struct spark_core::Cancellation",
  "impl spark_core::contract::Cancellation",
  "pub fn spark_core::contract::Cancellation::cancel(&self) -> bool",
  "pub fn spark_core::contract::Cancellation::child(&self) -> Self",
  "pub fn spark_core::contract::Cancellation::is_cancelled(&self) -> bool",
  "pub fn spark_core::contract::Cancellation::new() -> Self",
  "impl core::clone::Clone for spark_core::contract::Cancellation",
  "pub fn spark_core::contract::Cancellation::clone(&self) -> spark_core::contract::Cancellation",
  "impl core::default::Default for spark_core::contract::Cancellation",
  "pub fn spark_core::contract::Cancellation::default() -> Self",
  "impl core::fmt::Debug for spark_core::contract::Cancellation",
  "pub fn spark_core::contract::Cancellation::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::contract::Cancellation",
  "impl core::marker::Send for spark_core::contract::Cancellation",
  "impl core::marker::Sync for spark_core::contract::Cancellation",
  "impl core::marker::Unpin for spark_core::contract::Cancellation",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::contract::Cancellation",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::contract::Cancellation",
  "pub struct spark_core::Capability",
  "impl spark_core::transport::handshake::Capability",
  "pub const spark_core::transport::handshake::Capability::COMPRESSION: Self",
  "pub const spark_core::transport::handshake::Capability::MULTIPLEXING: Self",
  "pub const spark_core::transport::handshake::Capability::ZERO_COPY: Self",
  "pub const fn spark_core::transport::handshake::Capability::custom(index: u8) -> Self",
  "impl core::clone::Clone for spark_core::transport::handshake::Capability",
  "pub fn spark_core::transport::handshake::Capability::clone(&self) -> spark_core::transport::handshake::Capability",
  "impl core::cmp::Eq for spark_core::transport::handshake::Capability",
  "impl core::cmp::PartialEq for spark_core::transport::handshake::Capability",
  "pub fn spark_core::transport::handshake::Capability::eq(&self, other: &spark_core::transport::handshake::Capability) -> bool",
  "impl core::fmt::Debug for spark_core::transport::handshake::Capability",
  "pub fn spark_core::transport::handshake::Capability::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::transport::handshake::Capability",
  "pub fn spark_core::transport::handshake::Capability::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::Copy for spark_core::transport::handshake::Capability",
  "impl core::marker::StructuralPartialEq for spark_core::transport::handshake::Capability",
  "impl core::marker::Freeze for spark_core::transport::handshake::Capability",
  "impl core::marker::Send for spark_core::transport::handshake::Capability",
  "impl core::marker::Sync for spark_core::transport::handshake::Capability",
  "impl core::marker::Unpin for spark_core::transport::handshake::Capability",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::handshake::Capability",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::handshake::Capability",
  "pub struct spark_core::CapabilityBitmap",
  "impl spark_core::transport::handshake::CapabilityBitmap",
  "pub const fn spark_core::transport::handshake::CapabilityBitmap::bits(&self) -> u128",
  "pub const fn spark_core::transport::handshake::CapabilityBitmap::difference(self, other: Self) -> Self",
  "pub const fn spark_core::transport::handshake::CapabilityBitmap::empty() -> Self",
  "pub const fn spark_core::transport::handshake::CapabilityBitmap::from_bits(bits: u128) -> Self",
  "pub fn spark_core::transport::handshake::CapabilityBitmap::insert(&mut self, capability: spark_core::transport::handshake::Capability)",
  "pub const fn spark_core::transport::handshake::CapabilityBitmap::intersection(self, other: Self) -> Self",
  "pub const fn spark_core::transport::handshake::CapabilityBitmap::is_empty(&self) -> bool",
  "pub const fn spark_core::transport::handshake::CapabilityBitmap::is_subset_of(self, other: Self) -> bool",
  "pub const fn spark_core::transport::handshake::CapabilityBitmap::union(self, other: Self) -> Self",
  "impl core::clone::Clone for spark_core::transport::handshake::CapabilityBitmap",
  "pub fn spark_core::transport::handshake::CapabilityBitmap::clone(&self) -> spark_core::transport::handshake::CapabilityBitmap",
  "impl core::cmp::Eq for spark_core::transport::handshake::CapabilityBitmap",
  "impl core::cmp::PartialEq for spark_core::transport::handshake::CapabilityBitmap",
  "pub fn spark_core::transport::handshake::CapabilityBitmap::eq(&self, other: &spark_core::transport::handshake::CapabilityBitmap) -> bool",
  "impl core::fmt::Debug for spark_core::transport::handshake::CapabilityBitmap",
  "pub fn spark_core::transport::handshake::CapabilityBitmap::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::transport::handshake::CapabilityBitmap",
  "pub fn spark_core::transport::handshake::CapabilityBitmap::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::transport::handshake::CapabilityBitmap",
  "pub fn spark_core::transport::handshake::CapabilityBitmap::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::Copy for spark_core::transport::handshake::CapabilityBitmap",
  "impl core::marker::StructuralPartialEq for spark_core::transport::handshake::CapabilityBitmap",
  "impl core::marker::Freeze for spark_core::transport::handshake::CapabilityBitmap",
  "impl core::marker::Send for spark_core::transport::handshake::CapabilityBitmap",
  "impl core::marker::Sync for spark_core::transport::handshake::CapabilityBitmap",
  "impl core::marker::Unpin for spark_core::transport::handshake::CapabilityBitmap",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::handshake::CapabilityBitmap",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::handshake::CapabilityBitmap",
  "pub struct spark_core::CapabilityDescriptor",
  "pub spark_core::CapabilityDescriptor::address_families: alloc::vec::Vec<spark_core::host::capability::NetworkAddressFamily>",
  "pub spark_core::CapabilityDescriptor::max_concurrent_streams: core::option::Option<u32>",
  "pub spark_core::CapabilityDescriptor::notes: core::option::Option<alloc::string::String>",
  "pub spark_core::CapabilityDescriptor::protocols: alloc::vec::Vec<spark_core::host::capability::NetworkProtocol>",
  "pub spark_core::CapabilityDescriptor::security: alloc::vec::Vec<(spark_core::host::capability::SecurityFeature, spark_core::host::capability::CapabilityLevel)>",
  "pub spark_core::CapabilityDescriptor::throughput: spark_core::host::capability::ThroughputClass",
  "impl spark_core::host::capability::CapabilityDescriptor",
  "pub fn spark_core::host::capability::CapabilityDescriptor::minimal(protocols: alloc::vec::Vec<spark_core::host::capability::NetworkProtocol>, address_families: alloc::vec::Vec<spark_core::host::capability::NetworkAddressFamily>, security: alloc::vec::Vec<(spark_core::host::capability::SecurityFeature, spark_core::host::capability::CapabilityLevel)>) -> Self",
  "impl core::clone::Clone for spark_core::host::capability::CapabilityDescriptor",
  "pub fn spark_core::host::capability::CapabilityDescriptor::clone(&self) -> spark_core::host::capability::CapabilityDescriptor",
  "impl core::cmp::Eq for spark_core::host::capability::CapabilityDescriptor",
  "impl core::cmp::PartialEq for spark_core::host::capability::CapabilityDescriptor",
  "pub fn spark_core::host::capability::CapabilityDescriptor::eq(&self, other: &spark_core::host::capability::CapabilityDescriptor) -> bool",
  "impl core::fmt::Debug for spark_core::host::capability::CapabilityDescriptor",
  "pub fn spark_core::host::capability::CapabilityDescriptor::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::capability::CapabilityDescriptor",
  "impl core::marker::Freeze for spark_core::host::capability::CapabilityDescriptor",
  "impl core::marker::Send for spark_core::host::capability::CapabilityDescriptor",
  "impl core::marker::Sync for spark_core::host::capability::CapabilityDescriptor",
  "impl core::marker::Unpin for spark_core::host::capability::CapabilityDescriptor",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::capability::CapabilityDescriptor",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::capability::CapabilityDescriptor",
  "pub struct spark_core::ChangeNotification",
  "pub spark_core::ChangeNotification::events: alloc::vec::Vec<spark_core::ChangeEvent>",
  "pub spark_core::ChangeNotification::occurred_at: u64",
  "pub spark_core::ChangeNotification::sequence: u64",
  "impl spark_core::ChangeNotification",
  "pub fn spark_core::ChangeNotification::new(sequence: u64, occurred_at: u64, events: alloc::vec::Vec<spark_core::ChangeEvent>) -> Self",
  "impl core::clone::Clone for spark_core::ChangeNotification",
  "pub fn spark_core::ChangeNotification::clone(&self) -> spark_core::ChangeNotification",
  "impl core::cmp::PartialEq for spark_core::ChangeNotification",
  "pub fn spark_core::ChangeNotification::eq(&self, other: &spark_core::ChangeNotification) -> bool",
  "impl core::fmt::Debug for spark_core::ChangeNotification",
  "pub fn spark_core::ChangeNotification::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::ChangeNotification",
  "impl core::marker::Freeze for spark_core::ChangeNotification",
  "impl core::marker::Send for spark_core::ChangeNotification",
  "impl core::marker::Sync for spark_core::ChangeNotification",
  "impl core::marker::Unpin for spark_core::ChangeNotification",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ChangeNotification",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ChangeNotification",
  "pub struct spark_core::ChangeSet",
  "pub spark_core::ChangeSet::created: alloc::vec::Vec<(spark_core::ConfigKey, spark_core::ConfigValue)>",
  "pub spark_core::ChangeSet::deleted: alloc::vec::Vec<spark_core::ConfigKey>",
  "pub spark_core::ChangeSet::updated: alloc::vec::Vec<(spark_core::ConfigKey, spark_core::ConfigValue)>",
  "impl core::clone::Clone for spark_core::ChangeSet",
  "pub fn spark_core::ChangeSet::clone(&self) -> spark_core::ChangeSet",
  "impl core::cmp::PartialEq for spark_core::ChangeSet",
  "pub fn spark_core::ChangeSet::eq(&self, other: &spark_core::ChangeSet) -> bool",
  "impl core::fmt::Debug for spark_core::ChangeSet",
  "pub fn spark_core::ChangeSet::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::ChangeSet",
  "impl core::marker::Freeze for spark_core::ChangeSet",
  "impl core::marker::Send for spark_core::ChangeSet",
  "impl core::marker::Sync for spark_core::ChangeSet",
  "impl core::marker::Unpin for spark_core::ChangeSet",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ChangeSet",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ChangeSet",
  "pub struct spark_core::Chunks<'a>",
  "impl<'a> spark_core::buffer::buf_view::Chunks<'a>",
  "pub fn spark_core::buffer::buf_view::Chunks<'a>::empty() -> Self",
  "pub fn spark_core::buffer::buf_view::Chunks<'a>::from_single(chunk: &'a [u8]) -> Self",
  "pub fn spark_core::buffer::buf_view::Chunks<'a>::from_vec(chunks: alloc::vec::Vec<&'a [u8]>) -> Self",
  "pub fn spark_core::buffer::buf_view::Chunks<'a>::total_len(&self) -> usize",
  "impl<'a> core::clone::Clone for spark_core::buffer::buf_view::Chunks<'a>",
  "pub fn spark_core::buffer::buf_view::Chunks<'a>::clone(&self) -> spark_core::buffer::buf_view::Chunks<'a>",
  "impl<'a> core::fmt::Debug for spark_core::buffer::buf_view::Chunks<'a>",
  "pub fn spark_core::buffer::buf_view::Chunks<'a>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<'a> core::iter::traits::exact_size::ExactSizeIterator for spark_core::buffer::buf_view::Chunks<'a>",
  "pub fn spark_core::buffer::buf_view::Chunks<'a>::len(&self) -> usize",
  "impl<'a> core::iter::traits::iterator::Iterator for spark_core::buffer::buf_view::Chunks<'a>",
  "pub type spark_core::buffer::buf_view::Chunks<'a>::Item = &'a [u8]",
  "pub fn spark_core::buffer::buf_view::Chunks<'a>::next(&mut self) -> core::option::Option<Self::Item>",
  "pub fn spark_core::buffer::buf_view::Chunks<'a>::size_hint(&self) -> (usize, core::option::Option<usize>)",
  "impl<'a> core::iter::traits::marker::FusedIterator for spark_core::buffer::buf_view::Chunks<'a>",
  "impl<'a> core::marker::Freeze for spark_core::buffer::buf_view::Chunks<'a>",
  "impl<'a> core::marker::Send for spark_core::buffer::buf_view::Chunks<'a>",
  "impl<'a> core::marker::Sync for spark_core::buffer::buf_view::Chunks<'a>",
  "impl<'a> core::marker::Unpin for spark_core::buffer::buf_view::Chunks<'a>",
  "impl<'a> core::panic::unwind_safe::RefUnwindSafe for spark_core::buffer::buf_view::Chunks<'a>",
  "impl<'a> core::panic::unwind_safe::UnwindSafe for spark_core::buffer::buf_view::Chunks<'a>",
  "pub struct spark_core::CloseReason",
  "impl spark_core::contract::CloseReason",
  "pub fn spark_core::contract::CloseReason::code(&self) -> &str",
  "pub fn spark_core::contract::CloseReason::message(&self) -> &str",
  "pub fn spark_core::contract::CloseReason::new(code: impl core::convert::Into<alloc::borrow::Cow<'static, str>>, message: impl core::convert::Into<alloc::borrow::Cow<'static, str>>) -> Self",
  "impl core::clone::Clone for spark_core::contract::CloseReason",
  "pub fn spark_core::contract::CloseReason::clone(&self) -> spark_core::contract::CloseReason",
  "impl core::cmp::Eq for spark_core::contract::CloseReason",
  "impl core::cmp::PartialEq for spark_core::contract::CloseReason",
  "pub fn spark_core::contract::CloseReason::eq(&self, other: &spark_core::contract::CloseReason) -> bool",
  "impl core::fmt::Debug for spark_core::contract::CloseReason",
  "pub fn spark_core::contract::CloseReason::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::contract::CloseReason",
  "impl core::marker::Freeze for spark_core::contract::CloseReason",
  "impl core::marker::Send for spark_core::contract::CloseReason",
  "impl core::marker::Sync for spark_core::contract::CloseReason",
  "impl core::marker::Unpin for spark_core::contract::CloseReason",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::contract::CloseReason",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::contract::CloseReason",
  "pub struct spark_core::ClusterEpoch(pub u64)",
  "impl spark_core::cluster::topology::ClusterEpoch",
  "pub const fn spark_core::cluster::topology::ClusterEpoch::new(value: u64) -> Self",
  "pub const fn spark_core::cluster::topology::ClusterEpoch::value(self) -> u64",
  "impl core::clone::Clone for spark_core::cluster::topology::ClusterEpoch",
  "pub fn spark_core::cluster::topology::ClusterEpoch::clone(&self) -> spark_core::cluster::topology::ClusterEpoch",
  "impl core::cmp::Eq for spark_core::cluster::topology::ClusterEpoch",
  "impl core::cmp::Ord for spark_core::cluster::topology::ClusterEpoch",
  "pub fn spark_core::cluster::topology::ClusterEpoch::cmp(&self, other: &spark_core::cluster::topology::ClusterEpoch) -> core::cmp::Ordering",
  "impl core::cmp::PartialEq for spark_core::cluster::topology::ClusterEpoch",
  "pub fn spark_core::cluster::topology::ClusterEpoch::eq(&self, other: &spark_core::cluster::topology::ClusterEpoch) -> bool",
  "impl core::cmp::PartialOrd for spark_core::cluster::topology::ClusterEpoch",
  "pub fn spark_core::cluster::topology::ClusterEpoch::partial_cmp(&self, other: &spark_core::cluster::topology::ClusterEpoch) -> core::option::Option<core::cmp::Ordering>",
  "impl core::fmt::Debug for spark_core::cluster::topology::ClusterEpoch",
  "pub fn spark_core::cluster::topology::ClusterEpoch::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::cluster::topology::ClusterEpoch",
  "pub fn spark_core::cluster::topology::ClusterEpoch::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::Copy for spark_core::cluster::topology::ClusterEpoch",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::topology::ClusterEpoch",
  "impl core::marker::Freeze for spark_core::cluster::topology::ClusterEpoch",
  "impl core::marker::Send for spark_core::cluster::topology::ClusterEpoch",
  "impl core::marker::Sync for spark_core::cluster::topology::ClusterEpoch",
  "impl core::marker::Unpin for spark_core::cluster::topology::ClusterEpoch",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::topology::ClusterEpoch",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::topology::ClusterEpoch",
  "pub struct spark_core::ClusterMembershipScope",
  "pub spark_core::ClusterMembershipScope::consistency: spark_core::cluster::topology::ClusterConsistencyLevel",
  "pub spark_core::ClusterMembershipScope::selector: spark_core::cluster::membership::ClusterScopeSelector",
  "impl spark_core::cluster::membership::ClusterMembershipScope",
  "pub fn spark_core::cluster::membership::ClusterMembershipScope::entire_cluster() -> Self",
  "impl core::clone::Clone for spark_core::cluster::membership::ClusterMembershipScope",
  "pub fn spark_core::cluster::membership::ClusterMembershipScope::clone(&self) -> spark_core::cluster::membership::ClusterMembershipScope",
  "impl core::cmp::Eq for spark_core::cluster::membership::ClusterMembershipScope",
  "impl core::cmp::PartialEq for spark_core::cluster::membership::ClusterMembershipScope",
  "pub fn spark_core::cluster::membership::ClusterMembershipScope::eq(&self, other: &spark_core::cluster::membership::ClusterMembershipScope) -> bool",
  "impl core::fmt::Debug for spark_core::cluster::membership::ClusterMembershipScope",
  "pub fn spark_core::cluster::membership::ClusterMembershipScope::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::membership::ClusterMembershipScope",
  "impl core::marker::Freeze for spark_core::cluster::membership::ClusterMembershipScope",
  "impl core::marker::Send for spark_core::cluster::membership::ClusterMembershipScope",
  "impl core::marker::Sync for spark_core::cluster::membership::ClusterMembershipScope",
  "impl core::marker::Unpin for spark_core::cluster::membership::ClusterMembershipScope",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::membership::ClusterMembershipScope",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::membership::ClusterMembershipScope",
  "pub struct spark_core::ClusterMembershipSnapshot",
  "pub spark_core::ClusterMembershipSnapshot::epoch: spark_core::cluster::topology::ClusterEpoch",
  "pub spark_core::ClusterMembershipSnapshot::generated_at_revision: spark_core::cluster::topology::ClusterRevision",
  "pub spark_core::ClusterMembershipSnapshot::members: alloc::vec::Vec<spark_core::cluster::membership::ClusterNodeProfile>",
  "impl core::clone::Clone for spark_core::cluster::membership::ClusterMembershipSnapshot",
  "pub fn spark_core::cluster::membership::ClusterMembershipSnapshot::clone(&self) -> spark_core::cluster::membership::ClusterMembershipSnapshot",
  "impl core::cmp::Eq for spark_core::cluster::membership::ClusterMembershipSnapshot",
  "impl core::cmp::PartialEq for spark_core::cluster::membership::ClusterMembershipSnapshot",
  "pub fn spark_core::cluster::membership::ClusterMembershipSnapshot::eq(&self, other: &spark_core::cluster::membership::ClusterMembershipSnapshot) -> bool",
  "impl core::fmt::Debug for spark_core::cluster::membership::ClusterMembershipSnapshot",
  "pub fn spark_core::cluster::membership::ClusterMembershipSnapshot::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::membership::ClusterMembershipSnapshot",
  "impl core::marker::Freeze for spark_core::cluster::membership::ClusterMembershipSnapshot",
  "impl core::marker::Send for spark_core::cluster::membership::ClusterMembershipSnapshot",
  "impl core::marker::Sync for spark_core::cluster::membership::ClusterMembershipSnapshot",
  "impl core::marker::Unpin for spark_core::cluster::membership::ClusterMembershipSnapshot",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::membership::ClusterMembershipSnapshot",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::membership::ClusterMembershipSnapshot",
  "pub struct spark_core::ClusterNodeProfile",
  "pub spark_core::ClusterNodeProfile::endpoint: spark_core::transport::endpoint::Endpoint",
  "pub spark_core::ClusterNodeProfile::metadata: alloc::collections::btree::map::BTreeMap<alloc::string::String, alloc::string::String>",
  "pub spark_core::ClusterNodeProfile::node_id: spark_core::cluster::membership::NodeId",
  "pub spark_core::ClusterNodeProfile::revision: spark_core::cluster::topology::ClusterRevision",
  "pub spark_core::ClusterNodeProfile::roles: alloc::vec::Vec<spark_core::cluster::topology::RoleDescriptor>",
  "pub spark_core::ClusterNodeProfile::state: spark_core::cluster::membership::ClusterNodeState",
  "impl core::clone::Clone for spark_core::cluster::membership::ClusterNodeProfile",
  "pub fn spark_core::cluster::membership::ClusterNodeProfile::clone(&self) -> spark_core::cluster::membership::ClusterNodeProfile",
  "impl core::cmp::Eq for spark_core::cluster::membership::ClusterNodeProfile",
  "impl core::cmp::PartialEq for spark_core::cluster::membership::ClusterNodeProfile",
  "pub fn spark_core::cluster::membership::ClusterNodeProfile::eq(&self, other: &spark_core::cluster::membership::ClusterNodeProfile) -> bool",
  "impl core::fmt::Debug for spark_core::cluster::membership::ClusterNodeProfile",
  "pub fn spark_core::cluster::membership::ClusterNodeProfile::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::membership::ClusterNodeProfile",
  "impl core::marker::Freeze for spark_core::cluster::membership::ClusterNodeProfile",
  "impl core::marker::Send for spark_core::cluster::membership::ClusterNodeProfile",
  "impl core::marker::Sync for spark_core::cluster::membership::ClusterNodeProfile",
  "impl core::marker::Unpin for spark_core::cluster::membership::ClusterNodeProfile",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::membership::ClusterNodeProfile",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::membership::ClusterNodeProfile",
  "pub struct spark_core::ClusterRevision",
  "pub spark_core::ClusterRevision::counter: u64",
  "pub spark_core::ClusterRevision::epoch: spark_core::cluster::topology::ClusterEpoch",
  "impl spark_core::cluster::topology::ClusterRevision",
  "pub const fn spark_core::cluster::topology::ClusterRevision::new(epoch: spark_core::cluster::topology::ClusterEpoch, counter: u64) -> Self",
  "pub const fn spark_core::cluster::topology::ClusterRevision::next(self) -> Self",
  "impl core::clone::Clone for spark_core::cluster::topology::ClusterRevision",
  "pub fn spark_core::cluster::topology::ClusterRevision::clone(&self) -> spark_core::cluster::topology::ClusterRevision",
  "impl core::cmp::Eq for spark_core::cluster::topology::ClusterRevision",
  "impl core::cmp::Ord for spark_core::cluster::topology::ClusterRevision",
  "pub fn spark_core::cluster::topology::ClusterRevision::cmp(&self, other: &spark_core::cluster::topology::ClusterRevision) -> core::cmp::Ordering",
  "impl core::cmp::PartialEq for spark_core::cluster::topology::ClusterRevision",
  "pub fn spark_core::cluster::topology::ClusterRevision::eq(&self, other: &spark_core::cluster::topology::ClusterRevision) -> bool",
  "impl core::cmp::PartialOrd for spark_core::cluster::topology::ClusterRevision",
  "pub fn spark_core::cluster::topology::ClusterRevision::partial_cmp(&self, other: &spark_core::cluster::topology::ClusterRevision) -> core::option::Option<core::cmp::Ordering>",
  "impl core::fmt::Debug for spark_core::cluster::topology::ClusterRevision",
  "pub fn spark_core::cluster::topology::ClusterRevision::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::cluster::topology::ClusterRevision",
  "pub fn spark_core::cluster::topology::ClusterRevision::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::Copy for spark_core::cluster::topology::ClusterRevision",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::topology::ClusterRevision",
  "impl core::marker::Freeze for spark_core::cluster::topology::ClusterRevision",
  "impl core::marker::Send for spark_core::cluster::topology::ClusterRevision",
  "impl core::marker::Sync for spark_core::cluster::topology::ClusterRevision",
  "impl core::marker::Unpin for spark_core::cluster::topology::ClusterRevision",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::topology::ClusterRevision",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::topology::ClusterRevision",
  "pub struct spark_core::CodecDescriptor",
  "impl spark_core::CodecDescriptor",
  "pub fn spark_core::CodecDescriptor::content_encoding(&self) -> &spark_core::ContentEncoding",
  "pub fn spark_core::CodecDescriptor::content_type(&self) -> &spark_core::ContentType",
  "pub fn spark_core::CodecDescriptor::new(content_type: spark_core::ContentType, content_encoding: spark_core::ContentEncoding) -> Self",
  "pub fn spark_core::CodecDescriptor::schema(&self) -> core::option::Option<&spark_core::SchemaDescriptor>",
  "pub fn spark_core::CodecDescriptor::with_schema(self, schema: spark_core::SchemaDescriptor) -> Self",
  "impl core::clone::Clone for spark_core::CodecDescriptor",
  "pub fn spark_core::CodecDescriptor::clone(&self) -> spark_core::CodecDescriptor",
  "impl core::cmp::Eq for spark_core::CodecDescriptor",
  "impl core::cmp::PartialEq for spark_core::CodecDescriptor",
  "pub fn spark_core::CodecDescriptor::eq(&self, other: &spark_core::CodecDescriptor) -> bool",
  "impl core::fmt::Debug for spark_core::CodecDescriptor",
  "pub fn spark_core::CodecDescriptor::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::CodecDescriptor",
  "impl core::marker::Freeze for spark_core::CodecDescriptor",
  "impl core::marker::Send for spark_core::CodecDescriptor",
  "impl core::marker::Sync for spark_core::CodecDescriptor",
  "impl core::marker::Unpin for spark_core::CodecDescriptor",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::CodecDescriptor",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::CodecDescriptor",
  "pub struct spark_core::ComponentDescriptor",
  "pub spark_core::ComponentDescriptor::dependencies: alloc::vec::Vec<alloc::string::String>",
  "pub spark_core::ComponentDescriptor::description: core::option::Option<alloc::string::String>",
  "pub spark_core::ComponentDescriptor::kind: spark_core::host::component::ComponentKind",
  "pub spark_core::ComponentDescriptor::name: alloc::string::String",
  "pub spark_core::ComponentDescriptor::version: alloc::string::String",
  "impl spark_core::host::component::ComponentDescriptor",
  "pub fn spark_core::host::component::ComponentDescriptor::new(name: alloc::string::String, kind: spark_core::host::component::ComponentKind, version: alloc::string::String) -> Self",
  "impl core::clone::Clone for spark_core::host::component::ComponentDescriptor",
  "pub fn spark_core::host::component::ComponentDescriptor::clone(&self) -> spark_core::host::component::ComponentDescriptor",
  "impl core::cmp::Eq for spark_core::host::component::ComponentDescriptor",
  "impl core::cmp::PartialEq for spark_core::host::component::ComponentDescriptor",
  "pub fn spark_core::host::component::ComponentDescriptor::eq(&self, other: &spark_core::host::component::ComponentDescriptor) -> bool",
  "impl core::fmt::Debug for spark_core::host::component::ComponentDescriptor",
  "pub fn spark_core::host::component::ComponentDescriptor::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::component::ComponentDescriptor",
  "impl core::marker::Freeze for spark_core::host::component::ComponentDescriptor",
  "impl core::marker::Send for spark_core::host::component::ComponentDescriptor",
  "impl core::marker::Sync for spark_core::host::component::ComponentDescriptor",
  "impl core::marker::Unpin for spark_core::host::component::ComponentDescriptor",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::component::ComponentDescriptor",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::component::ComponentDescriptor",
  "pub struct spark_core::ComponentHealth",
  "pub spark_core::ComponentHealth::details: alloc::string::String",
  "pub spark_core::ComponentHealth::name: &'static str",
  "pub spark_core::ComponentHealth::state: spark_core::observability::health::HealthState",
  "impl spark_core::observability::health::ComponentHealth",
  "pub fn spark_core::observability::health::ComponentHealth::new(name: &'static str, state: spark_core::observability::health::HealthState, details: impl core::convert::Into<alloc::string::String>) -> Self",
  "impl core::clone::Clone for spark_core::observability::health::ComponentHealth",
  "pub fn spark_core::observability::health::ComponentHealth::clone(&self) -> spark_core::observability::health::ComponentHealth",
  "impl core::fmt::Debug for spark_core::observability::health::ComponentHealth",
  "pub fn spark_core::observability::health::ComponentHealth::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::observability::health::ComponentHealth",
  "impl core::marker::Send for spark_core::observability::health::ComponentHealth",
  "impl core::marker::Sync for spark_core::observability::health::ComponentHealth",
  "impl core::marker::Unpin for spark_core::observability::health::ComponentHealth",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::health::ComponentHealth",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::health::ComponentHealth",
  "pub struct spark_core::ConfigChange",
  "pub spark_core::ConfigChange::changed_keys: alloc::vec::Vec<alloc::string::String>",
  "pub spark_core::ConfigChange::envelope: spark_core::host::provisioning::ConfigEnvelope",
  "impl spark_core::host::provisioning::ConfigChange",
  "pub fn spark_core::host::provisioning::ConfigChange::new(envelope: spark_core::host::provisioning::ConfigEnvelope, changed_keys: alloc::vec::Vec<alloc::string::String>) -> Self",
  "impl core::clone::Clone for spark_core::host::provisioning::ConfigChange",
  "pub fn spark_core::host::provisioning::ConfigChange::clone(&self) -> spark_core::host::provisioning::ConfigChange",
  "impl core::cmp::Eq for spark_core::host::provisioning::ConfigChange",
  "impl core::cmp::PartialEq for spark_core::host::provisioning::ConfigChange",
  "pub fn spark_core::host::provisioning::ConfigChange::eq(&self, other: &spark_core::host::provisioning::ConfigChange) -> bool",
  "impl core::fmt::Debug for spark_core::host::provisioning::ConfigChange",
  "pub fn spark_core::host::provisioning::ConfigChange::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::provisioning::ConfigChange",
  "impl core::marker::Freeze for spark_core::host::provisioning::ConfigChange",
  "impl core::marker::Send for spark_core::host::provisioning::ConfigChange",
  "impl core::marker::Sync for spark_core::host::provisioning::ConfigChange",
  "impl core::marker::Unpin for spark_core::host::provisioning::ConfigChange",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::provisioning::ConfigChange",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::provisioning::ConfigChange",
  "pub struct spark_core::ConfigEnvelope",
  "pub spark_core::ConfigEnvelope::items: alloc::collections::btree::map::BTreeMap<alloc::string::String, alloc::string::String>",
  "pub spark_core::ConfigEnvelope::metadata: alloc::collections::btree::map::BTreeMap<alloc::string::String, alloc::string::String>",
  "pub spark_core::ConfigEnvelope::namespace: alloc::string::String",
  "pub spark_core::ConfigEnvelope::version: core::option::Option<alloc::string::String>",
  "impl spark_core::host::provisioning::ConfigEnvelope",
  "pub fn spark_core::host::provisioning::ConfigEnvelope::empty(namespace: alloc::string::String) -> Self",
  "impl core::clone::Clone for spark_core::host::provisioning::ConfigEnvelope",
  "pub fn spark_core::host::provisioning::ConfigEnvelope::clone(&self) -> spark_core::host::provisioning::ConfigEnvelope",
  "impl core::cmp::Eq for spark_core::host::provisioning::ConfigEnvelope",
  "impl core::cmp::PartialEq for spark_core::host::provisioning::ConfigEnvelope",
  "pub fn spark_core::host::provisioning::ConfigEnvelope::eq(&self, other: &spark_core::host::provisioning::ConfigEnvelope) -> bool",
  "impl core::fmt::Debug for spark_core::host::provisioning::ConfigEnvelope",
  "pub fn spark_core::host::provisioning::ConfigEnvelope::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::provisioning::ConfigEnvelope",
  "impl core::marker::Freeze for spark_core::host::provisioning::ConfigEnvelope",
  "impl core::marker::Send for spark_core::host::provisioning::ConfigEnvelope",
  "impl core::marker::Sync for spark_core::host::provisioning::ConfigEnvelope",
  "impl core::marker::Unpin for spark_core::host::provisioning::ConfigEnvelope",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::provisioning::ConfigEnvelope",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::provisioning::ConfigEnvelope",
  "pub struct spark_core::ConfigKey",
  "impl spark_core::ConfigKey",
  "pub fn spark_core::ConfigKey::domain(&self) -> &str",
  "pub fn spark_core::ConfigKey::name(&self) -> &str",
  "pub fn spark_core::ConfigKey::new<D, N, S>(domain: D, name: N, scope: spark_core::ConfigScope, summary: S) -> Self where D: core::convert::Into<alloc::borrow::Cow<'static, str>>, N: core::convert::Into<alloc::borrow::Cow<'static, str>>, S: core::convert::Into<alloc::borrow::Cow<'static, str>>",
  "pub fn spark_core::ConfigKey::scope(&self) -> spark_core::ConfigScope",
  "pub fn spark_core::ConfigKey::summary(&self) -> &str",
  "impl core::clone::Clone for spark_core::ConfigKey",
  "pub fn spark_core::ConfigKey::clone(&self) -> spark_core::ConfigKey",
  "impl core::cmp::Eq for spark_core::ConfigKey",
  "impl core::cmp::Ord for spark_core::ConfigKey",
  "pub fn spark_core::ConfigKey::cmp(&self, other: &Self) -> core::cmp::Ordering",
  "impl core::cmp::PartialEq for spark_core::ConfigKey",
  "pub fn spark_core::ConfigKey::eq(&self, other: &spark_core::ConfigKey) -> bool",
  "impl core::cmp::PartialOrd for spark_core::ConfigKey",
  "pub fn spark_core::ConfigKey::partial_cmp(&self, other: &Self) -> core::option::Option<core::cmp::Ordering>",
  "impl core::convert::From<&spark_core::ConfigKey> for alloc::string::String",
  "pub fn alloc::string::String::from(value: &spark_core::ConfigKey) -> Self",
  "impl core::fmt::Debug for spark_core::ConfigKey",
  "pub fn spark_core::ConfigKey::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::ConfigKey",
  "pub fn spark_core::ConfigKey::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::ConfigKey",
  "pub fn spark_core::ConfigKey::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::StructuralPartialEq for spark_core::ConfigKey",
  "impl core::marker::Freeze for spark_core::ConfigKey",
  "impl core::marker::Send for spark_core::ConfigKey",
  "impl core::marker::Sync for spark_core::ConfigKey",
  "impl core::marker::Unpin for spark_core::ConfigKey",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ConfigKey",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ConfigKey",
  "pub struct spark_core::ConfigMetadata",
  "pub spark_core::ConfigMetadata::encrypted: bool",
  "pub spark_core::ConfigMetadata::experimental: bool",
  "pub spark_core::ConfigMetadata::hot_reloadable: bool",
  "pub spark_core::ConfigMetadata::tags: alloc::vec::Vec<(alloc::borrow::Cow<'static, str>, alloc::borrow::Cow<'static, str>)>",
  "impl core::clone::Clone for spark_core::ConfigMetadata",
  "pub fn spark_core::ConfigMetadata::clone(&self) -> spark_core::ConfigMetadata",
  "impl core::cmp::Eq for spark_core::ConfigMetadata",
  "impl core::cmp::PartialEq for spark_core::ConfigMetadata",
  "pub fn spark_core::ConfigMetadata::eq(&self, other: &spark_core::ConfigMetadata) -> bool",
  "impl core::default::Default for spark_core::ConfigMetadata",
  "pub fn spark_core::ConfigMetadata::default() -> spark_core::ConfigMetadata",
  "impl core::fmt::Debug for spark_core::ConfigMetadata",
  "pub fn spark_core::ConfigMetadata::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::ConfigMetadata",
  "impl core::marker::Freeze for spark_core::ConfigMetadata",
  "impl core::marker::Send for spark_core::ConfigMetadata",
  "impl core::marker::Sync for spark_core::ConfigMetadata",
  "impl core::marker::Unpin for spark_core::ConfigMetadata",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ConfigMetadata",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ConfigMetadata",
  "pub struct spark_core::ConfigQuery",
  "pub spark_core::ConfigQuery::keys: alloc::vec::Vec<alloc::string::String>",
  "pub spark_core::ConfigQuery::metadata: alloc::collections::btree::map::BTreeMap<alloc::string::String, alloc::string::String>",
  "pub spark_core::ConfigQuery::namespace: alloc::string::String",
  "impl spark_core::host::provisioning::ConfigQuery",
  "pub fn spark_core::host::provisioning::ConfigQuery::namespace(namespace: alloc::string::String) -> Self",
  "impl core::clone::Clone for spark_core::host::provisioning::ConfigQuery",
  "pub fn spark_core::host::provisioning::ConfigQuery::clone(&self) -> spark_core::host::provisioning::ConfigQuery",
  "impl core::cmp::Eq for spark_core::host::provisioning::ConfigQuery",
  "impl core::cmp::PartialEq for spark_core::host::provisioning::ConfigQuery",
  "pub fn spark_core::host::provisioning::ConfigQuery::eq(&self, other: &spark_core::host::provisioning::ConfigQuery) -> bool",
  "impl core::fmt::Debug for spark_core::host::provisioning::ConfigQuery",
  "pub fn spark_core::host::provisioning::ConfigQuery::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::provisioning::ConfigQuery",
  "impl core::marker::Freeze for spark_core::host::provisioning::ConfigQuery",
  "impl core::marker::Send for spark_core::host::provisioning::ConfigQuery",
  "impl core::marker::Sync for spark_core::host::provisioning::ConfigQuery",
  "impl core::marker::Unpin for spark_core::host::provisioning::ConfigQuery",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::provisioning::ConfigQuery",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::provisioning::ConfigQuery",
  "pub struct spark_core::ConfigurationBuilder",
  "impl spark_core::ConfigurationBuilder",
  "pub fn spark_core::ConfigurationBuilder::build(self) -> core::result::Result<spark_core::BuildOutcome, spark_core::BuildError>",
  "pub fn spark_core::ConfigurationBuilder::new() -> Self",
  "pub fn spark_core::ConfigurationBuilder::register_source(&mut self, source: alloc::boxed::Box<dyn spark_core::DynConfigurationSource>) -> core::result::Result<(), spark_core::configuration::SourceRegistrationError>",
  "pub fn spark_core::ConfigurationBuilder::register_source_static(&mut self, source: &'static dyn spark_core::DynConfigurationSource) -> core::result::Result<(), spark_core::configuration::SourceRegistrationError>",
  "pub fn spark_core::ConfigurationBuilder::with_audit_pipeline(self, pipeline: spark_core::audit::AuditPipeline) -> Self",
  "pub fn spark_core::ConfigurationBuilder::with_capacity(self, capacity: usize) -> Self",
  "pub fn spark_core::ConfigurationBuilder::with_profile(self, descriptor: spark_core::ProfileDescriptor) -> Self",
  "impl core::default::Default for spark_core::ConfigurationBuilder",
  "pub fn spark_core::ConfigurationBuilder::default() -> spark_core::ConfigurationBuilder",
  "impl core::marker::Freeze for spark_core::ConfigurationBuilder",
  "impl core::marker::Send for spark_core::ConfigurationBuilder",
  "impl core::marker::Sync for spark_core::ConfigurationBuilder",
  "impl core::marker::Unpin for spark_core::ConfigurationBuilder",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::ConfigurationBuilder",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::ConfigurationBuilder",
  "pub struct spark_core::ConfigurationHandle",
  "impl spark_core::ConfigurationHandle",
  "pub fn spark_core::ConfigurationHandle::profile(&self) -> &spark_core::ProfileDescriptor",
  "pub fn spark_core::ConfigurationHandle::snapshot(&self) -> spark_core::ResolvedConfiguration",
  "pub fn spark_core::ConfigurationHandle::watch(&mut self) -> core::result::Result<spark_core::ConfigurationWatch<'_>, spark_core::ConfigurationError>",
  "impl !core::marker::Freeze for spark_core::ConfigurationHandle",
  "impl core::marker::Send for spark_core::ConfigurationHandle",
  "impl core::marker::Sync for spark_core::ConfigurationHandle",
  "impl core::marker::Unpin for spark_core::ConfigurationHandle",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::ConfigurationHandle",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::ConfigurationHandle",
  "pub struct spark_core::ConfigurationLayer",
  "pub spark_core::ConfigurationLayer::entries: alloc::vec::Vec<(spark_core::ConfigKey, spark_core::ConfigValue)>",
  "pub spark_core::ConfigurationLayer::metadata: spark_core::SourceMetadata",
  "impl core::clone::Clone for spark_core::ConfigurationLayer",
  "pub fn spark_core::ConfigurationLayer::clone(&self) -> spark_core::ConfigurationLayer",
  "impl core::cmp::PartialEq for spark_core::ConfigurationLayer",
  "pub fn spark_core::ConfigurationLayer::eq(&self, other: &spark_core::ConfigurationLayer) -> bool",
  "impl core::fmt::Debug for spark_core::ConfigurationLayer",
  "pub fn spark_core::ConfigurationLayer::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::ConfigurationLayer",
  "impl core::marker::Freeze for spark_core::ConfigurationLayer",
  "impl core::marker::Send for spark_core::ConfigurationLayer",
  "impl core::marker::Sync for spark_core::ConfigurationLayer",
  "impl core::marker::Unpin for spark_core::ConfigurationLayer",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ConfigurationLayer",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ConfigurationLayer",
  "pub struct spark_core::ConfigurationSnapshot",
  "pub spark_core::ConfigurationSnapshot::entries: alloc::vec::Vec<spark_core::SnapshotEntry>",
  "pub spark_core::ConfigurationSnapshot::layers: alloc::vec::Vec<spark_core::SnapshotLayer>",
  "pub spark_core::ConfigurationSnapshot::profile: spark_core::SnapshotProfile",
  "pub spark_core::ConfigurationSnapshot::version: u64",
  "impl spark_core::ConfigurationSnapshot",
  "pub fn spark_core::ConfigurationSnapshot::capture(profile: &spark_core::ProfileDescriptor, layers: &[spark_core::ConfigurationLayer], resolved: &spark_core::ResolvedConfiguration) -> Self",
  "pub fn spark_core::ConfigurationSnapshot::to_json(&self) -> alloc::string::String",
  "impl core::clone::Clone for spark_core::ConfigurationSnapshot",
  "pub fn spark_core::ConfigurationSnapshot::clone(&self) -> spark_core::ConfigurationSnapshot",
  "impl core::cmp::Eq for spark_core::ConfigurationSnapshot",
  "impl core::cmp::PartialEq for spark_core::ConfigurationSnapshot",
  "pub fn spark_core::ConfigurationSnapshot::eq(&self, other: &spark_core::ConfigurationSnapshot) -> bool",
  "impl core::fmt::Debug for spark_core::ConfigurationSnapshot",
  "pub fn spark_core::ConfigurationSnapshot::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::ConfigurationSnapshot",
  "impl core::marker::Freeze for spark_core::ConfigurationSnapshot",
  "impl core::marker::Send for spark_core::ConfigurationSnapshot",
  "impl core::marker::Sync for spark_core::ConfigurationSnapshot",
  "impl core::marker::Unpin for spark_core::ConfigurationSnapshot",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ConfigurationSnapshot",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ConfigurationSnapshot",
  "pub struct spark_core::ConfigurationUpdate",
  "pub spark_core::ConfigurationUpdate::kind: spark_core::ConfigurationUpdateKind",
  "pub spark_core::ConfigurationUpdate::snapshot: spark_core::ResolvedConfiguration",
  "impl core::clone::Clone for spark_core::ConfigurationUpdate",
  "pub fn spark_core::ConfigurationUpdate::clone(&self) -> spark_core::ConfigurationUpdate",
  "impl core::cmp::PartialEq for spark_core::ConfigurationUpdate",
  "pub fn spark_core::ConfigurationUpdate::eq(&self, other: &spark_core::ConfigurationUpdate) -> bool",
  "impl core::fmt::Debug for spark_core::ConfigurationUpdate",
  "pub fn spark_core::ConfigurationUpdate::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::ConfigurationUpdate",
  "impl core::marker::Freeze for spark_core::ConfigurationUpdate",
  "impl core::marker::Send for spark_core::ConfigurationUpdate",
  "impl core::marker::Sync for spark_core::ConfigurationUpdate",
  "impl core::marker::Unpin for spark_core::ConfigurationUpdate",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ConfigurationUpdate",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ConfigurationUpdate",
  "pub struct spark_core::ConfigurationWatch<'a>",
  "impl<'a> spark_core::future::Stream for spark_core::ConfigurationWatch<'a>",
  "pub type spark_core::ConfigurationWatch<'a>::Item = core::result::Result<spark_core::ConfigurationUpdate, spark_core::ConfigurationError>",
  "pub fn spark_core::ConfigurationWatch<'a>::poll_next(self: core::pin::Pin<&mut Self>, cx: &mut core::task::wake::Context<'_>) -> core::task::poll::Poll<core::option::Option<Self::Item>>",
  "impl<'a> core::marker::Freeze for spark_core::ConfigurationWatch<'a>",
  "impl<'a> core::marker::Send for spark_core::ConfigurationWatch<'a>",
  "impl<'a> !core::marker::Sync for spark_core::ConfigurationWatch<'a>",
  "impl<'a> core::marker::Unpin for spark_core::ConfigurationWatch<'a>",
  "impl<'a> !core::panic::unwind_safe::RefUnwindSafe for spark_core::ConfigurationWatch<'a>",
  "impl<'a> !core::panic::unwind_safe::UnwindSafe for spark_core::ConfigurationWatch<'a>",
  "pub struct spark_core::ConnectionIntent",
  "impl spark_core::transport::intent::ConnectionIntent",
  "pub fn spark_core::transport::intent::ConnectionIntent::availability(&self) -> spark_core::transport::intent::AvailabilityRequirement",
  "pub fn spark_core::transport::intent::ConnectionIntent::endpoint(&self) -> &spark_core::transport::endpoint::Endpoint",
  "pub fn spark_core::transport::intent::ConnectionIntent::lifecycle(&self) -> spark_core::transport::intent::SessionLifecycle",
  "pub fn spark_core::transport::intent::ConnectionIntent::new(endpoint: spark_core::transport::endpoint::Endpoint) -> Self",
  "pub fn spark_core::transport::intent::ConnectionIntent::params(&self) -> &spark_core::transport::params::TransportParams",
  "pub fn spark_core::transport::intent::ConnectionIntent::qos(&self) -> spark_core::transport::intent::QualityOfService",
  "pub fn spark_core::transport::intent::ConnectionIntent::retry_budget(&self) -> core::option::Option<u32>",
  "pub fn spark_core::transport::intent::ConnectionIntent::security(&self) -> &spark_core::transport::intent::SecurityMode",
  "pub fn spark_core::transport::intent::ConnectionIntent::timeout(&self) -> core::option::Option<core::time::Duration>",
  "pub fn spark_core::transport::intent::ConnectionIntent::with_availability(self, availability: spark_core::transport::intent::AvailabilityRequirement) -> Self",
  "pub fn spark_core::transport::intent::ConnectionIntent::with_lifecycle(self, lifecycle: spark_core::transport::intent::SessionLifecycle) -> Self",
  "pub fn spark_core::transport::intent::ConnectionIntent::with_params(self, params: spark_core::transport::params::TransportParams) -> Self",
  "pub fn spark_core::transport::intent::ConnectionIntent::with_qos(self, qos: spark_core::transport::intent::QualityOfService) -> Self",
  "pub fn spark_core::transport::intent::ConnectionIntent::with_retry_budget(self, retries: u32) -> Self",
  "pub fn spark_core::transport::intent::ConnectionIntent::with_security(self, security: spark_core::transport::intent::SecurityMode) -> Self",
  "pub fn spark_core::transport::intent::ConnectionIntent::with_timeout(self, timeout: core::time::Duration) -> Self",
  "impl core::clone::Clone for spark_core::transport::intent::ConnectionIntent",
  "pub fn spark_core::transport::intent::ConnectionIntent::clone(&self) -> spark_core::transport::intent::ConnectionIntent",
  "impl core::cmp::Eq for spark_core::transport::intent::ConnectionIntent",
  "impl core::cmp::PartialEq for spark_core::transport::intent::ConnectionIntent",
  "pub fn spark_core::transport::intent::ConnectionIntent::eq(&self, other: &spark_core::transport::intent::ConnectionIntent) -> bool",
  "impl core::fmt::Debug for spark_core::transport::intent::ConnectionIntent",
  "pub fn spark_core::transport::intent::ConnectionIntent::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::transport::intent::ConnectionIntent",
  "impl core::marker::Freeze for spark_core::transport::intent::ConnectionIntent",
  "impl core::marker::Send for spark_core::transport::intent::ConnectionIntent",
  "impl core::marker::Sync for spark_core::transport::intent::ConnectionIntent",
  "impl core::marker::Unpin for spark_core::transport::intent::ConnectionIntent",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::intent::ConnectionIntent",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::intent::ConnectionIntent",
  "pub struct spark_core::ContentEncoding(_)",
  "impl spark_core::ContentEncoding",
  "pub fn spark_core::ContentEncoding::as_str(&self) -> &str",
  "pub fn spark_core::ContentEncoding::identity() -> Self",
  "pub fn spark_core::ContentEncoding::is_identity(&self) -> bool",
  "pub fn spark_core::ContentEncoding::new(value: impl core::convert::Into<alloc::borrow::Cow<'static, str>>) -> Self",
  "impl core::clone::Clone for spark_core::ContentEncoding",
  "pub fn spark_core::ContentEncoding::clone(&self) -> spark_core::ContentEncoding",
  "impl core::cmp::Eq for spark_core::ContentEncoding",
  "impl core::cmp::PartialEq for spark_core::ContentEncoding",
  "pub fn spark_core::ContentEncoding::eq(&self, other: &spark_core::ContentEncoding) -> bool",
  "impl core::fmt::Debug for spark_core::ContentEncoding",
  "pub fn spark_core::ContentEncoding::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::ContentEncoding",
  "pub fn spark_core::ContentEncoding::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::StructuralPartialEq for spark_core::ContentEncoding",
  "impl core::marker::Freeze for spark_core::ContentEncoding",
  "impl core::marker::Send for spark_core::ContentEncoding",
  "impl core::marker::Sync for spark_core::ContentEncoding",
  "impl core::marker::Unpin for spark_core::ContentEncoding",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ContentEncoding",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ContentEncoding",
  "pub struct spark_core::ContentType(_)",
  "impl spark_core::ContentType",
  "pub fn spark_core::ContentType::as_str(&self) -> &str",
  "pub fn spark_core::ContentType::new(value: impl core::convert::Into<alloc::borrow::Cow<'static, str>>) -> Self",
  "impl core::clone::Clone for spark_core::ContentType",
  "pub fn spark_core::ContentType::clone(&self) -> spark_core::ContentType",
  "impl core::cmp::Eq for spark_core::ContentType",
  "impl core::cmp::PartialEq for spark_core::ContentType",
  "pub fn spark_core::ContentType::eq(&self, other: &spark_core::ContentType) -> bool",
  "impl core::fmt::Debug for spark_core::ContentType",
  "pub fn spark_core::ContentType::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::ContentType",
  "pub fn spark_core::ContentType::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::StructuralPartialEq for spark_core::ContentType",
  "impl core::marker::Freeze for spark_core::ContentType",
  "impl core::marker::Send for spark_core::ContentType",
  "impl core::marker::Sync for spark_core::ContentType",
  "impl core::marker::Unpin for spark_core::ContentType",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ContentType",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ContentType",
  "pub struct spark_core::ControllerEvent",
  "impl spark_core::pipeline::controller::ControllerEvent",
  "pub fn spark_core::pipeline::controller::ControllerEvent::kind(&self) -> spark_core::pipeline::controller::ControllerEventKind",
  "pub fn spark_core::pipeline::controller::ControllerEvent::new(kind: spark_core::pipeline::controller::ControllerEventKind, source: impl core::convert::Into<alloc::borrow::Cow<'static, str>>, note: core::option::Option<impl core::convert::Into<alloc::borrow::Cow<'static, str>>>) -> Self",
  "pub fn spark_core::pipeline::controller::ControllerEvent::note(&self) -> core::option::Option<&str>",
  "pub fn spark_core::pipeline::controller::ControllerEvent::source(&self) -> &str",
  "impl core::clone::Clone for spark_core::pipeline::controller::ControllerEvent",
  "pub fn spark_core::pipeline::controller::ControllerEvent::clone(&self) -> spark_core::pipeline::controller::ControllerEvent",
  "impl core::cmp::Eq for spark_core::pipeline::controller::ControllerEvent",
  "impl core::cmp::PartialEq for spark_core::pipeline::controller::ControllerEvent",
  "pub fn spark_core::pipeline::controller::ControllerEvent::eq(&self, other: &spark_core::pipeline::controller::ControllerEvent) -> bool",
  "impl core::fmt::Debug for spark_core::pipeline::controller::ControllerEvent",
  "pub fn spark_core::pipeline::controller::ControllerEvent::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::pipeline::controller::ControllerEvent",
  "impl core::marker::Freeze for spark_core::pipeline::controller::ControllerEvent",
  "impl core::marker::Send for spark_core::pipeline::controller::ControllerEvent",
  "impl core::marker::Sync for spark_core::pipeline::controller::ControllerEvent",
  "impl core::marker::Unpin for spark_core::pipeline::controller::ControllerEvent",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::pipeline::controller::ControllerEvent",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::pipeline::controller::ControllerEvent",
  "pub struct spark_core::CoreError",
  "impl spark_core::error::CoreError",
  "pub fn spark_core::error::CoreError::category(&self) -> spark_core::error::ErrorCategory",
  "pub fn spark_core::error::CoreError::cause(&self) -> core::option::Option<&spark_core::error::ErrorCause>",
  "pub fn spark_core::error::CoreError::code(&self) -> &'static str",
  "pub fn spark_core::error::CoreError::hint(&self) -> core::option::Option<alloc::borrow::Cow<'static, str>>",
  "pub fn spark_core::error::CoreError::human(&self) -> alloc::borrow::Cow<'static, str>",
  "pub fn spark_core::error::CoreError::message(&self) -> &str",
  "pub fn spark_core::error::CoreError::new(code: &'static str, message: impl core::convert::Into<alloc::borrow::Cow<'static, str>>) -> Self",
  "pub fn spark_core::error::CoreError::set_category(&mut self, category: spark_core::error::ErrorCategory)",
  "pub fn spark_core::error::CoreError::set_cause(&mut self, cause: impl spark_core::Error + core::marker::Send + core::marker::Sync + 'static)",
  "pub fn spark_core::error::CoreError::with_category(self, category: spark_core::error::ErrorCategory) -> Self",
  "pub fn spark_core::error::CoreError::with_cause(self, cause: impl spark_core::Error + core::marker::Send + core::marker::Sync + 'static) -> Self",
  "impl core::fmt::Debug for spark_core::error::CoreError",
  "pub fn spark_core::error::CoreError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::error::CoreError",
  "pub fn spark_core::error::CoreError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl spark_core::Error for spark_core::error::CoreError",
  "pub fn spark_core::error::CoreError::source(&self) -> core::option::Option<&(dyn spark_core::Error + 'static)>",
  "impl core::marker::Freeze for spark_core::error::CoreError",
  "impl core::marker::Send for spark_core::error::CoreError",
  "impl core::marker::Sync for spark_core::error::CoreError",
  "impl core::marker::Unpin for spark_core::error::CoreError",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::error::CoreError",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::error::CoreError",
  "pub struct spark_core::CoreServices",
  "pub spark_core::CoreServices::buffer_pool: alloc::sync::Arc<dyn spark_core::buffer::pool::BufferPool>",
  "pub spark_core::CoreServices::discovery: core::option::Option<alloc::sync::Arc<dyn spark_core::cluster::discovery::ServiceDiscovery>>",
  "pub spark_core::CoreServices::health_checks: spark_core::observability::health::HealthChecks",
  "pub spark_core::CoreServices::logger: alloc::sync::Arc<dyn spark_core::observability::logging::Logger>",
  "pub spark_core::CoreServices::membership: core::option::Option<alloc::sync::Arc<dyn spark_core::cluster::membership::ClusterMembership>>",
  "pub spark_core::CoreServices::metrics: alloc::sync::Arc<dyn spark_core::observability::metrics::MetricsProvider>",
  "pub spark_core::CoreServices::ops_bus: alloc::sync::Arc<dyn spark_core::observability::events::OpsEventBus>",
  "pub spark_core::CoreServices::runtime: alloc::sync::Arc<dyn spark_core::runtime::AsyncRuntime>",
  "impl spark_core::CoreServices",
  "pub fn spark_core::CoreServices::observability_facade(&self) -> spark_core::observability::facade::DefaultObservabilityFacade",
  "pub fn spark_core::CoreServices::runtime(&self) -> &dyn spark_core::runtime::AsyncRuntime",
  "pub fn spark_core::CoreServices::time_driver(&self) -> &dyn spark_core::TimeDriver",
  "impl core::clone::Clone for spark_core::CoreServices",
  "pub fn spark_core::CoreServices::clone(&self) -> spark_core::CoreServices",
  "impl spark_core::rt::sugar::RuntimeCaps for spark_core::CoreServices",
  "pub type spark_core::CoreServices::Join<T: core::marker::Send + 'static> = spark_core::JoinHandle<T>",
  "pub fn spark_core::CoreServices::spawn_with<F>(&self, ctx: &spark_core::contract::CallContext, fut: F) -> Self::Join where F: core::future::future::Future + core::marker::Send + 'static, <F as core::future::future::Future>::Output: core::marker::Send + 'static",
  "impl core::marker::Freeze for spark_core::CoreServices",
  "impl core::marker::Send for spark_core::CoreServices",
  "impl core::marker::Sync for spark_core::CoreServices",
  "impl core::marker::Unpin for spark_core::CoreServices",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::CoreServices",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::CoreServices",
  "pub struct spark_core::Credential",
  "impl spark_core::security::credential::Credential",
  "pub fn spark_core::security::credential::Credential::descriptor(&self) -> &spark_core::security::credential::CredentialDescriptor",
  "pub fn spark_core::security::credential::Credential::material(&self) -> &spark_core::security::credential::CredentialMaterial",
  "pub fn spark_core::security::credential::Credential::new(descriptor: spark_core::security::credential::CredentialDescriptor, material: spark_core::security::credential::CredentialMaterial) -> Self",
  "pub fn spark_core::security::credential::Credential::state(&self, age: core::option::Option<core::time::Duration>, revoked: bool) -> spark_core::security::credential::CredentialState",
  "pub fn spark_core::security::credential::Credential::version_hint(&self) -> core::option::Option<&alloc::string::String>",
  "pub fn spark_core::security::credential::Credential::with_version_hint(self, version_hint: alloc::string::String) -> Self",
  "impl core::clone::Clone for spark_core::security::credential::Credential",
  "pub fn spark_core::security::credential::Credential::clone(&self) -> spark_core::security::credential::Credential",
  "impl core::cmp::Eq for spark_core::security::credential::Credential",
  "impl core::cmp::PartialEq for spark_core::security::credential::Credential",
  "pub fn spark_core::security::credential::Credential::eq(&self, other: &spark_core::security::credential::Credential) -> bool",
  "impl core::fmt::Debug for spark_core::security::credential::Credential",
  "pub fn spark_core::security::credential::Credential::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::credential::Credential",
  "impl core::marker::Freeze for spark_core::security::credential::Credential",
  "impl core::marker::Send for spark_core::security::credential::Credential",
  "impl core::marker::Sync for spark_core::security::credential::Credential",
  "impl core::marker::Unpin for spark_core::security::credential::Credential",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::credential::Credential",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::credential::Credential",
  "pub struct spark_core::CredentialDescriptor",
  "impl spark_core::security::credential::CredentialDescriptor",
  "pub fn spark_core::security::credential::CredentialDescriptor::identity(&self) -> &spark_core::security::identity::IdentityDescriptor",
  "pub fn spark_core::security::credential::CredentialDescriptor::new(identity: spark_core::security::identity::IdentityDescriptor, scope: spark_core::security::credential::CredentialScope) -> Self",
  "pub fn spark_core::security::credential::CredentialDescriptor::non_renewable(self) -> Self",
  "pub fn spark_core::security::credential::CredentialDescriptor::proof(&self) -> core::option::Option<&spark_core::security::identity::IdentityProof>",
  "pub fn spark_core::security::credential::CredentialDescriptor::renewable(&self) -> bool",
  "pub fn spark_core::security::credential::CredentialDescriptor::scope(&self) -> spark_core::security::credential::CredentialScope",
  "pub fn spark_core::security::credential::CredentialDescriptor::valid_for(&self) -> core::option::Option<core::time::Duration>",
  "pub fn spark_core::security::credential::CredentialDescriptor::with_proof(self, proof: spark_core::security::identity::IdentityProof) -> Self",
  "pub fn spark_core::security::credential::CredentialDescriptor::with_valid_for(self, duration: core::time::Duration) -> Self",
  "impl core::clone::Clone for spark_core::security::credential::CredentialDescriptor",
  "pub fn spark_core::security::credential::CredentialDescriptor::clone(&self) -> spark_core::security::credential::CredentialDescriptor",
  "impl core::cmp::Eq for spark_core::security::credential::CredentialDescriptor",
  "impl core::cmp::PartialEq for spark_core::security::credential::CredentialDescriptor",
  "pub fn spark_core::security::credential::CredentialDescriptor::eq(&self, other: &spark_core::security::credential::CredentialDescriptor) -> bool",
  "impl core::fmt::Debug for spark_core::security::credential::CredentialDescriptor",
  "pub fn spark_core::security::credential::CredentialDescriptor::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::credential::CredentialDescriptor",
  "impl core::marker::Freeze for spark_core::security::credential::CredentialDescriptor",
  "impl core::marker::Send for spark_core::security::credential::CredentialDescriptor",
  "impl core::marker::Sync for spark_core::security::credential::CredentialDescriptor",
  "impl core::marker::Unpin for spark_core::security::credential::CredentialDescriptor",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::credential::CredentialDescriptor",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::credential::CredentialDescriptor",
  "pub struct spark_core::Deadline",
  "impl spark_core::contract::Deadline",
  "pub fn spark_core::contract::Deadline::at(instant: spark_core::MonotonicTimePoint) -> Self",
  "pub fn spark_core::contract::Deadline::instant(&self) -> core::option::Option<spark_core::MonotonicTimePoint>",
  "pub fn spark_core::contract::Deadline::is_expired(&self, now: spark_core::MonotonicTimePoint) -> bool",
  "pub const fn spark_core::contract::Deadline::none() -> Self",
  "pub fn spark_core::contract::Deadline::with_timeout(now: spark_core::MonotonicTimePoint, timeout: core::time::Duration) -> Self",
  "impl core::clone::Clone for spark_core::contract::Deadline",
  "pub fn spark_core::contract::Deadline::clone(&self) -> spark_core::contract::Deadline",
  "impl core::cmp::Eq for spark_core::contract::Deadline",
  "impl core::cmp::PartialEq for spark_core::contract::Deadline",
  "pub fn spark_core::contract::Deadline::eq(&self, other: &spark_core::contract::Deadline) -> bool",
  "impl core::default::Default for spark_core::contract::Deadline",
  "pub fn spark_core::contract::Deadline::default() -> Self",
  "impl core::fmt::Debug for spark_core::contract::Deadline",
  "pub fn spark_core::contract::Deadline::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::contract::Deadline",
  "impl core::marker::StructuralPartialEq for spark_core::contract::Deadline",
  "impl core::marker::Freeze for spark_core::contract::Deadline",
  "impl core::marker::Send for spark_core::contract::Deadline",
  "impl core::marker::Sync for spark_core::contract::Deadline",
  "impl core::marker::Unpin for spark_core::contract::Deadline",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::contract::Deadline",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::contract::Deadline",
  "pub struct spark_core::DecodeContext<'a>",
  "impl<'a> spark_core::DecodeContext<'a>",
  "pub fn spark_core::DecodeContext<'a>::acquire_scratch(&self, min_capacity: usize) -> core::result::Result<alloc::boxed::Box<spark_core::buffer::ErasedSparkBufMut>, spark_core::error::CoreError>",
  "pub fn spark_core::DecodeContext<'a>::budget(&self) -> core::option::Option<&'a spark_core::contract::Budget>",
  "pub fn spark_core::DecodeContext<'a>::check_frame_constraints(&self, frame_len: usize) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::DecodeContext<'a>::current_depth(&self) -> u16",
  "pub fn spark_core::DecodeContext<'a>::enter_frame(&mut self) -> core::result::Result<spark_core::codec::DecodeFrameGuard<'_, 'a>, spark_core::error::CoreError>",
  "pub fn spark_core::DecodeContext<'a>::max_frame_size(&self) -> core::option::Option<usize>",
  "pub fn spark_core::DecodeContext<'a>::max_recursion_depth(&self) -> core::option::Option<core::num::nonzero::NonZeroU16>",
  "pub fn spark_core::DecodeContext<'a>::new(allocator: &'a dyn spark_core::buffer::BufferAllocator) -> Self",
  "pub fn spark_core::DecodeContext<'a>::refund_budget(&self, amount: usize)",
  "pub fn spark_core::DecodeContext<'a>::with_limits(allocator: &'a dyn spark_core::buffer::BufferAllocator, budget: core::option::Option<&'a spark_core::contract::Budget>, max_frame_size: core::option::Option<usize>, max_recursion_depth: core::option::Option<core::num::nonzero::NonZeroU16>) -> Self",
  "pub fn spark_core::DecodeContext<'a>::with_max_frame_size(allocator: &'a dyn spark_core::buffer::BufferAllocator, max_frame_size: core::option::Option<usize>) -> Self",
  "impl core::fmt::Debug for spark_core::DecodeContext<'_>",
  "pub fn spark_core::DecodeContext<'_>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<'a> core::marker::Freeze for spark_core::DecodeContext<'a>",
  "impl<'a> core::marker::Send for spark_core::DecodeContext<'a>",
  "impl<'a> core::marker::Sync for spark_core::DecodeContext<'a>",
  "impl<'a> core::marker::Unpin for spark_core::DecodeContext<'a>",
  "impl<'a> !core::panic::unwind_safe::RefUnwindSafe for spark_core::DecodeContext<'a>",
  "impl<'a> !core::panic::unwind_safe::UnwindSafe for spark_core::DecodeContext<'a>",
  "pub struct spark_core::DefaultObservabilityFacade",
  "impl spark_core::observability::facade::DefaultObservabilityFacade",
  "pub fn spark_core::observability::facade::DefaultObservabilityFacade::new(logger: alloc::sync::Arc<dyn spark_core::observability::logging::Logger>, metrics: alloc::sync::Arc<dyn spark_core::observability::metrics::MetricsProvider>, ops_bus: alloc::sync::Arc<dyn spark_core::observability::events::OpsEventBus>, health_checks: spark_core::observability::health::HealthChecks) -> Self",
  "impl core::clone::Clone for spark_core::observability::facade::DefaultObservabilityFacade",
  "pub fn spark_core::observability::facade::DefaultObservabilityFacade::clone(&self) -> spark_core::observability::facade::DefaultObservabilityFacade",
  "impl spark_core::observability::facade::ObservabilityFacade for spark_core::observability::facade::DefaultObservabilityFacade",
  "pub fn spark_core::observability::facade::DefaultObservabilityFacade::health_checks(&self) -> &spark_core::observability::health::HealthChecks",
  "pub fn spark_core::observability::facade::DefaultObservabilityFacade::logger(&self) -> alloc::sync::Arc<dyn spark_core::observability::logging::Logger>",
  "pub fn spark_core::observability::facade::DefaultObservabilityFacade::metrics(&self) -> alloc::sync::Arc<dyn spark_core::observability::metrics::MetricsProvider>",
  "pub fn spark_core::observability::facade::DefaultObservabilityFacade::ops_bus(&self) -> alloc::sync::Arc<dyn spark_core::observability::events::OpsEventBus>",
  "impl core::marker::Freeze for spark_core::observability::facade::DefaultObservabilityFacade",
  "impl core::marker::Send for spark_core::observability::facade::DefaultObservabilityFacade",
  "impl core::marker::Sync for spark_core::observability::facade::DefaultObservabilityFacade",
  "impl core::marker::Unpin for spark_core::observability::facade::DefaultObservabilityFacade",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::facade::DefaultObservabilityFacade",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::observability::facade::DefaultObservabilityFacade",
  "pub struct spark_core::DeprecationNotice",
  "impl spark_core::deprecation::DeprecationNotice",
  "pub fn spark_core::deprecation::DeprecationNotice::emit(&self, logger: core::option::Option<&dyn spark_core::observability::logging::Logger>)",
  "pub fn spark_core::deprecation::DeprecationNotice::has_emitted(&self) -> bool",
  "pub const fn spark_core::deprecation::DeprecationNotice::new(symbol: &'static str, since: &'static str, removal: &'static str, tracking: core::option::Option<&'static str>, migration_hint: core::option::Option<&'static str>) -> Self",
  "impl core::fmt::Debug for spark_core::deprecation::DeprecationNotice",
  "pub fn spark_core::deprecation::DeprecationNotice::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl !core::marker::Freeze for spark_core::deprecation::DeprecationNotice",
  "impl core::marker::Send for spark_core::deprecation::DeprecationNotice",
  "impl core::marker::Sync for spark_core::deprecation::DeprecationNotice",
  "impl core::marker::Unpin for spark_core::deprecation::DeprecationNotice",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::deprecation::DeprecationNotice",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::deprecation::DeprecationNotice",
  "pub struct spark_core::DiscoverySnapshot",
  "pub spark_core::DiscoverySnapshot::instances: alloc::vec::Vec<spark_core::cluster::discovery::ServiceInstance>",
  "pub spark_core::DiscoverySnapshot::revision: spark_core::cluster::topology::ClusterRevision",
  "pub spark_core::DiscoverySnapshot::service: spark_core::cluster::discovery::ServiceName",
  "impl core::clone::Clone for spark_core::cluster::discovery::DiscoverySnapshot",
  "pub fn spark_core::cluster::discovery::DiscoverySnapshot::clone(&self) -> spark_core::cluster::discovery::DiscoverySnapshot",
  "impl core::cmp::Eq for spark_core::cluster::discovery::DiscoverySnapshot",
  "impl core::cmp::PartialEq for spark_core::cluster::discovery::DiscoverySnapshot",
  "pub fn spark_core::cluster::discovery::DiscoverySnapshot::eq(&self, other: &spark_core::cluster::discovery::DiscoverySnapshot) -> bool",
  "impl core::fmt::Debug for spark_core::cluster::discovery::DiscoverySnapshot",
  "pub fn spark_core::cluster::discovery::DiscoverySnapshot::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::discovery::DiscoverySnapshot",
  "impl core::marker::Freeze for spark_core::cluster::discovery::DiscoverySnapshot",
  "impl core::marker::Send for spark_core::cluster::discovery::DiscoverySnapshot",
  "impl core::marker::Sync for spark_core::cluster::discovery::DiscoverySnapshot",
  "impl core::marker::Unpin for spark_core::cluster::discovery::DiscoverySnapshot",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::discovery::DiscoverySnapshot",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::discovery::DiscoverySnapshot",
  "pub struct spark_core::DomainError",
  "impl spark_core::error::DomainError",
  "pub fn spark_core::error::DomainError::core(&self) -> &spark_core::error::CoreError",
  "pub fn spark_core::error::DomainError::from_impl(kind: spark_core::error::DomainErrorKind, code: &'static str, impl_error: spark_core::error::ImplError) -> Self",
  "pub fn spark_core::error::DomainError::hint(&self) -> core::option::Option<alloc::borrow::Cow<'static, str>>",
  "pub fn spark_core::error::DomainError::human(&self) -> alloc::borrow::Cow<'static, str>",
  "pub fn spark_core::error::DomainError::impl_cause(&self) -> core::option::Option<&spark_core::error::ImplError>",
  "pub fn spark_core::error::DomainError::kind(&self) -> spark_core::error::DomainErrorKind",
  "pub fn spark_core::error::DomainError::new(kind: spark_core::error::DomainErrorKind, core: spark_core::error::CoreError) -> Self",
  "pub fn spark_core::error::DomainError::with_impl_cause(self, cause: spark_core::error::ImplError) -> Self",
  "impl core::fmt::Debug for spark_core::error::DomainError",
  "pub fn spark_core::error::DomainError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::error::DomainError",
  "pub fn spark_core::error::DomainError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl spark_core::Error for spark_core::error::DomainError",
  "pub fn spark_core::error::DomainError::source(&self) -> core::option::Option<&(dyn spark_core::Error + 'static)>",
  "impl spark_core::error::IntoCoreError for spark_core::error::DomainError",
  "pub fn spark_core::error::DomainError::into_core_error(self) -> spark_core::error::CoreError",
  "impl core::marker::Freeze for spark_core::error::DomainError",
  "impl core::marker::Send for spark_core::error::DomainError",
  "impl core::marker::Sync for spark_core::error::DomainError",
  "impl core::marker::Unpin for spark_core::error::DomainError",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::error::DomainError",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::error::DomainError",
  "pub struct spark_core::DowngradeReport",
  "impl spark_core::transport::handshake::DowngradeReport",
  "pub fn spark_core::transport::handshake::DowngradeReport::is_lossless(&self) -> bool",
  "pub fn spark_core::transport::handshake::DowngradeReport::local(&self) -> spark_core::transport::handshake::CapabilityBitmap",
  "pub fn spark_core::transport::handshake::DowngradeReport::new(local: spark_core::transport::handshake::CapabilityBitmap, remote: spark_core::transport::handshake::CapabilityBitmap) -> Self",
  "pub fn spark_core::transport::handshake::DowngradeReport::remote(&self) -> spark_core::transport::handshake::CapabilityBitmap",
  "impl core::clone::Clone for spark_core::transport::handshake::DowngradeReport",
  "pub fn spark_core::transport::handshake::DowngradeReport::clone(&self) -> spark_core::transport::handshake::DowngradeReport",
  "impl core::cmp::Eq for spark_core::transport::handshake::DowngradeReport",
  "impl core::cmp::PartialEq for spark_core::transport::handshake::DowngradeReport",
  "pub fn spark_core::transport::handshake::DowngradeReport::eq(&self, other: &spark_core::transport::handshake::DowngradeReport) -> bool",
  "impl core::fmt::Debug for spark_core::transport::handshake::DowngradeReport",
  "pub fn spark_core::transport::handshake::DowngradeReport::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::transport::handshake::DowngradeReport",
  "impl core::marker::StructuralPartialEq for spark_core::transport::handshake::DowngradeReport",
  "impl core::marker::Freeze for spark_core::transport::handshake::DowngradeReport",
  "impl core::marker::Send for spark_core::transport::handshake::DowngradeReport",
  "impl core::marker::Sync for spark_core::transport::handshake::DowngradeReport",
  "impl core::marker::Unpin for spark_core::transport::handshake::DowngradeReport",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::handshake::DowngradeReport",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::handshake::DowngradeReport",
  "pub struct spark_core::Empty",
  "impl core::clone::Clone for spark_core::common::Empty",
  "pub fn spark_core::common::Empty::clone(&self) -> spark_core::common::Empty",
  "impl core::fmt::Debug for spark_core::common::Empty",
  "pub fn spark_core::common::Empty::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::common::Empty",
  "impl core::marker::Freeze for spark_core::common::Empty",
  "impl core::marker::Send for spark_core::common::Empty",
  "impl core::marker::Sync for spark_core::common::Empty",
  "impl core::marker::Unpin for spark_core::common::Empty",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::common::Empty",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::common::Empty",
  "pub struct spark_core::EncodeContext<'a>",
  "impl<'a> spark_core::EncodeContext<'a>",
  "pub fn spark_core::EncodeContext<'a>::acquire_buffer(&self, min_capacity: usize) -> core::result::Result<alloc::boxed::Box<spark_core::buffer::ErasedSparkBufMut>, spark_core::error::CoreError>",
  "pub fn spark_core::EncodeContext<'a>::budget(&self) -> core::option::Option<&'a spark_core::contract::Budget>",
  "pub fn spark_core::EncodeContext<'a>::check_frame_constraints(&self, frame_len: usize) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::EncodeContext<'a>::current_depth(&self) -> u16",
  "pub fn spark_core::EncodeContext<'a>::enter_frame(&mut self) -> core::result::Result<spark_core::codec::EncodeFrameGuard<'_, 'a>, spark_core::error::CoreError>",
  "pub fn spark_core::EncodeContext<'a>::max_frame_size(&self) -> core::option::Option<usize>",
  "pub fn spark_core::EncodeContext<'a>::max_recursion_depth(&self) -> core::option::Option<core::num::nonzero::NonZeroU16>",
  "pub fn spark_core::EncodeContext<'a>::new(allocator: &'a dyn spark_core::buffer::BufferAllocator) -> Self",
  "pub fn spark_core::EncodeContext<'a>::refund_budget(&self, amount: usize)",
  "pub fn spark_core::EncodeContext<'a>::with_limits(allocator: &'a dyn spark_core::buffer::BufferAllocator, budget: core::option::Option<&'a spark_core::contract::Budget>, max_frame_size: core::option::Option<usize>, max_recursion_depth: core::option::Option<core::num::nonzero::NonZeroU16>) -> Self",
  "pub fn spark_core::EncodeContext<'a>::with_max_frame_size(allocator: &'a dyn spark_core::buffer::BufferAllocator, max_frame_size: core::option::Option<usize>) -> Self",
  "impl core::fmt::Debug for spark_core::EncodeContext<'_>",
  "pub fn spark_core::EncodeContext<'_>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<'a> core::marker::Freeze for spark_core::EncodeContext<'a>",
  "impl<'a> core::marker::Send for spark_core::EncodeContext<'a>",
  "impl<'a> core::marker::Sync for spark_core::EncodeContext<'a>",
  "impl<'a> core::marker::Unpin for spark_core::EncodeContext<'a>",
  "impl<'a> !core::panic::unwind_safe::RefUnwindSafe for spark_core::EncodeContext<'a>",
  "impl<'a> !core::panic::unwind_safe::UnwindSafe for spark_core::EncodeContext<'a>",
  "pub struct spark_core::EncodedPayload",
  "impl spark_core::EncodedPayload",
  "pub fn spark_core::EncodedPayload::from_buffer(buffer: alloc::boxed::Box<spark_core::buffer::ErasedSparkBuf>) -> Self",
  "pub fn spark_core::EncodedPayload::into_buffer(self) -> alloc::boxed::Box<spark_core::buffer::ErasedSparkBuf>",
  "impl core::fmt::Debug for spark_core::EncodedPayload",
  "pub fn spark_core::EncodedPayload::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::EncodedPayload",
  "impl core::marker::Send for spark_core::EncodedPayload",
  "impl core::marker::Sync for spark_core::EncodedPayload",
  "impl core::marker::Unpin for spark_core::EncodedPayload",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::EncodedPayload",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::EncodedPayload",
  "pub struct spark_core::Endpoint",
  "impl spark_core::transport::endpoint::Endpoint",
  "pub fn spark_core::transport::endpoint::Endpoint::authority(&self) -> &str",
  "pub fn spark_core::transport::endpoint::Endpoint::builder(scheme: alloc::string::String, authority: alloc::string::String) -> spark_core::transport::endpoint::EndpointBuilder",
  "pub fn spark_core::transport::endpoint::Endpoint::kind(&self) -> spark_core::transport::endpoint::EndpointKind",
  "pub fn spark_core::transport::endpoint::Endpoint::logical(scheme: alloc::string::String, authority: alloc::string::String) -> Self",
  "pub fn spark_core::transport::endpoint::Endpoint::params(&self) -> &spark_core::transport::params::TransportParams",
  "pub fn spark_core::transport::endpoint::Endpoint::physical(scheme: alloc::string::String, authority: alloc::string::String, port: u16) -> Self",
  "pub fn spark_core::transport::endpoint::Endpoint::port(&self) -> core::option::Option<u16>",
  "pub fn spark_core::transport::endpoint::Endpoint::resource(&self) -> core::option::Option<&str>",
  "pub fn spark_core::transport::endpoint::Endpoint::scheme(&self) -> &str",
  "impl core::clone::Clone for spark_core::transport::endpoint::Endpoint",
  "pub fn spark_core::transport::endpoint::Endpoint::clone(&self) -> spark_core::transport::endpoint::Endpoint",
  "impl core::cmp::Eq for spark_core::transport::endpoint::Endpoint",
  "impl core::cmp::PartialEq for spark_core::transport::endpoint::Endpoint",
  "pub fn spark_core::transport::endpoint::Endpoint::eq(&self, other: &spark_core::transport::endpoint::Endpoint) -> bool",
  "impl core::fmt::Debug for spark_core::transport::endpoint::Endpoint",
  "pub fn spark_core::transport::endpoint::Endpoint::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::transport::endpoint::Endpoint",
  "impl core::marker::Freeze for spark_core::transport::endpoint::Endpoint",
  "impl core::marker::Send for spark_core::transport::endpoint::Endpoint",
  "impl core::marker::Sync for spark_core::transport::endpoint::Endpoint",
  "impl core::marker::Unpin for spark_core::transport::endpoint::Endpoint",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::endpoint::Endpoint",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::endpoint::Endpoint",
  "pub struct spark_core::ExecutionContext<'a>",
  "impl<'a> spark_core::context::ExecutionContext<'a>",
  "pub fn spark_core::context::ExecutionContext<'a>::budget(&self, kind: &spark_core::contract::BudgetKind) -> core::option::Option<&'a spark_core::contract::Budget>",
  "pub fn spark_core::context::ExecutionContext<'a>::budgets(&self) -> core::slice::iter::Iter<'a, spark_core::contract::Budget>",
  "pub fn spark_core::context::ExecutionContext<'a>::cancellation(&self) -> &'a spark_core::contract::Cancellation",
  "pub fn spark_core::context::ExecutionContext<'a>::deadline(&self) -> spark_core::contract::Deadline",
  "pub fn spark_core::context::ExecutionContext<'a>::new(cancellation: &'a spark_core::contract::Cancellation, deadline: spark_core::contract::Deadline, budgets: &'a [spark_core::contract::Budget]) -> Self",
  "impl<'a> core::clone::Clone for spark_core::context::ExecutionContext<'a>",
  "pub fn spark_core::context::ExecutionContext<'a>::clone(&self) -> spark_core::context::ExecutionContext<'a>",
  "impl<'a> core::convert::From<&'a spark_core::contract::CallContext> for spark_core::context::ExecutionContext<'a>",
  "pub fn spark_core::context::ExecutionContext<'a>::from(ctx: &'a spark_core::contract::CallContext) -> Self",
  "impl<'a> core::marker::Copy for spark_core::context::ExecutionContext<'a>",
  "impl<'a> core::marker::Freeze for spark_core::context::ExecutionContext<'a>",
  "impl<'a> core::marker::Send for spark_core::context::ExecutionContext<'a>",
  "impl<'a> core::marker::Sync for spark_core::context::ExecutionContext<'a>",
  "impl<'a> core::marker::Unpin for spark_core::context::ExecutionContext<'a>",
  "impl<'a> core::panic::unwind_safe::RefUnwindSafe for spark_core::context::ExecutionContext<'a>",
  "impl<'a> core::panic::unwind_safe::UnwindSafe for spark_core::context::ExecutionContext<'a>",
  "pub struct spark_core::HandshakeError",
  "impl spark_core::transport::handshake::HandshakeError",
  "pub fn spark_core::transport::handshake::HandshakeError::into_spark_error(self) -> spark_core::error::SparkError",
  "pub fn spark_core::transport::handshake::HandshakeError::kind(&self) -> &spark_core::transport::handshake::HandshakeErrorKind",
  "impl core::clone::Clone for spark_core::transport::handshake::HandshakeError",
  "pub fn spark_core::transport::handshake::HandshakeError::clone(&self) -> spark_core::transport::handshake::HandshakeError",
  "impl core::cmp::Eq for spark_core::transport::handshake::HandshakeError",
  "impl core::cmp::PartialEq for spark_core::transport::handshake::HandshakeError",
  "pub fn spark_core::transport::handshake::HandshakeError::eq(&self, other: &spark_core::transport::handshake::HandshakeError) -> bool",
  "impl core::convert::From<spark_core::transport::handshake::HandshakeError> for spark_core::error::SparkError",
  "pub fn spark_core::error::SparkError::from(error: spark_core::transport::handshake::HandshakeError) -> Self",
  "impl core::fmt::Debug for spark_core::transport::handshake::HandshakeError",
  "pub fn spark_core::transport::handshake::HandshakeError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::transport::handshake::HandshakeError",
  "pub fn spark_core::transport::handshake::HandshakeError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::transport::handshake::HandshakeError",
  "impl spark_core::Error for spark_core::transport::handshake::HandshakeError",
  "pub fn spark_core::transport::handshake::HandshakeError::source(&self) -> core::option::Option<&(dyn spark_core::Error + 'static)>",
  "impl core::marker::Freeze for spark_core::transport::handshake::HandshakeError",
  "impl core::marker::Send for spark_core::transport::handshake::HandshakeError",
  "impl core::marker::Sync for spark_core::transport::handshake::HandshakeError",
  "impl core::marker::Unpin for spark_core::transport::handshake::HandshakeError",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::handshake::HandshakeError",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::handshake::HandshakeError",
  "pub struct spark_core::HandshakeOffer",
  "impl spark_core::transport::handshake::HandshakeOffer",
  "pub fn spark_core::transport::handshake::HandshakeOffer::mandatory(&self) -> spark_core::transport::handshake::CapabilityBitmap",
  "pub fn spark_core::transport::handshake::HandshakeOffer::new(version: spark_core::transport::handshake::Version, mandatory: spark_core::transport::handshake::CapabilityBitmap, optional: spark_core::transport::handshake::CapabilityBitmap) -> Self",
  "pub fn spark_core::transport::handshake::HandshakeOffer::optional(&self) -> spark_core::transport::handshake::CapabilityBitmap",
  "pub fn spark_core::transport::handshake::HandshakeOffer::total(&self) -> spark_core::transport::handshake::CapabilityBitmap",
  "pub fn spark_core::transport::handshake::HandshakeOffer::version(&self) -> spark_core::transport::handshake::Version",
  "impl core::clone::Clone for spark_core::transport::handshake::HandshakeOffer",
  "pub fn spark_core::transport::handshake::HandshakeOffer::clone(&self) -> spark_core::transport::handshake::HandshakeOffer",
  "impl core::cmp::Eq for spark_core::transport::handshake::HandshakeOffer",
  "impl core::cmp::PartialEq for spark_core::transport::handshake::HandshakeOffer",
  "pub fn spark_core::transport::handshake::HandshakeOffer::eq(&self, other: &spark_core::transport::handshake::HandshakeOffer) -> bool",
  "impl core::fmt::Debug for spark_core::transport::handshake::HandshakeOffer",
  "pub fn spark_core::transport::handshake::HandshakeOffer::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::transport::handshake::HandshakeOffer",
  "impl core::marker::Freeze for spark_core::transport::handshake::HandshakeOffer",
  "impl core::marker::Send for spark_core::transport::handshake::HandshakeOffer",
  "impl core::marker::Sync for spark_core::transport::handshake::HandshakeOffer",
  "impl core::marker::Unpin for spark_core::transport::handshake::HandshakeOffer",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::handshake::HandshakeOffer",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::handshake::HandshakeOffer",
  "pub struct spark_core::HandshakeOutcome",
  "impl spark_core::transport::handshake::HandshakeOutcome",
  "pub fn spark_core::transport::handshake::HandshakeOutcome::capabilities(&self) -> spark_core::transport::handshake::CapabilityBitmap",
  "pub fn spark_core::transport::handshake::HandshakeOutcome::downgrade(&self) -> spark_core::transport::handshake::DowngradeReport",
  "pub fn spark_core::transport::handshake::HandshakeOutcome::new(version: spark_core::transport::handshake::Version, capabilities: spark_core::transport::handshake::CapabilityBitmap, downgrade: spark_core::transport::handshake::DowngradeReport) -> Self",
  "pub fn spark_core::transport::handshake::HandshakeOutcome::version(&self) -> spark_core::transport::handshake::Version",
  "impl core::clone::Clone for spark_core::transport::handshake::HandshakeOutcome",
  "pub fn spark_core::transport::handshake::HandshakeOutcome::clone(&self) -> spark_core::transport::handshake::HandshakeOutcome",
  "impl core::cmp::Eq for spark_core::transport::handshake::HandshakeOutcome",
  "impl core::cmp::PartialEq for spark_core::transport::handshake::HandshakeOutcome",
  "pub fn spark_core::transport::handshake::HandshakeOutcome::eq(&self, other: &spark_core::transport::handshake::HandshakeOutcome) -> bool",
  "impl core::fmt::Debug for spark_core::transport::handshake::HandshakeOutcome",
  "pub fn spark_core::transport::handshake::HandshakeOutcome::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::transport::handshake::HandshakeOutcome",
  "impl core::marker::StructuralPartialEq for spark_core::transport::handshake::HandshakeOutcome",
  "impl core::marker::Freeze for spark_core::transport::handshake::HandshakeOutcome",
  "impl core::marker::Send for spark_core::transport::handshake::HandshakeOutcome",
  "impl core::marker::Sync for spark_core::transport::handshake::HandshakeOutcome",
  "impl core::marker::Unpin for spark_core::transport::handshake::HandshakeOutcome",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::handshake::HandshakeOutcome",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::handshake::HandshakeOutcome",
  "pub struct spark_core::HostContext",
  "pub spark_core::HostContext::capabilities: spark_core::host::capability::CapabilityDescriptor",
  "pub spark_core::HostContext::extensions: alloc::collections::btree::map::BTreeMap<alloc::string::String, alloc::string::String>",
  "pub spark_core::HostContext::metadata: spark_core::host::context::HostMetadata",
  "pub spark_core::HostContext::runtime: spark_core::host::context::HostRuntimeProfile",
  "impl spark_core::host::context::HostContext",
  "pub fn spark_core::host::context::HostContext::new(metadata: spark_core::host::context::HostMetadata, runtime: spark_core::host::context::HostRuntimeProfile, capabilities: spark_core::host::capability::CapabilityDescriptor, extensions: alloc::collections::btree::map::BTreeMap<alloc::string::String, alloc::string::String>) -> Self",
  "impl core::clone::Clone for spark_core::host::context::HostContext",
  "pub fn spark_core::host::context::HostContext::clone(&self) -> spark_core::host::context::HostContext",
  "impl core::cmp::Eq for spark_core::host::context::HostContext",
  "impl core::cmp::PartialEq for spark_core::host::context::HostContext",
  "pub fn spark_core::host::context::HostContext::eq(&self, other: &spark_core::host::context::HostContext) -> bool",
  "impl core::fmt::Debug for spark_core::host::context::HostContext",
  "pub fn spark_core::host::context::HostContext::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::context::HostContext",
  "impl core::marker::Freeze for spark_core::host::context::HostContext",
  "impl core::marker::Send for spark_core::host::context::HostContext",
  "impl core::marker::Sync for spark_core::host::context::HostContext",
  "impl core::marker::Unpin for spark_core::host::context::HostContext",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::context::HostContext",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::context::HostContext",
  "pub struct spark_core::HostMetadata",
  "pub spark_core::HostMetadata::labels: alloc::collections::btree::map::BTreeMap<alloc::string::String, alloc::string::String>",
  "pub spark_core::HostMetadata::name: alloc::string::String",
  "pub spark_core::HostMetadata::region: core::option::Option<alloc::string::String>",
  "pub spark_core::HostMetadata::vendor: core::option::Option<alloc::string::String>",
  "pub spark_core::HostMetadata::version: alloc::string::String",
  "pub spark_core::HostMetadata::zone: core::option::Option<alloc::string::String>",
  "impl spark_core::host::context::HostMetadata",
  "pub fn spark_core::host::context::HostMetadata::new(name: alloc::string::String, version: alloc::string::String, labels: alloc::collections::btree::map::BTreeMap<alloc::string::String, alloc::string::String>) -> Self",
  "impl core::clone::Clone for spark_core::host::context::HostMetadata",
  "pub fn spark_core::host::context::HostMetadata::clone(&self) -> spark_core::host::context::HostMetadata",
  "impl core::cmp::Eq for spark_core::host::context::HostMetadata",
  "impl core::cmp::PartialEq for spark_core::host::context::HostMetadata",
  "pub fn spark_core::host::context::HostMetadata::eq(&self, other: &spark_core::host::context::HostMetadata) -> bool",
  "impl core::fmt::Debug for spark_core::host::context::HostMetadata",
  "pub fn spark_core::host::context::HostMetadata::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::context::HostMetadata",
  "impl core::marker::Freeze for spark_core::host::context::HostMetadata",
  "impl core::marker::Send for spark_core::host::context::HostMetadata",
  "impl core::marker::Sync for spark_core::host::context::HostMetadata",
  "impl core::marker::Unpin for spark_core::host::context::HostMetadata",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::context::HostMetadata",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::context::HostMetadata",
  "pub struct spark_core::HostRuntimeProfile",
  "pub spark_core::HostRuntimeProfile::accelerators: alloc::vec::Vec<alloc::string::String>",
  "pub spark_core::HostRuntimeProfile::architecture: alloc::string::String",
  "pub spark_core::HostRuntimeProfile::cpu_cores: core::option::Option<u16>",
  "pub spark_core::HostRuntimeProfile::memory_bytes: core::option::Option<u64>",
  "pub spark_core::HostRuntimeProfile::operating_system: alloc::string::String",
  "impl spark_core::host::context::HostRuntimeProfile",
  "pub fn spark_core::host::context::HostRuntimeProfile::minimal(operating_system: alloc::string::String, architecture: alloc::string::String) -> Self",
  "impl core::clone::Clone for spark_core::host::context::HostRuntimeProfile",
  "pub fn spark_core::host::context::HostRuntimeProfile::clone(&self) -> spark_core::host::context::HostRuntimeProfile",
  "impl core::cmp::Eq for spark_core::host::context::HostRuntimeProfile",
  "impl core::cmp::PartialEq for spark_core::host::context::HostRuntimeProfile",
  "pub fn spark_core::host::context::HostRuntimeProfile::eq(&self, other: &spark_core::host::context::HostRuntimeProfile) -> bool",
  "impl core::fmt::Debug for spark_core::host::context::HostRuntimeProfile",
  "pub fn spark_core::host::context::HostRuntimeProfile::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::host::context::HostRuntimeProfile",
  "impl core::marker::Freeze for spark_core::host::context::HostRuntimeProfile",
  "impl core::marker::Send for spark_core::host::context::HostRuntimeProfile",
  "impl core::marker::Sync for spark_core::host::context::HostRuntimeProfile",
  "impl core::marker::Unpin for spark_core::host::context::HostRuntimeProfile",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::host::context::HostRuntimeProfile",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::host::context::HostRuntimeProfile",
  "pub struct spark_core::IdentityDescriptor",
  "impl spark_core::security::identity::IdentityDescriptor",
  "pub fn spark_core::security::identity::IdentityDescriptor::authority(&self) -> &str",
  "pub fn spark_core::security::identity::IdentityDescriptor::kind(&self) -> &spark_core::security::identity::IdentityKind",
  "pub fn spark_core::security::identity::IdentityDescriptor::name(&self) -> &str",
  "pub fn spark_core::security::identity::IdentityDescriptor::new(authority: alloc::string::String, name: alloc::string::String, kind: spark_core::security::identity::IdentityKind) -> Self",
  "pub fn spark_core::security::identity::IdentityDescriptor::version(&self) -> core::option::Option<&alloc::string::String>",
  "pub fn spark_core::security::identity::IdentityDescriptor::with_version(self, version: alloc::string::String) -> Self",
  "impl core::clone::Clone for spark_core::security::identity::IdentityDescriptor",
  "pub fn spark_core::security::identity::IdentityDescriptor::clone(&self) -> spark_core::security::identity::IdentityDescriptor",
  "impl core::cmp::Eq for spark_core::security::identity::IdentityDescriptor",
  "impl core::cmp::PartialEq for spark_core::security::identity::IdentityDescriptor",
  "pub fn spark_core::security::identity::IdentityDescriptor::eq(&self, other: &spark_core::security::identity::IdentityDescriptor) -> bool",
  "impl core::fmt::Debug for spark_core::security::identity::IdentityDescriptor",
  "pub fn spark_core::security::identity::IdentityDescriptor::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::identity::IdentityDescriptor",
  "impl core::marker::Freeze for spark_core::security::identity::IdentityDescriptor",
  "impl core::marker::Send for spark_core::security::identity::IdentityDescriptor",
  "impl core::marker::Sync for spark_core::security::identity::IdentityDescriptor",
  "impl core::marker::Unpin for spark_core::security::identity::IdentityDescriptor",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::identity::IdentityDescriptor",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::identity::IdentityDescriptor",
  "pub struct spark_core::IdleTimeout",
  "pub spark_core::IdleTimeout::direction: spark_core::observability::events::IdleDirection",
  "impl core::clone::Clone for spark_core::observability::events::IdleTimeout",
  "pub fn spark_core::observability::events::IdleTimeout::clone(&self) -> spark_core::observability::events::IdleTimeout",
  "impl core::cmp::Eq for spark_core::observability::events::IdleTimeout",
  "impl core::cmp::PartialEq for spark_core::observability::events::IdleTimeout",
  "pub fn spark_core::observability::events::IdleTimeout::eq(&self, other: &spark_core::observability::events::IdleTimeout) -> bool",
  "impl core::fmt::Debug for spark_core::observability::events::IdleTimeout",
  "pub fn spark_core::observability::events::IdleTimeout::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::observability::events::IdleTimeout",
  "impl core::marker::StructuralPartialEq for spark_core::observability::events::IdleTimeout",
  "impl core::marker::Freeze for spark_core::observability::events::IdleTimeout",
  "impl core::marker::Send for spark_core::observability::events::IdleTimeout",
  "impl core::marker::Sync for spark_core::observability::events::IdleTimeout",
  "impl core::marker::Unpin for spark_core::observability::events::IdleTimeout",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::events::IdleTimeout",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::events::IdleTimeout",
  "pub struct spark_core::ImplError",
  "impl spark_core::error::ImplError",
  "pub fn spark_core::error::ImplError::detail(&self) -> core::option::Option<&alloc::borrow::Cow<'static, str>>",
  "pub fn spark_core::error::ImplError::domain(&self) -> &spark_core::error::SparkError",
  "pub fn spark_core::error::ImplError::into_domain(self) -> spark_core::error::SparkError",
  "pub fn spark_core::error::ImplError::kind(&self) -> spark_core::error::ImplErrorKind",
  "pub fn spark_core::error::ImplError::new(kind: spark_core::error::ImplErrorKind, domain: spark_core::error::SparkError) -> Self",
  "pub fn spark_core::error::ImplError::with_detail(self, detail: impl core::convert::Into<alloc::borrow::Cow<'static, str>>) -> Self",
  "pub fn spark_core::error::ImplError::with_source(self, cause: impl spark_core::Error + core::marker::Send + core::marker::Sync + 'static) -> Self",
  "impl core::fmt::Debug for spark_core::error::ImplError",
  "pub fn spark_core::error::ImplError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::error::ImplError",
  "pub fn spark_core::error::ImplError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl spark_core::Error for spark_core::error::ImplError",
  "pub fn spark_core::error::ImplError::source(&self) -> core::option::Option<&(dyn spark_core::Error + 'static)>",
  "impl spark_core::error::IntoDomainError for spark_core::error::ImplError",
  "pub fn spark_core::error::ImplError::into_domain_error(self, kind: spark_core::error::DomainErrorKind, code: &'static str) -> spark_core::error::DomainError",
  "impl core::marker::Freeze for spark_core::error::ImplError",
  "impl core::marker::Send for spark_core::error::ImplError",
  "impl core::marker::Sync for spark_core::error::ImplError",
  "impl core::marker::Unpin for spark_core::error::ImplError",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::error::ImplError",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::error::ImplError",
  "pub struct spark_core::InstrumentDescriptor<'a>",
  "pub spark_core::InstrumentDescriptor::description: core::option::Option<&'a str>",
  "pub spark_core::InstrumentDescriptor::name: &'a str",
  "pub spark_core::InstrumentDescriptor::unit: core::option::Option<&'a str>",
  "impl<'a> spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "pub const fn spark_core::observability::metrics::InstrumentDescriptor<'a>::new(name: &'a str) -> Self",
  "pub const fn spark_core::observability::metrics::InstrumentDescriptor<'a>::with_description(self, description: &'a str) -> Self",
  "pub const fn spark_core::observability::metrics::InstrumentDescriptor<'a>::with_unit(self, unit: &'a str) -> Self",
  "impl<'a> core::clone::Clone for spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "pub fn spark_core::observability::metrics::InstrumentDescriptor<'a>::clone(&self) -> spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "impl<'a> core::cmp::Eq for spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "impl<'a> core::cmp::PartialEq for spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "pub fn spark_core::observability::metrics::InstrumentDescriptor<'a>::eq(&self, other: &spark_core::observability::metrics::InstrumentDescriptor<'a>) -> bool",
  "impl<'a> core::fmt::Debug for spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "pub fn spark_core::observability::metrics::InstrumentDescriptor<'a>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<'a> core::marker::Copy for spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "impl<'a> core::marker::StructuralPartialEq for spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "impl<'a> core::marker::Freeze for spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "impl<'a> core::marker::Send for spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "impl<'a> core::marker::Sync for spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "impl<'a> core::marker::Unpin for spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "impl<'a> core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "impl<'a> core::panic::unwind_safe::UnwindSafe for spark_core::observability::metrics::InstrumentDescriptor<'a>",
  "pub struct spark_core::JoinHandle<T>",
  "impl<T: core::marker::Send + 'static> spark_core::JoinHandle<T>",
  "pub fn spark_core::JoinHandle<T>::cancel(&self, strategy: spark_core::TaskCancellationStrategy)",
  "pub fn spark_core::JoinHandle<T>::detach(self)",
  "pub fn spark_core::JoinHandle<T>::from_task_handle(handle: alloc::boxed::Box<dyn spark_core::TaskHandle<Output = T>>) -> Self",
  "pub fn spark_core::JoinHandle<T>::id(&self) -> core::option::Option<&str>",
  "pub fn spark_core::JoinHandle<T>::is_cancelled(&self) -> bool",
  "pub fn spark_core::JoinHandle<T>::is_finished(&self) -> bool",
  "pub async fn spark_core::JoinHandle<T>::join(self) -> spark_core::TaskResult<T>",
  "pub fn spark_core::JoinHandle<T>::map<U, F>(self, mapper: F) -> spark_core::JoinHandle<U> where T: core::marker::Send + 'static, U: core::marker::Send + 'static, F: core::ops::function::FnOnce(spark_core::TaskResult<T>) -> spark_core::TaskResult<U> + core::marker::Send + core::marker::Sync + 'static",
  "impl<T> core::marker::Freeze for spark_core::JoinHandle<T>",
  "impl<T> core::marker::Send for spark_core::JoinHandle<T>",
  "impl<T> core::marker::Sync for spark_core::JoinHandle<T>",
  "impl<T> core::marker::Unpin for spark_core::JoinHandle<T>",
  "impl<T> !core::panic::unwind_safe::RefUnwindSafe for spark_core::JoinHandle<T>",
  "impl<T> !core::panic::unwind_safe::UnwindSafe for spark_core::JoinHandle<T>",
  "pub struct spark_core::KeyMaterial",
  "impl spark_core::security::keystore::KeyMaterial",
  "pub fn spark_core::security::keystore::KeyMaterial::expires_in(&self) -> core::option::Option<core::time::Duration>",
  "pub fn spark_core::security::keystore::KeyMaterial::format(&self) -> &str",
  "pub fn spark_core::security::keystore::KeyMaterial::new(format: alloc::string::String, payload: alloc::vec::Vec<u8>) -> Self",
  "pub fn spark_core::security::keystore::KeyMaterial::non_renewable(self) -> Self",
  "pub fn spark_core::security::keystore::KeyMaterial::payload(&self) -> &alloc::vec::Vec<u8>",
  "pub fn spark_core::security::keystore::KeyMaterial::renewable(&self) -> bool",
  "pub fn spark_core::security::keystore::KeyMaterial::with_expires_in(self, duration: core::time::Duration) -> Self",
  "impl core::clone::Clone for spark_core::security::keystore::KeyMaterial",
  "pub fn spark_core::security::keystore::KeyMaterial::clone(&self) -> spark_core::security::keystore::KeyMaterial",
  "impl core::cmp::Eq for spark_core::security::keystore::KeyMaterial",
  "impl core::cmp::PartialEq for spark_core::security::keystore::KeyMaterial",
  "pub fn spark_core::security::keystore::KeyMaterial::eq(&self, other: &spark_core::security::keystore::KeyMaterial) -> bool",
  "impl core::fmt::Debug for spark_core::security::keystore::KeyMaterial",
  "pub fn spark_core::security::keystore::KeyMaterial::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::keystore::KeyMaterial",
  "impl core::marker::Freeze for spark_core::security::keystore::KeyMaterial",
  "impl core::marker::Send for spark_core::security::keystore::KeyMaterial",
  "impl core::marker::Sync for spark_core::security::keystore::KeyMaterial",
  "impl core::marker::Unpin for spark_core::security::keystore::KeyMaterial",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::keystore::KeyMaterial",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::keystore::KeyMaterial",
  "pub struct spark_core::KeyRequest",
  "impl spark_core::security::keystore::KeyRequest",
  "pub fn spark_core::security::keystore::KeyRequest::audience(&self) -> core::option::Option<&alloc::string::String>",
  "pub fn spark_core::security::keystore::KeyRequest::identity(&self) -> &spark_core::security::identity::IdentityDescriptor",
  "pub fn spark_core::security::keystore::KeyRequest::new(identity: spark_core::security::identity::IdentityDescriptor, purpose: spark_core::security::keystore::KeyPurpose, scope: spark_core::security::credential::CredentialScope) -> Self",
  "pub fn spark_core::security::keystore::KeyRequest::prefer_cached(&self) -> bool",
  "pub fn spark_core::security::keystore::KeyRequest::prefer_fresh(self) -> Self",
  "pub fn spark_core::security::keystore::KeyRequest::purpose(&self) -> &spark_core::security::keystore::KeyPurpose",
  "pub fn spark_core::security::keystore::KeyRequest::scope(&self) -> spark_core::security::credential::CredentialScope",
  "pub fn spark_core::security::keystore::KeyRequest::version_hint(&self) -> core::option::Option<&alloc::string::String>",
  "pub fn spark_core::security::keystore::KeyRequest::with_audience(self, audience: alloc::string::String) -> Self",
  "pub fn spark_core::security::keystore::KeyRequest::with_version_hint(self, version_hint: alloc::string::String) -> Self",
  "impl core::clone::Clone for spark_core::security::keystore::KeyRequest",
  "pub fn spark_core::security::keystore::KeyRequest::clone(&self) -> spark_core::security::keystore::KeyRequest",
  "impl core::cmp::Eq for spark_core::security::keystore::KeyRequest",
  "impl core::cmp::PartialEq for spark_core::security::keystore::KeyRequest",
  "pub fn spark_core::security::keystore::KeyRequest::eq(&self, other: &spark_core::security::keystore::KeyRequest) -> bool",
  "impl core::fmt::Debug for spark_core::security::keystore::KeyRequest",
  "pub fn spark_core::security::keystore::KeyRequest::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::keystore::KeyRequest",
  "impl core::marker::Freeze for spark_core::security::keystore::KeyRequest",
  "impl core::marker::Send for spark_core::security::keystore::KeyRequest",
  "impl core::marker::Sync for spark_core::security::keystore::KeyRequest",
  "impl core::marker::Unpin for spark_core::security::keystore::KeyRequest",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::keystore::KeyRequest",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::keystore::KeyRequest",
  "pub struct spark_core::KeyResponse",
  "impl spark_core::security::keystore::KeyResponse",
  "pub fn spark_core::security::keystore::KeyResponse::credential(&self) -> core::option::Option<&spark_core::security::credential::Credential>",
  "pub fn spark_core::security::keystore::KeyResponse::materials(&self) -> &alloc::vec::Vec<spark_core::security::keystore::KeyMaterial>",
  "pub fn spark_core::security::keystore::KeyResponse::new(materials: alloc::vec::Vec<spark_core::security::keystore::KeyMaterial>) -> Self",
  "pub fn spark_core::security::keystore::KeyResponse::with_credential(self, credential: spark_core::security::credential::Credential) -> Self",
  "impl core::clone::Clone for spark_core::security::keystore::KeyResponse",
  "pub fn spark_core::security::keystore::KeyResponse::clone(&self) -> spark_core::security::keystore::KeyResponse",
  "impl core::cmp::Eq for spark_core::security::keystore::KeyResponse",
  "impl core::cmp::PartialEq for spark_core::security::keystore::KeyResponse",
  "pub fn spark_core::security::keystore::KeyResponse::eq(&self, other: &spark_core::security::keystore::KeyResponse) -> bool",
  "impl core::fmt::Debug for spark_core::security::keystore::KeyResponse",
  "pub fn spark_core::security::keystore::KeyResponse::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::keystore::KeyResponse",
  "impl core::marker::Freeze for spark_core::security::keystore::KeyResponse",
  "impl core::marker::Send for spark_core::security::keystore::KeyResponse",
  "impl core::marker::Sync for spark_core::security::keystore::KeyResponse",
  "impl core::marker::Unpin for spark_core::security::keystore::KeyResponse",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::keystore::KeyResponse",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::keystore::KeyResponse",
  "pub struct spark_core::KeyValue<'a>",
  "pub spark_core::KeyValue::key: spark_core::observability::attributes::AttributeKey<'a>",
  "pub spark_core::KeyValue::value: spark_core::observability::attributes::MetricAttributeValue<'a>",
  "impl<'a> spark_core::observability::attributes::KeyValue<'a>",
  "pub fn spark_core::observability::attributes::KeyValue<'a>::new(key: impl core::convert::Into<spark_core::observability::attributes::AttributeKey<'a>>, value: impl core::convert::Into<spark_core::observability::attributes::MetricAttributeValue<'a>>) -> Self",
  "impl<'a> core::clone::Clone for spark_core::observability::attributes::KeyValue<'a>",
  "pub fn spark_core::observability::attributes::KeyValue<'a>::clone(&self) -> spark_core::observability::attributes::KeyValue<'a>",
  "impl<'a> core::cmp::PartialEq for spark_core::observability::attributes::KeyValue<'a>",
  "pub fn spark_core::observability::attributes::KeyValue<'a>::eq(&self, other: &spark_core::observability::attributes::KeyValue<'a>) -> bool",
  "impl<'a> core::fmt::Debug for spark_core::observability::attributes::KeyValue<'a>",
  "pub fn spark_core::observability::attributes::KeyValue<'a>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<'a> core::marker::StructuralPartialEq for spark_core::observability::attributes::KeyValue<'a>",
  "impl<'a> core::marker::Freeze for spark_core::observability::attributes::KeyValue<'a>",
  "impl<'a> core::marker::Send for spark_core::observability::attributes::KeyValue<'a>",
  "impl<'a> core::marker::Sync for spark_core::observability::attributes::KeyValue<'a>",
  "impl<'a> core::marker::Unpin for spark_core::observability::attributes::KeyValue<'a>",
  "impl<'a> core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::attributes::KeyValue<'a>",
  "impl<'a> core::panic::unwind_safe::UnwindSafe for spark_core::observability::attributes::KeyValue<'a>",
  "pub struct spark_core::LayeredConfiguration",
  "impl spark_core::LayeredConfiguration",
  "pub fn spark_core::LayeredConfiguration::apply_change(&mut self, notification: spark_core::ChangeNotification) -> core::result::Result<spark_core::ChangeSet, spark_core::ConfigurationError>",
  "pub fn spark_core::LayeredConfiguration::apply_refresh(&mut self, layers: alloc::vec::Vec<spark_core::ConfigurationLayer>) -> core::result::Result<spark_core::ResolvedConfiguration, spark_core::ConfigurationError>",
  "impl spark_core::LayeredConfiguration",
  "pub fn spark_core::LayeredConfiguration::new(profile: spark_core::ProfileId, layering: spark_core::ProfileLayering) -> Self",
  "pub fn spark_core::LayeredConfiguration::profile(&self) -> &spark_core::ProfileId",
  "pub fn spark_core::LayeredConfiguration::push_layer(&mut self, layer: spark_core::ConfigurationLayer)",
  "pub fn spark_core::LayeredConfiguration::resolve(&self) -> spark_core::ResolvedConfiguration",
  "impl !core::marker::Freeze for spark_core::LayeredConfiguration",
  "impl core::marker::Send for spark_core::LayeredConfiguration",
  "impl core::marker::Sync for spark_core::LayeredConfiguration",
  "impl core::marker::Unpin for spark_core::LayeredConfiguration",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::LayeredConfiguration",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::LayeredConfiguration",
  "pub struct spark_core::LimitMetricsHook<'a>",
  "impl<'a> spark_core::limits::LimitMetricsHook<'a>",
  "pub fn spark_core::limits::LimitMetricsHook<'a>::base_attributes(resource: spark_core::limits::ResourceKind, action: spark_core::limits::LimitAction) -> spark_core::observability::attributes::OwnedAttributeSet",
  "pub fn spark_core::limits::LimitMetricsHook<'a>::new(provider: &'a dyn spark_core::observability::metrics::MetricsProvider) -> Self",
  "pub fn spark_core::limits::LimitMetricsHook<'a>::observe(&self, plan: &spark_core::limits::LimitPlan, current_usage: u64, queue_depth: core::option::Option<spark_core::status::ready::QueueDepth>, decision: spark_core::limits::LimitDecision, attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "impl<'a> core::marker::Freeze for spark_core::limits::LimitMetricsHook<'a>",
  "impl<'a> core::marker::Send for spark_core::limits::LimitMetricsHook<'a>",
  "impl<'a> core::marker::Sync for spark_core::limits::LimitMetricsHook<'a>",
  "impl<'a> core::marker::Unpin for spark_core::limits::LimitMetricsHook<'a>",
  "impl<'a> !core::panic::unwind_safe::RefUnwindSafe for spark_core::limits::LimitMetricsHook<'a>",
  "impl<'a> !core::panic::unwind_safe::UnwindSafe for spark_core::limits::LimitMetricsHook<'a>",
  "pub struct spark_core::LimitPlan",
  "impl spark_core::limits::LimitPlan",
  "pub const fn spark_core::limits::LimitPlan::action(&self) -> spark_core::limits::LimitAction",
  "pub fn spark_core::limits::LimitPlan::default_for(resource: spark_core::limits::ResourceKind) -> Self",
  "pub fn spark_core::limits::LimitPlan::evaluate(&self, current_usage: u64, queue_depth: core::option::Option<u32>) -> spark_core::limits::LimitDecision",
  "pub const fn spark_core::limits::LimitPlan::limit(&self) -> u64",
  "pub const fn spark_core::limits::LimitPlan::queue_capacity(&self) -> core::option::Option<u32>",
  "pub const fn spark_core::limits::LimitPlan::resource(&self) -> spark_core::limits::ResourceKind",
  "pub fn spark_core::limits::LimitPlan::set_action(&mut self, action: spark_core::limits::LimitAction) -> core::result::Result<(), spark_core::limits::LimitConfigError>",
  "pub fn spark_core::limits::LimitPlan::set_limit(&mut self, new_limit: u64) -> core::result::Result<(), spark_core::limits::LimitConfigError>",
  "pub fn spark_core::limits::LimitPlan::update_queue_capacity(&mut self, capacity: u32) -> core::result::Result<(), spark_core::limits::LimitConfigError>",
  "impl core::clone::Clone for spark_core::limits::LimitPlan",
  "pub fn spark_core::limits::LimitPlan::clone(&self) -> spark_core::limits::LimitPlan",
  "impl core::cmp::Eq for spark_core::limits::LimitPlan",
  "impl core::cmp::PartialEq for spark_core::limits::LimitPlan",
  "pub fn spark_core::limits::LimitPlan::eq(&self, other: &spark_core::limits::LimitPlan) -> bool",
  "impl core::fmt::Debug for spark_core::limits::LimitPlan",
  "pub fn spark_core::limits::LimitPlan::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::limits::LimitPlan",
  "impl core::marker::Freeze for spark_core::limits::LimitPlan",
  "impl core::marker::Send for spark_core::limits::LimitPlan",
  "impl core::marker::Sync for spark_core::limits::LimitPlan",
  "impl core::marker::Unpin for spark_core::limits::LimitPlan",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::limits::LimitPlan",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::limits::LimitPlan",
  "pub struct spark_core::LimitSettings",
  "impl spark_core::limits::LimitSettings",
  "pub fn spark_core::limits::LimitSettings::from_configuration(config: &spark_core::ResolvedConfiguration) -> core::result::Result<Self, spark_core::limits::LimitConfigError>",
  "pub fn spark_core::limits::LimitSettings::new() -> Self",
  "pub fn spark_core::limits::LimitSettings::plan(&self, resource: spark_core::limits::ResourceKind) -> &spark_core::limits::LimitPlan",
  "impl core::clone::Clone for spark_core::limits::LimitSettings",
  "pub fn spark_core::limits::LimitSettings::clone(&self) -> spark_core::limits::LimitSettings",
  "impl core::cmp::Eq for spark_core::limits::LimitSettings",
  "impl core::cmp::PartialEq for spark_core::limits::LimitSettings",
  "pub fn spark_core::limits::LimitSettings::eq(&self, other: &spark_core::limits::LimitSettings) -> bool",
  "impl core::default::Default for spark_core::limits::LimitSettings",
  "pub fn spark_core::limits::LimitSettings::default() -> Self",
  "impl core::fmt::Debug for spark_core::limits::LimitSettings",
  "pub fn spark_core::limits::LimitSettings::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::limits::LimitSettings",
  "impl core::marker::Freeze for spark_core::limits::LimitSettings",
  "impl core::marker::Send for spark_core::limits::LimitSettings",
  "impl core::marker::Sync for spark_core::limits::LimitSettings",
  "impl core::marker::Unpin for spark_core::limits::LimitSettings",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::limits::LimitSettings",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::limits::LimitSettings",
  "pub struct spark_core::ListenerConfig",
  "impl spark_core::transport::factory::ListenerConfig",
  "pub fn spark_core::transport::factory::ListenerConfig::accept_backoff(&self) -> core::option::Option<core::time::Duration>",
  "pub fn spark_core::transport::factory::ListenerConfig::concurrency_limit(&self) -> core::option::Option<u32>",
  "pub fn spark_core::transport::factory::ListenerConfig::endpoint(&self) -> &spark_core::transport::endpoint::Endpoint",
  "pub fn spark_core::transport::factory::ListenerConfig::new(endpoint: spark_core::transport::endpoint::Endpoint) -> Self",
  "pub fn spark_core::transport::factory::ListenerConfig::params(&self) -> &spark_core::transport::params::TransportParams",
  "pub fn spark_core::transport::factory::ListenerConfig::with_accept_backoff(self, backoff: core::time::Duration) -> Self",
  "pub fn spark_core::transport::factory::ListenerConfig::with_concurrency_limit(self, limit: u32) -> Self",
  "pub fn spark_core::transport::factory::ListenerConfig::with_params(self, params: spark_core::transport::params::TransportParams) -> Self",
  "impl core::clone::Clone for spark_core::transport::factory::ListenerConfig",
  "pub fn spark_core::transport::factory::ListenerConfig::clone(&self) -> spark_core::transport::factory::ListenerConfig",
  "impl core::fmt::Debug for spark_core::transport::factory::ListenerConfig",
  "pub fn spark_core::transport::factory::ListenerConfig::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::transport::factory::ListenerConfig",
  "impl core::marker::Send for spark_core::transport::factory::ListenerConfig",
  "impl core::marker::Sync for spark_core::transport::factory::ListenerConfig",
  "impl core::marker::Unpin for spark_core::transport::factory::ListenerConfig",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::factory::ListenerConfig",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::factory::ListenerConfig",
  "pub struct spark_core::ListenerShutdown",
  "impl spark_core::transport::server::ListenerShutdown",
  "pub fn spark_core::transport::server::ListenerShutdown::deadline(&self) -> core::time::Duration",
  "pub fn spark_core::transport::server::ListenerShutdown::drain_existing(&self) -> bool",
  "pub fn spark_core::transport::server::ListenerShutdown::new(deadline: core::time::Duration, drain_existing: bool) -> Self",
  "impl core::clone::Clone for spark_core::transport::server::ListenerShutdown",
  "pub fn spark_core::transport::server::ListenerShutdown::clone(&self) -> spark_core::transport::server::ListenerShutdown",
  "impl core::cmp::Eq for spark_core::transport::server::ListenerShutdown",
  "impl core::cmp::PartialEq for spark_core::transport::server::ListenerShutdown",
  "pub fn spark_core::transport::server::ListenerShutdown::eq(&self, other: &spark_core::transport::server::ListenerShutdown) -> bool",
  "impl core::fmt::Debug for spark_core::transport::server::ListenerShutdown",
  "pub fn spark_core::transport::server::ListenerShutdown::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::transport::server::ListenerShutdown",
  "impl core::marker::StructuralPartialEq for spark_core::transport::server::ListenerShutdown",
  "impl core::marker::Freeze for spark_core::transport::server::ListenerShutdown",
  "impl core::marker::Send for spark_core::transport::server::ListenerShutdown",
  "impl core::marker::Sync for spark_core::transport::server::ListenerShutdown",
  "impl core::marker::Unpin for spark_core::transport::server::ListenerShutdown",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::server::ListenerShutdown",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::server::ListenerShutdown",
  "pub struct spark_core::LocalTaskSubmission(pub spark_core::ManagedLocalTask)",
  "impl core::convert::From<spark_core::ManagedLocalTask> for spark_core::LocalTaskSubmission",
  "pub fn spark_core::LocalTaskSubmission::from(value: spark_core::ManagedLocalTask) -> Self",
  "impl core::marker::Freeze for spark_core::LocalTaskSubmission",
  "impl !core::marker::Send for spark_core::LocalTaskSubmission",
  "impl !core::marker::Sync for spark_core::LocalTaskSubmission",
  "impl core::marker::Unpin for spark_core::LocalTaskSubmission",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::LocalTaskSubmission",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::LocalTaskSubmission",
  "pub struct spark_core::LogRecord<'a>",
  "pub spark_core::LogRecord::attributes: spark_core::observability::logging::LogField<'a>",
  "pub spark_core::LogRecord::error: core::option::Option<&'a dyn spark_core::Error>",
  "pub spark_core::LogRecord::message: alloc::borrow::Cow<'a, str>",
  "pub spark_core::LogRecord::severity: spark_core::observability::logging::LogSeverity",
  "pub spark_core::LogRecord::target: core::option::Option<alloc::borrow::Cow<'a, str>>",
  "pub spark_core::LogRecord::trace_context: core::option::Option<&'a spark_core::observability::trace::TraceContext>",
  "impl<'a> spark_core::observability::logging::LogRecord<'a>",
  "pub fn spark_core::observability::logging::LogRecord<'a>::new(message: impl core::convert::Into<alloc::borrow::Cow<'a, str>>, severity: spark_core::observability::logging::LogSeverity, target: core::option::Option<impl core::convert::Into<alloc::borrow::Cow<'a, str>>>, trace_context: core::option::Option<&'a spark_core::observability::trace::TraceContext>, error: core::option::Option<&'a dyn spark_core::Error>, attributes: spark_core::observability::logging::LogField<'a>) -> Self",
  "impl<'a> core::fmt::Debug for spark_core::observability::logging::LogRecord<'a>",
  "pub fn spark_core::observability::logging::LogRecord<'a>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<'a> core::marker::Freeze for spark_core::observability::logging::LogRecord<'a>",
  "impl<'a> !core::marker::Send for spark_core::observability::logging::LogRecord<'a>",
  "impl<'a> !core::marker::Sync for spark_core::observability::logging::LogRecord<'a>",
  "impl<'a> core::marker::Unpin for spark_core::observability::logging::LogRecord<'a>",
  "impl<'a> !core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::logging::LogRecord<'a>",
  "impl<'a> !core::panic::unwind_safe::UnwindSafe for spark_core::observability::logging::LogRecord<'a>",
  "pub struct spark_core::ManagedBlockingTask",
  "pub spark_core::ManagedBlockingTask::operation: alloc::boxed::Box<(dyn core::ops::function::FnOnce() -> spark_core::TaskResult + core::marker::Send + 'static)>",
  "pub spark_core::ManagedBlockingTask::options: spark_core::TaskLaunchOptions",
  "impl core::convert::From<spark_core::ManagedBlockingTask> for spark_core::BlockingTaskSubmission",
  "pub fn spark_core::BlockingTaskSubmission::from(value: spark_core::ManagedBlockingTask) -> Self",
  "impl core::marker::Freeze for spark_core::ManagedBlockingTask",
  "impl core::marker::Send for spark_core::ManagedBlockingTask",
  "impl !core::marker::Sync for spark_core::ManagedBlockingTask",
  "impl core::marker::Unpin for spark_core::ManagedBlockingTask",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::ManagedBlockingTask",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::ManagedBlockingTask",
  "pub struct spark_core::ManagedLocalTask",
  "pub spark_core::ManagedLocalTask::future: spark_core::future::LocalBoxFuture<'static, spark_core::TaskResult>",
  "pub spark_core::ManagedLocalTask::options: spark_core::TaskLaunchOptions",
  "impl core::convert::From<spark_core::ManagedLocalTask> for spark_core::LocalTaskSubmission",
  "pub fn spark_core::LocalTaskSubmission::from(value: spark_core::ManagedLocalTask) -> Self",
  "impl core::marker::Freeze for spark_core::ManagedLocalTask",
  "impl !core::marker::Send for spark_core::ManagedLocalTask",
  "impl !core::marker::Sync for spark_core::ManagedLocalTask",
  "impl core::marker::Unpin for spark_core::ManagedLocalTask",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::ManagedLocalTask",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::ManagedLocalTask",
  "pub struct spark_core::ManagedSendTask",
  "pub spark_core::ManagedSendTask::future: spark_core::future::BoxFuture<'static, spark_core::TaskResult>",
  "pub spark_core::ManagedSendTask::options: spark_core::TaskLaunchOptions",
  "impl core::convert::From<spark_core::ManagedSendTask> for spark_core::SendTaskSubmission",
  "pub fn spark_core::SendTaskSubmission::from(value: spark_core::ManagedSendTask) -> Self",
  "impl core::marker::Freeze for spark_core::ManagedSendTask",
  "impl core::marker::Send for spark_core::ManagedSendTask",
  "impl !core::marker::Sync for spark_core::ManagedSendTask",
  "impl core::marker::Unpin for spark_core::ManagedSendTask",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::ManagedSendTask",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::ManagedSendTask",
  "pub struct spark_core::MiddlewareDescriptor",
  "impl spark_core::pipeline::middleware::MiddlewareDescriptor",
  "pub fn spark_core::pipeline::middleware::MiddlewareDescriptor::anonymous(stage: impl core::convert::Into<alloc::borrow::Cow<'static, str>>) -> Self",
  "pub fn spark_core::pipeline::middleware::MiddlewareDescriptor::category(&self) -> &str",
  "pub fn spark_core::pipeline::middleware::MiddlewareDescriptor::name(&self) -> &str",
  "pub fn spark_core::pipeline::middleware::MiddlewareDescriptor::new(name: impl core::convert::Into<alloc::borrow::Cow<'static, str>>, category: impl core::convert::Into<alloc::borrow::Cow<'static, str>>, summary: impl core::convert::Into<alloc::borrow::Cow<'static, str>>) -> Self",
  "pub fn spark_core::pipeline::middleware::MiddlewareDescriptor::summary(&self) -> &str",
  "impl core::clone::Clone for spark_core::pipeline::middleware::MiddlewareDescriptor",
  "pub fn spark_core::pipeline::middleware::MiddlewareDescriptor::clone(&self) -> spark_core::pipeline::middleware::MiddlewareDescriptor",
  "impl core::cmp::Eq for spark_core::pipeline::middleware::MiddlewareDescriptor",
  "impl core::cmp::PartialEq for spark_core::pipeline::middleware::MiddlewareDescriptor",
  "pub fn spark_core::pipeline::middleware::MiddlewareDescriptor::eq(&self, other: &spark_core::pipeline::middleware::MiddlewareDescriptor) -> bool",
  "impl core::fmt::Debug for spark_core::pipeline::middleware::MiddlewareDescriptor",
  "pub fn spark_core::pipeline::middleware::MiddlewareDescriptor::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::pipeline::middleware::MiddlewareDescriptor",
  "impl core::marker::Freeze for spark_core::pipeline::middleware::MiddlewareDescriptor",
  "impl core::marker::Send for spark_core::pipeline::middleware::MiddlewareDescriptor",
  "impl core::marker::Sync for spark_core::pipeline::middleware::MiddlewareDescriptor",
  "impl core::marker::Unpin for spark_core::pipeline::middleware::MiddlewareDescriptor",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::pipeline::middleware::MiddlewareDescriptor",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::pipeline::middleware::MiddlewareDescriptor",
  "pub struct spark_core::MonotonicTimePoint(_)",
  "impl spark_core::MonotonicTimePoint",
  "pub fn spark_core::MonotonicTimePoint::as_duration(&self) -> core::time::Duration",
  "pub fn spark_core::MonotonicTimePoint::from_offset(offset: core::time::Duration) -> Self",
  "pub fn spark_core::MonotonicTimePoint::saturating_add(&self, delta: core::time::Duration) -> spark_core::MonotonicTimePoint",
  "pub fn spark_core::MonotonicTimePoint::saturating_duration_since(&self, earlier: spark_core::MonotonicTimePoint) -> core::time::Duration",
  "impl core::clone::Clone for spark_core::MonotonicTimePoint",
  "pub fn spark_core::MonotonicTimePoint::clone(&self) -> spark_core::MonotonicTimePoint",
  "impl core::cmp::Eq for spark_core::MonotonicTimePoint",
  "impl core::cmp::Ord for spark_core::MonotonicTimePoint",
  "pub fn spark_core::MonotonicTimePoint::cmp(&self, other: &spark_core::MonotonicTimePoint) -> core::cmp::Ordering",
  "impl core::cmp::PartialEq for spark_core::MonotonicTimePoint",
  "pub fn spark_core::MonotonicTimePoint::eq(&self, other: &spark_core::MonotonicTimePoint) -> bool",
  "impl core::cmp::PartialOrd for spark_core::MonotonicTimePoint",
  "pub fn spark_core::MonotonicTimePoint::partial_cmp(&self, other: &spark_core::MonotonicTimePoint) -> core::option::Option<core::cmp::Ordering>",
  "impl core::fmt::Debug for spark_core::MonotonicTimePoint",
  "pub fn spark_core::MonotonicTimePoint::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::MonotonicTimePoint",
  "impl core::marker::StructuralPartialEq for spark_core::MonotonicTimePoint",
  "impl core::marker::Freeze for spark_core::MonotonicTimePoint",
  "impl core::marker::Send for spark_core::MonotonicTimePoint",
  "impl core::marker::Sync for spark_core::MonotonicTimePoint",
  "impl core::marker::Unpin for spark_core::MonotonicTimePoint",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::MonotonicTimePoint",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::MonotonicTimePoint",
  "pub struct spark_core::NegotiatedCodec",
  "impl spark_core::NegotiatedCodec",
  "pub fn spark_core::NegotiatedCodec::descriptor(&self) -> &spark_core::CodecDescriptor",
  "pub fn spark_core::NegotiatedCodec::fallback_encodings(&self) -> &[spark_core::ContentEncoding]",
  "pub fn spark_core::NegotiatedCodec::new(descriptor: spark_core::CodecDescriptor) -> Self",
  "pub fn spark_core::NegotiatedCodec::with_fallback_encodings(self, fallback: alloc::vec::Vec<spark_core::ContentEncoding>) -> Self",
  "impl core::clone::Clone for spark_core::NegotiatedCodec",
  "pub fn spark_core::NegotiatedCodec::clone(&self) -> spark_core::NegotiatedCodec",
  "impl core::fmt::Debug for spark_core::NegotiatedCodec",
  "pub fn spark_core::NegotiatedCodec::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::NegotiatedCodec",
  "impl core::marker::Send for spark_core::NegotiatedCodec",
  "impl core::marker::Sync for spark_core::NegotiatedCodec",
  "impl core::marker::Unpin for spark_core::NegotiatedCodec",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::NegotiatedCodec",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::NegotiatedCodec",
  "pub struct spark_core::NegotiationAuditContext",
  "impl spark_core::transport::handshake::NegotiationAuditContext",
  "pub fn spark_core::transport::handshake::NegotiationAuditContext::new(recorder: alloc::sync::Arc<dyn spark_core::audit::AuditRecorder>, entity_kind: impl core::convert::Into<alloc::borrow::Cow<'static, str>>, entity_id: impl core::convert::Into<alloc::string::String>, actor: spark_core::audit::AuditActor) -> Self",
  "pub fn spark_core::transport::handshake::NegotiationAuditContext::with_actions(self, success: impl core::convert::Into<alloc::borrow::Cow<'static, str>>, failure: impl core::convert::Into<alloc::borrow::Cow<'static, str>>) -> Self",
  "pub fn spark_core::transport::handshake::NegotiationAuditContext::with_labels(self, labels: alloc::vec::Vec<(alloc::borrow::Cow<'static, str>, alloc::borrow::Cow<'static, str>)>) -> Self",
  "pub fn spark_core::transport::handshake::NegotiationAuditContext::with_start_sequence(self, sequence: u64) -> Self",
  "pub fn spark_core::transport::handshake::NegotiationAuditContext::with_tsa_evidence(self, evidence: spark_core::audit::TsaEvidence) -> Self",
  "impl core::clone::Clone for spark_core::transport::handshake::NegotiationAuditContext",
  "pub fn spark_core::transport::handshake::NegotiationAuditContext::clone(&self) -> spark_core::transport::handshake::NegotiationAuditContext",
  "impl core::marker::Freeze for spark_core::transport::handshake::NegotiationAuditContext",
  "impl core::marker::Send for spark_core::transport::handshake::NegotiationAuditContext",
  "impl core::marker::Sync for spark_core::transport::handshake::NegotiationAuditContext",
  "impl core::marker::Unpin for spark_core::transport::handshake::NegotiationAuditContext",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::handshake::NegotiationAuditContext",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::transport::handshake::NegotiationAuditContext",
  "pub struct spark_core::NegotiationContext",
  "impl spark_core::security::negotiation::NegotiationContext",
  "pub fn spark_core::security::negotiation::NegotiationContext::add_metadata(self, key: alloc::string::String, value: alloc::string::String) -> Self",
  "pub fn spark_core::security::negotiation::NegotiationContext::local_identity(&self) -> &spark_core::security::identity::IdentityDescriptor",
  "pub fn spark_core::security::negotiation::NegotiationContext::new(local_identity: spark_core::security::identity::IdentityDescriptor) -> Self",
  "pub fn spark_core::security::negotiation::NegotiationContext::remote_hint(&self) -> core::option::Option<&spark_core::security::identity::IdentityDescriptor>",
  "pub fn spark_core::security::negotiation::NegotiationContext::require_protocol(self, protocol: spark_core::security::negotiation::SecurityProtocol) -> Self",
  "pub fn spark_core::security::negotiation::NegotiationContext::required_protocols(&self) -> &alloc::vec::Vec<spark_core::security::negotiation::SecurityProtocol>",
  "pub fn spark_core::security::negotiation::NegotiationContext::session_metadata(&self) -> &alloc::vec::Vec<(alloc::string::String, alloc::string::String)>",
  "pub fn spark_core::security::negotiation::NegotiationContext::with_remote_hint(self, remote: spark_core::security::identity::IdentityDescriptor) -> Self",
  "impl core::clone::Clone for spark_core::security::negotiation::NegotiationContext",
  "pub fn spark_core::security::negotiation::NegotiationContext::clone(&self) -> spark_core::security::negotiation::NegotiationContext",
  "impl core::cmp::Eq for spark_core::security::negotiation::NegotiationContext",
  "impl core::cmp::PartialEq for spark_core::security::negotiation::NegotiationContext",
  "pub fn spark_core::security::negotiation::NegotiationContext::eq(&self, other: &spark_core::security::negotiation::NegotiationContext) -> bool",
  "impl core::fmt::Debug for spark_core::security::negotiation::NegotiationContext",
  "pub fn spark_core::security::negotiation::NegotiationContext::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::negotiation::NegotiationContext",
  "impl core::marker::Freeze for spark_core::security::negotiation::NegotiationContext",
  "impl core::marker::Send for spark_core::security::negotiation::NegotiationContext",
  "impl core::marker::Sync for spark_core::security::negotiation::NegotiationContext",
  "impl core::marker::Unpin for spark_core::security::negotiation::NegotiationContext",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::negotiation::NegotiationContext",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::negotiation::NegotiationContext",
  "pub struct spark_core::NegotiationOutcome",
  "impl spark_core::security::negotiation::NegotiationOutcome",
  "pub fn spark_core::security::negotiation::NegotiationOutcome::credential(&self) -> core::option::Option<&spark_core::security::credential::Credential>",
  "pub fn spark_core::security::negotiation::NegotiationOutcome::metadata(&self) -> &alloc::vec::Vec<(alloc::string::String, alloc::string::String)>",
  "pub fn spark_core::security::negotiation::NegotiationOutcome::new(protocol: spark_core::security::negotiation::SecurityProtocol) -> Self",
  "pub fn spark_core::security::negotiation::NegotiationOutcome::peer_identity(&self) -> core::option::Option<&spark_core::security::identity::IdentityDescriptor>",
  "pub fn spark_core::security::negotiation::NegotiationOutcome::protocol(&self) -> &spark_core::security::negotiation::SecurityProtocol",
  "pub fn spark_core::security::negotiation::NegotiationOutcome::with_credential(self, credential: spark_core::security::credential::Credential) -> Self",
  "pub fn spark_core::security::negotiation::NegotiationOutcome::with_metadata(self, metadata: alloc::vec::Vec<(alloc::string::String, alloc::string::String)>) -> Self",
  "pub fn spark_core::security::negotiation::NegotiationOutcome::with_peer_identity(self, identity: spark_core::security::identity::IdentityDescriptor) -> Self",
  "impl core::clone::Clone for spark_core::security::negotiation::NegotiationOutcome",
  "pub fn spark_core::security::negotiation::NegotiationOutcome::clone(&self) -> spark_core::security::negotiation::NegotiationOutcome",
  "impl core::cmp::Eq for spark_core::security::negotiation::NegotiationOutcome",
  "impl core::cmp::PartialEq for spark_core::security::negotiation::NegotiationOutcome",
  "pub fn spark_core::security::negotiation::NegotiationOutcome::eq(&self, other: &spark_core::security::negotiation::NegotiationOutcome) -> bool",
  "impl core::fmt::Debug for spark_core::security::negotiation::NegotiationOutcome",
  "pub fn spark_core::security::negotiation::NegotiationOutcome::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::negotiation::NegotiationOutcome",
  "impl core::marker::Freeze for spark_core::security::negotiation::NegotiationOutcome",
  "impl core::marker::Send for spark_core::security::negotiation::NegotiationOutcome",
  "impl core::marker::Sync for spark_core::security::negotiation::NegotiationOutcome",
  "impl core::marker::Unpin for spark_core::security::negotiation::NegotiationOutcome",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::negotiation::NegotiationOutcome",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::negotiation::NegotiationOutcome",
  "pub struct spark_core::NoopConfigStream",
  "impl spark_core::NoopConfigStream",
  "pub const fn spark_core::NoopConfigStream::new() -> Self",
  "impl core::default::Default for spark_core::NoopConfigStream",
  "pub fn spark_core::NoopConfigStream::default() -> Self",
  "impl spark_core::future::Stream for spark_core::NoopConfigStream",
  "pub type spark_core::NoopConfigStream::Item = spark_core::ConfigDelta",
  "pub fn spark_core::NoopConfigStream::poll_next(self: core::pin::Pin<&mut Self>, _cx: &mut core::task::wake::Context<'_>) -> core::task::poll::Poll<core::option::Option<Self::Item>>",
  "impl core::marker::Freeze for spark_core::NoopConfigStream",
  "impl core::marker::Send for spark_core::NoopConfigStream",
  "impl core::marker::Sync for spark_core::NoopConfigStream",
  "impl core::marker::Unpin for spark_core::NoopConfigStream",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::NoopConfigStream",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::NoopConfigStream",
  "pub struct spark_core::ObservabilityContract",
  "impl spark_core::contract::ObservabilityContract",
  "pub fn spark_core::contract::ObservabilityContract::audit_schema(&self) -> &'static [&'static str]",
  "pub fn spark_core::contract::ObservabilityContract::log_fields(&self) -> &'static [&'static str]",
  "pub fn spark_core::contract::ObservabilityContract::metric_names(&self) -> &'static [&'static str]",
  "pub const fn spark_core::contract::ObservabilityContract::new(metric_names: &'static [&'static str], log_fields: &'static [&'static str], trace_keys: &'static [&'static str], audit_schema: &'static [&'static str]) -> Self",
  "pub fn spark_core::contract::ObservabilityContract::trace_keys(&self) -> &'static [&'static str]",
  "impl core::clone::Clone for spark_core::contract::ObservabilityContract",
  "pub fn spark_core::contract::ObservabilityContract::clone(&self) -> spark_core::contract::ObservabilityContract",
  "impl core::default::Default for spark_core::contract::ObservabilityContract",
  "pub fn spark_core::contract::ObservabilityContract::default() -> spark_core::contract::ObservabilityContract",
  "impl core::fmt::Debug for spark_core::contract::ObservabilityContract",
  "pub fn spark_core::contract::ObservabilityContract::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::contract::ObservabilityContract",
  "impl core::marker::Send for spark_core::contract::ObservabilityContract",
  "impl core::marker::Sync for spark_core::contract::ObservabilityContract",
  "impl core::marker::Unpin for spark_core::contract::ObservabilityContract",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::contract::ObservabilityContract",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::contract::ObservabilityContract",
  "pub struct spark_core::OwnedAttributeSet",
  "impl spark_core::observability::attributes::OwnedAttributeSet",
  "pub fn spark_core::observability::attributes::OwnedAttributeSet::as_slice(&self) -> spark_core::observability::attributes::AttributeSet<'_>",
  "pub fn spark_core::observability::attributes::OwnedAttributeSet::clear(&mut self)",
  "pub fn spark_core::observability::attributes::OwnedAttributeSet::extend_from(&mut self, borrowed: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub fn spark_core::observability::attributes::OwnedAttributeSet::new() -> Self",
  "pub fn spark_core::observability::attributes::OwnedAttributeSet::push_owned(&mut self, key: impl core::convert::Into<spark_core::observability::attributes::AttributeKey<'static>>, value: impl core::convert::Into<spark_core::observability::attributes::MetricAttributeValue<'static>>)",
  "impl core::clone::Clone for spark_core::observability::attributes::OwnedAttributeSet",
  "pub fn spark_core::observability::attributes::OwnedAttributeSet::clone(&self) -> spark_core::observability::attributes::OwnedAttributeSet",
  "impl core::default::Default for spark_core::observability::attributes::OwnedAttributeSet",
  "pub fn spark_core::observability::attributes::OwnedAttributeSet::default() -> spark_core::observability::attributes::OwnedAttributeSet",
  "impl core::fmt::Debug for spark_core::observability::attributes::OwnedAttributeSet",
  "pub fn spark_core::observability::attributes::OwnedAttributeSet::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::observability::attributes::OwnedAttributeSet",
  "impl core::marker::Send for spark_core::observability::attributes::OwnedAttributeSet",
  "impl core::marker::Sync for spark_core::observability::attributes::OwnedAttributeSet",
  "impl core::marker::Unpin for spark_core::observability::attributes::OwnedAttributeSet",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::attributes::OwnedAttributeSet",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::attributes::OwnedAttributeSet",
  "pub struct spark_core::PolicyAttachment",
  "impl spark_core::security::policy::PolicyAttachment",
  "pub fn spark_core::security::policy::PolicyAttachment::new(policy: spark_core::security::policy::SecurityPolicy, scope: alloc::string::String, priority: i32) -> Self",
  "pub fn spark_core::security::policy::PolicyAttachment::policy(&self) -> &spark_core::security::policy::SecurityPolicy",
  "pub fn spark_core::security::policy::PolicyAttachment::priority(&self) -> i32",
  "pub fn spark_core::security::policy::PolicyAttachment::scope(&self) -> &str",
  "impl core::clone::Clone for spark_core::security::policy::PolicyAttachment",
  "pub fn spark_core::security::policy::PolicyAttachment::clone(&self) -> spark_core::security::policy::PolicyAttachment",
  "impl core::cmp::Eq for spark_core::security::policy::PolicyAttachment",
  "impl core::cmp::PartialEq for spark_core::security::policy::PolicyAttachment",
  "pub fn spark_core::security::policy::PolicyAttachment::eq(&self, other: &spark_core::security::policy::PolicyAttachment) -> bool",
  "impl core::fmt::Debug for spark_core::security::policy::PolicyAttachment",
  "pub fn spark_core::security::policy::PolicyAttachment::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::policy::PolicyAttachment",
  "impl core::marker::Freeze for spark_core::security::policy::PolicyAttachment",
  "impl core::marker::Send for spark_core::security::policy::PolicyAttachment",
  "impl core::marker::Sync for spark_core::security::policy::PolicyAttachment",
  "impl core::marker::Unpin for spark_core::security::policy::PolicyAttachment",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::policy::PolicyAttachment",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::policy::PolicyAttachment",
  "pub struct spark_core::PolicyRule",
  "impl spark_core::security::policy::PolicyRule",
  "pub fn spark_core::security::policy::PolicyRule::add_condition(self, key: alloc::string::String, value: alloc::string::String) -> Self",
  "pub fn spark_core::security::policy::PolicyRule::conditions(&self) -> &alloc::vec::Vec<(alloc::string::String, alloc::string::String)>",
  "pub fn spark_core::security::policy::PolicyRule::effect(&self) -> spark_core::security::policy::PolicyEffect",
  "pub fn spark_core::security::policy::PolicyRule::new(subjects: alloc::vec::Vec<spark_core::security::policy::SubjectMatcher>, resources: alloc::vec::Vec<spark_core::security::policy::ResourcePattern>, effect: spark_core::security::policy::PolicyEffect) -> Self",
  "pub fn spark_core::security::policy::PolicyRule::resources(&self) -> &alloc::vec::Vec<spark_core::security::policy::ResourcePattern>",
  "pub fn spark_core::security::policy::PolicyRule::subjects(&self) -> &alloc::vec::Vec<spark_core::security::policy::SubjectMatcher>",
  "impl core::clone::Clone for spark_core::security::policy::PolicyRule",
  "pub fn spark_core::security::policy::PolicyRule::clone(&self) -> spark_core::security::policy::PolicyRule",
  "impl core::cmp::Eq for spark_core::security::policy::PolicyRule",
  "impl core::cmp::PartialEq for spark_core::security::policy::PolicyRule",
  "pub fn spark_core::security::policy::PolicyRule::eq(&self, other: &spark_core::security::policy::PolicyRule) -> bool",
  "impl core::fmt::Debug for spark_core::security::policy::PolicyRule",
  "pub fn spark_core::security::policy::PolicyRule::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::policy::PolicyRule",
  "impl core::marker::Freeze for spark_core::security::policy::PolicyRule",
  "impl core::marker::Send for spark_core::security::policy::PolicyRule",
  "impl core::marker::Sync for spark_core::security::policy::PolicyRule",
  "impl core::marker::Unpin for spark_core::security::policy::PolicyRule",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::policy::PolicyRule",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::policy::PolicyRule",
  "pub struct spark_core::PoolStatDimension",
  "pub spark_core::PoolStatDimension::key: alloc::borrow::Cow<'static, str>",
  "pub spark_core::PoolStatDimension::value: usize",
  "impl core::clone::Clone for spark_core::buffer::pool::PoolStatDimension",
  "pub fn spark_core::buffer::pool::PoolStatDimension::clone(&self) -> spark_core::buffer::pool::PoolStatDimension",
  "impl core::cmp::Eq for spark_core::buffer::pool::PoolStatDimension",
  "impl core::cmp::PartialEq for spark_core::buffer::pool::PoolStatDimension",
  "pub fn spark_core::buffer::pool::PoolStatDimension::eq(&self, other: &spark_core::buffer::pool::PoolStatDimension) -> bool",
  "impl core::fmt::Debug for spark_core::buffer::pool::PoolStatDimension",
  "pub fn spark_core::buffer::pool::PoolStatDimension::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::buffer::pool::PoolStatDimension",
  "impl core::marker::Freeze for spark_core::buffer::pool::PoolStatDimension",
  "impl core::marker::Send for spark_core::buffer::pool::PoolStatDimension",
  "impl core::marker::Sync for spark_core::buffer::pool::PoolStatDimension",
  "impl core::marker::Unpin for spark_core::buffer::pool::PoolStatDimension",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::buffer::pool::PoolStatDimension",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::buffer::pool::PoolStatDimension",
  "pub struct spark_core::PoolStats",
  "pub spark_core::PoolStats::active_leases: usize",
  "pub spark_core::PoolStats::allocated_bytes: usize",
  "pub spark_core::PoolStats::available_bytes: usize",
  "pub spark_core::PoolStats::custom_dimensions: alloc::vec::Vec<spark_core::buffer::pool::PoolStatDimension>",
  "pub spark_core::PoolStats::failed_acquisitions: u64",
  "pub spark_core::PoolStats::pending_lease_requests: usize",
  "pub spark_core::PoolStats::resident_bytes: usize",
  "impl core::clone::Clone for spark_core::buffer::pool::PoolStats",
  "pub fn spark_core::buffer::pool::PoolStats::clone(&self) -> spark_core::buffer::pool::PoolStats",
  "impl core::cmp::Eq for spark_core::buffer::pool::PoolStats",
  "impl core::cmp::PartialEq for spark_core::buffer::pool::PoolStats",
  "pub fn spark_core::buffer::pool::PoolStats::eq(&self, other: &spark_core::buffer::pool::PoolStats) -> bool",
  "impl core::default::Default for spark_core::buffer::pool::PoolStats",
  "pub fn spark_core::buffer::pool::PoolStats::default() -> spark_core::buffer::pool::PoolStats",
  "impl core::fmt::Debug for spark_core::buffer::pool::PoolStats",
  "pub fn spark_core::buffer::pool::PoolStats::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::buffer::pool::PoolStats",
  "impl core::marker::Freeze for spark_core::buffer::pool::PoolStats",
  "impl core::marker::Send for spark_core::buffer::pool::PoolStats",
  "impl core::marker::Sync for spark_core::buffer::pool::PoolStats",
  "impl core::marker::Unpin for spark_core::buffer::pool::PoolStats",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::buffer::pool::PoolStats",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::buffer::pool::PoolStats",
  "pub struct spark_core::ProfileDescriptor",
  "pub spark_core::ProfileDescriptor::extends: alloc::vec::Vec<spark_core::ProfileId>",
  "pub spark_core::ProfileDescriptor::identifier: spark_core::ProfileId",
  "pub spark_core::ProfileDescriptor::layering: spark_core::ProfileLayering",
  "pub spark_core::ProfileDescriptor::summary: alloc::borrow::Cow<'static, str>",
  "impl spark_core::ProfileDescriptor",
  "pub fn spark_core::ProfileDescriptor::new<S>(identifier: spark_core::ProfileId, extends: alloc::vec::Vec<spark_core::ProfileId>, layering: spark_core::ProfileLayering, summary: S) -> Self where S: core::convert::Into<alloc::borrow::Cow<'static, str>>",
  "impl core::clone::Clone for spark_core::ProfileDescriptor",
  "pub fn spark_core::ProfileDescriptor::clone(&self) -> spark_core::ProfileDescriptor",
  "impl core::fmt::Debug for spark_core::ProfileDescriptor",
  "pub fn spark_core::ProfileDescriptor::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::ProfileDescriptor",
  "impl core::marker::Send for spark_core::ProfileDescriptor",
  "impl core::marker::Sync for spark_core::ProfileDescriptor",
  "impl core::marker::Unpin for spark_core::ProfileDescriptor",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ProfileDescriptor",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ProfileDescriptor",
  "pub struct spark_core::ProfileId(_)",
  "impl spark_core::ProfileId",
  "pub fn spark_core::ProfileId::as_str(&self) -> &str",
  "pub fn spark_core::ProfileId::new<N>(name: N) -> Self where N: core::convert::Into<alloc::borrow::Cow<'static, str>>",
  "impl core::clone::Clone for spark_core::ProfileId",
  "pub fn spark_core::ProfileId::clone(&self) -> spark_core::ProfileId",
  "impl core::cmp::Eq for spark_core::ProfileId",
  "impl core::cmp::PartialEq for spark_core::ProfileId",
  "pub fn spark_core::ProfileId::eq(&self, other: &spark_core::ProfileId) -> bool",
  "impl core::fmt::Debug for spark_core::ProfileId",
  "pub fn spark_core::ProfileId::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::ProfileId",
  "pub fn spark_core::ProfileId::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::StructuralPartialEq for spark_core::ProfileId",
  "impl core::marker::Freeze for spark_core::ProfileId",
  "impl core::marker::Send for spark_core::ProfileId",
  "impl core::marker::Sync for spark_core::ProfileId",
  "impl core::marker::Unpin for spark_core::ProfileId",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ProfileId",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ProfileId",
  "pub struct spark_core::RateLimited",
  "pub spark_core::RateLimited::direction: spark_core::observability::events::RateDirection",
  "impl core::clone::Clone for spark_core::observability::events::RateLimited",
  "pub fn spark_core::observability::events::RateLimited::clone(&self) -> spark_core::observability::events::RateLimited",
  "impl core::cmp::Eq for spark_core::observability::events::RateLimited",
  "impl core::cmp::PartialEq for spark_core::observability::events::RateLimited",
  "pub fn spark_core::observability::events::RateLimited::eq(&self, other: &spark_core::observability::events::RateLimited) -> bool",
  "impl core::fmt::Debug for spark_core::observability::events::RateLimited",
  "pub fn spark_core::observability::events::RateLimited::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::observability::events::RateLimited",
  "impl core::marker::StructuralPartialEq for spark_core::observability::events::RateLimited",
  "impl core::marker::Freeze for spark_core::observability::events::RateLimited",
  "impl core::marker::Send for spark_core::observability::events::RateLimited",
  "impl core::marker::Sync for spark_core::observability::events::RateLimited",
  "impl core::marker::Unpin for spark_core::observability::events::RateLimited",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::events::RateLimited",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::events::RateLimited",
  "pub struct spark_core::ResolvedConfiguration",
  "pub spark_core::ResolvedConfiguration::values: alloc::collections::btree::map::BTreeMap<spark_core::ConfigKey, spark_core::ConfigValue>",
  "pub spark_core::ResolvedConfiguration::version: u64",
  "impl core::clone::Clone for spark_core::ResolvedConfiguration",
  "pub fn spark_core::ResolvedConfiguration::clone(&self) -> spark_core::ResolvedConfiguration",
  "impl core::cmp::PartialEq for spark_core::ResolvedConfiguration",
  "pub fn spark_core::ResolvedConfiguration::eq(&self, other: &spark_core::ResolvedConfiguration) -> bool",
  "impl core::fmt::Debug for spark_core::ResolvedConfiguration",
  "pub fn spark_core::ResolvedConfiguration::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::ResolvedConfiguration",
  "impl core::marker::Freeze for spark_core::ResolvedConfiguration",
  "impl core::marker::Send for spark_core::ResolvedConfiguration",
  "impl core::marker::Sync for spark_core::ResolvedConfiguration",
  "impl core::marker::Unpin for spark_core::ResolvedConfiguration",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ResolvedConfiguration",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ResolvedConfiguration",
  "pub struct spark_core::ResourcePattern",
  "impl spark_core::security::policy::ResourcePattern",
  "pub fn spark_core::security::policy::ResourcePattern::actions(&self) -> &alloc::vec::Vec<alloc::string::String>",
  "pub fn spark_core::security::policy::ResourcePattern::add_action(self, action: alloc::string::String) -> Self",
  "pub fn spark_core::security::policy::ResourcePattern::add_label(self, key: alloc::string::String, value: alloc::string::String) -> Self",
  "pub fn spark_core::security::policy::ResourcePattern::labels(&self) -> &alloc::vec::Vec<(alloc::string::String, alloc::string::String)>",
  "pub fn spark_core::security::policy::ResourcePattern::name(&self) -> core::option::Option<&alloc::string::String>",
  "pub fn spark_core::security::policy::ResourcePattern::namespace(&self) -> &str",
  "pub fn spark_core::security::policy::ResourcePattern::new(namespace: alloc::string::String) -> Self",
  "pub fn spark_core::security::policy::ResourcePattern::with_name(self, name: alloc::string::String) -> Self",
  "impl core::clone::Clone for spark_core::security::policy::ResourcePattern",
  "pub fn spark_core::security::policy::ResourcePattern::clone(&self) -> spark_core::security::policy::ResourcePattern",
  "impl core::cmp::Eq for spark_core::security::policy::ResourcePattern",
  "impl core::cmp::PartialEq for spark_core::security::policy::ResourcePattern",
  "pub fn spark_core::security::policy::ResourcePattern::eq(&self, other: &spark_core::security::policy::ResourcePattern) -> bool",
  "impl core::fmt::Debug for spark_core::security::policy::ResourcePattern",
  "pub fn spark_core::security::policy::ResourcePattern::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::policy::ResourcePattern",
  "impl core::marker::Freeze for spark_core::security::policy::ResourcePattern",
  "impl core::marker::Send for spark_core::security::policy::ResourcePattern",
  "impl core::marker::Sync for spark_core::security::policy::ResourcePattern",
  "impl core::marker::Unpin for spark_core::security::policy::ResourcePattern",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::policy::ResourcePattern",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::policy::ResourcePattern",
  "pub struct spark_core::RetryAdvice",
  "pub spark_core::RetryAdvice::reason: core::option::Option<alloc::borrow::Cow<'static, str>>",
  "pub spark_core::RetryAdvice::wait: core::time::Duration",
  "impl spark_core::status::ready::RetryAdvice",
  "pub const fn spark_core::status::ready::RetryAdvice::after(wait: core::time::Duration) -> Self",
  "pub fn spark_core::status::ready::RetryAdvice::with_reason(self, reason: impl core::convert::Into<alloc::borrow::Cow<'static, str>>) -> Self",
  "impl core::clone::Clone for spark_core::status::ready::RetryAdvice",
  "pub fn spark_core::status::ready::RetryAdvice::clone(&self) -> spark_core::status::ready::RetryAdvice",
  "impl core::cmp::Eq for spark_core::status::ready::RetryAdvice",
  "impl core::cmp::PartialEq for spark_core::status::ready::RetryAdvice",
  "pub fn spark_core::status::ready::RetryAdvice::eq(&self, other: &spark_core::status::ready::RetryAdvice) -> bool",
  "impl core::fmt::Debug for spark_core::status::ready::RetryAdvice",
  "pub fn spark_core::status::ready::RetryAdvice::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::status::ready::RetryAdvice",
  "impl core::marker::Freeze for spark_core::status::ready::RetryAdvice",
  "impl core::marker::Send for spark_core::status::ready::RetryAdvice",
  "impl core::marker::Sync for spark_core::status::ready::RetryAdvice",
  "impl core::marker::Unpin for spark_core::status::ready::RetryAdvice",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::status::ready::RetryAdvice",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::status::ready::RetryAdvice",
  "pub struct spark_core::RetryAfterThrottle",
  "impl spark_core::status::ready::RetryAfterThrottle",
  "pub fn spark_core::status::ready::RetryAfterThrottle::is_waiting(&self) -> bool",
  "pub fn spark_core::status::ready::RetryAfterThrottle::new(clock: alloc::sync::Arc<dyn spark_core::time::clock::Clock>) -> Self",
  "pub fn spark_core::status::ready::RetryAfterThrottle::observe(&mut self, advice: &spark_core::status::ready::RetryAdvice) -> spark_core::MonotonicTimePoint",
  "pub fn spark_core::status::ready::RetryAfterThrottle::poll(&mut self, cx: &mut core::task::wake::Context<'_>) -> core::task::poll::Poll<()>",
  "pub fn spark_core::status::ready::RetryAfterThrottle::remaining_delay(&self) -> core::time::Duration",
  "impl core::marker::Freeze for spark_core::status::ready::RetryAfterThrottle",
  "impl core::marker::Send for spark_core::status::ready::RetryAfterThrottle",
  "impl !core::marker::Sync for spark_core::status::ready::RetryAfterThrottle",
  "impl core::marker::Unpin for spark_core::status::ready::RetryAfterThrottle",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::status::ready::RetryAfterThrottle",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::status::ready::RetryAfterThrottle",
  "pub struct spark_core::RetryRhythm",
  "impl spark_core::status::ready::RetryRhythm",
  "pub fn spark_core::status::ready::RetryRhythm::accumulated_wait(&self) -> core::time::Duration",
  "pub fn spark_core::status::ready::RetryRhythm::is_ready(&self, now: spark_core::MonotonicTimePoint) -> bool",
  "pub const fn spark_core::status::ready::RetryRhythm::new() -> Self",
  "pub fn spark_core::status::ready::RetryRhythm::next_ready_at(&self) -> core::option::Option<spark_core::MonotonicTimePoint>",
  "pub fn spark_core::status::ready::RetryRhythm::observe(&mut self, now: spark_core::MonotonicTimePoint, advice: &spark_core::status::ready::RetryAdvice) -> spark_core::MonotonicTimePoint",
  "pub fn spark_core::status::ready::RetryRhythm::remaining_delay(&self, now: spark_core::MonotonicTimePoint) -> core::time::Duration",
  "impl core::clone::Clone for spark_core::status::ready::RetryRhythm",
  "pub fn spark_core::status::ready::RetryRhythm::clone(&self) -> spark_core::status::ready::RetryRhythm",
  "impl core::default::Default for spark_core::status::ready::RetryRhythm",
  "pub fn spark_core::status::ready::RetryRhythm::default() -> spark_core::status::ready::RetryRhythm",
  "impl core::fmt::Debug for spark_core::status::ready::RetryRhythm",
  "pub fn spark_core::status::ready::RetryRhythm::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::status::ready::RetryRhythm",
  "impl core::marker::Send for spark_core::status::ready::RetryRhythm",
  "impl core::marker::Sync for spark_core::status::ready::RetryRhythm",
  "impl core::marker::Unpin for spark_core::status::ready::RetryRhythm",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::status::ready::RetryRhythm",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::status::ready::RetryRhythm",
  "pub struct spark_core::RoleDescriptor",
  "pub spark_core::RoleDescriptor::attributes: alloc::vec::Vec<alloc::string::String>",
  "pub spark_core::RoleDescriptor::name: alloc::string::String",
  "impl spark_core::cluster::topology::RoleDescriptor",
  "pub fn spark_core::cluster::topology::RoleDescriptor::new(name: impl core::convert::Into<alloc::string::String>) -> Self",
  "pub fn spark_core::cluster::topology::RoleDescriptor::push_attribute(&mut self, value: impl core::convert::Into<alloc::string::String>)",
  "pub fn spark_core::cluster::topology::RoleDescriptor::with_attributes(name: impl core::convert::Into<alloc::string::String>, attributes: alloc::vec::Vec<alloc::string::String>) -> Self",
  "impl core::clone::Clone for spark_core::cluster::topology::RoleDescriptor",
  "pub fn spark_core::cluster::topology::RoleDescriptor::clone(&self) -> spark_core::cluster::topology::RoleDescriptor",
  "impl core::cmp::Eq for spark_core::cluster::topology::RoleDescriptor",
  "impl core::cmp::Ord for spark_core::cluster::topology::RoleDescriptor",
  "pub fn spark_core::cluster::topology::RoleDescriptor::cmp(&self, other: &spark_core::cluster::topology::RoleDescriptor) -> core::cmp::Ordering",
  "impl core::cmp::PartialEq for spark_core::cluster::topology::RoleDescriptor",
  "pub fn spark_core::cluster::topology::RoleDescriptor::eq(&self, other: &spark_core::cluster::topology::RoleDescriptor) -> bool",
  "impl core::cmp::PartialOrd for spark_core::cluster::topology::RoleDescriptor",
  "pub fn spark_core::cluster::topology::RoleDescriptor::partial_cmp(&self, other: &spark_core::cluster::topology::RoleDescriptor) -> core::option::Option<core::cmp::Ordering>",
  "impl core::fmt::Debug for spark_core::cluster::topology::RoleDescriptor",
  "pub fn spark_core::cluster::topology::RoleDescriptor::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::topology::RoleDescriptor",
  "impl core::marker::Freeze for spark_core::cluster::topology::RoleDescriptor",
  "impl core::marker::Send for spark_core::cluster::topology::RoleDescriptor",
  "impl core::marker::Sync for spark_core::cluster::topology::RoleDescriptor",
  "impl core::marker::Unpin for spark_core::cluster::topology::RoleDescriptor",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::topology::RoleDescriptor",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::topology::RoleDescriptor",
  "pub struct spark_core::RouteBinding<S, Request> where S: spark_core::service::traits::generic::Service<Request>",
  "impl<S, Request> spark_core::router::binding::RouteBinding<S, Request> where S: spark_core::service::traits::generic::Service<Request>",
  "pub fn spark_core::router::binding::RouteBinding<S, Request>::effective_qos(&self) -> core::option::Option<spark_core::transport::intent::QualityOfService>",
  "pub fn spark_core::router::binding::RouteBinding<S, Request>::effective_security(&self) -> core::option::Option<&spark_core::transport::intent::SecurityMode>",
  "pub fn spark_core::router::binding::RouteBinding<S, Request>::id(&self) -> &spark_core::router::route::RouteId",
  "pub fn spark_core::router::binding::RouteBinding<S, Request>::metadata(&self) -> &spark_core::router::metadata::RouteMetadata",
  "pub fn spark_core::router::binding::RouteBinding<S, Request>::new(id: spark_core::router::route::RouteId, service: S, metadata: spark_core::router::metadata::RouteMetadata, effective_qos: core::option::Option<spark_core::transport::intent::QualityOfService>, effective_security: core::option::Option<spark_core::transport::intent::SecurityMode>) -> Self",
  "pub fn spark_core::router::binding::RouteBinding<S, Request>::service(&self) -> &S",
  "pub fn spark_core::router::binding::RouteBinding<S, Request>::service_mut(&mut self) -> &mut S",
  "impl<S, Request> core::fmt::Debug for spark_core::router::binding::RouteBinding<S, Request> where S: spark_core::service::traits::generic::Service<Request>",
  "pub fn spark_core::router::binding::RouteBinding<S, Request>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<S, Request> core::marker::Freeze for spark_core::router::binding::RouteBinding<S, Request> where S: core::marker::Freeze",
  "impl<S, Request> core::marker::Send for spark_core::router::binding::RouteBinding<S, Request> where Request: core::marker::Send",
  "impl<S, Request> core::marker::Sync for spark_core::router::binding::RouteBinding<S, Request> where Request: core::marker::Sync",
  "impl<S, Request> core::marker::Unpin for spark_core::router::binding::RouteBinding<S, Request> where S: core::marker::Unpin, Request: core::marker::Unpin",
  "impl<S, Request> core::panic::unwind_safe::RefUnwindSafe for spark_core::router::binding::RouteBinding<S, Request> where S: core::panic::unwind_safe::RefUnwindSafe, Request: core::panic::unwind_safe::RefUnwindSafe",
  "impl<S, Request> core::panic::unwind_safe::UnwindSafe for spark_core::router::binding::RouteBinding<S, Request> where S: core::panic::unwind_safe::UnwindSafe, Request: core::panic::unwind_safe::UnwindSafe",
  "pub struct spark_core::RouteBindingObject",
  "impl spark_core::router::traits::object::RouteBindingObject",
  "pub fn spark_core::router::traits::object::RouteBindingObject::effective_qos(&self) -> core::option::Option<spark_core::transport::intent::QualityOfService>",
  "pub fn spark_core::router::traits::object::RouteBindingObject::effective_security(&self) -> core::option::Option<&spark_core::transport::intent::SecurityMode>",
  "pub fn spark_core::router::traits::object::RouteBindingObject::id(&self) -> &spark_core::router::route::RouteId",
  "pub fn spark_core::router::traits::object::RouteBindingObject::metadata(&self) -> &spark_core::router::metadata::RouteMetadata",
  "pub fn spark_core::router::traits::object::RouteBindingObject::new(id: spark_core::router::route::RouteId, service: spark_core::service::traits::object::BoxService, metadata: spark_core::router::metadata::RouteMetadata, effective_qos: core::option::Option<spark_core::transport::intent::QualityOfService>, effective_security: core::option::Option<spark_core::transport::intent::SecurityMode>) -> Self",
  "pub fn spark_core::router::traits::object::RouteBindingObject::service(&self) -> &spark_core::service::traits::object::BoxService",
  "impl core::clone::Clone for spark_core::router::traits::object::RouteBindingObject",
  "pub fn spark_core::router::traits::object::RouteBindingObject::clone(&self) -> spark_core::router::traits::object::RouteBindingObject",
  "impl core::fmt::Debug for spark_core::router::traits::object::RouteBindingObject",
  "pub fn spark_core::router::traits::object::RouteBindingObject::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::router::traits::object::RouteBindingObject",
  "impl core::marker::Send for spark_core::router::traits::object::RouteBindingObject",
  "impl core::marker::Sync for spark_core::router::traits::object::RouteBindingObject",
  "impl core::marker::Unpin for spark_core::router::traits::object::RouteBindingObject",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::router::traits::object::RouteBindingObject",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::router::traits::object::RouteBindingObject",
  "pub struct spark_core::RouteCatalog",
  "impl spark_core::router::catalog::RouteCatalog",
  "pub fn spark_core::router::catalog::RouteCatalog::iter(&self) -> impl core::iter::traits::iterator::Iterator<Item = &spark_core::router::catalog::RouteDescriptor>",
  "pub fn spark_core::router::catalog::RouteCatalog::new() -> Self",
  "pub fn spark_core::router::catalog::RouteCatalog::push(&mut self, descriptor: spark_core::router::catalog::RouteDescriptor)",
  "impl core::clone::Clone for spark_core::router::catalog::RouteCatalog",
  "pub fn spark_core::router::catalog::RouteCatalog::clone(&self) -> spark_core::router::catalog::RouteCatalog",
  "impl core::default::Default for spark_core::router::catalog::RouteCatalog",
  "pub fn spark_core::router::catalog::RouteCatalog::default() -> spark_core::router::catalog::RouteCatalog",
  "impl core::fmt::Debug for spark_core::router::catalog::RouteCatalog",
  "pub fn spark_core::router::catalog::RouteCatalog::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::router::catalog::RouteCatalog",
  "impl core::marker::Send for spark_core::router::catalog::RouteCatalog",
  "impl core::marker::Sync for spark_core::router::catalog::RouteCatalog",
  "impl core::marker::Unpin for spark_core::router::catalog::RouteCatalog",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::router::catalog::RouteCatalog",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::router::catalog::RouteCatalog",
  "pub struct spark_core::RouteDecision<S, Request> where S: spark_core::service::traits::generic::Service<Request>",
  "impl<S, Request> spark_core::router::binding::RouteDecision<S, Request> where S: spark_core::service::traits::generic::Service<Request>",
  "pub fn spark_core::router::binding::RouteDecision<S, Request>::binding(&self) -> &spark_core::router::binding::RouteBinding<S, Request>",
  "pub fn spark_core::router::binding::RouteDecision<S, Request>::binding_mut(&mut self) -> &mut spark_core::router::binding::RouteBinding<S, Request>",
  "pub fn spark_core::router::binding::RouteDecision<S, Request>::into_parts(self) -> (spark_core::router::binding::RouteBinding<S, Request>, alloc::vec::Vec<alloc::borrow::Cow<'static, str>>)",
  "pub fn spark_core::router::binding::RouteDecision<S, Request>::new(binding: spark_core::router::binding::RouteBinding<S, Request>, warnings: alloc::vec::Vec<alloc::borrow::Cow<'static, str>>) -> Self",
  "pub fn spark_core::router::binding::RouteDecision<S, Request>::warnings(&self) -> &[alloc::borrow::Cow<'static, str>]",
  "impl<S, Request> core::fmt::Debug for spark_core::router::binding::RouteDecision<S, Request> where S: spark_core::service::traits::generic::Service<Request>",
  "pub fn spark_core::router::binding::RouteDecision<S, Request>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<S, Request> core::marker::Freeze for spark_core::router::binding::RouteDecision<S, Request> where S: core::marker::Freeze",
  "impl<S, Request> core::marker::Send for spark_core::router::binding::RouteDecision<S, Request> where Request: core::marker::Send",
  "impl<S, Request> core::marker::Sync for spark_core::router::binding::RouteDecision<S, Request> where Request: core::marker::Sync",
  "impl<S, Request> core::marker::Unpin for spark_core::router::binding::RouteDecision<S, Request> where S: core::marker::Unpin, Request: core::marker::Unpin",
  "impl<S, Request> core::panic::unwind_safe::RefUnwindSafe for spark_core::router::binding::RouteDecision<S, Request> where S: core::panic::unwind_safe::RefUnwindSafe, Request: core::panic::unwind_safe::RefUnwindSafe",
  "impl<S, Request> core::panic::unwind_safe::UnwindSafe for spark_core::router::binding::RouteDecision<S, Request> where S: core::panic::unwind_safe::UnwindSafe, Request: core::panic::unwind_safe::UnwindSafe",
  "pub struct spark_core::RouteDecisionObject",
  "impl spark_core::router::traits::object::RouteDecisionObject",
  "pub fn spark_core::router::traits::object::RouteDecisionObject::binding(&self) -> &spark_core::router::traits::object::RouteBindingObject",
  "pub fn spark_core::router::traits::object::RouteDecisionObject::new(binding: spark_core::router::traits::object::RouteBindingObject, warnings: alloc::vec::Vec<alloc::borrow::Cow<'static, str>>) -> Self",
  "pub fn spark_core::router::traits::object::RouteDecisionObject::warnings(&self) -> &[alloc::borrow::Cow<'static, str>]",
  "impl core::clone::Clone for spark_core::router::traits::object::RouteDecisionObject",
  "pub fn spark_core::router::traits::object::RouteDecisionObject::clone(&self) -> spark_core::router::traits::object::RouteDecisionObject",
  "impl core::fmt::Debug for spark_core::router::traits::object::RouteDecisionObject",
  "pub fn spark_core::router::traits::object::RouteDecisionObject::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::router::traits::object::RouteDecisionObject",
  "impl core::marker::Send for spark_core::router::traits::object::RouteDecisionObject",
  "impl core::marker::Sync for spark_core::router::traits::object::RouteDecisionObject",
  "impl core::marker::Unpin for spark_core::router::traits::object::RouteDecisionObject",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::router::traits::object::RouteDecisionObject",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::router::traits::object::RouteDecisionObject",
  "pub struct spark_core::RouteDescriptor",
  "impl spark_core::router::catalog::RouteDescriptor",
  "pub fn spark_core::router::catalog::RouteDescriptor::id(&self) -> core::option::Option<&spark_core::router::route::RouteId>",
  "pub fn spark_core::router::catalog::RouteDescriptor::metadata(&self) -> &spark_core::router::metadata::RouteMetadata",
  "pub fn spark_core::router::catalog::RouteDescriptor::new(pattern: spark_core::router::route::RoutePattern) -> Self",
  "pub fn spark_core::router::catalog::RouteDescriptor::pattern(&self) -> &spark_core::router::route::RoutePattern",
  "pub fn spark_core::router::catalog::RouteDescriptor::summary(&self) -> core::option::Option<&alloc::borrow::Cow<'static, str>>",
  "pub fn spark_core::router::catalog::RouteDescriptor::with_id(self, id: spark_core::router::route::RouteId) -> Self",
  "pub fn spark_core::router::catalog::RouteDescriptor::with_metadata(self, metadata: spark_core::router::metadata::RouteMetadata) -> Self",
  "pub fn spark_core::router::catalog::RouteDescriptor::with_summary(self, summary: alloc::borrow::Cow<'static, str>) -> Self",
  "impl core::clone::Clone for spark_core::router::catalog::RouteDescriptor",
  "pub fn spark_core::router::catalog::RouteDescriptor::clone(&self) -> spark_core::router::catalog::RouteDescriptor",
  "impl core::fmt::Debug for spark_core::router::catalog::RouteDescriptor",
  "pub fn spark_core::router::catalog::RouteDescriptor::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::router::catalog::RouteDescriptor",
  "impl core::marker::Send for spark_core::router::catalog::RouteDescriptor",
  "impl core::marker::Sync for spark_core::router::catalog::RouteDescriptor",
  "impl core::marker::Unpin for spark_core::router::catalog::RouteDescriptor",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::router::catalog::RouteDescriptor",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::router::catalog::RouteDescriptor",
  "pub struct spark_core::RouteId",
  "impl spark_core::router::route::RouteId",
  "pub fn spark_core::router::route::RouteId::kind(&self) -> &spark_core::router::route::RouteKind",
  "pub fn spark_core::router::route::RouteId::new(kind: spark_core::router::route::RouteKind, segments: alloc::vec::Vec<alloc::borrow::Cow<'static, str>>) -> Self",
  "pub fn spark_core::router::route::RouteId::segments(&self) -> impl core::iter::traits::iterator::Iterator<Item = &alloc::borrow::Cow<'static, str>>",
  "impl core::clone::Clone for spark_core::router::route::RouteId",
  "pub fn spark_core::router::route::RouteId::clone(&self) -> spark_core::router::route::RouteId",
  "impl core::cmp::Eq for spark_core::router::route::RouteId",
  "impl core::cmp::Ord for spark_core::router::route::RouteId",
  "pub fn spark_core::router::route::RouteId::cmp(&self, other: &spark_core::router::route::RouteId) -> core::cmp::Ordering",
  "impl core::cmp::PartialEq for spark_core::router::route::RouteId",
  "pub fn spark_core::router::route::RouteId::eq(&self, other: &spark_core::router::route::RouteId) -> bool",
  "impl core::cmp::PartialOrd for spark_core::router::route::RouteId",
  "pub fn spark_core::router::route::RouteId::partial_cmp(&self, other: &spark_core::router::route::RouteId) -> core::option::Option<core::cmp::Ordering>",
  "impl core::fmt::Debug for spark_core::router::route::RouteId",
  "pub fn spark_core::router::route::RouteId::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::router::route::RouteId",
  "pub fn spark_core::router::route::RouteId::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::StructuralPartialEq for spark_core::router::route::RouteId",
  "impl core::marker::Freeze for spark_core::router::route::RouteId",
  "impl core::marker::Send for spark_core::router::route::RouteId",
  "impl core::marker::Sync for spark_core::router::route::RouteId",
  "impl core::marker::Unpin for spark_core::router::route::RouteId",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::router::route::RouteId",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::router::route::RouteId",
  "pub struct spark_core::RouteMetadata",
  "impl spark_core::router::metadata::RouteMetadata",
  "pub fn spark_core::router::metadata::RouteMetadata::get(&self, key: &spark_core::router::metadata::MetadataKey) -> core::option::Option<&spark_core::router::metadata::MetadataValue>",
  "pub fn spark_core::router::metadata::RouteMetadata::insert(&mut self, key: spark_core::router::metadata::MetadataKey, value: spark_core::router::metadata::MetadataValue)",
  "pub fn spark_core::router::metadata::RouteMetadata::iter(&self) -> impl core::iter::traits::iterator::Iterator<Item = (&spark_core::router::metadata::MetadataKey, &spark_core::router::metadata::MetadataValue)>",
  "pub fn spark_core::router::metadata::RouteMetadata::new() -> Self",
  "impl core::clone::Clone for spark_core::router::metadata::RouteMetadata",
  "pub fn spark_core::router::metadata::RouteMetadata::clone(&self) -> spark_core::router::metadata::RouteMetadata",
  "impl core::cmp::PartialEq for spark_core::router::metadata::RouteMetadata",
  "pub fn spark_core::router::metadata::RouteMetadata::eq(&self, other: &spark_core::router::metadata::RouteMetadata) -> bool",
  "impl core::default::Default for spark_core::router::metadata::RouteMetadata",
  "pub fn spark_core::router::metadata::RouteMetadata::default() -> spark_core::router::metadata::RouteMetadata",
  "impl core::fmt::Debug for spark_core::router::metadata::RouteMetadata",
  "pub fn spark_core::router::metadata::RouteMetadata::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::router::metadata::RouteMetadata",
  "impl core::marker::Freeze for spark_core::router::metadata::RouteMetadata",
  "impl core::marker::Send for spark_core::router::metadata::RouteMetadata",
  "impl core::marker::Sync for spark_core::router::metadata::RouteMetadata",
  "impl core::marker::Unpin for spark_core::router::metadata::RouteMetadata",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::router::metadata::RouteMetadata",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::router::metadata::RouteMetadata",
  "pub struct spark_core::RoutePattern",
  "impl spark_core::router::route::RoutePattern",
  "pub fn spark_core::router::route::RoutePattern::kind(&self) -> &spark_core::router::route::RouteKind",
  "pub fn spark_core::router::route::RoutePattern::new(kind: spark_core::router::route::RouteKind, segments: alloc::vec::Vec<spark_core::router::route::RouteSegment>) -> Self",
  "pub fn spark_core::router::route::RoutePattern::segments(&self) -> impl core::iter::traits::iterator::Iterator<Item = &spark_core::router::route::RouteSegment>",
  "impl core::clone::Clone for spark_core::router::route::RoutePattern",
  "pub fn spark_core::router::route::RoutePattern::clone(&self) -> spark_core::router::route::RoutePattern",
  "impl core::cmp::Eq for spark_core::router::route::RoutePattern",
  "impl core::cmp::PartialEq for spark_core::router::route::RoutePattern",
  "pub fn spark_core::router::route::RoutePattern::eq(&self, other: &spark_core::router::route::RoutePattern) -> bool",
  "impl core::fmt::Debug for spark_core::router::route::RoutePattern",
  "pub fn spark_core::router::route::RoutePattern::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::router::route::RoutePattern",
  "impl core::marker::Freeze for spark_core::router::route::RoutePattern",
  "impl core::marker::Send for spark_core::router::route::RoutePattern",
  "impl core::marker::Sync for spark_core::router::route::RoutePattern",
  "impl core::marker::Unpin for spark_core::router::route::RoutePattern",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::router::route::RoutePattern",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::router::route::RoutePattern",
  "pub struct spark_core::RouteValidation",
  "impl spark_core::router::binding::RouteValidation",
  "pub fn spark_core::router::binding::RouteValidation::errors(&self) -> &[alloc::borrow::Cow<'static, str>]",
  "pub fn spark_core::router::binding::RouteValidation::is_valid(&self) -> bool",
  "pub fn spark_core::router::binding::RouteValidation::new() -> Self",
  "pub fn spark_core::router::binding::RouteValidation::push_error(&mut self, message: alloc::borrow::Cow<'static, str>)",
  "pub fn spark_core::router::binding::RouteValidation::push_warning(&mut self, message: alloc::borrow::Cow<'static, str>)",
  "pub fn spark_core::router::binding::RouteValidation::warnings(&self) -> &[alloc::borrow::Cow<'static, str>]",
  "impl core::default::Default for spark_core::router::binding::RouteValidation",
  "pub fn spark_core::router::binding::RouteValidation::default() -> spark_core::router::binding::RouteValidation",
  "impl core::fmt::Debug for spark_core::router::binding::RouteValidation",
  "pub fn spark_core::router::binding::RouteValidation::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::router::binding::RouteValidation",
  "impl core::marker::Send for spark_core::router::binding::RouteValidation",
  "impl core::marker::Sync for spark_core::router::binding::RouteValidation",
  "impl core::marker::Unpin for spark_core::router::binding::RouteValidation",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::router::binding::RouteValidation",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::router::binding::RouteValidation",
  "pub struct spark_core::RouterObject<R, Adapter> where R: spark_core::router::traits::generic::Router<spark_core::buffer::message::PipelineMessage, Error = spark_core::error::SparkError> + core::marker::Send + core::marker::Sync, Adapter: core::ops::function::Fn(spark_core::router::binding::RouteBinding<<R as spark_core::router::traits::generic::Router>::Service, spark_core::buffer::message::PipelineMessage>) -> core::result::Result<spark_core::router::traits::object::RouteBindingObject, spark_core::error::SparkError> + core::marker::Send + core::marker::Sync + 'static",
  "impl<R, Adapter> spark_core::router::traits::object::RouterObject<R, Adapter> where R: spark_core::router::traits::generic::Router<spark_core::buffer::message::PipelineMessage, Error = spark_core::error::SparkError> + core::marker::Send + core::marker::Sync, Adapter: core::ops::function::Fn(spark_core::router::binding::RouteBinding<<R as spark_core::router::traits::generic::Router>::Service, spark_core::buffer::message::PipelineMessage>) -> core::result::Result<spark_core::router::traits::object::RouteBindingObject, spark_core::error::SparkError> + core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::router::traits::object::RouterObject<R, Adapter>::new(inner: R, service_adapter: Adapter) -> Self",
  "impl<R, Adapter> spark_core::router::traits::object::DynRouter for spark_core::router::traits::object::RouterObject<R, Adapter> where R: spark_core::router::traits::generic::Router<spark_core::buffer::message::PipelineMessage, Error = spark_core::error::SparkError> + core::marker::Send + core::marker::Sync, Adapter: core::ops::function::Fn(spark_core::router::binding::RouteBinding<<R as spark_core::router::traits::generic::Router>::Service, spark_core::buffer::message::PipelineMessage>) -> core::result::Result<spark_core::router::traits::object::RouteBindingObject, spark_core::error::SparkError> + core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::router::traits::object::RouterObject<R, Adapter>::route_dyn(&self, context: spark_core::router::context::RoutingContext<'_, spark_core::buffer::message::PipelineMessage>) -> core::result::Result<spark_core::router::traits::object::RouteDecisionObject, spark_core::router::traits::generic::RouteError<spark_core::error::SparkError>>",
  "pub fn spark_core::router::traits::object::RouterObject<R, Adapter>::snapshot(&self) -> spark_core::router::context::RoutingSnapshot<'_>",
  "pub fn spark_core::router::traits::object::RouterObject<R, Adapter>::validate(&self, descriptor: &spark_core::router::catalog::RouteDescriptor) -> spark_core::router::binding::RouteValidation",
  "impl<R, Adapter> core::marker::Freeze for spark_core::router::traits::object::RouterObject<R, Adapter> where R: core::marker::Freeze",
  "impl<R, Adapter> core::marker::Send for spark_core::router::traits::object::RouterObject<R, Adapter>",
  "impl<R, Adapter> core::marker::Sync for spark_core::router::traits::object::RouterObject<R, Adapter>",
  "impl<R, Adapter> core::marker::Unpin for spark_core::router::traits::object::RouterObject<R, Adapter> where R: core::marker::Unpin",
  "impl<R, Adapter> core::panic::unwind_safe::RefUnwindSafe for spark_core::router::traits::object::RouterObject<R, Adapter> where R: core::panic::unwind_safe::RefUnwindSafe, Adapter: core::panic::unwind_safe::RefUnwindSafe",
  "impl<R, Adapter> core::panic::unwind_safe::UnwindSafe for spark_core::router::traits::object::RouterObject<R, Adapter> where R: core::panic::unwind_safe::UnwindSafe, Adapter: core::panic::unwind_safe::RefUnwindSafe",
  "pub struct spark_core::RoutingContext<'a, Request>",
  "impl<'a, Request> spark_core::router::context::RoutingContext<'a, Request>",
  "pub fn spark_core::router::context::RoutingContext<'a, Request>::connection(&self) -> core::option::Option<&'a spark_core::transport::intent::ConnectionIntent>",
  "pub fn spark_core::router::context::RoutingContext<'a, Request>::dynamic_metadata(&self) -> &'a spark_core::router::metadata::RouteMetadata",
  "pub fn spark_core::router::context::RoutingContext<'a, Request>::intent(&self) -> &'a spark_core::router::context::RoutingIntent",
  "pub fn spark_core::router::context::RoutingContext<'a, Request>::new(request: &'a Request, intent: &'a spark_core::router::context::RoutingIntent, connection: core::option::Option<&'a spark_core::transport::intent::ConnectionIntent>, trace: core::option::Option<&'a spark_core::observability::trace::TraceContext>, dynamic_metadata: &'a spark_core::router::metadata::RouteMetadata, snapshot: spark_core::router::context::RoutingSnapshot<'a>) -> Self",
  "pub fn spark_core::router::context::RoutingContext<'a, Request>::request(&self) -> &'a Request",
  "pub fn spark_core::router::context::RoutingContext<'a, Request>::snapshot(&self) -> spark_core::router::context::RoutingSnapshot<'a>",
  "pub fn spark_core::router::context::RoutingContext<'a, Request>::trace(&self) -> core::option::Option<&'a spark_core::observability::trace::TraceContext>",
  "impl<'a, Request: core::fmt::Debug> core::fmt::Debug for spark_core::router::context::RoutingContext<'a, Request>",
  "pub fn spark_core::router::context::RoutingContext<'a, Request>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<'a, Request> core::marker::Freeze for spark_core::router::context::RoutingContext<'a, Request>",
  "impl<'a, Request> core::marker::Send for spark_core::router::context::RoutingContext<'a, Request> where Request: core::marker::Sync",
  "impl<'a, Request> core::marker::Sync for spark_core::router::context::RoutingContext<'a, Request> where Request: core::marker::Sync",
  "impl<'a, Request> core::marker::Unpin for spark_core::router::context::RoutingContext<'a, Request>",
  "impl<'a, Request> core::panic::unwind_safe::RefUnwindSafe for spark_core::router::context::RoutingContext<'a, Request> where Request: core::panic::unwind_safe::RefUnwindSafe",
  "impl<'a, Request> core::panic::unwind_safe::UnwindSafe for spark_core::router::context::RoutingContext<'a, Request> where Request: core::panic::unwind_safe::RefUnwindSafe",
  "pub struct spark_core::RoutingIntent",
  "impl spark_core::router::context::RoutingIntent",
  "pub fn spark_core::router::context::RoutingIntent::expected_qos(&self) -> core::option::Option<spark_core::transport::intent::QualityOfService>",
  "pub fn spark_core::router::context::RoutingIntent::new(target: spark_core::router::route::RoutePattern) -> Self",
  "pub fn spark_core::router::context::RoutingIntent::preferred_metadata(&self) -> &spark_core::router::metadata::RouteMetadata",
  "pub fn spark_core::router::context::RoutingIntent::security_preference(&self) -> core::option::Option<&spark_core::transport::intent::SecurityMode>",
  "pub fn spark_core::router::context::RoutingIntent::target(&self) -> &spark_core::router::route::RoutePattern",
  "pub fn spark_core::router::context::RoutingIntent::with_expected_qos(self, qos: spark_core::transport::intent::QualityOfService) -> Self",
  "pub fn spark_core::router::context::RoutingIntent::with_metadata(self, metadata: spark_core::router::metadata::RouteMetadata) -> Self",
  "pub fn spark_core::router::context::RoutingIntent::with_security_preference(self, security: spark_core::transport::intent::SecurityMode) -> Self",
  "impl spark_core::router::context::RoutingIntent",
  "pub fn spark_core::router::context::RoutingIntent::route_kind(&self) -> &spark_core::router::route::RouteKind",
  "impl core::clone::Clone for spark_core::router::context::RoutingIntent",
  "pub fn spark_core::router::context::RoutingIntent::clone(&self) -> spark_core::router::context::RoutingIntent",
  "impl core::fmt::Debug for spark_core::router::context::RoutingIntent",
  "pub fn spark_core::router::context::RoutingIntent::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::router::context::RoutingIntent",
  "impl core::marker::Send for spark_core::router::context::RoutingIntent",
  "impl core::marker::Sync for spark_core::router::context::RoutingIntent",
  "impl core::marker::Unpin for spark_core::router::context::RoutingIntent",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::router::context::RoutingIntent",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::router::context::RoutingIntent",
  "pub struct spark_core::RoutingSnapshot<'a>",
  "impl<'a> spark_core::router::context::RoutingSnapshot<'a>",
  "pub fn spark_core::router::context::RoutingSnapshot<'a>::catalog(&self) -> &'a spark_core::router::catalog::RouteCatalog",
  "pub fn spark_core::router::context::RoutingSnapshot<'a>::new(catalog: &'a spark_core::router::catalog::RouteCatalog, revision: u64) -> Self",
  "pub fn spark_core::router::context::RoutingSnapshot<'a>::revision(&self) -> u64",
  "impl<'a> core::clone::Clone for spark_core::router::context::RoutingSnapshot<'a>",
  "pub fn spark_core::router::context::RoutingSnapshot<'a>::clone(&self) -> spark_core::router::context::RoutingSnapshot<'a>",
  "impl<'a> core::fmt::Debug for spark_core::router::context::RoutingSnapshot<'a>",
  "pub fn spark_core::router::context::RoutingSnapshot<'a>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<'a> core::marker::Copy for spark_core::router::context::RoutingSnapshot<'a>",
  "impl<'a> core::marker::Freeze for spark_core::router::context::RoutingSnapshot<'a>",
  "impl<'a> core::marker::Send for spark_core::router::context::RoutingSnapshot<'a>",
  "impl<'a> core::marker::Sync for spark_core::router::context::RoutingSnapshot<'a>",
  "impl<'a> core::marker::Unpin for spark_core::router::context::RoutingSnapshot<'a>",
  "impl<'a> core::panic::unwind_safe::RefUnwindSafe for spark_core::router::context::RoutingSnapshot<'a>",
  "impl<'a> core::panic::unwind_safe::UnwindSafe for spark_core::router::context::RoutingSnapshot<'a>",
  "pub struct spark_core::SchemaDescriptor",
  "impl spark_core::SchemaDescriptor",
  "pub fn spark_core::SchemaDescriptor::fingerprint(&self) -> core::option::Option<&[u8]>",
  "pub fn spark_core::SchemaDescriptor::name(&self) -> &str",
  "pub fn spark_core::SchemaDescriptor::version(&self) -> core::option::Option<&str>",
  "pub fn spark_core::SchemaDescriptor::with_fingerprint(self, fingerprint: impl core::convert::Into<alloc::vec::Vec<u8>>) -> Self",
  "pub fn spark_core::SchemaDescriptor::with_name(name: impl core::convert::Into<alloc::borrow::Cow<'static, str>>) -> Self",
  "pub fn spark_core::SchemaDescriptor::with_version(self, version: impl core::convert::Into<alloc::borrow::Cow<'static, str>>) -> Self",
  "impl core::clone::Clone for spark_core::SchemaDescriptor",
  "pub fn spark_core::SchemaDescriptor::clone(&self) -> spark_core::SchemaDescriptor",
  "impl core::cmp::Eq for spark_core::SchemaDescriptor",
  "impl core::cmp::PartialEq for spark_core::SchemaDescriptor",
  "pub fn spark_core::SchemaDescriptor::eq(&self, other: &spark_core::SchemaDescriptor) -> bool",
  "impl core::fmt::Debug for spark_core::SchemaDescriptor",
  "pub fn spark_core::SchemaDescriptor::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::SchemaDescriptor",
  "impl core::marker::Freeze for spark_core::SchemaDescriptor",
  "impl core::marker::Send for spark_core::SchemaDescriptor",
  "impl core::marker::Sync for spark_core::SchemaDescriptor",
  "impl core::marker::Unpin for spark_core::SchemaDescriptor",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::SchemaDescriptor",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::SchemaDescriptor",
  "pub struct spark_core::SecurityContextSnapshot",
  "impl spark_core::contract::SecurityContextSnapshot",
  "pub fn spark_core::contract::SecurityContextSnapshot::allow_insecure(self) -> Self",
  "pub fn spark_core::contract::SecurityContextSnapshot::ensure_secure(&self) -> core::result::Result<(), spark_core::error::SparkError>",
  "pub fn spark_core::contract::SecurityContextSnapshot::identity(&self) -> core::option::Option<&alloc::sync::Arc<spark_core::security::identity::IdentityDescriptor>>",
  "pub fn spark_core::contract::SecurityContextSnapshot::is_insecure_allowed(&self) -> bool",
  "pub fn spark_core::contract::SecurityContextSnapshot::peer_identity(&self) -> core::option::Option<&alloc::sync::Arc<spark_core::security::identity::IdentityDescriptor>>",
  "pub fn spark_core::contract::SecurityContextSnapshot::policy(&self) -> core::option::Option<&alloc::sync::Arc<spark_core::security::policy::SecurityPolicy>>",
  "pub fn spark_core::contract::SecurityContextSnapshot::with_identity(self, identity: spark_core::security::identity::IdentityDescriptor) -> Self",
  "pub fn spark_core::contract::SecurityContextSnapshot::with_peer_identity(self, identity: spark_core::security::identity::IdentityDescriptor) -> Self",
  "pub fn spark_core::contract::SecurityContextSnapshot::with_policy(self, policy: spark_core::security::policy::SecurityPolicy) -> Self",
  "impl core::clone::Clone for spark_core::contract::SecurityContextSnapshot",
  "pub fn spark_core::contract::SecurityContextSnapshot::clone(&self) -> spark_core::contract::SecurityContextSnapshot",
  "impl core::default::Default for spark_core::contract::SecurityContextSnapshot",
  "pub fn spark_core::contract::SecurityContextSnapshot::default() -> spark_core::contract::SecurityContextSnapshot",
  "impl core::fmt::Debug for spark_core::contract::SecurityContextSnapshot",
  "pub fn spark_core::contract::SecurityContextSnapshot::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::contract::SecurityContextSnapshot",
  "impl core::marker::Send for spark_core::contract::SecurityContextSnapshot",
  "impl core::marker::Sync for spark_core::contract::SecurityContextSnapshot",
  "impl core::marker::Unpin for spark_core::contract::SecurityContextSnapshot",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::contract::SecurityContextSnapshot",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::contract::SecurityContextSnapshot",
  "pub struct spark_core::SecurityNegotiationPlan",
  "impl spark_core::security::negotiation::SecurityNegotiationPlan",
  "pub fn spark_core::security::negotiation::SecurityNegotiationPlan::allow_plaintext(self) -> Self",
  "pub fn spark_core::security::negotiation::SecurityNegotiationPlan::fall_back_to_plaintext(&self) -> bool",
  "pub fn spark_core::security::negotiation::SecurityNegotiationPlan::new(offers: alloc::vec::Vec<spark_core::security::negotiation::SecurityProtocolOffer>) -> Self",
  "pub fn spark_core::security::negotiation::SecurityNegotiationPlan::offers(&self) -> &alloc::vec::Vec<spark_core::security::negotiation::SecurityProtocolOffer>",
  "impl core::clone::Clone for spark_core::security::negotiation::SecurityNegotiationPlan",
  "pub fn spark_core::security::negotiation::SecurityNegotiationPlan::clone(&self) -> spark_core::security::negotiation::SecurityNegotiationPlan",
  "impl core::cmp::Eq for spark_core::security::negotiation::SecurityNegotiationPlan",
  "impl core::cmp::PartialEq for spark_core::security::negotiation::SecurityNegotiationPlan",
  "pub fn spark_core::security::negotiation::SecurityNegotiationPlan::eq(&self, other: &spark_core::security::negotiation::SecurityNegotiationPlan) -> bool",
  "impl core::fmt::Debug for spark_core::security::negotiation::SecurityNegotiationPlan",
  "pub fn spark_core::security::negotiation::SecurityNegotiationPlan::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::negotiation::SecurityNegotiationPlan",
  "impl core::marker::Freeze for spark_core::security::negotiation::SecurityNegotiationPlan",
  "impl core::marker::Send for spark_core::security::negotiation::SecurityNegotiationPlan",
  "impl core::marker::Sync for spark_core::security::negotiation::SecurityNegotiationPlan",
  "impl core::marker::Unpin for spark_core::security::negotiation::SecurityNegotiationPlan",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::negotiation::SecurityNegotiationPlan",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::negotiation::SecurityNegotiationPlan",
  "pub struct spark_core::SecurityPolicy",
  "impl spark_core::security::policy::SecurityPolicy",
  "pub fn spark_core::security::policy::SecurityPolicy::description(&self) -> core::option::Option<&alloc::string::String>",
  "pub fn spark_core::security::policy::SecurityPolicy::id(&self) -> &str",
  "pub fn spark_core::security::policy::SecurityPolicy::new(id: alloc::string::String, rules: alloc::vec::Vec<spark_core::security::policy::PolicyRule>) -> Self",
  "pub fn spark_core::security::policy::SecurityPolicy::rules(&self) -> &alloc::vec::Vec<spark_core::security::policy::PolicyRule>",
  "pub fn spark_core::security::policy::SecurityPolicy::version(&self) -> core::option::Option<&alloc::string::String>",
  "pub fn spark_core::security::policy::SecurityPolicy::with_description(self, description: alloc::string::String) -> Self",
  "pub fn spark_core::security::policy::SecurityPolicy::with_version(self, version: alloc::string::String) -> Self",
  "impl core::clone::Clone for spark_core::security::policy::SecurityPolicy",
  "pub fn spark_core::security::policy::SecurityPolicy::clone(&self) -> spark_core::security::policy::SecurityPolicy",
  "impl core::cmp::Eq for spark_core::security::policy::SecurityPolicy",
  "impl core::cmp::PartialEq for spark_core::security::policy::SecurityPolicy",
  "pub fn spark_core::security::policy::SecurityPolicy::eq(&self, other: &spark_core::security::policy::SecurityPolicy) -> bool",
  "impl core::fmt::Debug for spark_core::security::policy::SecurityPolicy",
  "pub fn spark_core::security::policy::SecurityPolicy::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::policy::SecurityPolicy",
  "impl core::marker::Freeze for spark_core::security::policy::SecurityPolicy",
  "impl core::marker::Send for spark_core::security::policy::SecurityPolicy",
  "impl core::marker::Sync for spark_core::security::policy::SecurityPolicy",
  "impl core::marker::Unpin for spark_core::security::policy::SecurityPolicy",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::policy::SecurityPolicy",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::policy::SecurityPolicy",
  "pub struct spark_core::SecurityProtocolOffer",
  "impl spark_core::security::negotiation::SecurityProtocolOffer",
  "pub fn spark_core::security::negotiation::SecurityProtocolOffer::credential(&self) -> core::option::Option<&spark_core::security::credential::Credential>",
  "pub fn spark_core::security::negotiation::SecurityProtocolOffer::mandatory(&self) -> bool",
  "pub fn spark_core::security::negotiation::SecurityProtocolOffer::new(protocol: spark_core::security::negotiation::SecurityProtocol) -> Self",
  "pub fn spark_core::security::negotiation::SecurityProtocolOffer::protocol(&self) -> &spark_core::security::negotiation::SecurityProtocol",
  "pub fn spark_core::security::negotiation::SecurityProtocolOffer::require(self) -> Self",
  "pub fn spark_core::security::negotiation::SecurityProtocolOffer::with_credential(self, credential: spark_core::security::credential::Credential) -> Self",
  "impl core::clone::Clone for spark_core::security::negotiation::SecurityProtocolOffer",
  "pub fn spark_core::security::negotiation::SecurityProtocolOffer::clone(&self) -> spark_core::security::negotiation::SecurityProtocolOffer",
  "impl core::cmp::Eq for spark_core::security::negotiation::SecurityProtocolOffer",
  "impl core::cmp::PartialEq for spark_core::security::negotiation::SecurityProtocolOffer",
  "pub fn spark_core::security::negotiation::SecurityProtocolOffer::eq(&self, other: &spark_core::security::negotiation::SecurityProtocolOffer) -> bool",
  "impl core::fmt::Debug for spark_core::security::negotiation::SecurityProtocolOffer",
  "pub fn spark_core::security::negotiation::SecurityProtocolOffer::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::security::negotiation::SecurityProtocolOffer",
  "impl core::marker::Freeze for spark_core::security::negotiation::SecurityProtocolOffer",
  "impl core::marker::Send for spark_core::security::negotiation::SecurityProtocolOffer",
  "impl core::marker::Sync for spark_core::security::negotiation::SecurityProtocolOffer",
  "impl core::marker::Unpin for spark_core::security::negotiation::SecurityProtocolOffer",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::security::negotiation::SecurityProtocolOffer",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::security::negotiation::SecurityProtocolOffer",
  "pub struct spark_core::SendTaskSubmission(pub spark_core::ManagedSendTask)",
  "impl core::convert::From<spark_core::ManagedSendTask> for spark_core::SendTaskSubmission",
  "pub fn spark_core::SendTaskSubmission::from(value: spark_core::ManagedSendTask) -> Self",
  "impl core::marker::Freeze for spark_core::SendTaskSubmission",
  "impl core::marker::Send for spark_core::SendTaskSubmission",
  "impl !core::marker::Sync for spark_core::SendTaskSubmission",
  "impl core::marker::Unpin for spark_core::SendTaskSubmission",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::SendTaskSubmission",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::SendTaskSubmission",
  "pub struct spark_core::ServerTransportObject<T> where T: spark_core::transport::traits::generic::ServerTransport",
  "impl<T> spark_core::transport::traits::object::ServerTransportObject<T> where T: spark_core::transport::traits::generic::ServerTransport",
  "pub fn spark_core::transport::traits::object::ServerTransportObject<T>::into_inner(self) -> alloc::sync::Arc<T>",
  "pub fn spark_core::transport::traits::object::ServerTransportObject<T>::new(inner: T) -> Self",
  "impl<T> spark_core::transport::traits::object::DynServerTransport for spark_core::transport::traits::object::ServerTransportObject<T> where T: spark_core::transport::traits::generic::ServerTransport",
  "pub fn spark_core::transport::traits::object::ServerTransportObject<T>::local_addr_dyn(&self, ctx: &spark_core::context::ExecutionContext<'_>) -> spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::transport::traits::object::ServerTransportObject<T>::shutdown_dyn<'life0, 'life1, 'life2, 'async_trait>(&'life0 self, ctx: &'life1 spark_core::context::ExecutionContext<'life2>, plan: spark_core::transport::server::ListenerShutdown) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<(), spark_core::error::CoreError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait, 'life1: 'async_trait, 'life2: 'async_trait",
  "impl<T> core::marker::Freeze for spark_core::transport::traits::object::ServerTransportObject<T>",
  "impl<T> core::marker::Send for spark_core::transport::traits::object::ServerTransportObject<T>",
  "impl<T> core::marker::Sync for spark_core::transport::traits::object::ServerTransportObject<T>",
  "impl<T> core::marker::Unpin for spark_core::transport::traits::object::ServerTransportObject<T>",
  "impl<T> core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::traits::object::ServerTransportObject<T> where T: core::panic::unwind_safe::RefUnwindSafe",
  "impl<T> core::panic::unwind_safe::UnwindSafe for spark_core::transport::traits::object::ServerTransportObject<T> where T: core::panic::unwind_safe::RefUnwindSafe",
  "pub struct spark_core::ServiceInstance",
  "pub spark_core::ServiceInstance::endpoint: spark_core::transport::endpoint::Endpoint",
  "pub spark_core::ServiceInstance::hints: alloc::vec::Vec<alloc::string::String>",
  "pub spark_core::ServiceInstance::metadata: alloc::collections::btree::map::BTreeMap<alloc::string::String, alloc::string::String>",
  "pub spark_core::ServiceInstance::revision: spark_core::cluster::topology::ClusterRevision",
  "pub spark_core::ServiceInstance::service: spark_core::cluster::discovery::ServiceName",
  "impl core::clone::Clone for spark_core::cluster::discovery::ServiceInstance",
  "pub fn spark_core::cluster::discovery::ServiceInstance::clone(&self) -> spark_core::cluster::discovery::ServiceInstance",
  "impl core::cmp::Eq for spark_core::cluster::discovery::ServiceInstance",
  "impl core::cmp::PartialEq for spark_core::cluster::discovery::ServiceInstance",
  "pub fn spark_core::cluster::discovery::ServiceInstance::eq(&self, other: &spark_core::cluster::discovery::ServiceInstance) -> bool",
  "impl core::fmt::Debug for spark_core::cluster::discovery::ServiceInstance",
  "pub fn spark_core::cluster::discovery::ServiceInstance::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::discovery::ServiceInstance",
  "impl core::marker::Freeze for spark_core::cluster::discovery::ServiceInstance",
  "impl core::marker::Send for spark_core::cluster::discovery::ServiceInstance",
  "impl core::marker::Sync for spark_core::cluster::discovery::ServiceInstance",
  "impl core::marker::Unpin for spark_core::cluster::discovery::ServiceInstance",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::discovery::ServiceInstance",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::discovery::ServiceInstance",
  "pub struct spark_core::ServiceObject<S, Request, Response, Decode, Encode> where S: spark_core::service::traits::generic::Service<Request, Response = Response, Error = spark_core::error::SparkError>, Decode: core::ops::function::Fn(spark_core::buffer::message::PipelineMessage) -> core::result::Result<Request, spark_core::error::SparkError> + core::marker::Send + core::marker::Sync + 'static, Encode: core::ops::function::Fn(Response) -> spark_core::buffer::message::PipelineMessage + core::marker::Send + core::marker::Sync + 'static",
  "impl<S, Request, Response, Decode, Encode> spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode> where S: spark_core::service::traits::generic::Service<Request, Response = Response, Error = spark_core::error::SparkError>, Decode: core::ops::function::Fn(spark_core::buffer::message::PipelineMessage) -> core::result::Result<Request, spark_core::error::SparkError> + core::marker::Send + core::marker::Sync + 'static, Encode: core::ops::function::Fn(Response) -> spark_core::buffer::message::PipelineMessage + core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::into_inner(self) -> S",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::new(inner: S, decode: Decode, encode: Encode) -> Self",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::with_close_hook(self, hook: impl core::ops::function::Fn(&mut S, spark_core::contract::CloseReason) + core::marker::Send + core::marker::Sync + 'static) -> Self",
  "impl<S, Request, Response, Decode, Encode> spark_core::service::traits::object::DynService for spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode> where S: spark_core::service::traits::generic::Service<Request, Response = Response, Error = spark_core::error::SparkError>, Decode: core::ops::function::Fn(spark_core::buffer::message::PipelineMessage) -> core::result::Result<Request, spark_core::error::SparkError> + core::marker::Send + core::marker::Sync + 'static, Encode: core::ops::function::Fn(Response) -> spark_core::buffer::message::PipelineMessage + core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::call_dyn<'life0, 'async_trait>(&'life0 mut self, ctx: spark_core::contract::CallContext, req: spark_core::buffer::message::PipelineMessage) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<spark_core::buffer::message::PipelineMessage, spark_core::error::SparkError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::closed<'life0, 'async_trait>(&'life0 mut self) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<(), spark_core::error::SparkError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::graceful_close(&mut self, reason: spark_core::contract::CloseReason)",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::poll_ready_dyn(&mut self, ctx: &spark_core::context::ExecutionContext<'_>, cx: &mut core::task::wake::Context<'_>) -> spark_core::status::ready::PollReady<spark_core::error::SparkError>",
  "impl<S, Request, Response, Decode, Encode> core::marker::Freeze for spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode> where S: core::marker::Freeze",
  "impl<S, Request, Response, Decode, Encode> core::marker::Send for spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>",
  "impl<S, Request, Response, Decode, Encode> core::marker::Sync for spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>",
  "impl<S, Request, Response, Decode, Encode> core::marker::Unpin for spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode> where S: core::marker::Unpin",
  "impl<S, Request, Response, Decode, Encode> !core::panic::unwind_safe::RefUnwindSafe for spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>",
  "impl<S, Request, Response, Decode, Encode> !core::panic::unwind_safe::UnwindSafe for spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>",
  "pub struct spark_core::SloPolicyConfigError",
  "impl spark_core::SloPolicyConfigError",
  "pub fn spark_core::SloPolicyConfigError::message(&self) -> &str",
  "pub fn spark_core::SloPolicyConfigError::path(&self) -> &str",
  "impl core::clone::Clone for spark_core::SloPolicyConfigError",
  "pub fn spark_core::SloPolicyConfigError::clone(&self) -> spark_core::SloPolicyConfigError",
  "impl core::cmp::Eq for spark_core::SloPolicyConfigError",
  "impl core::cmp::PartialEq for spark_core::SloPolicyConfigError",
  "pub fn spark_core::SloPolicyConfigError::eq(&self, other: &spark_core::SloPolicyConfigError) -> bool",
  "impl core::fmt::Debug for spark_core::SloPolicyConfigError",
  "pub fn spark_core::SloPolicyConfigError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::SloPolicyConfigError",
  "pub fn spark_core::SloPolicyConfigError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::SloPolicyConfigError",
  "impl spark_core::Error for spark_core::SloPolicyConfigError",
  "pub fn spark_core::SloPolicyConfigError::source(&self) -> core::option::Option<&(dyn spark_core::Error + 'static)>",
  "impl core::marker::Freeze for spark_core::SloPolicyConfigError",
  "impl core::marker::Send for spark_core::SloPolicyConfigError",
  "impl core::marker::Sync for spark_core::SloPolicyConfigError",
  "impl core::marker::Unpin for spark_core::SloPolicyConfigError",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::SloPolicyConfigError",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::SloPolicyConfigError",
  "pub struct spark_core::SloPolicyDirective",
  "impl spark_core::SloPolicyDirective",
  "pub fn spark_core::SloPolicyDirective::action(&self) -> &spark_core::SloPolicyAction",
  "pub fn spark_core::SloPolicyDirective::is_engaged(&self) -> bool",
  "pub fn spark_core::SloPolicyDirective::rule_id(&self) -> &alloc::sync::Arc<str>",
  "pub fn spark_core::SloPolicyDirective::summary(&self) -> core::option::Option<&alloc::sync::Arc<str>>",
  "impl core::clone::Clone for spark_core::SloPolicyDirective",
  "pub fn spark_core::SloPolicyDirective::clone(&self) -> spark_core::SloPolicyDirective",
  "impl core::cmp::Eq for spark_core::SloPolicyDirective",
  "impl core::cmp::PartialEq for spark_core::SloPolicyDirective",
  "pub fn spark_core::SloPolicyDirective::eq(&self, other: &spark_core::SloPolicyDirective) -> bool",
  "impl core::fmt::Debug for spark_core::SloPolicyDirective",
  "pub fn spark_core::SloPolicyDirective::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::SloPolicyDirective",
  "impl core::marker::Freeze for spark_core::SloPolicyDirective",
  "impl core::marker::Send for spark_core::SloPolicyDirective",
  "impl core::marker::Sync for spark_core::SloPolicyDirective",
  "impl core::marker::Unpin for spark_core::SloPolicyDirective",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::SloPolicyDirective",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::SloPolicyDirective",
  "pub struct spark_core::SloPolicyManager",
  "impl spark_core::SloPolicyManager",
  "pub fn spark_core::SloPolicyManager::apply_config(&self, value: &spark_core::ConfigValue) -> core::result::Result<spark_core::SloPolicyReloadReport, spark_core::SloPolicyConfigError>",
  "pub fn spark_core::SloPolicyManager::evaluate_snapshot(&self, snapshot: &spark_core::contract::BudgetSnapshot) -> alloc::vec::Vec<spark_core::SloPolicyDirective>",
  "pub fn spark_core::SloPolicyManager::new() -> Self",
  "pub fn spark_core::SloPolicyManager::update_rules(&self, rules: alloc::vec::Vec<spark_core::SloPolicyRule>) -> spark_core::SloPolicyReloadReport",
  "pub fn spark_core::SloPolicyManager::with_rules(rules: alloc::vec::Vec<spark_core::SloPolicyRule>) -> Self",
  "impl core::default::Default for spark_core::SloPolicyManager",
  "pub fn spark_core::SloPolicyManager::default() -> Self",
  "impl !core::marker::Freeze for spark_core::SloPolicyManager",
  "impl core::marker::Send for spark_core::SloPolicyManager",
  "impl core::marker::Sync for spark_core::SloPolicyManager",
  "impl core::marker::Unpin for spark_core::SloPolicyManager",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::SloPolicyManager",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::SloPolicyManager",
  "pub struct spark_core::SloPolicyReloadReport",
  "pub spark_core::SloPolicyReloadReport::added: alloc::vec::Vec<alloc::sync::Arc<str>>",
  "pub spark_core::SloPolicyReloadReport::removed: alloc::vec::Vec<alloc::sync::Arc<str>>",
  "pub spark_core::SloPolicyReloadReport::retained: alloc::vec::Vec<alloc::sync::Arc<str>>",
  "impl core::clone::Clone for spark_core::SloPolicyReloadReport",
  "pub fn spark_core::SloPolicyReloadReport::clone(&self) -> spark_core::SloPolicyReloadReport",
  "impl core::cmp::Eq for spark_core::SloPolicyReloadReport",
  "impl core::cmp::PartialEq for spark_core::SloPolicyReloadReport",
  "pub fn spark_core::SloPolicyReloadReport::eq(&self, other: &spark_core::SloPolicyReloadReport) -> bool",
  "impl core::fmt::Debug for spark_core::SloPolicyReloadReport",
  "pub fn spark_core::SloPolicyReloadReport::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::SloPolicyReloadReport",
  "impl core::marker::Freeze for spark_core::SloPolicyReloadReport",
  "impl core::marker::Send for spark_core::SloPolicyReloadReport",
  "impl core::marker::Sync for spark_core::SloPolicyReloadReport",
  "impl core::marker::Unpin for spark_core::SloPolicyReloadReport",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::SloPolicyReloadReport",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::SloPolicyReloadReport",
  "pub struct spark_core::SloPolicyRule",
  "impl spark_core::SloPolicyRule",
  "pub fn spark_core::SloPolicyRule::action(&self) -> &spark_core::SloPolicyAction",
  "pub fn spark_core::SloPolicyRule::budget_kind(&self) -> &spark_core::contract::BudgetKind",
  "pub fn spark_core::SloPolicyRule::new(rule_id: alloc::sync::Arc<str>, budget_kind: spark_core::contract::BudgetKind, trigger: spark_core::SloPolicyTrigger, action: spark_core::SloPolicyAction, summary: core::option::Option<alloc::sync::Arc<str>>) -> Self",
  "pub fn spark_core::SloPolicyRule::rule_id(&self) -> &alloc::sync::Arc<str>",
  "pub fn spark_core::SloPolicyRule::summary(&self) -> core::option::Option<&alloc::sync::Arc<str>>",
  "pub fn spark_core::SloPolicyRule::trigger(&self) -> &spark_core::SloPolicyTrigger",
  "impl core::clone::Clone for spark_core::SloPolicyRule",
  "pub fn spark_core::SloPolicyRule::clone(&self) -> spark_core::SloPolicyRule",
  "impl core::cmp::Eq for spark_core::SloPolicyRule",
  "impl core::cmp::PartialEq for spark_core::SloPolicyRule",
  "pub fn spark_core::SloPolicyRule::eq(&self, other: &spark_core::SloPolicyRule) -> bool",
  "impl core::fmt::Debug for spark_core::SloPolicyRule",
  "pub fn spark_core::SloPolicyRule::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::SloPolicyRule",
  "impl core::marker::Freeze for spark_core::SloPolicyRule",
  "impl core::marker::Send for spark_core::SloPolicyRule",
  "impl core::marker::Sync for spark_core::SloPolicyRule",
  "impl core::marker::Unpin for spark_core::SloPolicyRule",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::SloPolicyRule",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::SloPolicyRule",
  "pub struct spark_core::SloPolicyTrigger",
  "impl spark_core::SloPolicyTrigger",
  "pub fn spark_core::SloPolicyTrigger::evaluate(&self, remaining_permille: u16, currently_active: bool) -> core::option::Option<bool>",
  "pub fn spark_core::SloPolicyTrigger::new(activate_below_or_equal: u16, deactivate_above_or_equal: u16) -> Self",
  "impl core::clone::Clone for spark_core::SloPolicyTrigger",
  "pub fn spark_core::SloPolicyTrigger::clone(&self) -> spark_core::SloPolicyTrigger",
  "impl core::cmp::Eq for spark_core::SloPolicyTrigger",
  "impl core::cmp::PartialEq for spark_core::SloPolicyTrigger",
  "pub fn spark_core::SloPolicyTrigger::eq(&self, other: &spark_core::SloPolicyTrigger) -> bool",
  "impl core::fmt::Debug for spark_core::SloPolicyTrigger",
  "pub fn spark_core::SloPolicyTrigger::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::SloPolicyTrigger",
  "impl core::marker::Freeze for spark_core::SloPolicyTrigger",
  "impl core::marker::Send for spark_core::SloPolicyTrigger",
  "impl core::marker::Sync for spark_core::SloPolicyTrigger",
  "impl core::marker::Unpin for spark_core::SloPolicyTrigger",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::SloPolicyTrigger",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::SloPolicyTrigger",
  "pub struct spark_core::SnapshotEntry",
  "pub spark_core::SnapshotEntry::key: alloc::string::String",
  "pub spark_core::SnapshotEntry::metadata: spark_core::SnapshotMetadata",
  "pub spark_core::SnapshotEntry::value: spark_core::SnapshotValue",
  "impl spark_core::SnapshotEntry",
  "pub fn spark_core::SnapshotEntry::from_key_value(key: &spark_core::ConfigKey, value: &spark_core::ConfigValue) -> Self",
  "impl core::clone::Clone for spark_core::SnapshotEntry",
  "pub fn spark_core::SnapshotEntry::clone(&self) -> spark_core::SnapshotEntry",
  "impl core::cmp::Eq for spark_core::SnapshotEntry",
  "impl core::cmp::PartialEq for spark_core::SnapshotEntry",
  "pub fn spark_core::SnapshotEntry::eq(&self, other: &spark_core::SnapshotEntry) -> bool",
  "impl core::fmt::Debug for spark_core::SnapshotEntry",
  "pub fn spark_core::SnapshotEntry::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::SnapshotEntry",
  "impl core::marker::Freeze for spark_core::SnapshotEntry",
  "impl core::marker::Send for spark_core::SnapshotEntry",
  "impl core::marker::Sync for spark_core::SnapshotEntry",
  "impl core::marker::Unpin for spark_core::SnapshotEntry",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::SnapshotEntry",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::SnapshotEntry",
  "pub struct spark_core::SnapshotLayer",
  "pub spark_core::SnapshotLayer::name: alloc::string::String",
  "pub spark_core::SnapshotLayer::priority: u16",
  "pub spark_core::SnapshotLayer::version: core::option::Option<alloc::string::String>",
  "impl core::clone::Clone for spark_core::SnapshotLayer",
  "pub fn spark_core::SnapshotLayer::clone(&self) -> spark_core::SnapshotLayer",
  "impl core::cmp::Eq for spark_core::SnapshotLayer",
  "impl core::cmp::PartialEq for spark_core::SnapshotLayer",
  "pub fn spark_core::SnapshotLayer::eq(&self, other: &spark_core::SnapshotLayer) -> bool",
  "impl core::fmt::Debug for spark_core::SnapshotLayer",
  "pub fn spark_core::SnapshotLayer::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::SnapshotLayer",
  "impl core::marker::Freeze for spark_core::SnapshotLayer",
  "impl core::marker::Send for spark_core::SnapshotLayer",
  "impl core::marker::Sync for spark_core::SnapshotLayer",
  "impl core::marker::Unpin for spark_core::SnapshotLayer",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::SnapshotLayer",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::SnapshotLayer",
  "pub struct spark_core::SnapshotMetadata",
  "pub spark_core::SnapshotMetadata::encrypted: bool",
  "pub spark_core::SnapshotMetadata::experimental: bool",
  "pub spark_core::SnapshotMetadata::hot_reloadable: bool",
  "pub spark_core::SnapshotMetadata::tags: alloc::vec::Vec<(alloc::string::String, alloc::string::String)>",
  "impl core::clone::Clone for spark_core::SnapshotMetadata",
  "pub fn spark_core::SnapshotMetadata::clone(&self) -> spark_core::SnapshotMetadata",
  "impl core::cmp::Eq for spark_core::SnapshotMetadata",
  "impl core::cmp::PartialEq for spark_core::SnapshotMetadata",
  "pub fn spark_core::SnapshotMetadata::eq(&self, other: &spark_core::SnapshotMetadata) -> bool",
  "impl core::fmt::Debug for spark_core::SnapshotMetadata",
  "pub fn spark_core::SnapshotMetadata::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::SnapshotMetadata",
  "impl core::marker::Freeze for spark_core::SnapshotMetadata",
  "impl core::marker::Send for spark_core::SnapshotMetadata",
  "impl core::marker::Sync for spark_core::SnapshotMetadata",
  "impl core::marker::Unpin for spark_core::SnapshotMetadata",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::SnapshotMetadata",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::SnapshotMetadata",
  "pub struct spark_core::SnapshotProfile",
  "pub spark_core::SnapshotProfile::extends: alloc::vec::Vec<alloc::string::String>",
  "pub spark_core::SnapshotProfile::identifier: alloc::string::String",
  "pub spark_core::SnapshotProfile::layering: &'static str",
  "pub spark_core::SnapshotProfile::summary: alloc::string::String",
  "impl core::clone::Clone for spark_core::SnapshotProfile",
  "pub fn spark_core::SnapshotProfile::clone(&self) -> spark_core::SnapshotProfile",
  "impl core::cmp::Eq for spark_core::SnapshotProfile",
  "impl core::cmp::PartialEq for spark_core::SnapshotProfile",
  "pub fn spark_core::SnapshotProfile::eq(&self, other: &spark_core::SnapshotProfile) -> bool",
  "impl core::fmt::Debug for spark_core::SnapshotProfile",
  "pub fn spark_core::SnapshotProfile::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::SnapshotProfile",
  "impl core::marker::Freeze for spark_core::SnapshotProfile",
  "impl core::marker::Send for spark_core::SnapshotProfile",
  "impl core::marker::Sync for spark_core::SnapshotProfile",
  "impl core::marker::Unpin for spark_core::SnapshotProfile",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::SnapshotProfile",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::SnapshotProfile",
  "pub struct spark_core::SourceMetadata",
  "pub spark_core::SourceMetadata::name: alloc::borrow::Cow<'static, str>",
  "pub spark_core::SourceMetadata::priority: u16",
  "pub spark_core::SourceMetadata::version: core::option::Option<alloc::borrow::Cow<'static, str>>",
  "impl spark_core::SourceMetadata",
  "pub fn spark_core::SourceMetadata::new<N>(name: N, priority: u16, version: core::option::Option<alloc::borrow::Cow<'static, str>>) -> Self where N: core::convert::Into<alloc::borrow::Cow<'static, str>>",
  "impl core::clone::Clone for spark_core::SourceMetadata",
  "pub fn spark_core::SourceMetadata::clone(&self) -> spark_core::SourceMetadata",
  "impl core::cmp::Eq for spark_core::SourceMetadata",
  "impl core::cmp::PartialEq for spark_core::SourceMetadata",
  "pub fn spark_core::SourceMetadata::eq(&self, other: &spark_core::SourceMetadata) -> bool",
  "impl core::fmt::Debug for spark_core::SourceMetadata",
  "pub fn spark_core::SourceMetadata::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::SourceMetadata",
  "impl core::marker::Freeze for spark_core::SourceMetadata",
  "impl core::marker::Send for spark_core::SourceMetadata",
  "impl core::marker::Sync for spark_core::SourceMetadata",
  "impl core::marker::Unpin for spark_core::SourceMetadata",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::SourceMetadata",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::SourceMetadata",
  "pub struct spark_core::SparkError",
  "impl spark_core::error::SparkError",
  "pub fn spark_core::error::SparkError::category(&self) -> spark_core::error::ErrorCategory",
  "pub fn spark_core::error::SparkError::cause(&self) -> core::option::Option<&spark_core::error::ErrorCause>",
  "pub fn spark_core::error::SparkError::code(&self) -> &'static str",
  "pub fn spark_core::error::SparkError::core(&self) -> &spark_core::error::CoreError",
  "pub fn spark_core::error::SparkError::hint(&self) -> core::option::Option<alloc::borrow::Cow<'static, str>>",
  "pub fn spark_core::error::SparkError::human(&self) -> alloc::borrow::Cow<'static, str>",
  "pub fn spark_core::error::SparkError::message(&self) -> &str",
  "pub fn spark_core::error::SparkError::new(code: &'static str, message: impl core::convert::Into<alloc::string::String>) -> Self",
  "pub fn spark_core::error::SparkError::node_id(&self) -> core::option::Option<&spark_core::cluster::membership::NodeId>",
  "pub fn spark_core::error::SparkError::peer_addr(&self) -> core::option::Option<&spark_core::transport::address::TransportSocketAddr>",
  "pub fn spark_core::error::SparkError::set_category(&mut self, category: spark_core::error::ErrorCategory)",
  "pub fn spark_core::error::SparkError::trace_context(&self) -> core::option::Option<&spark_core::observability::trace::TraceContext>",
  "pub fn spark_core::error::SparkError::with_category(self, category: spark_core::error::ErrorCategory) -> Self",
  "pub fn spark_core::error::SparkError::with_cause(self, cause: impl spark_core::Error + core::marker::Send + core::marker::Sync + 'static) -> Self",
  "pub fn spark_core::error::SparkError::with_node_id(self, node: spark_core::cluster::membership::NodeId) -> Self",
  "pub fn spark_core::error::SparkError::with_peer_addr(self, peer: spark_core::transport::address::TransportSocketAddr) -> Self",
  "pub fn spark_core::error::SparkError::with_trace(self, trace_context: spark_core::observability::trace::TraceContext) -> Self",
  "impl core::convert::From<spark_core::transport::handshake::HandshakeError> for spark_core::error::SparkError",
  "pub fn spark_core::error::SparkError::from(error: spark_core::transport::handshake::HandshakeError) -> Self",
  "impl core::fmt::Debug for spark_core::error::SparkError",
  "pub fn spark_core::error::SparkError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::error::SparkError",
  "pub fn spark_core::error::SparkError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl spark_core::Error for spark_core::error::SparkError",
  "pub fn spark_core::error::SparkError::source(&self) -> core::option::Option<&(dyn spark_core::Error + 'static)>",
  "impl core::marker::Freeze for spark_core::error::SparkError",
  "impl core::marker::Send for spark_core::error::SparkError",
  "impl core::marker::Sync for spark_core::error::SparkError",
  "impl core::marker::Unpin for spark_core::error::SparkError",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::error::SparkError",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::error::SparkError",
  "pub struct spark_core::SubscriptionBudget",
  "pub spark_core::SubscriptionBudget::limit: u32",
  "pub spark_core::SubscriptionBudget::remaining: u32",
  "impl spark_core::status::ready::SubscriptionBudget",
  "pub fn spark_core::status::ready::SubscriptionBudget::evaluate(limit: u32, remaining: u32) -> spark_core::status::ready::ReadyState",
  "impl core::clone::Clone for spark_core::status::ready::SubscriptionBudget",
  "pub fn spark_core::status::ready::SubscriptionBudget::clone(&self) -> spark_core::status::ready::SubscriptionBudget",
  "impl core::cmp::Eq for spark_core::status::ready::SubscriptionBudget",
  "impl core::cmp::PartialEq for spark_core::status::ready::SubscriptionBudget",
  "pub fn spark_core::status::ready::SubscriptionBudget::eq(&self, other: &spark_core::status::ready::SubscriptionBudget) -> bool",
  "impl core::convert::From<&spark_core::contract::BudgetSnapshot> for spark_core::status::ready::SubscriptionBudget",
  "pub fn spark_core::status::ready::SubscriptionBudget::from(snapshot: &spark_core::contract::BudgetSnapshot) -> Self",
  "impl core::fmt::Debug for spark_core::status::ready::SubscriptionBudget",
  "pub fn spark_core::status::ready::SubscriptionBudget::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::status::ready::SubscriptionBudget",
  "impl core::marker::StructuralPartialEq for spark_core::status::ready::SubscriptionBudget",
  "impl core::marker::Freeze for spark_core::status::ready::SubscriptionBudget",
  "impl core::marker::Send for spark_core::status::ready::SubscriptionBudget",
  "impl core::marker::Sync for spark_core::status::ready::SubscriptionBudget",
  "impl core::marker::Unpin for spark_core::status::ready::SubscriptionBudget",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::status::ready::SubscriptionBudget",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::status::ready::SubscriptionBudget",
  "pub struct spark_core::SubscriptionFlowControl",
  "pub spark_core::SubscriptionFlowControl::mode: spark_core::cluster::flow_control::FlowControlMode",
  "pub spark_core::SubscriptionFlowControl::observe_queue: bool",
  "impl spark_core::cluster::flow_control::SubscriptionFlowControl",
  "pub const fn spark_core::cluster::flow_control::SubscriptionFlowControl::bounded(capacity: core::num::nonzero::NonZeroUsize, overflow: spark_core::cluster::flow_control::OverflowPolicy) -> Self",
  "pub const fn spark_core::cluster::flow_control::SubscriptionFlowControl::unbounded() -> Self",
  "pub const fn spark_core::cluster::flow_control::SubscriptionFlowControl::with_queue_observation(self, enable: bool) -> Self",
  "impl core::clone::Clone for spark_core::cluster::flow_control::SubscriptionFlowControl",
  "pub fn spark_core::cluster::flow_control::SubscriptionFlowControl::clone(&self) -> spark_core::cluster::flow_control::SubscriptionFlowControl",
  "impl core::cmp::Eq for spark_core::cluster::flow_control::SubscriptionFlowControl",
  "impl core::cmp::PartialEq for spark_core::cluster::flow_control::SubscriptionFlowControl",
  "pub fn spark_core::cluster::flow_control::SubscriptionFlowControl::eq(&self, other: &spark_core::cluster::flow_control::SubscriptionFlowControl) -> bool",
  "impl core::default::Default for spark_core::cluster::flow_control::SubscriptionFlowControl",
  "pub fn spark_core::cluster::flow_control::SubscriptionFlowControl::default() -> Self",
  "impl core::fmt::Debug for spark_core::cluster::flow_control::SubscriptionFlowControl",
  "pub fn spark_core::cluster::flow_control::SubscriptionFlowControl::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::cluster::flow_control::SubscriptionFlowControl",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::flow_control::SubscriptionFlowControl",
  "impl core::marker::Freeze for spark_core::cluster::flow_control::SubscriptionFlowControl",
  "impl core::marker::Send for spark_core::cluster::flow_control::SubscriptionFlowControl",
  "impl core::marker::Sync for spark_core::cluster::flow_control::SubscriptionFlowControl",
  "impl core::marker::Unpin for spark_core::cluster::flow_control::SubscriptionFlowControl",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::flow_control::SubscriptionFlowControl",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::flow_control::SubscriptionFlowControl",
  "pub struct spark_core::SubscriptionQueueSnapshot",
  "pub spark_core::SubscriptionQueueSnapshot::capacity: core::option::Option<core::num::nonzero::NonZeroUsize>",
  "pub spark_core::SubscriptionQueueSnapshot::depth: usize",
  "pub spark_core::SubscriptionQueueSnapshot::dropped_events: u64",
  "impl core::clone::Clone for spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "pub fn spark_core::cluster::flow_control::SubscriptionQueueSnapshot::clone(&self) -> spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "impl core::cmp::Eq for spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "impl core::cmp::PartialEq for spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "pub fn spark_core::cluster::flow_control::SubscriptionQueueSnapshot::eq(&self, other: &spark_core::cluster::flow_control::SubscriptionQueueSnapshot) -> bool",
  "impl core::default::Default for spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "pub fn spark_core::cluster::flow_control::SubscriptionQueueSnapshot::default() -> spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "impl core::fmt::Debug for spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "pub fn spark_core::cluster::flow_control::SubscriptionQueueSnapshot::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Copy for spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "impl core::marker::StructuralPartialEq for spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "impl core::marker::Freeze for spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "impl core::marker::Send for spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "impl core::marker::Sync for spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "impl core::marker::Unpin for spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "pub struct spark_core::SubscriptionStream<T>",
  "pub spark_core::SubscriptionStream::queue_probe: core::option::Option<alloc::sync::Arc<dyn spark_core::cluster::flow_control::SubscriptionQueueProbe>>",
  "pub spark_core::SubscriptionStream::stream: spark_core::future::BoxStream<'static, T>",
  "impl<T> spark_core::cluster::flow_control::SubscriptionStream<T>",
  "pub fn spark_core::cluster::flow_control::SubscriptionStream<T>::new(stream: spark_core::future::BoxStream<'static, T>) -> Self",
  "pub fn spark_core::cluster::flow_control::SubscriptionStream<T>::with_probe(self, probe: alloc::sync::Arc<dyn spark_core::cluster::flow_control::SubscriptionQueueProbe>) -> Self",
  "impl<T> core::fmt::Debug for spark_core::cluster::flow_control::SubscriptionStream<T>",
  "pub fn spark_core::cluster::flow_control::SubscriptionStream<T>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl<T> core::marker::Freeze for spark_core::cluster::flow_control::SubscriptionStream<T>",
  "impl<T> core::marker::Send for spark_core::cluster::flow_control::SubscriptionStream<T>",
  "impl<T> !core::marker::Sync for spark_core::cluster::flow_control::SubscriptionStream<T>",
  "impl<T> core::marker::Unpin for spark_core::cluster::flow_control::SubscriptionStream<T>",
  "impl<T> !core::panic::unwind_safe::RefUnwindSafe for spark_core::cluster::flow_control::SubscriptionStream<T>",
  "impl<T> !core::panic::unwind_safe::UnwindSafe for spark_core::cluster::flow_control::SubscriptionStream<T>",
  "pub struct spark_core::TaskLaunchOptions",
  "pub spark_core::TaskLaunchOptions::cancellation: spark_core::TaskCancellationStrategy",
  "pub spark_core::TaskLaunchOptions::name: core::option::Option<alloc::borrow::Cow<'static, str>>",
  "pub spark_core::TaskLaunchOptions::priority: spark_core::TaskPriority",
  "pub spark_core::TaskLaunchOptions::tracing_labels: core::option::Option<alloc::string::String>",
  "impl spark_core::TaskLaunchOptions",
  "pub fn spark_core::TaskLaunchOptions::named(name: impl core::convert::Into<alloc::borrow::Cow<'static, str>>) -> Self",
  "impl core::clone::Clone for spark_core::TaskLaunchOptions",
  "pub fn spark_core::TaskLaunchOptions::clone(&self) -> spark_core::TaskLaunchOptions",
  "impl core::default::Default for spark_core::TaskLaunchOptions",
  "pub fn spark_core::TaskLaunchOptions::default() -> spark_core::TaskLaunchOptions",
  "impl core::fmt::Debug for spark_core::TaskLaunchOptions",
  "pub fn spark_core::TaskLaunchOptions::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::Freeze for spark_core::TaskLaunchOptions",
  "impl core::marker::Send for spark_core::TaskLaunchOptions",
  "impl core::marker::Sync for spark_core::TaskLaunchOptions",
  "impl core::marker::Unpin for spark_core::TaskLaunchOptions",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::TaskLaunchOptions",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::TaskLaunchOptions",
  "pub struct spark_core::TimeoutRuntimeConfig",
  "impl spark_core::TimeoutRuntimeConfig",
  "pub fn spark_core::TimeoutRuntimeConfig::config_epoch(&self) -> u64",
  "pub fn spark_core::TimeoutRuntimeConfig::fence(&self) -> spark_core::runtime::HotReloadFence",
  "pub fn spark_core::TimeoutRuntimeConfig::new(initial: spark_core::TimeoutSettings) -> Self",
  "pub fn spark_core::TimeoutRuntimeConfig::replace(&self, settings: spark_core::TimeoutSettings)",
  "pub fn spark_core::TimeoutRuntimeConfig::replace_with_fence(&self, guard: &spark_core::runtime::HotReloadWriteGuard<'_>, settings: spark_core::TimeoutSettings, timer: spark_core::runtime::HotReloadApplyTimer)",
  "pub fn spark_core::TimeoutRuntimeConfig::snapshot(&self) -> alloc::sync::Arc<spark_core::TimeoutSettings>",
  "pub fn spark_core::TimeoutRuntimeConfig::snapshot_with_fence(&self, _guard: &spark_core::runtime::HotReloadReadGuard<'_>) -> alloc::sync::Arc<spark_core::TimeoutSettings>",
  "pub fn spark_core::TimeoutRuntimeConfig::update_from_configuration(&self, config: &spark_core::ResolvedConfiguration) -> core::result::Result<(), spark_core::TimeoutConfigError>",
  "pub fn spark_core::TimeoutRuntimeConfig::update_from_configuration_with_fence(&self, guard: &spark_core::runtime::HotReloadWriteGuard<'_>, config: &spark_core::ResolvedConfiguration, timer: spark_core::runtime::HotReloadApplyTimer) -> core::result::Result<(), spark_core::TimeoutConfigError>",
  "pub fn spark_core::TimeoutRuntimeConfig::with_observability(initial: spark_core::TimeoutSettings, fence: spark_core::runtime::HotReloadFence, metrics: alloc::sync::Arc<dyn spark_core::observability::metrics::MetricsProvider>, component: impl core::convert::Into<alloc::borrow::Cow<'static, str>>) -> Self",
  "pub fn spark_core::TimeoutRuntimeConfig::with_shared_fence(initial: spark_core::TimeoutSettings, fence: spark_core::runtime::HotReloadFence) -> Self",
  "impl core::default::Default for spark_core::TimeoutRuntimeConfig",
  "pub fn spark_core::TimeoutRuntimeConfig::default() -> Self",
  "impl !core::marker::Freeze for spark_core::TimeoutRuntimeConfig",
  "impl core::marker::Send for spark_core::TimeoutRuntimeConfig",
  "impl core::marker::Sync for spark_core::TimeoutRuntimeConfig",
  "impl core::marker::Unpin for spark_core::TimeoutRuntimeConfig",
  "impl !core::panic::unwind_safe::RefUnwindSafe for spark_core::TimeoutRuntimeConfig",
  "impl !core::panic::unwind_safe::UnwindSafe for spark_core::TimeoutRuntimeConfig",
  "pub struct spark_core::TimeoutSettings",
  "impl spark_core::TimeoutSettings",
  "pub fn spark_core::TimeoutSettings::from_configuration(config: &spark_core::ResolvedConfiguration) -> core::result::Result<Self, spark_core::TimeoutConfigError>",
  "pub const fn spark_core::TimeoutSettings::idle_timeout(&self) -> core::time::Duration",
  "pub const fn spark_core::TimeoutSettings::new(request_timeout: core::time::Duration, idle_timeout: core::time::Duration) -> Self",
  "pub const fn spark_core::TimeoutSettings::request_timeout(&self) -> core::time::Duration",
  "impl core::clone::Clone for spark_core::TimeoutSettings",
  "pub fn spark_core::TimeoutSettings::clone(&self) -> spark_core::TimeoutSettings",
  "impl core::cmp::Eq for spark_core::TimeoutSettings",
  "impl core::cmp::PartialEq for spark_core::TimeoutSettings",
  "pub fn spark_core::TimeoutSettings::eq(&self, other: &spark_core::TimeoutSettings) -> bool",
  "impl core::default::Default for spark_core::TimeoutSettings",
  "pub fn spark_core::TimeoutSettings::default() -> Self",
  "impl core::fmt::Debug for spark_core::TimeoutSettings",
  "pub fn spark_core::TimeoutSettings::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::TimeoutSettings",
  "impl core::marker::Freeze for spark_core::TimeoutSettings",
  "impl core::marker::Send for spark_core::TimeoutSettings",
  "impl core::marker::Sync for spark_core::TimeoutSettings",
  "impl core::marker::Unpin for spark_core::TimeoutSettings",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::TimeoutSettings",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::TimeoutSettings",
  "pub struct spark_core::TlsInfo",
  "pub spark_core::TlsInfo::cipher: alloc::string::String",
  "pub spark_core::TlsInfo::peer_identity: core::option::Option<alloc::string::String>",
  "pub spark_core::TlsInfo::version: alloc::string::String",
  "impl core::clone::Clone for spark_core::observability::events::TlsInfo",
  "pub fn spark_core::observability::events::TlsInfo::clone(&self) -> spark_core::observability::events::TlsInfo",
  "impl core::cmp::Eq for spark_core::observability::events::TlsInfo",
  "impl core::cmp::PartialEq for spark_core::observability::events::TlsInfo",
  "pub fn spark_core::observability::events::TlsInfo::eq(&self, other: &spark_core::observability::events::TlsInfo) -> bool",
  "impl core::fmt::Debug for spark_core::observability::events::TlsInfo",
  "pub fn spark_core::observability::events::TlsInfo::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::observability::events::TlsInfo",
  "impl core::marker::Freeze for spark_core::observability::events::TlsInfo",
  "impl core::marker::Send for spark_core::observability::events::TlsInfo",
  "impl core::marker::Sync for spark_core::observability::events::TlsInfo",
  "impl core::marker::Unpin for spark_core::observability::events::TlsInfo",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::events::TlsInfo",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::events::TlsInfo",
  "pub struct spark_core::TraceContext",
  "pub spark_core::TraceContext::span_id: [u8; 8]",
  "pub spark_core::TraceContext::trace_flags: spark_core::observability::trace::TraceFlags",
  "pub spark_core::TraceContext::trace_id: [u8; 16]",
  "pub spark_core::TraceContext::trace_state: spark_core::observability::trace::TraceState",
  "impl spark_core::observability::trace::TraceContext",
  "pub const spark_core::observability::trace::TraceContext::SPAN_ID_LENGTH: usize",
  "pub const spark_core::observability::trace::TraceContext::TRACE_ID_LENGTH: usize",
  "pub fn spark_core::observability::trace::TraceContext::child_context(&self, child_span_id: [u8; 8]) -> Self",
  "pub fn spark_core::observability::trace::TraceContext::generate() -> Self",
  "pub fn spark_core::observability::trace::TraceContext::is_sampled(&self) -> bool",
  "pub fn spark_core::observability::trace::TraceContext::mark_sampled(self) -> Self",
  "pub fn spark_core::observability::trace::TraceContext::new(trace_id: [u8; 16], span_id: [u8; 8], trace_flags: spark_core::observability::trace::TraceFlags) -> Self",
  "pub fn spark_core::observability::trace::TraceContext::validate(&self) -> core::result::Result<(), spark_core::observability::trace::TraceContextError>",
  "pub fn spark_core::observability::trace::TraceContext::with_state(self, state: spark_core::observability::trace::TraceState) -> Self",
  "impl core::clone::Clone for spark_core::observability::trace::TraceContext",
  "pub fn spark_core::observability::trace::TraceContext::clone(&self) -> spark_core::observability::trace::TraceContext",
  "impl core::cmp::Eq for spark_core::observability::trace::TraceContext",
  "impl core::cmp::PartialEq for spark_core::observability::trace::TraceContext",
  "pub fn spark_core::observability::trace::TraceContext::eq(&self, other: &spark_core::observability::trace::TraceContext) -> bool",
  "impl core::fmt::Debug for spark_core::observability::trace::TraceContext",
  "pub fn spark_core::observability::trace::TraceContext::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::observability::trace::TraceContext",
  "pub fn spark_core::observability::trace::TraceContext::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::StructuralPartialEq for spark_core::observability::trace::TraceContext",
  "impl core::marker::Freeze for spark_core::observability::trace::TraceContext",
  "impl core::marker::Send for spark_core::observability::trace::TraceContext",
  "impl core::marker::Sync for spark_core::observability::trace::TraceContext",
  "impl core::marker::Unpin for spark_core::observability::trace::TraceContext",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::trace::TraceContext",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::trace::TraceContext",
  "pub struct spark_core::TraceFlags",
  "impl spark_core::observability::trace::TraceFlags",
  "pub const spark_core::observability::trace::TraceFlags::SAMPLED: u8",
  "pub const fn spark_core::observability::trace::TraceFlags::bits(&self) -> u8",
  "pub fn spark_core::observability::trace::TraceFlags::is_sampled(&self) -> bool",
  "pub const fn spark_core::observability::trace::TraceFlags::new(bits: u8) -> Self",
  "pub fn spark_core::observability::trace::TraceFlags::set_sampled(&mut self, sampled: bool)",
  "impl core::clone::Clone for spark_core::observability::trace::TraceFlags",
  "pub fn spark_core::observability::trace::TraceFlags::clone(&self) -> spark_core::observability::trace::TraceFlags",
  "impl core::cmp::Eq for spark_core::observability::trace::TraceFlags",
  "impl core::cmp::PartialEq for spark_core::observability::trace::TraceFlags",
  "pub fn spark_core::observability::trace::TraceFlags::eq(&self, other: &spark_core::observability::trace::TraceFlags) -> bool",
  "impl core::fmt::Debug for spark_core::observability::trace::TraceFlags",
  "pub fn spark_core::observability::trace::TraceFlags::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::observability::trace::TraceFlags",
  "pub fn spark_core::observability::trace::TraceFlags::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::Copy for spark_core::observability::trace::TraceFlags",
  "impl core::marker::StructuralPartialEq for spark_core::observability::trace::TraceFlags",
  "impl core::marker::Freeze for spark_core::observability::trace::TraceFlags",
  "impl core::marker::Send for spark_core::observability::trace::TraceFlags",
  "impl core::marker::Sync for spark_core::observability::trace::TraceFlags",
  "impl core::marker::Unpin for spark_core::observability::trace::TraceFlags",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::trace::TraceFlags",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::trace::TraceFlags",
  "pub struct spark_core::TraceState",
  "impl spark_core::observability::trace::TraceState",
  "pub fn spark_core::observability::trace::TraceState::clear(&mut self)",
  "pub fn spark_core::observability::trace::TraceState::from_entries(entries: alloc::vec::Vec<spark_core::observability::trace::TraceStateEntry>) -> core::result::Result<Self, spark_core::observability::trace::TraceStateError>",
  "pub fn spark_core::observability::trace::TraceState::insert(&mut self, entry: spark_core::observability::trace::TraceStateEntry) -> core::result::Result<(), spark_core::observability::trace::TraceStateError>",
  "pub fn spark_core::observability::trace::TraceState::iter(&self) -> impl core::iter::traits::exact_size::ExactSizeIterator<Item = &spark_core::observability::trace::TraceStateEntry>",
  "pub fn spark_core::observability::trace::TraceState::new() -> Self",
  "pub fn spark_core::observability::trace::TraceState::remove(&mut self, key: &str)",
  "pub fn spark_core::observability::trace::TraceState::validate(&self) -> core::result::Result<(), spark_core::observability::trace::TraceContextError>",
  "impl core::clone::Clone for spark_core::observability::trace::TraceState",
  "pub fn spark_core::observability::trace::TraceState::clone(&self) -> spark_core::observability::trace::TraceState",
  "impl core::cmp::Eq for spark_core::observability::trace::TraceState",
  "impl core::cmp::PartialEq for spark_core::observability::trace::TraceState",
  "pub fn spark_core::observability::trace::TraceState::eq(&self, other: &spark_core::observability::trace::TraceState) -> bool",
  "impl core::default::Default for spark_core::observability::trace::TraceState",
  "pub fn spark_core::observability::trace::TraceState::default() -> spark_core::observability::trace::TraceState",
  "impl core::fmt::Debug for spark_core::observability::trace::TraceState",
  "pub fn spark_core::observability::trace::TraceState::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::observability::trace::TraceState",
  "pub fn spark_core::observability::trace::TraceState::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::StructuralPartialEq for spark_core::observability::trace::TraceState",
  "impl core::marker::Freeze for spark_core::observability::trace::TraceState",
  "impl core::marker::Send for spark_core::observability::trace::TraceState",
  "impl core::marker::Sync for spark_core::observability::trace::TraceState",
  "impl core::marker::Unpin for spark_core::observability::trace::TraceState",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::trace::TraceState",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::trace::TraceState",
  "pub struct spark_core::TraceStateEntry",
  "pub spark_core::TraceStateEntry::key: alloc::string::String",
  "pub spark_core::TraceStateEntry::value: alloc::string::String",
  "impl spark_core::observability::trace::TraceStateEntry",
  "pub fn spark_core::observability::trace::TraceStateEntry::new(key: impl core::convert::Into<alloc::string::String>, value: impl core::convert::Into<alloc::string::String>) -> Self",
  "pub fn spark_core::observability::trace::TraceStateEntry::validate(&self) -> core::result::Result<(), spark_core::observability::trace::TraceStateError>",
  "impl core::clone::Clone for spark_core::observability::trace::TraceStateEntry",
  "pub fn spark_core::observability::trace::TraceStateEntry::clone(&self) -> spark_core::observability::trace::TraceStateEntry",
  "impl core::cmp::Eq for spark_core::observability::trace::TraceStateEntry",
  "impl core::cmp::PartialEq for spark_core::observability::trace::TraceStateEntry",
  "pub fn spark_core::observability::trace::TraceStateEntry::eq(&self, other: &spark_core::observability::trace::TraceStateEntry) -> bool",
  "impl core::fmt::Debug for spark_core::observability::trace::TraceStateEntry",
  "pub fn spark_core::observability::trace::TraceStateEntry::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::observability::trace::TraceStateEntry",
  "pub fn spark_core::observability::trace::TraceStateEntry::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::StructuralPartialEq for spark_core::observability::trace::TraceStateEntry",
  "impl core::marker::Freeze for spark_core::observability::trace::TraceStateEntry",
  "impl core::marker::Send for spark_core::observability::trace::TraceStateEntry",
  "impl core::marker::Sync for spark_core::observability::trace::TraceStateEntry",
  "impl core::marker::Unpin for spark_core::observability::trace::TraceStateEntry",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::observability::trace::TraceStateEntry",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::observability::trace::TraceStateEntry",
  "pub struct spark_core::TransportFactoryObject<F> where F: spark_core::transport::traits::generic::TransportFactory",
  "impl<F> spark_core::transport::traits::object::TransportFactoryObject<F> where F: spark_core::transport::traits::generic::TransportFactory",
  "pub fn spark_core::transport::traits::object::TransportFactoryObject<F>::into_inner(self) -> alloc::sync::Arc<F>",
  "pub fn spark_core::transport::traits::object::TransportFactoryObject<F>::new(inner: F) -> Self",
  "impl<F> spark_core::transport::traits::object::DynTransportFactory for spark_core::transport::traits::object::TransportFactoryObject<F> where F: spark_core::transport::traits::generic::TransportFactory",
  "pub fn spark_core::transport::traits::object::TransportFactoryObject<F>::bind_dyn<'life0, 'life1, 'life2, 'async_trait>(&'life0 self, ctx: &'life1 spark_core::context::ExecutionContext<'life2>, config: spark_core::transport::factory::ListenerConfig, pipeline_factory: alloc::sync::Arc<dyn spark_core::pipeline::traits::object::DynControllerFactory>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<alloc::boxed::Box<dyn spark_core::transport::traits::object::DynServerTransport>, spark_core::error::CoreError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait, 'life1: 'async_trait, 'life2: 'async_trait",
  "pub fn spark_core::transport::traits::object::TransportFactoryObject<F>::connect_dyn<'life0, 'life1, 'life2, 'async_trait>(&'life0 self, ctx: &'life1 spark_core::context::ExecutionContext<'life2>, intent: spark_core::transport::intent::ConnectionIntent, discovery: core::option::Option<alloc::sync::Arc<dyn spark_core::cluster::discovery::ServiceDiscovery>>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<alloc::boxed::Box<dyn spark_core::pipeline::channel::Channel>, spark_core::error::CoreError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait, 'life1: 'async_trait, 'life2: 'async_trait",
  "pub fn spark_core::transport::traits::object::TransportFactoryObject<F>::scheme_dyn(&self, ctx: &spark_core::context::ExecutionContext<'_>) -> &'static str",
  "impl<F> core::marker::Freeze for spark_core::transport::traits::object::TransportFactoryObject<F>",
  "impl<F> core::marker::Send for spark_core::transport::traits::object::TransportFactoryObject<F>",
  "impl<F> core::marker::Sync for spark_core::transport::traits::object::TransportFactoryObject<F>",
  "impl<F> core::marker::Unpin for spark_core::transport::traits::object::TransportFactoryObject<F>",
  "impl<F> core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::traits::object::TransportFactoryObject<F> where F: core::panic::unwind_safe::RefUnwindSafe",
  "impl<F> core::panic::unwind_safe::UnwindSafe for spark_core::transport::traits::object::TransportFactoryObject<F> where F: core::panic::unwind_safe::RefUnwindSafe",
  "pub struct spark_core::TransportParams(_)",
  "impl spark_core::transport::params::TransportParams",
  "pub fn spark_core::transport::params::TransportParams::as_map(&self) -> &alloc::collections::btree::map::BTreeMap<alloc::string::String, alloc::string::String>",
  "pub fn spark_core::transport::params::TransportParams::get_bool(&self, key: &str) -> core::option::Option<bool>",
  "pub fn spark_core::transport::params::TransportParams::get_duration(&self, key: &str) -> core::option::Option<core::time::Duration>",
  "pub fn spark_core::transport::params::TransportParams::get_size_bytes(&self, key: &str) -> core::option::Option<u64>",
  "pub fn spark_core::transport::params::TransportParams::get_str(&self, key: &str) -> core::option::Option<&str>",
  "pub fn spark_core::transport::params::TransportParams::get_u64(&self, key: &str) -> core::option::Option<u64>",
  "pub fn spark_core::transport::params::TransportParams::insert(&mut self, key: alloc::string::String, value: alloc::string::String)",
  "pub fn spark_core::transport::params::TransportParams::merge(&mut self, other: &spark_core::transport::params::TransportParams) -> &mut Self",
  "pub fn spark_core::transport::params::TransportParams::new() -> Self",
  "impl core::clone::Clone for spark_core::transport::params::TransportParams",
  "pub fn spark_core::transport::params::TransportParams::clone(&self) -> spark_core::transport::params::TransportParams",
  "impl core::cmp::Eq for spark_core::transport::params::TransportParams",
  "impl core::cmp::PartialEq for spark_core::transport::params::TransportParams",
  "pub fn spark_core::transport::params::TransportParams::eq(&self, other: &spark_core::transport::params::TransportParams) -> bool",
  "impl core::default::Default for spark_core::transport::params::TransportParams",
  "pub fn spark_core::transport::params::TransportParams::default() -> spark_core::transport::params::TransportParams",
  "impl core::fmt::Debug for spark_core::transport::params::TransportParams",
  "pub fn spark_core::transport::params::TransportParams::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::transport::params::TransportParams",
  "impl core::marker::Freeze for spark_core::transport::params::TransportParams",
  "impl core::marker::Send for spark_core::transport::params::TransportParams",
  "impl core::marker::Sync for spark_core::transport::params::TransportParams",
  "impl core::marker::Unpin for spark_core::transport::params::TransportParams",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::params::TransportParams",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::params::TransportParams",
  "pub struct spark_core::TsaEvidence",
  "pub spark_core::TsaEvidence::evidence: alloc::string::String",
  "pub spark_core::TsaEvidence::issued_at: u64",
  "pub spark_core::TsaEvidence::provider: alloc::borrow::Cow<'static, str>",
  "impl core::clone::Clone for spark_core::audit::TsaEvidence",
  "pub fn spark_core::audit::TsaEvidence::clone(&self) -> spark_core::audit::TsaEvidence",
  "impl core::cmp::PartialEq for spark_core::audit::TsaEvidence",
  "pub fn spark_core::audit::TsaEvidence::eq(&self, other: &spark_core::audit::TsaEvidence) -> bool",
  "impl core::fmt::Debug for spark_core::audit::TsaEvidence",
  "pub fn spark_core::audit::TsaEvidence::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::audit::TsaEvidence",
  "impl serde_core::ser::Serialize for spark_core::audit::TsaEvidence",
  "pub fn spark_core::audit::TsaEvidence::serialize<S>(&self, serializer: S) -> core::result::Result<<S as serde_core::ser::Serializer>::Ok, <S as serde_core::ser::Serializer>::Error> where S: serde_core::ser::Serializer",
  "impl<'de> serde_core::de::Deserialize<'de> for spark_core::audit::TsaEvidence",
  "pub fn spark_core::audit::TsaEvidence::deserialize<D>(deserializer: D) -> core::result::Result<Self, <D as serde_core::de::Deserializer>::Error> where D: serde_core::de::Deserializer<'de>",
  "impl core::marker::Freeze for spark_core::audit::TsaEvidence",
  "impl core::marker::Send for spark_core::audit::TsaEvidence",
  "impl core::marker::Sync for spark_core::audit::TsaEvidence",
  "impl core::marker::Unpin for spark_core::audit::TsaEvidence",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::audit::TsaEvidence",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::audit::TsaEvidence",
  "pub struct spark_core::TypedCodecAdapter<C> where C: spark_core::codec::traits::generic::Codec",
  "impl<C> spark_core::codec::traits::object::TypedCodecAdapter<C> where C: spark_core::codec::traits::generic::Codec",
  "pub fn spark_core::codec::traits::object::TypedCodecAdapter<C>::into_inner(self) -> C",
  "pub fn spark_core::codec::traits::object::TypedCodecAdapter<C>::new(inner: C) -> Self",
  "impl<C> spark_core::codec::traits::object::DynCodec for spark_core::codec::traits::object::TypedCodecAdapter<C> where C: spark_core::codec::traits::generic::Codec",
  "pub fn spark_core::codec::traits::object::TypedCodecAdapter<C>::decode_dyn(&self, src: &mut spark_core::buffer::ErasedSparkBuf, ctx: &mut spark_core::DecodeContext<'_>) -> core::result::Result<spark_core::DecodeOutcome<alloc::boxed::Box<(dyn core::any::Any + core::marker::Send + core::marker::Sync)>>, spark_core::error::CoreError>",
  "pub fn spark_core::codec::traits::object::TypedCodecAdapter<C>::descriptor(&self) -> &spark_core::CodecDescriptor",
  "pub fn spark_core::codec::traits::object::TypedCodecAdapter<C>::encode_dyn(&self, item: &(dyn core::any::Any + core::marker::Send + core::marker::Sync), ctx: &mut spark_core::EncodeContext<'_>) -> core::result::Result<spark_core::EncodedPayload, spark_core::error::CoreError>",
  "impl<C> core::marker::Freeze for spark_core::codec::traits::object::TypedCodecAdapter<C> where C: core::marker::Freeze",
  "impl<C> core::marker::Send for spark_core::codec::traits::object::TypedCodecAdapter<C>",
  "impl<C> core::marker::Sync for spark_core::codec::traits::object::TypedCodecAdapter<C>",
  "impl<C> core::marker::Unpin for spark_core::codec::traits::object::TypedCodecAdapter<C> where C: core::marker::Unpin",
  "impl<C> core::panic::unwind_safe::RefUnwindSafe for spark_core::codec::traits::object::TypedCodecAdapter<C> where C: core::panic::unwind_safe::RefUnwindSafe",
  "impl<C> core::panic::unwind_safe::UnwindSafe for spark_core::codec::traits::object::TypedCodecAdapter<C> where C: core::panic::unwind_safe::UnwindSafe",
  "pub struct spark_core::TypedCodecFactory<C, F> where C: spark_core::codec::traits::generic::Codec, F: core::ops::function::Fn(&spark_core::NegotiatedCodec) -> C + core::marker::Send + core::marker::Sync + 'static",
  "impl<C, F> spark_core::TypedCodecFactory<C, F> where C: spark_core::codec::traits::generic::Codec, F: core::ops::function::Fn(&spark_core::NegotiatedCodec) -> C + core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::TypedCodecFactory<C, F>::new(descriptor: spark_core::CodecDescriptor, constructor: F) -> Self",
  "impl<C, F> spark_core::DynCodecFactory for spark_core::TypedCodecFactory<C, F> where C: spark_core::codec::traits::generic::Codec, F: core::ops::function::Fn(&spark_core::NegotiatedCodec) -> C + core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::TypedCodecFactory<C, F>::descriptor(&self) -> &spark_core::CodecDescriptor",
  "pub fn spark_core::TypedCodecFactory<C, F>::instantiate(&self, negotiated: &spark_core::NegotiatedCodec) -> core::result::Result<alloc::boxed::Box<dyn spark_core::codec::traits::object::DynCodec>, spark_core::error::CoreError>",
  "impl<C, F> core::marker::Freeze for spark_core::TypedCodecFactory<C, F> where F: core::marker::Freeze",
  "impl<C, F> core::marker::Send for spark_core::TypedCodecFactory<C, F>",
  "impl<C, F> core::marker::Sync for spark_core::TypedCodecFactory<C, F>",
  "impl<C, F> core::marker::Unpin for spark_core::TypedCodecFactory<C, F> where F: core::marker::Unpin, C: core::marker::Unpin",
  "impl<C, F> core::panic::unwind_safe::RefUnwindSafe for spark_core::TypedCodecFactory<C, F> where F: core::panic::unwind_safe::RefUnwindSafe, C: core::panic::unwind_safe::RefUnwindSafe",
  "impl<C, F> core::panic::unwind_safe::UnwindSafe for spark_core::TypedCodecFactory<C, F> where F: core::panic::unwind_safe::UnwindSafe, C: core::panic::unwind_safe::UnwindSafe",
  "pub struct spark_core::ValidationFinding",
  "impl spark_core::ValidationFinding",
  "pub fn spark_core::ValidationFinding::check(&self) -> &str",
  "pub fn spark_core::ValidationFinding::detail(&self) -> &str",
  "pub fn spark_core::ValidationFinding::new<C, D>(check: C, state: spark_core::ValidationState, detail: D) -> Self where C: core::convert::Into<alloc::borrow::Cow<'static, str>>, D: core::convert::Into<alloc::borrow::Cow<'static, str>>",
  "pub fn spark_core::ValidationFinding::state(&self) -> spark_core::ValidationState",
  "impl core::clone::Clone for spark_core::ValidationFinding",
  "pub fn spark_core::ValidationFinding::clone(&self) -> spark_core::ValidationFinding",
  "impl core::cmp::Eq for spark_core::ValidationFinding",
  "impl core::cmp::PartialEq for spark_core::ValidationFinding",
  "pub fn spark_core::ValidationFinding::eq(&self, other: &spark_core::ValidationFinding) -> bool",
  "impl core::fmt::Debug for spark_core::ValidationFinding",
  "pub fn spark_core::ValidationFinding::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::ValidationFinding",
  "impl core::marker::Freeze for spark_core::ValidationFinding",
  "impl core::marker::Send for spark_core::ValidationFinding",
  "impl core::marker::Sync for spark_core::ValidationFinding",
  "impl core::marker::Unpin for spark_core::ValidationFinding",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ValidationFinding",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ValidationFinding",
  "pub struct spark_core::ValidationReport",
  "impl spark_core::ValidationReport",
  "pub fn spark_core::ValidationReport::failed_count(&self) -> usize",
  "pub fn spark_core::ValidationReport::findings(&self) -> &[spark_core::ValidationFinding]",
  "pub fn spark_core::ValidationReport::new() -> Self",
  "pub fn spark_core::ValidationReport::passed_count(&self) -> usize",
  "pub fn spark_core::ValidationReport::push(&mut self, finding: spark_core::ValidationFinding)",
  "pub fn spark_core::ValidationReport::record_fail<C, D>(&mut self, check: C, detail: D) where C: core::convert::Into<alloc::borrow::Cow<'static, str>>, D: core::convert::Into<alloc::borrow::Cow<'static, str>>",
  "pub fn spark_core::ValidationReport::record_pass<C, D>(&mut self, check: C, detail: D) where C: core::convert::Into<alloc::borrow::Cow<'static, str>>, D: core::convert::Into<alloc::borrow::Cow<'static, str>>",
  "impl core::clone::Clone for spark_core::ValidationReport",
  "pub fn spark_core::ValidationReport::clone(&self) -> spark_core::ValidationReport",
  "impl core::cmp::Eq for spark_core::ValidationReport",
  "impl core::cmp::PartialEq for spark_core::ValidationReport",
  "pub fn spark_core::ValidationReport::eq(&self, other: &spark_core::ValidationReport) -> bool",
  "impl core::default::Default for spark_core::ValidationReport",
  "pub fn spark_core::ValidationReport::default() -> spark_core::ValidationReport",
  "impl core::fmt::Debug for spark_core::ValidationReport",
  "pub fn spark_core::ValidationReport::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::ValidationReport",
  "pub fn spark_core::ValidationReport::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::marker::StructuralPartialEq for spark_core::ValidationReport",
  "impl core::marker::Freeze for spark_core::ValidationReport",
  "impl core::marker::Send for spark_core::ValidationReport",
  "impl core::marker::Sync for spark_core::ValidationReport",
  "impl core::marker::Unpin for spark_core::ValidationReport",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::ValidationReport",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::ValidationReport",
  "pub struct spark_core::Version",
  "impl spark_core::transport::handshake::Version",
  "pub const fn spark_core::transport::handshake::Version::is_compatible_with(&self, other: &Self) -> bool",
  "pub const fn spark_core::transport::handshake::Version::major(&self) -> u16",
  "pub const fn spark_core::transport::handshake::Version::minor(&self) -> u16",
  "pub const fn spark_core::transport::handshake::Version::new(major: u16, minor: u16, patch: u16) -> Self",
  "pub const fn spark_core::transport::handshake::Version::patch(&self) -> u16",
  "impl core::clone::Clone for spark_core::transport::handshake::Version",
  "pub fn spark_core::transport::handshake::Version::clone(&self) -> spark_core::transport::handshake::Version",
  "impl core::cmp::Eq for spark_core::transport::handshake::Version",
  "impl core::cmp::Ord for spark_core::transport::handshake::Version",
  "pub fn spark_core::transport::handshake::Version::cmp(&self, other: &Self) -> core::cmp::Ordering",
  "impl core::cmp::PartialEq for spark_core::transport::handshake::Version",
  "pub fn spark_core::transport::handshake::Version::eq(&self, other: &spark_core::transport::handshake::Version) -> bool",
  "impl core::cmp::PartialOrd for spark_core::transport::handshake::Version",
  "pub fn spark_core::transport::handshake::Version::partial_cmp(&self, other: &Self) -> core::option::Option<core::cmp::Ordering>",
  "impl core::fmt::Debug for spark_core::transport::handshake::Version",
  "pub fn spark_core::transport::handshake::Version::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::fmt::Display for spark_core::transport::handshake::Version",
  "pub fn spark_core::transport::handshake::Version::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result",
  "impl core::hash::Hash for spark_core::transport::handshake::Version",
  "pub fn spark_core::transport::handshake::Version::hash<__H: core::hash::Hasher>(&self, state: &mut __H)",
  "impl core::marker::Copy for spark_core::transport::handshake::Version",
  "impl core::marker::StructuralPartialEq for spark_core::transport::handshake::Version",
  "impl core::marker::Freeze for spark_core::transport::handshake::Version",
  "impl core::marker::Send for spark_core::transport::handshake::Version",
  "impl core::marker::Sync for spark_core::transport::handshake::Version",
  "impl core::marker::Unpin for spark_core::transport::handshake::Version",
  "impl core::panic::unwind_safe::RefUnwindSafe for spark_core::transport::handshake::Version",
  "impl core::panic::unwind_safe::UnwindSafe for spark_core::transport::handshake::Version",
  "pub const spark_core::DEFAULT_OBSERVABILITY_CONTRACT: spark_core::contract::ObservabilityContract",
  "pub static spark_core::LEGACY_LOOPBACK_OUTBOUND: spark_core::deprecation::DeprecationNotice",
  "pub trait spark_core::ApplicationEvent: core::fmt::Debug + core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::ApplicationEvent::as_any(&self) -> &dyn core::any::Any",
  "pub fn spark_core::ApplicationEvent::clone_event(&self) -> alloc::sync::Arc<dyn spark_core::observability::events::ApplicationEvent>",
  "pub fn spark_core::ApplicationEvent::event_kind(&self) -> &'static str",
  "impl<T> spark_core::observability::events::ApplicationEvent for T where T: core::any::Any + core::clone::Clone + core::marker::Send + core::marker::Sync + core::fmt::Debug + 'static",
  "pub fn T::as_any(&self) -> &(dyn core::any::Any + 'static)",
  "pub fn T::clone_event(&self) -> alloc::sync::Arc<dyn spark_core::observability::events::ApplicationEvent>",
  "pub fn T::event_kind(&self) -> &'static str",
  "pub trait spark_core::AsyncRuntime: spark_core::TaskExecutor + spark_core::TimeDriver + core::marker::Send + core::marker::Sync + 'static + crate::sealed::Sealed",
  "impl<T> spark_core::runtime::AsyncRuntime for T where T: spark_core::TaskExecutor + spark_core::TimeDriver + core::marker::Send + core::marker::Sync + 'static",
  "pub trait spark_core::AuditRecorder: core::marker::Send + core::marker::Sync",
  "pub fn spark_core::AuditRecorder::flush(&self) -> core::result::Result<(), spark_core::audit::AuditError>",
  "pub fn spark_core::AuditRecorder::record(&self, event: spark_core::audit::AuditEventV1) -> core::result::Result<(), spark_core::audit::AuditError>",
  "impl spark_core::audit::AuditRecorder for spark_core::audit::InMemoryAuditRecorder",
  "pub fn spark_core::audit::InMemoryAuditRecorder::record(&self, event: spark_core::audit::AuditEventV1) -> core::result::Result<(), spark_core::audit::AuditError>",
  "pub trait spark_core::AutoDynBridge: core::marker::Sized + core::marker::Send + core::marker::Sync + 'static",
  "pub type spark_core::AutoDynBridge::DynOut",
  "pub fn spark_core::AutoDynBridge::into_dyn<Request>(self) -> Self::DynOut where Self: spark_core::service::traits::generic::Service<Request, Error = spark_core::error::SparkError>, Request: spark_core::service::auto_dyn::Decode + core::marker::Send + core::marker::Sync + 'static, <Self as spark_core::service::traits::generic::Service<Request>>::Response: spark_core::service::auto_dyn::Encode + core::marker::Send + core::marker::Sync + 'static",
  "impl spark_core::service::auto_dyn::AutoDynBridge for spark_core::service::traits::object::BoxService",
  "pub type spark_core::service::traits::object::BoxService::DynOut = spark_core::service::traits::object::BoxService",
  "pub fn spark_core::service::traits::object::BoxService::into_dyn<Request>(self) -> Self::DynOut where Self: spark_core::service::traits::generic::Service<Request, Error = spark_core::error::SparkError>, Request: spark_core::service::auto_dyn::Decode + core::marker::Send + core::marker::Sync + 'static, <Self as spark_core::service::traits::generic::Service<Request>>::Response: spark_core::service::auto_dyn::Encode + core::marker::Send + core::marker::Sync + 'static",
  "impl<S, Request> spark_core::service::auto_dyn::AutoDynBridge for spark_core::service::auto_dyn::DynBridge<S, Request> where S: spark_core::service::traits::generic::Service<Request> + core::marker::Send + core::marker::Sync + 'static, Request: core::marker::Send + core::marker::Sync + 'static, <S as spark_core::service::traits::generic::Service<Request>>::Response: core::marker::Send + core::marker::Sync + 'static",
  "pub type spark_core::service::auto_dyn::DynBridge<S, Request>::DynOut = spark_core::service::traits::object::BoxService",
  "pub fn spark_core::service::auto_dyn::DynBridge<S, Request>::into_dyn<R>(self) -> Self::DynOut where Self: spark_core::service::traits::generic::Service<R, Error = spark_core::error::SparkError>, R: spark_core::service::auto_dyn::Decode + core::marker::Send + core::marker::Sync + 'static, <Self as spark_core::service::traits::generic::Service<R>>::Response: spark_core::service::auto_dyn::Encode + core::marker::Send + core::marker::Sync + 'static",
  "pub trait spark_core::BufView: core::marker::Send + core::marker::Sync",
  "pub fn spark_core::BufView::as_chunks(&self) -> spark_core::buffer::buf_view::Chunks<'_>",
  "pub fn spark_core::BufView::chunk_count(&self) -> usize",
  "pub fn spark_core::BufView::is_empty(&self) -> bool",
  "pub fn spark_core::BufView::len(&self) -> usize",
  "impl spark_core::buffer::buf_view::BufView for [u8]",
  "pub fn [u8]::as_chunks(&self) -> spark_core::buffer::buf_view::Chunks<'_>",
  "pub fn [u8]::len(&self) -> usize",
  "impl spark_core::buffer::buf_view::BufView for alloc::boxed::Box<[u8]>",
  "pub fn alloc::boxed::Box<[u8]>::as_chunks(&self) -> spark_core::buffer::buf_view::Chunks<'_>",
  "pub fn alloc::boxed::Box<[u8]>::len(&self) -> usize",
  "impl spark_core::buffer::buf_view::BufView for alloc::vec::Vec<u8>",
  "pub fn alloc::vec::Vec<u8>::as_chunks(&self) -> spark_core::buffer::buf_view::Chunks<'_>",
  "pub fn alloc::vec::Vec<u8>::len(&self) -> usize",
  "impl<T> spark_core::buffer::buf_view::BufView for &T where T: spark_core::buffer::buf_view::BufView + ?core::marker::Sized",
  "pub fn &T::as_chunks(&self) -> spark_core::buffer::buf_view::Chunks<'_>",
  "pub fn &T::len(&self) -> usize",
  "pub trait spark_core::BufferAllocator: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::BufferAllocator::acquire(&self, min_capacity: usize) -> core::result::Result<alloc::boxed::Box<spark_core::buffer::ErasedSparkBufMut>, spark_core::error::CoreError>",
  "impl<T> spark_core::buffer::BufferAllocator for T where T: spark_core::buffer::pool::BufferPool",
  "pub fn T::acquire(&self, min_capacity: usize) -> core::result::Result<alloc::boxed::Box<spark_core::buffer::ErasedSparkBufMut>, spark_core::error::CoreError>",
  "pub trait spark_core::BufferPool: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::BufferPool::acquire(&self, min_capacity: usize) -> core::result::Result<alloc::boxed::Box<dyn spark_core::buffer::writable::WritableBuffer>, spark_core::error::CoreError>",
  "pub fn spark_core::BufferPool::shrink_to_fit(&self) -> core::result::Result<usize, spark_core::error::CoreError>",
  "pub fn spark_core::BufferPool::statistics(&self) -> core::result::Result<spark_core::buffer::pool::PoolStats, spark_core::error::CoreError>",
  "pub trait spark_core::ChainBuilder: Sealed",
  "pub fn spark_core::ChainBuilder::register_inbound(&mut self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::InboundHandler>)",
  "pub fn spark_core::ChainBuilder::register_inbound_static(&mut self, label: &str, handler: &'static dyn spark_core::pipeline::handler::InboundHandler)",
  "pub fn spark_core::ChainBuilder::register_outbound(&mut self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::OutboundHandler>)",
  "pub fn spark_core::ChainBuilder::register_outbound_static(&mut self, label: &str, handler: &'static dyn spark_core::pipeline::handler::OutboundHandler)",
  "impl spark_core::pipeline::middleware::ChainBuilder for dyn spark_core::pipeline::controller::Controller<HandleId = spark_core::pipeline::controller::ControllerHandleId>",
  "pub fn dyn spark_core::pipeline::controller::Controller<HandleId = spark_core::pipeline::controller::ControllerHandleId>::register_inbound(&mut self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::InboundHandler>)",
  "pub fn dyn spark_core::pipeline::controller::Controller<HandleId = spark_core::pipeline::controller::ControllerHandleId>::register_inbound_static(&mut self, label: &str, handler: &'static dyn spark_core::pipeline::handler::InboundHandler)",
  "pub fn dyn spark_core::pipeline::controller::Controller<HandleId = spark_core::pipeline::controller::ControllerHandleId>::register_outbound(&mut self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::OutboundHandler>)",
  "pub fn dyn spark_core::pipeline::controller::Controller<HandleId = spark_core::pipeline::controller::ControllerHandleId>::register_outbound_static(&mut self, label: &str, handler: &'static dyn spark_core::pipeline::handler::OutboundHandler)",
  "pub trait spark_core::Channel: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::Channel::close(&self)",
  "pub fn spark_core::Channel::close_graceful(&self, reason: spark_core::contract::CloseReason, deadline: core::option::Option<spark_core::contract::Deadline>)",
  "pub fn spark_core::Channel::closed(&self) -> spark_core::future::BoxFuture<'static, core::result::Result<(), spark_core::error::SparkError>>",
  "pub fn spark_core::Channel::controller(&self) -> &dyn spark_core::pipeline::controller::Controller<HandleId = spark_core::pipeline::controller::ControllerHandleId>",
  "pub fn spark_core::Channel::extensions(&self) -> &dyn spark_core::pipeline::extensions::ExtensionsMap",
  "pub fn spark_core::Channel::flush(&self)",
  "pub fn spark_core::Channel::id(&self) -> &str",
  "pub fn spark_core::Channel::is_writable(&self) -> bool",
  "pub fn spark_core::Channel::local_addr(&self) -> core::option::Option<spark_core::transport::address::TransportSocketAddr>",
  "pub fn spark_core::Channel::peer_addr(&self) -> core::option::Option<spark_core::transport::address::TransportSocketAddr>",
  "pub fn spark_core::Channel::state(&self) -> spark_core::pipeline::channel::ChannelState",
  "pub fn spark_core::Channel::write(&self, msg: spark_core::buffer::message::PipelineMessage) -> core::result::Result<spark_core::pipeline::channel::WriteSignal, spark_core::error::CoreError>",
  "pub trait spark_core::ClusterMembership: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::ClusterMembership::self_profile<'life0, 'async_trait>(&'life0 self) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<spark_core::cluster::membership::ClusterNodeProfile, spark_core::cluster::membership::ClusterError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait",
  "pub fn spark_core::ClusterMembership::snapshot<'life0, 'async_trait>(&'life0 self, scope: spark_core::cluster::membership::ClusterMembershipScope) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<spark_core::cluster::membership::ClusterMembershipSnapshot, spark_core::cluster::membership::ClusterError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait",
  "pub fn spark_core::ClusterMembership::subscribe(&self, scope: spark_core::cluster::membership::ClusterMembershipScope, resume_from: core::option::Option<spark_core::cluster::topology::ClusterRevision>, flow_control: spark_core::cluster::flow_control::SubscriptionFlowControl) -> spark_core::cluster::flow_control::SubscriptionStream<spark_core::cluster::membership::ClusterMembershipEvent>",
  "pub trait spark_core::Codec: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub type spark_core::Codec::Incoming: core::marker::Send + core::marker::Sync + 'static",
  "pub type spark_core::Codec::Outgoing: core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::Codec::decode(&self, src: &mut spark_core::buffer::ErasedSparkBuf, ctx: &mut spark_core::DecodeContext<'_>) -> core::result::Result<spark_core::DecodeOutcome<Self::Incoming>, spark_core::error::CoreError>",
  "pub fn spark_core::Codec::descriptor(&self) -> &spark_core::CodecDescriptor",
  "pub fn spark_core::Codec::encode(&self, item: &Self::Outgoing, ctx: &mut spark_core::EncodeContext<'_>) -> core::result::Result<spark_core::EncodedPayload, spark_core::error::CoreError>",
  "pub trait spark_core::CodecRegistry: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::CodecRegistry::instantiate(&self, negotiated: &spark_core::NegotiatedCodec) -> core::result::Result<alloc::boxed::Box<dyn spark_core::codec::traits::object::DynCodec>, spark_core::error::CoreError>",
  "pub fn spark_core::CodecRegistry::negotiate(&self, preferred: &[spark_core::ContentType], accepted_encodings: &[spark_core::ContentEncoding]) -> core::result::Result<spark_core::NegotiatedCodec, spark_core::error::CoreError>",
  "pub fn spark_core::CodecRegistry::register(&self, factory: alloc::boxed::Box<dyn spark_core::DynCodecFactory>) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::CodecRegistry::register_static(&self, factory: &'static dyn spark_core::DynCodecFactory) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub trait spark_core::ComponentFactory: Sealed",
  "pub type spark_core::ComponentFactory::Error: spark_core::Error",
  "pub type spark_core::ComponentFactory::Instance",
  "pub fn spark_core::ComponentFactory::descriptor(&self) -> &spark_core::host::component::ComponentDescriptor",
  "pub fn spark_core::ComponentFactory::initialize(&self, ctx: &spark_core::host::context::HostContext) -> core::result::Result<Self::Instance, Self::Error>",
  "pub trait spark_core::ConfigConsumer: Sealed",
  "pub type spark_core::ConfigConsumer::Error: spark_core::Error",
  "pub fn spark_core::ConfigConsumer::on_incremental_change(&self, ctx: &spark_core::host::context::HostContext, change: spark_core::host::provisioning::ConfigChange) -> core::result::Result<spark_core::host::provisioning::ProvisioningOutcome, Self::Error>",
  "pub fn spark_core::ConfigConsumer::on_initial_provision(&self, ctx: &spark_core::host::context::HostContext, config: spark_core::host::provisioning::ConfigEnvelope) -> core::result::Result<spark_core::host::provisioning::ProvisioningOutcome, Self::Error>",
  "pub trait spark_core::ConfigurationSource: core::marker::Send + core::marker::Sync + Sealed",
  "pub type spark_core::ConfigurationSource::Stream<'a> where Self: 'a: spark_core::future::Stream<Item = spark_core::ConfigDelta> + core::marker::Send + 'a",
  "pub fn spark_core::ConfigurationSource::load(&self, profile: &spark_core::ProfileId) -> core::result::Result<alloc::vec::Vec<spark_core::ConfigurationLayer>, spark_core::ConfigurationError>",
  "pub fn spark_core::ConfigurationSource::watch<'a>(&'a self, profile: &spark_core::ProfileId) -> core::result::Result<Self::Stream, spark_core::ConfigurationError>",
  "pub fn spark_core::ConfigurationSource::watch_boxed<'a>(&'a self, profile: &spark_core::ProfileId) -> core::result::Result<spark_core::future::BoxStream<'a, spark_core::ConfigDelta>, spark_core::ConfigurationError> where Self::Stream: core::marker::Sized",
  "pub trait spark_core::Controller: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub type spark_core::Controller::HandleId: core::marker::Copy + core::cmp::Eq + core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::Controller::add_handler_after(&self, anchor: Self::HandleId, label: &str, handler: alloc::sync::Arc<dyn spark_core::pipeline::controller::Handler>) -> Self::HandleId",
  "pub fn spark_core::Controller::emit_channel_activated(&self)",
  "pub fn spark_core::Controller::emit_channel_deactivated(&self)",
  "pub fn spark_core::Controller::emit_exception(&self, error: spark_core::error::CoreError)",
  "pub fn spark_core::Controller::emit_read(&self, msg: spark_core::buffer::message::PipelineMessage)",
  "pub fn spark_core::Controller::emit_read_completed(&self)",
  "pub fn spark_core::Controller::emit_user_event(&self, event: spark_core::observability::events::CoreUserEvent)",
  "pub fn spark_core::Controller::emit_writability_changed(&self, is_writable: bool)",
  "pub fn spark_core::Controller::epoch(&self) -> u64",
  "pub fn spark_core::Controller::install_middleware(&self, middleware: &dyn spark_core::pipeline::middleware::Middleware, services: &spark_core::CoreServices) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::Controller::register_inbound_handler(&self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::InboundHandler>)",
  "pub fn spark_core::Controller::register_inbound_handler_static(&self, label: &str, handler: &'static dyn spark_core::pipeline::handler::InboundHandler)",
  "pub fn spark_core::Controller::register_outbound_handler(&self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::OutboundHandler>)",
  "pub fn spark_core::Controller::register_outbound_handler_static(&self, label: &str, handler: &'static dyn spark_core::pipeline::handler::OutboundHandler)",
  "pub fn spark_core::Controller::registry(&self) -> &dyn spark_core::pipeline::controller::HandlerRegistry",
  "pub fn spark_core::Controller::remove_handler(&self, handle: Self::HandleId) -> bool",
  "pub fn spark_core::Controller::replace_handler(&self, handle: Self::HandleId, handler: alloc::sync::Arc<dyn spark_core::pipeline::controller::Handler>) -> bool",
  "impl spark_core::pipeline::controller::Controller for spark_core::pipeline::controller::HotSwapController",
  "pub type spark_core::pipeline::controller::HotSwapController::HandleId = spark_core::pipeline::controller::ControllerHandleId",
  "pub fn spark_core::pipeline::controller::HotSwapController::add_handler_after(&self, anchor: Self::HandleId, label: &str, handler: alloc::sync::Arc<dyn spark_core::pipeline::controller::Handler>) -> Self::HandleId",
  "pub fn spark_core::pipeline::controller::HotSwapController::emit_channel_activated(&self)",
  "pub fn spark_core::pipeline::controller::HotSwapController::emit_channel_deactivated(&self)",
  "pub fn spark_core::pipeline::controller::HotSwapController::emit_exception(&self, error: spark_core::error::CoreError)",
  "pub fn spark_core::pipeline::controller::HotSwapController::emit_read(&self, msg: spark_core::buffer::message::PipelineMessage)",
  "pub fn spark_core::pipeline::controller::HotSwapController::emit_read_completed(&self)",
  "pub fn spark_core::pipeline::controller::HotSwapController::emit_user_event(&self, event: spark_core::observability::events::CoreUserEvent)",
  "pub fn spark_core::pipeline::controller::HotSwapController::emit_writability_changed(&self, is_writable: bool)",
  "pub fn spark_core::pipeline::controller::HotSwapController::epoch(&self) -> u64",
  "pub fn spark_core::pipeline::controller::HotSwapController::install_middleware(&self, _middleware: &dyn spark_core::pipeline::middleware::Middleware, _services: &spark_core::CoreServices) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::pipeline::controller::HotSwapController::register_inbound_handler(&self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::InboundHandler>)",
  "pub fn spark_core::pipeline::controller::HotSwapController::register_outbound_handler(&self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::OutboundHandler>)",
  "pub fn spark_core::pipeline::controller::HotSwapController::registry(&self) -> &dyn spark_core::pipeline::controller::HandlerRegistry",
  "pub fn spark_core::pipeline::controller::HotSwapController::remove_handler(&self, handle: Self::HandleId) -> bool",
  "pub fn spark_core::pipeline::controller::HotSwapController::replace_handler(&self, handle: Self::HandleId, handler: alloc::sync::Arc<dyn spark_core::pipeline::controller::Handler>) -> bool",
  "impl spark_core::pipeline::controller::Controller for spark_core::pipeline::traits::object::ControllerHandle",
  "pub type spark_core::pipeline::traits::object::ControllerHandle::HandleId = spark_core::pipeline::controller::ControllerHandleId",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::add_handler_after(&self, anchor: Self::HandleId, label: &str, handler: alloc::sync::Arc<dyn spark_core::pipeline::controller::Handler>) -> Self::HandleId",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_channel_activated(&self)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_channel_deactivated(&self)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_exception(&self, error: spark_core::error::CoreError)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_read(&self, msg: spark_core::buffer::message::PipelineMessage)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_read_completed(&self)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_user_event(&self, event: spark_core::observability::events::CoreUserEvent)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_writability_changed(&self, is_writable: bool)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::epoch(&self) -> u64",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::install_middleware(&self, middleware: &dyn spark_core::pipeline::middleware::Middleware, services: &spark_core::CoreServices) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::register_inbound_handler(&self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::InboundHandler>)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::register_inbound_handler_static(&self, label: &str, handler: &'static dyn spark_core::pipeline::handler::InboundHandler)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::register_outbound_handler(&self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::OutboundHandler>)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::register_outbound_handler_static(&self, label: &str, handler: &'static dyn spark_core::pipeline::handler::OutboundHandler)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::registry(&self) -> &dyn spark_core::pipeline::controller::HandlerRegistry",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::remove_handler(&self, handle: Self::HandleId) -> bool",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::replace_handler(&self, handle: Self::HandleId, handler: alloc::sync::Arc<dyn spark_core::pipeline::controller::Handler>) -> bool",
  "pub trait spark_core::ControllerFactory: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub type spark_core::ControllerFactory::Controller: spark_core::pipeline::controller::Controller<HandleId = spark_core::pipeline::controller::ControllerHandleId>",
  "pub fn spark_core::ControllerFactory::build(&self, core_services: &spark_core::CoreServices) -> core::result::Result<Self::Controller, spark_core::error::CoreError>",
  "impl spark_core::pipeline::traits::generic::ControllerFactory for spark_core::pipeline::traits::object::DynControllerFactoryAdapter",
  "pub type spark_core::pipeline::traits::object::DynControllerFactoryAdapter::Controller = spark_core::pipeline::traits::object::ControllerHandle",
  "pub fn spark_core::pipeline::traits::object::DynControllerFactoryAdapter::build(&self, core_services: &spark_core::CoreServices) -> core::result::Result<Self::Controller, spark_core::error::CoreError>",
  "pub trait spark_core::Counter: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::Counter::add(&self, value: u64, attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub fn spark_core::Counter::increment(&self, attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub trait spark_core::Decode: core::marker::Sized",
  "pub fn spark_core::Decode::decode(message: spark_core::buffer::message::PipelineMessage) -> core::result::Result<Self, spark_core::error::SparkError>",
  "impl spark_core::service::auto_dyn::Decode for spark_core::buffer::message::PipelineMessage",
  "pub fn spark_core::buffer::message::PipelineMessage::decode(message: spark_core::buffer::message::PipelineMessage) -> core::result::Result<Self, spark_core::error::SparkError>",
  "impl<T> spark_core::service::auto_dyn::Decode for T where T: core::convert::TryFrom<spark_core::buffer::message::PipelineMessage, Error = spark_core::error::SparkError>",
  "pub fn T::decode(message: spark_core::buffer::message::PipelineMessage) -> core::result::Result<Self, spark_core::error::SparkError>",
  "pub trait spark_core::DuplexHandler: spark_core::pipeline::handler::InboundHandler + spark_core::pipeline::handler::OutboundHandler + Sealed",
  "impl<T> spark_core::pipeline::handler::DuplexHandler for T where T: spark_core::pipeline::handler::InboundHandler + spark_core::pipeline::handler::OutboundHandler",
  "pub trait spark_core::DynCodec: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::DynCodec::decode_dyn(&self, src: &mut spark_core::buffer::ErasedSparkBuf, ctx: &mut spark_core::DecodeContext<'_>) -> core::result::Result<spark_core::DecodeOutcome<alloc::boxed::Box<(dyn core::any::Any + core::marker::Send + core::marker::Sync)>>, spark_core::error::CoreError>",
  "pub fn spark_core::DynCodec::descriptor(&self) -> &spark_core::CodecDescriptor",
  "pub fn spark_core::DynCodec::encode_dyn(&self, item: &(dyn core::any::Any + core::marker::Send + core::marker::Sync), ctx: &mut spark_core::EncodeContext<'_>) -> core::result::Result<spark_core::EncodedPayload, spark_core::error::CoreError>",
  "impl<C> spark_core::codec::traits::object::DynCodec for spark_core::codec::traits::object::TypedCodecAdapter<C> where C: spark_core::codec::traits::generic::Codec",
  "pub fn spark_core::codec::traits::object::TypedCodecAdapter<C>::decode_dyn(&self, src: &mut spark_core::buffer::ErasedSparkBuf, ctx: &mut spark_core::DecodeContext<'_>) -> core::result::Result<spark_core::DecodeOutcome<alloc::boxed::Box<(dyn core::any::Any + core::marker::Send + core::marker::Sync)>>, spark_core::error::CoreError>",
  "pub fn spark_core::codec::traits::object::TypedCodecAdapter<C>::descriptor(&self) -> &spark_core::CodecDescriptor",
  "pub fn spark_core::codec::traits::object::TypedCodecAdapter<C>::encode_dyn(&self, item: &(dyn core::any::Any + core::marker::Send + core::marker::Sync), ctx: &mut spark_core::EncodeContext<'_>) -> core::result::Result<spark_core::EncodedPayload, spark_core::error::CoreError>",
  "pub trait spark_core::DynCodecFactory: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::DynCodecFactory::descriptor(&self) -> &spark_core::CodecDescriptor",
  "pub fn spark_core::DynCodecFactory::instantiate(&self, negotiated: &spark_core::NegotiatedCodec) -> core::result::Result<alloc::boxed::Box<dyn spark_core::codec::traits::object::DynCodec>, spark_core::error::CoreError>",
  "impl<C, F> spark_core::DynCodecFactory for spark_core::TypedCodecFactory<C, F> where C: spark_core::codec::traits::generic::Codec, F: core::ops::function::Fn(&spark_core::NegotiatedCodec) -> C + core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::TypedCodecFactory<C, F>::descriptor(&self) -> &spark_core::CodecDescriptor",
  "pub fn spark_core::TypedCodecFactory<C, F>::instantiate(&self, negotiated: &spark_core::NegotiatedCodec) -> core::result::Result<alloc::boxed::Box<dyn spark_core::codec::traits::object::DynCodec>, spark_core::error::CoreError>",
  "pub trait spark_core::DynConfigurationSource: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::DynConfigurationSource::load_dyn(&self, profile: &spark_core::ProfileId) -> core::result::Result<alloc::vec::Vec<spark_core::ConfigurationLayer>, spark_core::ConfigurationError>",
  "pub fn spark_core::DynConfigurationSource::watch_dyn<'a>(&'a self, profile: &spark_core::ProfileId) -> core::result::Result<spark_core::future::BoxStream<'a, spark_core::ConfigDelta>, spark_core::ConfigurationError>",
  "impl<T> spark_core::DynConfigurationSource for T where T: spark_core::ConfigurationSource, for<'a> <T as spark_core::ConfigurationSource>::Stream: core::marker::Sized",
  "pub fn T::load_dyn(&self, profile: &spark_core::ProfileId) -> core::result::Result<alloc::vec::Vec<spark_core::ConfigurationLayer>, spark_core::ConfigurationError>",
  "pub fn T::watch_dyn<'a>(&'a self, profile: &spark_core::ProfileId) -> core::result::Result<spark_core::future::BoxStream<'a, spark_core::ConfigDelta>, spark_core::ConfigurationError>",
  "pub trait spark_core::DynRouter: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::DynRouter::route_dyn(&self, context: spark_core::router::context::RoutingContext<'_, spark_core::buffer::message::PipelineMessage>) -> core::result::Result<spark_core::router::traits::object::RouteDecisionObject, spark_core::router::traits::generic::RouteError<spark_core::error::SparkError>>",
  "pub fn spark_core::DynRouter::snapshot(&self) -> spark_core::router::context::RoutingSnapshot<'_>",
  "pub fn spark_core::DynRouter::validate(&self, descriptor: &spark_core::router::catalog::RouteDescriptor) -> spark_core::router::binding::RouteValidation",
  "impl<R, Adapter> spark_core::router::traits::object::DynRouter for spark_core::router::traits::object::RouterObject<R, Adapter> where R: spark_core::router::traits::generic::Router<spark_core::buffer::message::PipelineMessage, Error = spark_core::error::SparkError> + core::marker::Send + core::marker::Sync, Adapter: core::ops::function::Fn(spark_core::router::binding::RouteBinding<<R as spark_core::router::traits::generic::Router>::Service, spark_core::buffer::message::PipelineMessage>) -> core::result::Result<spark_core::router::traits::object::RouteBindingObject, spark_core::error::SparkError> + core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::router::traits::object::RouterObject<R, Adapter>::route_dyn(&self, context: spark_core::router::context::RoutingContext<'_, spark_core::buffer::message::PipelineMessage>) -> core::result::Result<spark_core::router::traits::object::RouteDecisionObject, spark_core::router::traits::generic::RouteError<spark_core::error::SparkError>>",
  "pub fn spark_core::router::traits::object::RouterObject<R, Adapter>::snapshot(&self) -> spark_core::router::context::RoutingSnapshot<'_>",
  "pub fn spark_core::router::traits::object::RouterObject<R, Adapter>::validate(&self, descriptor: &spark_core::router::catalog::RouteDescriptor) -> spark_core::router::binding::RouteValidation",
  "pub trait spark_core::DynServerTransport: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::DynServerTransport::local_addr_dyn(&self, ctx: &spark_core::context::ExecutionContext<'_>) -> spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::DynServerTransport::shutdown_dyn<'life0, 'life1, 'life2, 'async_trait>(&'life0 self, ctx: &'life1 spark_core::context::ExecutionContext<'life2>, plan: spark_core::transport::server::ListenerShutdown) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<(), spark_core::error::CoreError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait, 'life1: 'async_trait, 'life2: 'async_trait",
  "impl<T> spark_core::transport::traits::object::DynServerTransport for spark_core::transport::traits::object::ServerTransportObject<T> where T: spark_core::transport::traits::generic::ServerTransport",
  "pub fn spark_core::transport::traits::object::ServerTransportObject<T>::local_addr_dyn(&self, ctx: &spark_core::context::ExecutionContext<'_>) -> spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::transport::traits::object::ServerTransportObject<T>::shutdown_dyn<'life0, 'life1, 'life2, 'async_trait>(&'life0 self, ctx: &'life1 spark_core::context::ExecutionContext<'life2>, plan: spark_core::transport::server::ListenerShutdown) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<(), spark_core::error::CoreError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait, 'life1: 'async_trait, 'life2: 'async_trait",
  "pub trait spark_core::DynService: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::DynService::call_dyn<'life0, 'async_trait>(&'life0 mut self, ctx: spark_core::contract::CallContext, req: spark_core::buffer::message::PipelineMessage) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<spark_core::buffer::message::PipelineMessage, spark_core::error::SparkError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait",
  "pub fn spark_core::DynService::closed<'life0, 'async_trait>(&'life0 mut self) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<(), spark_core::error::SparkError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait",
  "pub fn spark_core::DynService::graceful_close(&mut self, reason: spark_core::contract::CloseReason)",
  "pub fn spark_core::DynService::poll_ready_dyn(&mut self, ctx: &spark_core::context::ExecutionContext<'_>, cx: &mut core::task::wake::Context<'_>) -> spark_core::status::ready::PollReady<spark_core::error::SparkError>",
  "impl<S, Request, Response, Decode, Encode> spark_core::service::traits::object::DynService for spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode> where S: spark_core::service::traits::generic::Service<Request, Response = Response, Error = spark_core::error::SparkError>, Decode: core::ops::function::Fn(spark_core::buffer::message::PipelineMessage) -> core::result::Result<Request, spark_core::error::SparkError> + core::marker::Send + core::marker::Sync + 'static, Encode: core::ops::function::Fn(Response) -> spark_core::buffer::message::PipelineMessage + core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::call_dyn<'life0, 'async_trait>(&'life0 mut self, ctx: spark_core::contract::CallContext, req: spark_core::buffer::message::PipelineMessage) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<spark_core::buffer::message::PipelineMessage, spark_core::error::SparkError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::closed<'life0, 'async_trait>(&'life0 mut self) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<(), spark_core::error::SparkError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::graceful_close(&mut self, reason: spark_core::contract::CloseReason)",
  "pub fn spark_core::service::traits::object::ServiceObject<S, Request, Response, Decode, Encode>::poll_ready_dyn(&mut self, ctx: &spark_core::context::ExecutionContext<'_>, cx: &mut core::task::wake::Context<'_>) -> spark_core::status::ready::PollReady<spark_core::error::SparkError>",
  "pub trait spark_core::DynTransportFactory: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::DynTransportFactory::bind_dyn<'life0, 'life1, 'life2, 'async_trait>(&'life0 self, ctx: &'life1 spark_core::context::ExecutionContext<'life2>, config: spark_core::transport::factory::ListenerConfig, pipeline_factory: alloc::sync::Arc<dyn spark_core::pipeline::traits::object::DynControllerFactory>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<alloc::boxed::Box<dyn spark_core::transport::traits::object::DynServerTransport>, spark_core::error::CoreError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait, 'life1: 'async_trait, 'life2: 'async_trait",
  "pub fn spark_core::DynTransportFactory::connect_dyn<'life0, 'life1, 'life2, 'async_trait>(&'life0 self, ctx: &'life1 spark_core::context::ExecutionContext<'life2>, intent: spark_core::transport::intent::ConnectionIntent, discovery: core::option::Option<alloc::sync::Arc<dyn spark_core::cluster::discovery::ServiceDiscovery>>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<alloc::boxed::Box<dyn spark_core::pipeline::channel::Channel>, spark_core::error::CoreError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait, 'life1: 'async_trait, 'life2: 'async_trait",
  "pub fn spark_core::DynTransportFactory::scheme_dyn(&self, ctx: &spark_core::context::ExecutionContext<'_>) -> &'static str",
  "impl<F> spark_core::transport::traits::object::DynTransportFactory for spark_core::transport::traits::object::TransportFactoryObject<F> where F: spark_core::transport::traits::generic::TransportFactory",
  "pub fn spark_core::transport::traits::object::TransportFactoryObject<F>::bind_dyn<'life0, 'life1, 'life2, 'async_trait>(&'life0 self, ctx: &'life1 spark_core::context::ExecutionContext<'life2>, config: spark_core::transport::factory::ListenerConfig, pipeline_factory: alloc::sync::Arc<dyn spark_core::pipeline::traits::object::DynControllerFactory>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<alloc::boxed::Box<dyn spark_core::transport::traits::object::DynServerTransport>, spark_core::error::CoreError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait, 'life1: 'async_trait, 'life2: 'async_trait",
  "pub fn spark_core::transport::traits::object::TransportFactoryObject<F>::connect_dyn<'life0, 'life1, 'life2, 'async_trait>(&'life0 self, ctx: &'life1 spark_core::context::ExecutionContext<'life2>, intent: spark_core::transport::intent::ConnectionIntent, discovery: core::option::Option<alloc::sync::Arc<dyn spark_core::cluster::discovery::ServiceDiscovery>>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<alloc::boxed::Box<dyn spark_core::pipeline::channel::Channel>, spark_core::error::CoreError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait, 'life1: 'async_trait, 'life2: 'async_trait",
  "pub fn spark_core::transport::traits::object::TransportFactoryObject<F>::scheme_dyn(&self, ctx: &spark_core::context::ExecutionContext<'_>) -> &'static str",
  "pub trait spark_core::Encode",
  "pub fn spark_core::Encode::encode(self) -> spark_core::buffer::message::PipelineMessage",
  "impl<T> spark_core::service::auto_dyn::Encode for T where T: core::convert::Into<spark_core::buffer::message::PipelineMessage>",
  "pub fn T::encode(self) -> spark_core::buffer::message::PipelineMessage",
  "pub trait spark_core::Encoder: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub type spark_core::Encoder::Item: core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::Encoder::descriptor(&self) -> &spark_core::CodecDescriptor",
  "pub fn spark_core::Encoder::encode(&self, item: &Self::Item, ctx: &mut spark_core::EncodeContext<'_>) -> core::result::Result<spark_core::EncodedPayload, spark_core::error::CoreError>",
  "impl<T> spark_core::Encoder for T where T: spark_core::codec::traits::generic::Codec",
  "pub type T::Item = <T as spark_core::codec::traits::generic::Codec>::Outgoing",
  "pub fn T::descriptor(&self) -> &spark_core::CodecDescriptor",
  "pub fn T::encode(&self, item: &Self::Item, ctx: &mut spark_core::EncodeContext<'_>) -> core::result::Result<spark_core::EncodedPayload, spark_core::error::CoreError>",
  "pub trait spark_core::Error: core::fmt::Debug + core::fmt::Display + crate::sealed::Sealed",
  "pub fn spark_core::Error::source(&self) -> core::option::Option<&(dyn spark_core::Error + 'static)>",
  "impl spark_core::Error for spark_core::BuildError",
  "pub fn spark_core::BuildError::source(&self) -> core::option::Option<&(dyn spark_core::Error + 'static)>",
  "impl spark_core::Error for spark_core::ConfigurationError",
  "pub fn spark_core::ConfigurationError::source(&self) -> core::option::Option<&(dyn spark_core::Error + 'static)>",
  "impl spark_core::Error for spark_core::SloPolicyConfigError",
  "pub fn spark_core::SloPolicyConfigError::source(&self) -> core::option::Option<&(dyn spark_core::Error + 'static)>",
  "impl spark_core::Error for spark_core::TimeoutConfigError",
  "pub fn spark_core::TimeoutConfigError::source(&self) -> core::option::Option<&(dyn spark_core::Error + 'static)>",
  "impl spark_core::Error for spark_core::configuration::SourceRegistrationError",
  "pub fn spark_core::configuration::SourceRegistrationError::source(&self) -> core::option::Option<&(dyn spark_core::Error + 'static)>",
  "impl spark_core::Error for spark_core::error::CoreError",
  "pub fn spark_core::error::CoreError::source(&self) -> core::option::Option<&(dyn spark_core::Error + 'static)>",
  "impl spark_core::Error for spark_core::error::DomainError",
  "pub fn spark_core::error::DomainError::source(&self) -> core::option::Option<&(dyn spark_core::Error + 'static)>",
  "impl spark_core::Error for spark_core::error::ImplError",
  "pub fn spark_core::error::ImplError::source(&self) -> core::option::Option<&(dyn spark_core::Error + 'static)>",
  "impl spark_core::Error for spark_core::error::SparkError",
  "pub fn spark_core::error::SparkError::source(&self) -> core::option::Option<&(dyn spark_core::Error + 'static)>",
  "impl spark_core::Error for spark_core::limits::LimitConfigError",
  "pub fn spark_core::limits::LimitConfigError::source(&self) -> core::option::Option<&(dyn spark_core::Error + 'static)>",
  "impl spark_core::Error for spark_core::security::keystore::KeyRetrievalError",
  "pub fn spark_core::security::keystore::KeyRetrievalError::source(&self) -> core::option::Option<&(dyn spark_core::Error + 'static)>",
  "impl spark_core::Error for spark_core::transport::handshake::HandshakeError",
  "pub fn spark_core::transport::handshake::HandshakeError::source(&self) -> core::option::Option<&(dyn spark_core::Error + 'static)>",
  "impl<E> spark_core::Error for alloc::boxed::Box<E> where E: spark_core::Error + ?core::marker::Sized",
  "pub fn alloc::boxed::Box<E>::source(&self) -> core::option::Option<&(dyn spark_core::Error + 'static)>",
  "pub trait spark_core::ExtensionsMap: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::ExtensionsMap::clear(&self)",
  "pub fn spark_core::ExtensionsMap::contains_key(&self, key: &core::any::TypeId) -> bool",
  "pub fn spark_core::ExtensionsMap::get<'a>(&'a self, key: &core::any::TypeId) -> core::option::Option<&'a (dyn core::any::Any + core::marker::Send + core::marker::Sync + 'static)>",
  "pub fn spark_core::ExtensionsMap::insert(&self, key: core::any::TypeId, value: alloc::boxed::Box<(dyn core::any::Any + core::marker::Send + core::marker::Sync)>)",
  "pub fn spark_core::ExtensionsMap::remove(&self, key: &core::any::TypeId) -> core::option::Option<alloc::boxed::Box<(dyn core::any::Any + core::marker::Send + core::marker::Sync)>>",
  "pub trait spark_core::Gauge: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::Gauge::decrement(&self, delta: f64, attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub fn spark_core::Gauge::increment(&self, delta: f64, attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub fn spark_core::Gauge::set(&self, value: f64, attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub trait spark_core::HandlerRegistry: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::HandlerRegistry::snapshot(&self) -> alloc::vec::Vec<spark_core::pipeline::controller::HandlerRegistration>",
  "pub trait spark_core::HealthCheckProvider: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::HealthCheckProvider::check_health<'life0, 'async_trait>(&'life0 self) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = spark_core::observability::health::ComponentHealth> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait",
  "pub trait spark_core::Histogram: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::Histogram::record(&self, value: f64, attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub trait spark_core::HostLifecycle: Sealed",
  "pub type spark_core::HostLifecycle::Error: spark_core::Error",
  "pub fn spark_core::HostLifecycle::on_ready(&self, ctx: &spark_core::host::context::HostContext) -> core::result::Result<(), Self::Error>",
  "pub fn spark_core::HostLifecycle::on_shutdown(&self, ctx: &spark_core::host::context::HostContext, reason: spark_core::host::lifecycle::ShutdownReason) -> core::result::Result<(), Self::Error>",
  "pub fn spark_core::HostLifecycle::on_starting(&self, ctx: &spark_core::host::context::HostContext, phase: spark_core::host::lifecycle::StartupPhase) -> core::result::Result<(), Self::Error>",
  "pub trait spark_core::InboundHandler: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::InboundHandler::describe(&self) -> spark_core::pipeline::middleware::MiddlewareDescriptor",
  "pub fn spark_core::InboundHandler::on_channel_active(&self, ctx: &dyn spark_core::pipeline::context::Context)",
  "pub fn spark_core::InboundHandler::on_channel_inactive(&self, ctx: &dyn spark_core::pipeline::context::Context)",
  "pub fn spark_core::InboundHandler::on_exception_caught(&self, ctx: &dyn spark_core::pipeline::context::Context, error: spark_core::error::CoreError)",
  "pub fn spark_core::InboundHandler::on_read(&self, ctx: &dyn spark_core::pipeline::context::Context, msg: spark_core::buffer::message::PipelineMessage)",
  "pub fn spark_core::InboundHandler::on_read_complete(&self, ctx: &dyn spark_core::pipeline::context::Context)",
  "pub fn spark_core::InboundHandler::on_user_event(&self, ctx: &dyn spark_core::pipeline::context::Context, event: spark_core::observability::events::CoreUserEvent)",
  "pub fn spark_core::InboundHandler::on_writability_changed(&self, ctx: &dyn spark_core::pipeline::context::Context, is_writable: bool)",
  "impl spark_core::pipeline::handler::InboundHandler for spark_core::pipeline::default_handlers::ExceptionAutoResponder",
  "pub fn spark_core::pipeline::default_handlers::ExceptionAutoResponder::on_channel_active(&self, _ctx: &dyn spark_core::pipeline::context::Context)",
  "pub fn spark_core::pipeline::default_handlers::ExceptionAutoResponder::on_channel_inactive(&self, _ctx: &dyn spark_core::pipeline::context::Context)",
  "pub fn spark_core::pipeline::default_handlers::ExceptionAutoResponder::on_exception_caught(&self, ctx: &dyn spark_core::pipeline::context::Context, error: spark_core::error::CoreError)",
  "pub fn spark_core::pipeline::default_handlers::ExceptionAutoResponder::on_read(&self, _ctx: &dyn spark_core::pipeline::context::Context, _msg: spark_core::buffer::message::PipelineMessage)",
  "pub fn spark_core::pipeline::default_handlers::ExceptionAutoResponder::on_read_complete(&self, _ctx: &dyn spark_core::pipeline::context::Context)",
  "pub fn spark_core::pipeline::default_handlers::ExceptionAutoResponder::on_user_event(&self, _ctx: &dyn spark_core::pipeline::context::Context, _event: spark_core::observability::events::CoreUserEvent)",
  "pub fn spark_core::pipeline::default_handlers::ExceptionAutoResponder::on_writability_changed(&self, _ctx: &dyn spark_core::pipeline::context::Context, _is_writable: bool)",
  "pub trait spark_core::IntoCoreError: Sealed",
  "pub fn spark_core::IntoCoreError::into_core_error(self) -> spark_core::error::CoreError",
  "impl spark_core::error::IntoCoreError for spark_core::error::DomainError",
  "pub fn spark_core::error::DomainError::into_core_error(self) -> spark_core::error::CoreError",
  "pub trait spark_core::IntoDomainError: Sealed",
  "pub fn spark_core::IntoDomainError::into_domain_error(self, kind: spark_core::error::DomainErrorKind, code: &'static str) -> spark_core::error::DomainError",
  "impl spark_core::error::IntoDomainError for spark_core::error::ImplError",
  "pub fn spark_core::error::ImplError::into_domain_error(self, kind: spark_core::error::DomainErrorKind, code: &'static str) -> spark_core::error::DomainError",
  "pub trait spark_core::IntoEmpty: Sealed",
  "pub fn spark_core::IntoEmpty::into_empty(self) -> spark_core::common::Empty",
  "impl spark_core::common::IntoEmpty for ()",
  "pub fn ()::into_empty(self) -> spark_core::common::Empty",
  "pub trait spark_core::KeySource: Sealed",
  "pub fn spark_core::KeySource::fetch(&self, request: &spark_core::security::keystore::KeyRequest) -> core::result::Result<spark_core::security::keystore::KeyResponse, spark_core::security::keystore::KeyRetrievalError>",
  "pub trait spark_core::Layer<S, Request> where S: spark_core::service::traits::generic::Service<Request>: Sealed",
  "pub type spark_core::Layer::Service: spark_core::service::traits::generic::Service<Request, Response = <S as spark_core::service::traits::generic::Service>::Response, Error = <S as spark_core::service::traits::generic::Service>::Error>",
  "pub fn spark_core::Layer::layer(&self, inner: S) -> Self::Service",
  "pub trait spark_core::Logger: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::Logger::debug(&self, message: &str, trace: core::option::Option<&spark_core::observability::trace::TraceContext>)",
  "pub fn spark_core::Logger::debug_with_fields(&self, message: &str, attributes: spark_core::observability::logging::LogField<'_>, trace: core::option::Option<&spark_core::observability::trace::TraceContext>)",
  "pub fn spark_core::Logger::error(&self, message: &str, error: core::option::Option<&dyn spark_core::Error>, trace: core::option::Option<&spark_core::observability::trace::TraceContext>)",
  "pub fn spark_core::Logger::error_with_fields(&self, message: &str, error: core::option::Option<&dyn spark_core::Error>, attributes: spark_core::observability::logging::LogField<'_>, trace: core::option::Option<&spark_core::observability::trace::TraceContext>)",
  "pub fn spark_core::Logger::fatal(&self, message: &str, error: core::option::Option<&dyn spark_core::Error>, trace: core::option::Option<&spark_core::observability::trace::TraceContext>)",
  "pub fn spark_core::Logger::fatal_with_fields(&self, message: &str, error: core::option::Option<&dyn spark_core::Error>, attributes: spark_core::observability::logging::LogField<'_>, trace: core::option::Option<&spark_core::observability::trace::TraceContext>)",
  "pub fn spark_core::Logger::info(&self, message: &str, trace: core::option::Option<&spark_core::observability::trace::TraceContext>)",
  "pub fn spark_core::Logger::info_with_fields(&self, message: &str, attributes: spark_core::observability::logging::LogField<'_>, trace: core::option::Option<&spark_core::observability::trace::TraceContext>)",
  "pub fn spark_core::Logger::log(&self, record: &spark_core::observability::logging::LogRecord<'_>)",
  "pub fn spark_core::Logger::trace(&self, message: &str, trace: core::option::Option<&spark_core::observability::trace::TraceContext>)",
  "pub fn spark_core::Logger::trace_with_fields(&self, message: &str, attributes: spark_core::observability::logging::LogField<'_>, trace: core::option::Option<&spark_core::observability::trace::TraceContext>)",
  "pub fn spark_core::Logger::warn(&self, message: &str, trace: core::option::Option<&spark_core::observability::trace::TraceContext>)",
  "pub fn spark_core::Logger::warn_with_fields(&self, message: &str, attributes: spark_core::observability::logging::LogField<'_>, trace: core::option::Option<&spark_core::observability::trace::TraceContext>)",
  "impl spark_core::observability::logging::Logger for spark_core::pipeline::instrument::InstrumentedLogger",
  "pub fn spark_core::pipeline::instrument::InstrumentedLogger::log(&self, record: &spark_core::observability::logging::LogRecord<'_>)",
  "pub trait spark_core::Loopback: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::Loopback::fire_loopback_inbound(&self, event: impl core::any::Any + core::marker::Send + core::marker::Sync)",
  "pub fn spark_core::Loopback::fire_loopback_outbound(&self, event: impl core::any::Any + core::marker::Send + core::marker::Sync)",
  "pub trait spark_core::MetricsProvider: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::MetricsProvider::counter(&self, descriptor: &spark_core::observability::metrics::InstrumentDescriptor<'_>) -> alloc::sync::Arc<dyn spark_core::observability::metrics::Counter>",
  "pub fn spark_core::MetricsProvider::gauge(&self, descriptor: &spark_core::observability::metrics::InstrumentDescriptor<'_>) -> alloc::sync::Arc<dyn spark_core::observability::metrics::Gauge>",
  "pub fn spark_core::MetricsProvider::histogram(&self, descriptor: &spark_core::observability::metrics::InstrumentDescriptor<'_>) -> alloc::sync::Arc<dyn spark_core::observability::metrics::Histogram>",
  "pub fn spark_core::MetricsProvider::record_counter_add(&self, descriptor: &spark_core::observability::metrics::InstrumentDescriptor<'_>, value: u64, attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub fn spark_core::MetricsProvider::record_gauge_set(&self, descriptor: &spark_core::observability::metrics::InstrumentDescriptor<'_>, value: f64, attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub fn spark_core::MetricsProvider::record_histogram(&self, descriptor: &spark_core::observability::metrics::InstrumentDescriptor<'_>, value: f64, attributes: spark_core::observability::attributes::AttributeSet<'_>)",
  "pub trait spark_core::Middleware: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::Middleware::configure(&self, chain: &mut dyn spark_core::pipeline::middleware::ChainBuilder, services: &spark_core::CoreServices) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::Middleware::descriptor(&self) -> spark_core::pipeline::middleware::MiddlewareDescriptor",
  "pub trait spark_core::ObservabilityFacade: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::ObservabilityFacade::health_checks(&self) -> &spark_core::observability::health::HealthChecks",
  "pub fn spark_core::ObservabilityFacade::logger(&self) -> alloc::sync::Arc<dyn spark_core::observability::logging::Logger>",
  "pub fn spark_core::ObservabilityFacade::metrics(&self) -> alloc::sync::Arc<dyn spark_core::observability::metrics::MetricsProvider>",
  "pub fn spark_core::ObservabilityFacade::ops_bus(&self) -> alloc::sync::Arc<dyn spark_core::observability::events::OpsEventBus>",
  "impl spark_core::observability::facade::ObservabilityFacade for spark_core::observability::facade::DefaultObservabilityFacade",
  "pub fn spark_core::observability::facade::DefaultObservabilityFacade::health_checks(&self) -> &spark_core::observability::health::HealthChecks",
  "pub fn spark_core::observability::facade::DefaultObservabilityFacade::logger(&self) -> alloc::sync::Arc<dyn spark_core::observability::logging::Logger>",
  "pub fn spark_core::observability::facade::DefaultObservabilityFacade::metrics(&self) -> alloc::sync::Arc<dyn spark_core::observability::metrics::MetricsProvider>",
  "pub fn spark_core::observability::facade::DefaultObservabilityFacade::ops_bus(&self) -> alloc::sync::Arc<dyn spark_core::observability::events::OpsEventBus>",
  "pub trait spark_core::OpsEventBus: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::OpsEventBus::broadcast(&self, event: spark_core::observability::events::OpsEvent)",
  "pub fn spark_core::OpsEventBus::set_event_policy(&self, kind: spark_core::observability::events::OpsEventKind, policy: spark_core::observability::events::EventPolicy)",
  "pub fn spark_core::OpsEventBus::subscribe(&self) -> spark_core::future::BoxStream<'static, spark_core::observability::events::OpsEvent>",
  "pub trait spark_core::OutboundHandler: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::OutboundHandler::describe(&self) -> spark_core::pipeline::middleware::MiddlewareDescriptor",
  "pub fn spark_core::OutboundHandler::on_close_graceful(&self, ctx: &dyn spark_core::pipeline::context::Context, deadline: core::option::Option<core::time::Duration>) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::OutboundHandler::on_flush(&self, ctx: &dyn spark_core::pipeline::context::Context) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::OutboundHandler::on_write(&self, ctx: &dyn spark_core::pipeline::context::Context, msg: spark_core::buffer::message::PipelineMessage) -> core::result::Result<spark_core::pipeline::channel::WriteSignal, spark_core::error::CoreError>",
  "pub trait spark_core::Pipeline: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub type spark_core::Pipeline::HandleId: core::marker::Copy + core::cmp::Eq + core::marker::Send + core::marker::Sync + 'static",
  "pub fn spark_core::Pipeline::add_handler_after(&self, anchor: Self::HandleId, label: &str, handler: alloc::sync::Arc<dyn spark_core::pipeline::controller::Handler>) -> Self::HandleId",
  "pub fn spark_core::Pipeline::emit_channel_activated(&self)",
  "pub fn spark_core::Pipeline::emit_channel_deactivated(&self)",
  "pub fn spark_core::Pipeline::emit_exception(&self, error: spark_core::error::CoreError)",
  "pub fn spark_core::Pipeline::emit_read(&self, msg: spark_core::buffer::message::PipelineMessage)",
  "pub fn spark_core::Pipeline::emit_read_completed(&self)",
  "pub fn spark_core::Pipeline::emit_user_event(&self, event: spark_core::observability::events::CoreUserEvent)",
  "pub fn spark_core::Pipeline::emit_writability_changed(&self, is_writable: bool)",
  "pub fn spark_core::Pipeline::epoch(&self) -> u64",
  "pub fn spark_core::Pipeline::install_middleware(&self, middleware: &dyn spark_core::pipeline::middleware::Middleware, services: &spark_core::CoreServices) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::Pipeline::register_inbound_handler(&self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::InboundHandler>)",
  "pub fn spark_core::Pipeline::register_inbound_handler_static(&self, label: &str, handler: &'static dyn spark_core::pipeline::handler::InboundHandler)",
  "pub fn spark_core::Pipeline::register_outbound_handler(&self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::OutboundHandler>)",
  "pub fn spark_core::Pipeline::register_outbound_handler_static(&self, label: &str, handler: &'static dyn spark_core::pipeline::handler::OutboundHandler)",
  "pub fn spark_core::Pipeline::registry(&self) -> &dyn spark_core::pipeline::controller::HandlerRegistry",
  "pub fn spark_core::Pipeline::remove_handler(&self, handle: Self::HandleId) -> bool",
  "pub fn spark_core::Pipeline::replace_handler(&self, handle: Self::HandleId, handler: alloc::sync::Arc<dyn spark_core::pipeline::controller::Handler>) -> bool",
  "impl spark_core::pipeline::controller::Controller for spark_core::pipeline::controller::HotSwapController",
  "pub type spark_core::pipeline::controller::HotSwapController::HandleId = spark_core::pipeline::controller::ControllerHandleId",
  "pub fn spark_core::pipeline::controller::HotSwapController::add_handler_after(&self, anchor: Self::HandleId, label: &str, handler: alloc::sync::Arc<dyn spark_core::pipeline::controller::Handler>) -> Self::HandleId",
  "pub fn spark_core::pipeline::controller::HotSwapController::emit_channel_activated(&self)",
  "pub fn spark_core::pipeline::controller::HotSwapController::emit_channel_deactivated(&self)",
  "pub fn spark_core::pipeline::controller::HotSwapController::emit_exception(&self, error: spark_core::error::CoreError)",
  "pub fn spark_core::pipeline::controller::HotSwapController::emit_read(&self, msg: spark_core::buffer::message::PipelineMessage)",
  "pub fn spark_core::pipeline::controller::HotSwapController::emit_read_completed(&self)",
  "pub fn spark_core::pipeline::controller::HotSwapController::emit_user_event(&self, event: spark_core::observability::events::CoreUserEvent)",
  "pub fn spark_core::pipeline::controller::HotSwapController::emit_writability_changed(&self, is_writable: bool)",
  "pub fn spark_core::pipeline::controller::HotSwapController::epoch(&self) -> u64",
  "pub fn spark_core::pipeline::controller::HotSwapController::install_middleware(&self, _middleware: &dyn spark_core::pipeline::middleware::Middleware, _services: &spark_core::CoreServices) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::pipeline::controller::HotSwapController::register_inbound_handler(&self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::InboundHandler>)",
  "pub fn spark_core::pipeline::controller::HotSwapController::register_outbound_handler(&self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::OutboundHandler>)",
  "pub fn spark_core::pipeline::controller::HotSwapController::registry(&self) -> &dyn spark_core::pipeline::controller::HandlerRegistry",
  "pub fn spark_core::pipeline::controller::HotSwapController::remove_handler(&self, handle: Self::HandleId) -> bool",
  "pub fn spark_core::pipeline::controller::HotSwapController::replace_handler(&self, handle: Self::HandleId, handler: alloc::sync::Arc<dyn spark_core::pipeline::controller::Handler>) -> bool",
  "impl spark_core::pipeline::controller::Controller for spark_core::pipeline::traits::object::ControllerHandle",
  "pub type spark_core::pipeline::traits::object::ControllerHandle::HandleId = spark_core::pipeline::controller::ControllerHandleId",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::add_handler_after(&self, anchor: Self::HandleId, label: &str, handler: alloc::sync::Arc<dyn spark_core::pipeline::controller::Handler>) -> Self::HandleId",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_channel_activated(&self)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_channel_deactivated(&self)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_exception(&self, error: spark_core::error::CoreError)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_read(&self, msg: spark_core::buffer::message::PipelineMessage)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_read_completed(&self)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_user_event(&self, event: spark_core::observability::events::CoreUserEvent)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::emit_writability_changed(&self, is_writable: bool)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::epoch(&self) -> u64",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::install_middleware(&self, middleware: &dyn spark_core::pipeline::middleware::Middleware, services: &spark_core::CoreServices) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::register_inbound_handler(&self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::InboundHandler>)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::register_inbound_handler_static(&self, label: &str, handler: &'static dyn spark_core::pipeline::handler::InboundHandler)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::register_outbound_handler(&self, label: &str, handler: alloc::boxed::Box<dyn spark_core::pipeline::handler::OutboundHandler>)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::register_outbound_handler_static(&self, label: &str, handler: &'static dyn spark_core::pipeline::handler::OutboundHandler)",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::registry(&self) -> &dyn spark_core::pipeline::controller::HandlerRegistry",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::remove_handler(&self, handle: Self::HandleId) -> bool",
  "pub fn spark_core::pipeline::traits::object::ControllerHandle::replace_handler(&self, handle: Self::HandleId, handler: alloc::sync::Arc<dyn spark_core::pipeline::controller::Handler>) -> bool",
  "pub trait spark_core::PipelineContext: core::marker::Send + core::marker::Sync + Sealed",
  "pub fn spark_core::PipelineContext::buffer_pool(&self) -> &dyn spark_core::buffer::pool::BufferPool",
  "pub fn spark_core::PipelineContext::call_context(&self) -> &spark_core::contract::CallContext",
  "pub fn spark_core::PipelineContext::channel(&self) -> &dyn spark_core::pipeline::channel::Channel",
  "pub fn spark_core::PipelineContext::close_graceful(&self, reason: spark_core::contract::CloseReason, deadline: core::option::Option<spark_core::contract::Deadline>)",
  "pub fn spark_core::PipelineContext::closed(&self) -> spark_core::future::BoxFuture<'static, core::result::Result<(), spark_core::error::SparkError>>",
  "pub fn spark_core::PipelineContext::controller(&self) -> &dyn spark_core::pipeline::controller::Controller<HandleId = spark_core::pipeline::controller::ControllerHandleId>",
  "pub fn spark_core::PipelineContext::discovery(&self) -> core::option::Option<&dyn spark_core::cluster::discovery::ServiceDiscovery>",
  "pub fn spark_core::PipelineContext::execution_context(&self) -> spark_core::context::ExecutionContext<'_>",
  "pub fn spark_core::PipelineContext::executor(&self) -> &dyn spark_core::TaskExecutor",
  "pub fn spark_core::PipelineContext::flush(&self)",
  "pub fn spark_core::PipelineContext::forward_read(&self, msg: spark_core::buffer::message::PipelineMessage)",
  "pub fn spark_core::PipelineContext::logger(&self) -> &dyn spark_core::observability::logging::Logger",
  "pub fn spark_core::PipelineContext::membership(&self) -> core::option::Option<&dyn spark_core::cluster::membership::ClusterMembership>",
  "pub fn spark_core::PipelineContext::metrics(&self) -> &dyn spark_core::observability::metrics::MetricsProvider",
  "pub fn spark_core::PipelineContext::timer(&self) -> &dyn spark_core::TimeDriver",
  "pub fn spark_core::PipelineContext::trace_context(&self) -> &spark_core::observability::trace::TraceContext",
  "pub fn spark_core::PipelineContext::write(&self, msg: spark_core::buffer::message::PipelineMessage) -> core::result::Result<spark_core::pipeline::channel::WriteSignal, spark_core::error::CoreError>",
  "pub trait spark_core::PipelineFactory: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub type spark_core::PipelineFactory::Controller: spark_core::pipeline::controller::Controller<HandleId = spark_core::pipeline::controller::ControllerHandleId>",
  "pub fn spark_core::PipelineFactory::build(&self, core_services: &spark_core::CoreServices) -> core::result::Result<Self::Controller, spark_core::error::CoreError>",
  "impl spark_core::pipeline::traits::generic::ControllerFactory for spark_core::pipeline::traits::object::DynControllerFactoryAdapter",
  "pub type spark_core::pipeline::traits::object::DynControllerFactoryAdapter::Controller = spark_core::pipeline::traits::object::ControllerHandle",
  "pub fn spark_core::pipeline::traits::object::DynControllerFactoryAdapter::build(&self, core_services: &spark_core::CoreServices) -> core::result::Result<Self::Controller, spark_core::error::CoreError>",
  "pub trait spark_core::ReadableBuffer: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::ReadableBuffer::advance(&mut self, len: usize) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::ReadableBuffer::chunk(&self) -> &[u8]",
  "pub fn spark_core::ReadableBuffer::copy_into_slice(&mut self, dst: &mut [u8]) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::ReadableBuffer::is_empty(&self) -> bool",
  "pub fn spark_core::ReadableBuffer::remaining(&self) -> usize",
  "pub fn spark_core::ReadableBuffer::split_to(&mut self, len: usize) -> core::result::Result<alloc::boxed::Box<dyn spark_core::buffer::readable::ReadableBuffer>, spark_core::error::CoreError>",
  "pub fn spark_core::ReadableBuffer::try_into_vec(self: alloc::boxed::Box<Self>) -> core::result::Result<alloc::vec::Vec<u8>, spark_core::error::CoreError>",
  "pub trait spark_core::Router<Request>: Sealed",
  "pub type spark_core::Router::Error: spark_core::Error",
  "pub type spark_core::Router::Service: spark_core::service::traits::generic::Service<Request>",
  "pub fn spark_core::Router::route(&self, context: spark_core::router::context::RoutingContext<'_, Request>) -> core::result::Result<spark_core::router::binding::RouteDecision<Self::Service, Request>, spark_core::router::traits::generic::RouteError<Self::Error>>",
  "pub fn spark_core::Router::snapshot(&self) -> spark_core::router::context::RoutingSnapshot<'_>",
  "pub fn spark_core::Router::validate(&self, descriptor: &spark_core::router::catalog::RouteDescriptor) -> spark_core::router::binding::RouteValidation",
  "pub trait spark_core::SecurityNegotiator: Sealed",
  "pub fn spark_core::SecurityNegotiator::negotiate(&self, plan: &spark_core::security::negotiation::SecurityNegotiationPlan, context: &spark_core::security::negotiation::NegotiationContext) -> spark_core::security::negotiation::NegotiationResult",
  "pub trait spark_core::ServerTransport: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub type spark_core::ServerTransport::ShutdownFuture<'a> where Self: 'a: core::future::future::Future<Output = core::result::Result<(), spark_core::error::CoreError>> + core::marker::Send + 'a",
  "pub fn spark_core::ServerTransport::local_addr(&self, ctx: &spark_core::context::ExecutionContext<'_>) -> spark_core::transport::address::TransportSocketAddr",
  "pub fn spark_core::ServerTransport::shutdown(&self, ctx: &spark_core::context::ExecutionContext<'_>, plan: spark_core::transport::server::ListenerShutdown) -> Self::ShutdownFuture",
  "pub trait spark_core::Service<Request>: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub type spark_core::Service::Error: spark_core::Error",
  "pub type spark_core::Service::Future: core::future::future::Future<Output = core::result::Result<Self::Response, Self::Error>> + core::marker::Send + 'static",
  "pub type spark_core::Service::Response",
  "pub fn spark_core::Service::call(&mut self, ctx: spark_core::contract::CallContext, req: Request) -> Self::Future",
  "pub fn spark_core::Service::poll_ready(&mut self, ctx: &spark_core::context::ExecutionContext<'_>, cx: &mut core::task::wake::Context<'_>) -> spark_core::status::ready::PollReady<Self::Error>",
  "impl<F, Request, Fut, Response, E> spark_core::service::traits::generic::Service<Request> for spark_core::service::simple::SimpleServiceFn<F> where F: core::ops::function::FnMut(spark_core::contract::CallContext, Request) -> Fut + core::marker::Send + core::marker::Sync + 'static, Fut: core::future::future::Future<Output = core::result::Result<Response, E>> + core::marker::Send + 'static, Response: core::marker::Send + 'static, E: spark_core::Error + core::marker::Send + 'static",
  "pub type spark_core::service::simple::SimpleServiceFn<F>::Error = E",
  "pub type spark_core::service::simple::SimpleServiceFn<F>::Future = GuardedFuture<Fut, Response, E>",
  "pub type spark_core::service::simple::SimpleServiceFn<F>::Response = Response",
  "pub fn spark_core::service::simple::SimpleServiceFn<F>::call(&mut self, ctx: spark_core::contract::CallContext, req: Request) -> Self::Future",
  "pub fn spark_core::service::simple::SimpleServiceFn<F>::poll_ready(&mut self, _ctx: &spark_core::context::ExecutionContext<'_>, cx: &mut core::task::wake::Context<'_>) -> spark_core::status::ready::PollReady<Self::Error>",
  "impl<L, Request> spark_core::service::traits::generic::Service<Request> for spark_core::service::simple::SequentialService<L> where L: spark_core::service::simple::ServiceLogic<Request>",
  "pub type spark_core::service::simple::SequentialService<L>::Error = <L as spark_core::service::simple::ServiceLogic<Request>>::Error",
  "pub type spark_core::service::simple::SequentialService<L>::Future = GuardedFuture<<L as spark_core::service::simple::ServiceLogic<Request>>::Future, <L as spark_core::service::simple::ServiceLogic<Request>>::Response, <L as spark_core::service::simple::ServiceLogic<Request>>::Error>",
  "pub type spark_core::service::simple::SequentialService<L>::Response = <L as spark_core::service::simple::ServiceLogic<Request>>::Response",
  "pub fn spark_core::service::simple::SequentialService<L>::call(&mut self, ctx: spark_core::contract::CallContext, req: Request) -> Self::Future",
  "pub fn spark_core::service::simple::SequentialService<L>::poll_ready(&mut self, _ctx: &spark_core::context::ExecutionContext<'_>, cx: &mut core::task::wake::Context<'_>) -> spark_core::status::ready::PollReady<Self::Error>",
  "impl<S, Request> spark_core::service::traits::generic::Service<Request> for spark_core::service::auto_dyn::DynBridge<S, Request> where S: spark_core::service::traits::generic::Service<Request>, Request: core::marker::Send + core::marker::Sync + 'static",
  "pub type spark_core::service::auto_dyn::DynBridge<S, Request>::Error = <S as spark_core::service::traits::generic::Service<Request>>::Error",
  "pub type spark_core::service::auto_dyn::DynBridge<S, Request>::Future = <S as spark_core::service::traits::generic::Service<Request>>::Future",
  "pub type spark_core::service::auto_dyn::DynBridge<S, Request>::Response = <S as spark_core::service::traits::generic::Service<Request>>::Response",
  "pub fn spark_core::service::auto_dyn::DynBridge<S, Request>::call(&mut self, ctx: spark_core::contract::CallContext, req: Request) -> Self::Future",
  "pub fn spark_core::service::auto_dyn::DynBridge<S, Request>::poll_ready(&mut self, ctx: &spark_core::context::ExecutionContext<'_>, cx: &mut core::task::wake::Context<'_>) -> spark_core::status::ready::PollReady<Self::Error>",
  "pub trait spark_core::ServiceDiscovery: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::ServiceDiscovery::list_services<'life0, 'async_trait>(&'life0 self) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<alloc::vec::Vec<spark_core::cluster::discovery::ServiceName>, spark_core::cluster::membership::ClusterError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait",
  "pub fn spark_core::ServiceDiscovery::resolve<'life0, 'life1, 'async_trait>(&'life0 self, service: &'life1 spark_core::cluster::discovery::ServiceName, consistency: spark_core::cluster::topology::ClusterConsistencyLevel) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<spark_core::cluster::discovery::DiscoverySnapshot, spark_core::cluster::membership::ClusterError>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait, 'life1: 'async_trait",
  "pub fn spark_core::ServiceDiscovery::watch(&self, service: &spark_core::cluster::discovery::ServiceName, consistency: spark_core::cluster::topology::ClusterConsistencyLevel, resume_from: core::option::Option<spark_core::cluster::topology::ClusterRevision>, flow_control: spark_core::cluster::flow_control::SubscriptionFlowControl) -> spark_core::cluster::flow_control::SubscriptionStream<spark_core::cluster::discovery::DiscoveryEvent>",
  "pub trait spark_core::Stream: Sealed",
  "pub type spark_core::Stream::Item",
  "pub fn spark_core::Stream::poll_next(self: core::pin::Pin<&mut Self>, cx: &mut core::task::wake::Context<'_>) -> core::task::poll::Poll<core::option::Option<Self::Item>>",
  "impl spark_core::future::Stream for spark_core::NoopConfigStream",
  "pub type spark_core::NoopConfigStream::Item = spark_core::ConfigDelta",
  "pub fn spark_core::NoopConfigStream::poll_next(self: core::pin::Pin<&mut Self>, _cx: &mut core::task::wake::Context<'_>) -> core::task::poll::Poll<core::option::Option<Self::Item>>",
  "impl<'a> spark_core::future::Stream for spark_core::ConfigurationWatch<'a>",
  "pub type spark_core::ConfigurationWatch<'a>::Item = core::result::Result<spark_core::ConfigurationUpdate, spark_core::ConfigurationError>",
  "pub fn spark_core::ConfigurationWatch<'a>::poll_next(self: core::pin::Pin<&mut Self>, cx: &mut core::task::wake::Context<'_>) -> core::task::poll::Poll<core::option::Option<Self::Item>>",
  "pub trait spark_core::SubscriptionQueueProbe: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::SubscriptionQueueProbe::snapshot(&self) -> spark_core::cluster::flow_control::SubscriptionQueueSnapshot",
  "pub trait spark_core::TaskExecutor: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::TaskExecutor::spawn<F>(&self, ctx: &spark_core::contract::CallContext, fut: F) -> spark_core::JoinHandle<<F as core::future::future::Future>::Output> where Self: core::marker::Sized, F: core::future::future::Future + core::marker::Send + 'static, <F as core::future::future::Future>::Output: core::marker::Send + 'static",
  "pub fn spark_core::TaskExecutor::spawn_dyn(&self, ctx: &spark_core::contract::CallContext, fut: spark_core::future::BoxFuture<'static, spark_core::TaskResult<alloc::boxed::Box<(dyn core::any::Any + core::marker::Send)>>>) -> spark_core::JoinHandle<alloc::boxed::Box<(dyn core::any::Any + core::marker::Send)>>",
  "pub trait spark_core::TaskHandle: core::marker::Send + core::marker::Sync + Sealed",
  "pub type spark_core::TaskHandle::Output: core::marker::Send + 'static",
  "pub fn spark_core::TaskHandle::cancel(&self, strategy: spark_core::TaskCancellationStrategy)",
  "pub fn spark_core::TaskHandle::detach(self: alloc::boxed::Box<Self>)",
  "pub fn spark_core::TaskHandle::id(&self) -> core::option::Option<&str>",
  "pub fn spark_core::TaskHandle::is_cancelled(&self) -> bool",
  "pub fn spark_core::TaskHandle::is_finished(&self) -> bool",
  "pub fn spark_core::TaskHandle::join<'async_trait>(self: alloc::boxed::Box<Self>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = spark_core::TaskResult<Self::Output>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait",
  "pub trait spark_core::TimeDriver: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::TimeDriver::now(&self) -> spark_core::MonotonicTimePoint",
  "pub fn spark_core::TimeDriver::sleep<'life0, 'async_trait>(&'life0 self, duration: core::time::Duration) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = ()> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait",
  "pub fn spark_core::TimeDriver::sleep_until<'life0, 'async_trait>(&'life0 self, deadline: spark_core::MonotonicTimePoint) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = ()> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0: 'async_trait",
  "pub trait spark_core::TransportFactory: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub type spark_core::TransportFactory::BindFuture<'a, P> where Self: 'a, P: spark_core::pipeline::traits::generic::ControllerFactory + core::marker::Send + core::marker::Sync + 'static: core::future::future::Future<Output = core::result::Result<Self::Server, spark_core::error::CoreError>> + core::marker::Send + 'a",
  "pub type spark_core::TransportFactory::Channel: spark_core::pipeline::channel::Channel",
  "pub type spark_core::TransportFactory::ConnectFuture<'a> where Self: 'a: core::future::future::Future<Output = core::result::Result<Self::Channel, spark_core::error::CoreError>> + core::marker::Send + 'a",
  "pub type spark_core::TransportFactory::Server: spark_core::transport::traits::generic::ServerTransport",
  "pub fn spark_core::TransportFactory::bind<P>(&self, ctx: &spark_core::context::ExecutionContext<'_>, config: spark_core::transport::factory::ListenerConfig, pipeline_factory: alloc::sync::Arc<P>) -> Self::BindFuture where P: spark_core::pipeline::traits::generic::ControllerFactory + core::marker::Send + core::marker::Sync + 'static, <P as spark_core::pipeline::traits::generic::ControllerFactory>::Controller: spark_core::pipeline::controller::Controller",
  "pub fn spark_core::TransportFactory::connect(&self, ctx: &spark_core::context::ExecutionContext<'_>, intent: spark_core::transport::intent::ConnectionIntent, discovery: core::option::Option<alloc::sync::Arc<dyn spark_core::cluster::discovery::ServiceDiscovery>>) -> Self::ConnectFuture",
  "pub fn spark_core::TransportFactory::scheme(&self, ctx: &spark_core::context::ExecutionContext<'_>) -> &'static str",
  "pub trait spark_core::UserMessage: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::UserMessage::as_any(&self) -> &dyn core::any::Any",
  "pub fn spark_core::UserMessage::as_any_mut(&mut self) -> &mut dyn core::any::Any",
  "pub fn spark_core::UserMessage::into_any(self: alloc::boxed::Box<Self>) -> alloc::boxed::Box<dyn core::any::Any>",
  "pub fn spark_core::UserMessage::message_kind(&self) -> &'static str",
  "impl<T> spark_core::buffer::message::UserMessage for T where T: core::any::Any + core::marker::Send + core::marker::Sync + 'static",
  "pub fn T::as_any(&self) -> &(dyn core::any::Any + 'static)",
  "pub fn T::as_any_mut(&mut self) -> &mut (dyn core::any::Any + 'static)",
  "pub fn T::into_any(self: alloc::boxed::Box<T>) -> alloc::boxed::Box<dyn core::any::Any>",
  "pub fn T::message_kind(&self) -> &'static str",
  "pub trait spark_core::WritableBuffer: core::marker::Send + core::marker::Sync + 'static + Sealed",
  "pub fn spark_core::WritableBuffer::capacity(&self) -> usize",
  "pub fn spark_core::WritableBuffer::clear(&mut self)",
  "pub fn spark_core::WritableBuffer::freeze(self: alloc::boxed::Box<Self>) -> core::result::Result<alloc::boxed::Box<dyn spark_core::buffer::readable::ReadableBuffer>, spark_core::error::CoreError>",
  "pub fn spark_core::WritableBuffer::put_slice(&mut self, src: &[u8]) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::WritableBuffer::remaining_mut(&self) -> usize",
  "pub fn spark_core::WritableBuffer::reserve(&mut self, additional: usize) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::WritableBuffer::write_from(&mut self, src: &mut dyn spark_core::buffer::readable::ReadableBuffer, len: usize) -> core::result::Result<(), spark_core::error::CoreError>",
  "pub fn spark_core::WritableBuffer::written(&self) -> usize",
  "pub fn spark_core::config_error_to_spark(err: spark_core::limits::LimitConfigError) -> spark_core::error::SparkError",
  "pub fn spark_core::decision_queue_snapshot(decision: &spark_core::limits::LimitDecision) -> core::option::Option<spark_core::status::ready::QueueDepth>",
  "pub fn spark_core::describe_shutdown_target(addr: &spark_core::transport::address::TransportSocketAddr, plan: &spark_core::transport::server::ListenerShutdown) -> alloc::string::String",
  "pub fn spark_core::legacy_loopback_outbound<L: spark_core::common::Loopback + ?core::marker::Sized>(loopback: &L, event: impl core::any::Any + core::marker::Send + core::marker::Sync, logger: core::option::Option<&dyn spark_core::observability::logging::Logger>)",
  "pub fn spark_core::negotiate(local: &spark_core::transport::handshake::HandshakeOffer, remote: &spark_core::transport::handshake::HandshakeOffer, occurred_at: u64, audit: core::option::Option<&mut spark_core::transport::handshake::NegotiationAuditContext>) -> core::result::Result<spark_core::transport::handshake::HandshakeOutcome, spark_core::transport::handshake::HandshakeError>",
  "pub fn spark_core::slo_policy_table_key() -> spark_core::ConfigKey",
  "pub fn spark_core::type_mismatch_error(expected: &'static str, actual: &'static str) -> spark_core::error::SparkError",
  "pub type spark_core::AttributeKey<'a> = alloc::borrow::Cow<'a, str>",
  "pub type spark_core::AttributeSet<'a> = &'a [spark_core::observability::attributes::KeyValue<'a>]",
  "pub type spark_core::BoxFuture<'a, T> = core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = T> + core::marker::Send + 'a)>>",
  "pub type spark_core::BoxStream<'a, T> = core::pin::Pin<alloc::boxed::Box<(dyn spark_core::future::Stream<Item = T> + core::marker::Send + 'a)>>",
  "pub type spark_core::Bytes = alloc::vec::Vec<u8>",
  "pub type spark_core::ErasedSparkBuf = dyn spark_core::buffer::readable::ReadableBuffer",
  "pub type spark_core::ErasedSparkBufMut = dyn spark_core::buffer::writable::WritableBuffer",
  "pub type spark_core::ErrorCause = alloc::boxed::Box<(dyn spark_core::Error + core::marker::Send + core::marker::Sync + 'static)>",
  "pub type spark_core::HealthChecks = alloc::sync::Arc<alloc::vec::Vec<alloc::sync::Arc<dyn spark_core::observability::health::HealthCheckProvider>>>",
  "pub type spark_core::LocalBoxFuture<'a, T> = core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = T> + 'a)>>",
  "pub type spark_core::LogField<'a> = spark_core::observability::attributes::AttributeSet<'a>",
  "pub type spark_core::NegotiationResult = core::result::Result<spark_core::security::negotiation::NegotiationOutcome, spark_core::security::negotiation::NegotiationError>",
  "pub type spark_core::NodeId = alloc::string::String",
  "pub type spark_core::PollReady<E> = core::task::poll::Poll<spark_core::status::ready::ReadyCheck<E>>",
  "pub type spark_core::ServiceName = alloc::string::String",
  "pub type spark_core::TaskResult<T> = core::result::Result<T, spark_core::TaskError>"
]
