#![allow(missing_docs)]

//! # 模块概览（Why）
//! - 该模块专门承载 `compat_v0` 功能标记下的临时适配逻辑，帮助历史调用方以最小改动接入新版 `ReadyState` 信号。
//! - 通过集中管理旧版接口的桥接函数，避免在主业务逻辑中散布条件编译判断，从而降低迁移期的维护成本。
//!
//! # 在整体架构中的定位（How）
//! - 模块位于 `spark-core` 顶层，所有需要过渡到统一就绪信号的域都会通过此处导出的函数进行适配。
//! - 当前仅引入 `flow_ready` 子模块，后续若新增兼容策略，可继续在此处注册以保持目录结构的可预期性。
//!
//! # 合同说明（What）
//! - 所有子模块必须保证在关闭 `compat_v0` 时完全裁剪，避免对正式路径的代码尺寸与性能造成影响。
//! - 子模块中的函数需要明确说明输入、输出以及前置/后置条件，确保迁移期的调用者不会误用。
//!
//! # 风险提示（Trade-offs）
//! - 由于兼容逻辑仅在迁移期使用，注释中会着重提醒未来的清理策略，防止遗留代码长期残留。

pub mod flow_ready;
